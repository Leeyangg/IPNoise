!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A.code 	libs/umtz/html/doxygen.css	/^A.code { text-decoration: none; font-weight: normal; color: #4444ee }$/;"	s
A.codeRef 	libs/umtz/html/doxygen.css	/^A.codeRef { font-weight: normal; color: #4444ee }$/;"	s
A.el 	libs/umtz/html/doxygen.css	/^A.el { text-decoration: none; font-weight: bold }$/;"	s
A.elRef 	libs/umtz/html/doxygen.css	/^A.elRef { font-weight: bold }$/;"	s
A.qindex 	libs/umtz/html/doxygen.css	/^A.qindex {}$/;"	s
ABS	libs/cmtz/ccp4_types.h	72;"	d
ABS	libs/umtz/library.h	881;"	d
AC	libs/chemlib/RefmacType.h	/^    const unsigned int AC   = 120;$/;"	m	namespace:RefmacType
ADDRESIDUEDIALOG_H	apps/MIFit/ui/AddResidueDialog.h	2;"	d
AFX_CLUSTERLIST_H_	apps/MIFit/core/clusterList.h	2;"	d
AG	libs/chemlib/RefmacType.h	/^    const unsigned int AG   = 147;$/;"	m	namespace:RefmacType
AL	libs/chemlib/RefmacType.h	/^    const unsigned int AL   = 153;$/;"	m	namespace:RefmacType
AM	libs/molopt/MIMolOpt.cpp	29;"	d	file:
AMINOACID	apps/MIFit/core/pdbmatch.cpp	323;"	d	file:
ANGLE	libs/chemlib/ANGLE.h	/^        ANGLE() : atom1(0), atom2(0), atom3(0), ideal_angle(0.0f),$/;"	f	class:chemlib::ANGLE
ANGLE	libs/chemlib/ANGLE.h	/^    class ANGLE$/;"	c	namespace:chemlib
ANGLEDICT	libs/chemlib/MIMolDictionary.cpp	/^class ANGLEDICT$/;"	c	namespace:chemlib	file:
ANNOTATION_H_	apps/MIFit/core/Annotation.h	2;"	d
APOINT	libs/math/APOINT.h	/^class APOINT$/;"	c
AR	apps/MIFit/core/Makefile	/^AR            = ar cqs$/;"	m
AR	apps/MIFit/jobs/Makefile	/^AR            = ar cqs$/;"	m
AR	apps/MIFit/main/Makefile	/^AR            = ar cqs$/;"	m
AR	apps/MIFit/script/Makefile	/^AR            = ar cqs$/;"	m
AR	apps/MIFit/ui/Makefile	/^AR            = ar cqs$/;"	m
AR	libs/chemlib/Makefile	/^AR            = ar cqs$/;"	m
AR	libs/chemlib/RefmacType.h	/^    const unsigned int AR   = 171;$/;"	m	namespace:RefmacType
AR	libs/conflib/Makefile	/^AR            = ar cqs$/;"	m
AR	libs/jacgrid/Makefile	/^AR            = ar cqs$/;"	m
AR	libs/ligand/Makefile	/^AR            = ar cqs$/;"	m
AR	libs/map/Makefile	/^AR            = ar cqs$/;"	m
AR	libs/math/Makefile	/^AR            = ar cqs$/;"	m
AR	libs/molopt/Makefile	/^AR            = ar cqs$/;"	m
AR	libs/opengl/Makefile	/^AR            = ar cqs$/;"	m
AR	libs/umtz/Makefile	/^AR            = ar cqs$/;"	m
AR	libs/util/Makefile	/^AR            = ar cqs$/;"	m
ARCBALLFEEDBACK_H_	libs/opengl/interact/ArcBallFeedback.h	2;"	d
AROMATIC_H	libs/chemlib/Aromatic.h	2;"	d
AS	libs/chemlib/RefmacType.h	/^    const unsigned int AS   = 157;$/;"	m	namespace:RefmacType
AS1	libs/chemlib/RefmacType.h	/^    const unsigned int AS1  = 158;$/;"	m	namespace:RefmacType
ASPLIB_H_	apps/MIFit/ui/asplib.h	2;"	d
AT	libs/chemlib/RefmacType.h	/^    const unsigned int AT   = 168;$/;"	m	namespace:RefmacType
ATOMLABEL	apps/MIFit/core/ATOMLABEL.cpp	/^ATOMLABEL::ATOMLABEL()$/;"	f	class:ATOMLABEL
ATOMLABEL	apps/MIFit/core/ATOMLABEL.cpp	/^ATOMLABEL::ATOMLABEL(const Monomer *residue, const MIAtom *atom)$/;"	f	class:ATOMLABEL
ATOMLABEL	apps/MIFit/core/ATOMLABEL.h	/^class ATOMLABEL$/;"	c
ATOMS	apps/MIFit/ui/Xguicryst.h	11;"	d
ATOM_H	libs/chemlib/MIAtom.h	2;"	d
ATOM_REFINER_H	libs/conflib/AtomRefiner.h	2;"	d
ATOM_SET	apps/MIFit/ui/Displaylist.cpp	/^static std::set<MIAtom*> *ATOM_SET = 0;$/;"	v	file:
ATOM_TYPER_BASE_CLASS_H	libs/chemlib/AtomTyper.h	2;"	d
ATOM_UTIL_H	libs/chemlib/atom_util.h	2;"	d
AU	libs/chemlib/RefmacType.h	/^    const unsigned int AU   = 148;$/;"	m	namespace:RefmacType
AbortJob	apps/MIFit/jobs/BatchJob.cpp	/^void BatchJob::AbortJob()$/;"	f	class:BatchJob
Accept	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::Accept()$/;"	f	class:MIMolOpt
Accessible	apps/MIFit/ui/surf.h	/^    const unsigned int Accessible = 1;$/;"	m	namespace:MISurfaceType
Add2Tetrahedrals	libs/chemlib/atom_util.cpp	/^void Add2Tetrahedrals(const MIAtom *atom, double length, MIAtomList &atoms)$/;"	f	namespace:chemlib
AddAngle	libs/chemlib/Constraint.cpp	/^void ConstraintList::AddAngle(Angle &angle)$/;"	f	class:chemlib::ConstraintList
AddAngle	libs/chemlib/Constraint.cpp	/^void Improper::AddAngle(double new_angle)$/;"	f	class:chemlib::Improper
AddAngle	libs/chemlib/CovalentGeom.cpp	/^void CovalentGeometry::AddAngle(const char *a1name,$/;"	f	class:chemlib::CovalentGeometry
AddAngle	libs/chemlib/TORSION.h	/^        bool AddAngle(float angle)$/;"	f	class:chemlib::TORSDICT
AddAnnotations	apps/MIFit/ui/Displaylist.cpp	/^static void AddAnnotations(Molecule *model)$/;"	f	file:
AddAsDockWidget	apps/MIFit/ui/MIMainWindow.cpp	/^QDockWidget*MIMainWindow::AddAsDockWidget(QWidget *w, const std::string &name, Qt::DockWidgetArea area)$/;"	f	class:MIMainWindow
AddAtom	libs/chemlib/Aromatic.cpp	/^void Aromatic::AddAtom(MIAtom *atom)$/;"	f	class:chemlib::Aromatic
AddAtom	libs/chemlib/CHIRALDICT.h	/^        bool AddAtom(const char *atom_name, int index)$/;"	f	class:chemlib::CHIRALDICT
AddAtom	libs/chemlib/Constraint.cpp	/^void Improper::AddAtom(MIAtom *new_atom)$/;"	f	class:chemlib::Improper
AddAtom	libs/chemlib/Constraint.cpp	/^void Plane::AddAtom(MIAtom *new_atom)$/;"	f	class:chemlib::Plane
AddAtom	libs/chemlib/Constraint.cpp	/^void Torsion::AddAtom(MIAtom *new_atom)$/;"	f	class:chemlib::Torsion
AddAtom	libs/chemlib/PLANE.h	/^        bool AddAtom(const char *atom_name)$/;"	f	class:chemlib::PLANEDICT
AddAtom	libs/chemlib/RingSystem.cpp	/^void RingSystem::AddAtom(MIAtom *atom)$/;"	f	class:chemlib::RingSystem
AddAtom	libs/chemlib/SmilesReader.cpp	/^void SmilesReader::AddAtom(int atomic_number,$/;"	f	class:chemlib::SmilesReader
AddBasicAtom	libs/chemlib/SmilesReader.cpp	/^void SmilesReader::AddBasicAtom(int atomic_number, bool is_aromatic)$/;"	f	class:chemlib::SmilesReader
AddBond	libs/chemlib/Aromatic.cpp	/^void Aromatic::AddBond(Bond *bond)$/;"	f	class:chemlib::Aromatic
AddBond	libs/chemlib/Constraint.cpp	/^void ConstraintList::AddBond(BondLength &bond)$/;"	f	class:chemlib::ConstraintList
AddBond	libs/chemlib/Ligand.cpp	/^void Ligand::AddBond(Bond &bond)$/;"	f	class:chemlib::Ligand
AddBond	libs/chemlib/Ligand.cpp	/^void Ligand::AddBond(MIAtom *a1, MIAtom *a2)$/;"	f	class:chemlib::Ligand
AddBond	libs/chemlib/Ligand.cpp	/^void Ligand::AddBond(MIAtom *a1, MIAtom *a2, unsigned char bond_order, char stereo)$/;"	f	class:chemlib::Ligand
AddBond	libs/chemlib/MIMoleculeBase.cpp	/^bool MIMoleculeBase::AddBond(MIAtom *a1, MIAtom *a2)$/;"	f	class:chemlib::MIMoleculeBase
AddBond	libs/chemlib/RingSystem.cpp	/^void RingSystem::AddBond(Bond *bond)$/;"	f	class:chemlib::RingSystem
AddBranch	libs/chemlib/Substituent.cpp	/^void Substituent::AddBranch(MIAtom *root)$/;"	f	class:chemlib::Substituent
AddBump	libs/chemlib/Constraint.cpp	/^void ConstraintList::AddBump(Bump &bump)$/;"	f	class:chemlib::ConstraintList
AddChiral	libs/chemlib/Constraint.cpp	/^void ConstraintList::AddChiral(Chiral &chiral)$/;"	f	class:chemlib::ConstraintList
AddChiral	libs/chemlib/Dictionary.cpp	/^void LigDictionary::AddChiral(const MIAtom *ctr, int n1, int n2, int n3, int order)$/;"	f	class:chemlib::LigDictionary
AddChiral	libs/chemlib/MIMolDictionary.cpp	/^int MIMolDictionary::AddChiral(const CHIRAL &chiral, const char *res_type)$/;"	f	class:chemlib::MIMolDictionary
AddChiral	libs/chemlib/MIMolDictionary.cpp	/^int MIMolDictionary::AddChiral(const CHIRALDICT &chiral)$/;"	f	class:chemlib::MIMolDictionary
AddCode	libs/conflib/ConfFingerprint.h	/^        void AddCode(const chemlib::Bond &dist)$/;"	f	class:conflib::ConfFingerprint
AddConfs	libs/chemlib/MIMolDictionary.cpp	/^bool MIMolDictionary::AddConfs(Residue *res, const std::string res_type)$/;"	f	class:chemlib::MIMolDictionary
AddConfs	libs/chemlib/MIMolDictionary.cpp	/^bool MIMolDictionary::AddConfs(const ConfSaver &confs, bool replace)$/;"	f	class:chemlib::MIMolDictionary
AddConstraint	libs/chemlib/MIMolDictionary.cpp	/^int MIMolDictionary::AddConstraint(MIAtom *a1, MIAtom *a2, const char *target, const char *sigma)$/;"	f	class:chemlib::MIMolDictionary
AddConstraint	libs/chemlib/MIMolDictionary.cpp	/^int MIMolDictionary::AddConstraint(MIAtom *a1, const char *sigma)$/;"	f	class:chemlib::MIMolDictionary
AddContact	apps/MIFit/ui/Displaylist.cpp	/^bool Displaylist::AddContact(MIAtom *a1, MIAtom *a2, float d)$/;"	f	class:Displaylist
AddFreeRFlag	libs/map/EMapBase.cpp	/^long EMapBase::AddFreeRFlag(int percent, bool use_shells)$/;"	f	class:EMapBase
AddHBond	libs/chemlib/MIMoleculeBase.cpp	/^bool MIMoleculeBase::AddHBond(MIAtom *a1, MIAtom *a2)$/;"	f	class:chemlib::MIMoleculeBase
AddImproper	libs/chemlib/Constraint.cpp	/^void ConstraintList::AddImproper(Improper &improper)$/;"	f	class:chemlib::ConstraintList
AddImproper	libs/chemlib/Dictionary.cpp	/^void LigDictionary::AddImproper(Improper &imp, bool report)$/;"	f	class:chemlib::LigDictionary
AddItem	apps/MIFit/ui/Displaylist.cpp	/^int Displaylist::AddItem(Molecule *node)   \/\/  add a new node in displaylist$/;"	f	class:Displaylist
AddItem	apps/MIFit/ui/Displaylist.cpp	/^int Displaylist::AddItem(Residue *reslist, std::string cmpd, FILE *fp, std::vector<Bond> *connects, int type)$/;"	f	class:Displaylist
AddLength	libs/chemlib/CovalentGeom.cpp	/^void CovalentGeometry::AddLength(const char *a1name,$/;"	f	class:chemlib::CovalentGeometry
AddLine	apps/MIFit/ui/Displaylist.cpp	/^bool Displaylist::AddLine(float x1, float y1, float z1, float x2, float y2, float z2, int color)$/;"	f	class:Displaylist
AddMap	apps/MIFit/ui/Displaylist.cpp	/^void Displaylist::AddMap(EMap *emap)$/;"	f	class:Displaylist
AddPlane	libs/chemlib/Constraint.cpp	/^void ConstraintList::AddPlane(Plane &plane)$/;"	f	class:chemlib::ConstraintList
AddPlane	libs/chemlib/Dictionary.cpp	/^void LigDictionary::AddPlane(Plane &plane)$/;"	f	class:chemlib::LigDictionary
AddPlane	libs/chemlib/MIMolDictionary.cpp	/^int MIMolDictionary::AddPlane(const PLANE &plane)$/;"	f	class:chemlib::MIMolDictionary
AddPlane	libs/chemlib/MIMolDictionary.cpp	/^int MIMolDictionary::AddPlane(const PLANEDICT &plane)$/;"	f	class:chemlib::MIMolDictionary
AddRefiRes	libs/conflib/LigRefiner.cpp	/^void LigRefiner::AddRefiRes(Monomer *res)$/;"	f	class:LigRefiner
AddRes	libs/chemlib/Ligand.cpp	/^Monomer*Ligand::AddRes(const Residue &res, const std::vector<Bond> &orig_bonds)$/;"	f	class:chemlib::Ligand
AddRes	libs/chemlib/Ligand.cpp	/^Monomer*Ligand::AddRes(const std::string &type, const std::string &name, unsigned short linkage_type,$/;"	f	class:chemlib::Ligand
AddResidueDialog	apps/MIFit/ui/AddResidueDialog.cpp	/^AddResidueDialog::AddResidueDialog(const std::vector<std::string> &resList, QWidget *parent) :$/;"	f	class:AddResidueDialog
AddResidueDialog	apps/MIFit/ui/AddResidueDialog.h	/^class AddResidueDialog : public QDialog$/;"	c
AddResidueDialog	apps/MIFit/ui/ui_AddResidueDialog.h	/^    class AddResidueDialog: public Ui_AddResidueDialog {};$/;"	c	namespace:Ui
AddRibbonSegment	apps/MIFit/core/SecondaryStructure.cpp	/^bool SecondaryStructure::AddRibbonSegment(Residue *pFirstResidue, int nResidues)$/;"	f	class:SecondaryStructure
AddSchematic	apps/MIFit/core/SecondaryStructure.cpp	/^bool SecondaryStructure::AddSchematic(chemlib::MIMoleculeBase *mol,$/;"	f	class:SecondaryStructure
AddStaticPartial	libs/map/sfcalc.cpp	/^int AddStaticPartial(CREFL refl[], int nrefl, CMapHeaderBase *mh)$/;"	f
AddSub	libs/chemlib/Chiral.cpp	/^void Chiral::AddSub(MIAtom *atom)$/;"	f	class:chemlib::Chiral
AddTorsion	libs/chemlib/Constraint.cpp	/^void ConstraintList::AddTorsion(Torsion &torsion)$/;"	f	class:chemlib::ConstraintList
AddTorsion	libs/chemlib/Dictionary.cpp	/^void LigDictionary::AddTorsion(Torsion &torsion)$/;"	f	class:chemlib::LigDictionary
AddTorsion	libs/chemlib/MIMolDictionary.cpp	/^int MIMolDictionary::AddTorsion(const TORSDICT &torsion)$/;"	f	class:chemlib::MIMolDictionary
AddTorsion	libs/chemlib/MIMolDictionary.cpp	/^int MIMolDictionary::AddTorsion(const TORSION &torsion)$/;"	f	class:chemlib::MIMolDictionary
AddWater	libs/chemlib/MIMoleculeBase.cpp	/^Residue *MIMoleculeBase::AddWater(float x, float y, float z, bool rebuild)$/;"	f	class:chemlib::MIMoleculeBase
AdjustHybridization	libs/chemlib/LigandPerceiver.cpp	/^void LigandPerceiver::AdjustHybridization(MIAtom *atm, Ligand *lig)$/;"	f	class:chemlib::LigandPerceiver
Advance	libs/conflib/FlexTorsion.cpp	/^bool FlexTorsion::Advance()$/;"	f	class:FlexTorsion
AfterInit	apps/MIFit/ui/Application.cpp	/^void Application::AfterInit()$/;"	f	class:Application
AfterInit	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::AfterInit()$/;"	f	class:MIMainWindow
AfterSelectedResidue	apps/MIFit/ui/AddResidueDialog.h	/^        AfterSelectedResidue,$/;"	e	enum:AddResidueDialog::ModelLocation
All	libs/chemlib/MIMolDictionary.h	/^        const unsigned int All = 3;$/;"	m	namespace:chemlib::DictionaryHLevel
AllocRibbonAtom	apps/MIFit/core/Molecule.cpp	/^MIAtom*Molecule::AllocRibbonAtom()$/;"	f	class:Molecule
Alpha2	libs/chemlib/MIMolDictionary.h	/^        Residue *Alpha2;$/;"	m	class:chemlib::MIMolDictionary
AlphaHelix	apps/MIFit/ui/AddResidueDialog.h	/^        AlphaHelix,$/;"	e	enum:AddResidueDialog::ResidueOffset
AlreadyBonded	libs/chemlib/Ligand.cpp	/^bool Ligand::AlreadyBonded(const MIAtom *a1, const MIAtom *a2) const$/;"	f	class:chemlib::Ligand
AlreadyBonded	libs/chemlib/atom_util.cpp	/^bool AlreadyBonded(const MIAtom *atom1,$/;"	f	namespace:chemlib
AminoOrNucleic	libs/chemlib/mol_util.cpp	/^void AminoOrNucleic(Residue *res1, int reset)$/;"	f	namespace:chemlib
AnalyzeRings	libs/chemlib/Dictionary.cpp	/^void LigDictionary::AnalyzeRings()$/;"	f	class:chemlib::LigDictionary
Angle	libs/chemlib/Constraint.h	/^    class Angle$/;"	c	namespace:chemlib
AngleFromGeom	libs/chemlib/CovalentGeom.cpp	/^float CovalentGeometry::AngleFromGeom(int geometry)$/;"	f	class:chemlib::CovalentGeometry
AngleFromGeom	libs/chemlib/atom_util.cpp	/^float AngleFromGeom(int geometry)$/;"	f	namespace:chemlib
AngleIncludesBond	apps/MIFit/ui/DictEditCanvas.cpp	/^MIAtom *AngleIncludesBond(ANGLE *a, Bond *b)$/;"	f
AngleKeyIndices	libs/chemlib/CifData.cpp	/^AngleKeyIndices::AngleKeyIndices(std::vector<std::string> &names)$/;"	f	class:AngleKeyIndices
AngleKeyIndices	libs/chemlib/CifData.h	/^class AngleKeyIndices$/;"	c
AngleToXYPlane	libs/chemlib/transform_util.cpp	/^double AngleToXYPlane(MIAtom *atom)$/;"	f	namespace:chemlib
AngleTolerance	libs/chemlib/CovalentGeom.cpp	/^void CovalentGeometry::AngleTolerance(Angle &angle)$/;"	f	class:chemlib::CovalentGeometry
AngleValue	libs/chemlib/CovalentGeom.cpp	/^void CovalentGeometry::AngleValue(Angle &angle)$/;"	f	class:chemlib::CovalentGeometry
AngleWeight	libs/conflib/AtomRefiner.h	/^        float BondWeight, AngleWeight, PlaneWeight, TorsionWeight;$/;"	m	class:conflib::AtomRefiner
AngleWeight	libs/conflib/LigRefiner.h	/^        float BondWeight, AngleWeight, PlaneWeight, TorsionWeight, BumpWeight;$/;"	m	class:conflib::LigRefiner
AngleWeight	libs/molopt/MIMolOpt.h	/^    float BondWeight, AngleWeight, PlaneWeight, MapWeight, TorsionWeight, BumpWeight;$/;"	m	class:MIMolOpt
Angles	libs/chemlib/Constraint.h	/^        std::vector<Angle> Angles;$/;"	m	class:chemlib::ConstraintList
Angles	libs/chemlib/DictResidue.cpp	/^std::vector<ANGLE>*DictResidue::Angles()$/;"	f	class:DictResidue
Annotation	apps/MIFit/core/Annotation.cpp	/^Annotation::Annotation()$/;"	f	class:Annotation
Annotation	apps/MIFit/core/Annotation.cpp	/^Annotation::Annotation(const char *text, float x, float y, float z, int id)$/;"	f	class:Annotation
Annotation	apps/MIFit/core/Annotation.h	/^class Annotation : public QObject$/;"	c
AnnotationList	apps/MIFit/core/Molecule.h	/^    typedef std::vector<Annotation*> AnnotationList;$/;"	t	class:Molecule
AnnotationToDataMap	apps/MIFit/ui/DisplayView.cpp	/^    typedef std::map<Annotation*, TreeData*> AnnotationToDataMap;$/;"	t	class:DisplayTree	file:
AnnotationsVisible	apps/MIFit/core/Molecule.h	/^inline int Molecule::AnnotationsVisible()$/;"	f	class:Molecule
Append	apps/MIFit/ui/surf.cpp	/^    unsigned int Append(MISurface *surf)$/;"	f	class:SuperSurface
AppendAromatics	libs/chemlib/mol_util.h	/^    inline std::string AppendAromatics(std::string stringSoFar, const RingSystem &rs)$/;"	f	namespace:chemlib
AppendBond	libs/chemlib/mol_util.h	/^    inline std::string AppendBond(std::string stringSoFar, const Bond &bond)$/;"	f	namespace:chemlib
AppendFromPairs	libs/chemlib/util.h	/^    void AppendFromPairs(std::vector<T> &target, Iterator start, Iterator end)$/;"	f	namespace:chemlib
AppendRingSystem	libs/chemlib/mol_util.h	/^    inline std::string AppendRingSystem(std::string stringSoFar, const RingSystem &rs)$/;"	f	namespace:chemlib
Application	apps/MIFit/ui/Application.cpp	/^Application::Application(int &argc, char **argv)$/;"	f	class:Application
Application	apps/MIFit/ui/Application.h	/^class Application : public QApplication$/;"	c
ApplyFit	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::ApplyFit()$/;"	f	class:MIGLWidget
ApplyGammaCorrection	apps/MIFit/ui/Application.cpp	/^int Application::ApplyGammaCorrection(const int color)$/;"	f	class:Application
ApplyScale	libs/map/sfcalc.cpp	/^int ApplyScale(std::vector<CREFL> &refl, float scale, CMapHeaderBase *mh)$/;"	f
ApplyScale2	libs/map/sfcalc.cpp	/^ApplyScale2(CREFL refl[], int nrefl, float scale, CMapHeaderBase *mh)$/;"	f
Arc	libs/opengl/Arc.cpp	/^Arc::Arc()$/;"	f	class:mi::opengl::Arc
Arc	libs/opengl/Arc.cpp	/^Arc::Arc(Vector3<float> &from, Vector3<float> &to, int divisions)$/;"	f	class:mi::opengl::Arc
Arc	libs/opengl/Arc.h	/^        class Arc$/;"	c	namespace:mi::opengl
ArcBallFeedback	libs/opengl/interact/ArcBallFeedback.cpp	/^ArcBallFeedback::ArcBallFeedback(float radius, float *color)$/;"	f	class:mi::opengl::interact::ArcBallFeedback
ArcBallFeedback	libs/opengl/interact/ArcBallFeedback.h	/^            class ArcBallFeedback$/;"	c	namespace:mi::opengl::interact
AreBonded	libs/chemlib/MIMolDictionary.cpp	/^int MIMolDictionary::AreBonded(const char *restype, MIAtom *atom1, MIAtom *atom2, Bond &bond)$/;"	f	class:chemlib::MIMolDictionary
Aromatic	libs/chemlib/Aromatic.h	/^    class Aromatic$/;"	c	namespace:chemlib
Assert	libs/opengl/zlib/zutil.h	194;"	d
Assert	libs/opengl/zlib/zutil.h	201;"	d
AssignAromaticAtoms	libs/chemlib/RingSystem.cpp	/^void RingSystem::AssignAromaticAtoms()$/;"	f	class:chemlib::RingSystem
AssignAromaticBonds	libs/chemlib/RingSystem.cpp	/^void RingSystem::AssignAromaticBonds()$/;"	f	class:chemlib::RingSystem
AssignAtomGeom	libs/chemlib/LigandPerceiver.cpp	/^void LigandPerceiver::AssignAtomGeom(Ligand *lig)$/;"	f	class:chemlib::LigandPerceiver
AssignAtomGeom	libs/chemlib/LigandPerceiver.cpp	/^void LigandPerceiver::AssignAtomGeom(MIAtom &atm)$/;"	f	class:chemlib::LigandPerceiver
AssignAtomGeom	libs/chemlib/LigandPerceiver.cpp	/^void LigandPerceiver::AssignAtomGeom(Monomer &res)$/;"	f	class:chemlib::LigandPerceiver
AssignBondLength	libs/chemlib/CovalentGeom.cpp	/^float CovalentGeometry::AssignBondLength(Bond *bond)$/;"	f	class:chemlib::CovalentGeometry
AssignBump	libs/chemlib/CovalentGeom.cpp	/^void CovalentGeometry::AssignBump(MIAtom *atom1, MIAtom *atom2)$/;"	f	class:chemlib::CovalentGeometry
AssignBump	libs/conflib/bumps.cpp	/^bool AssignBump(MIAtom *atom1, MIAtom *atom2, Bond &bump, const std::vector<Bond> &bonds)$/;"	f	namespace:conflib
AssignChirality	libs/chemlib/LigandPerceiver.cpp	/^void LigandPerceiver::AssignChirality(Ligand *lig)$/;"	f	class:chemlib::LigandPerceiver
AssignChirality	libs/chemlib/LigandPerceiver.cpp	/^void LigandPerceiver::AssignChirality(Monomer &res, Ligand*)$/;"	f	class:chemlib::LigandPerceiver
AssignHybridization	libs/chemlib/LigandPerceiver.cpp	/^void LigandPerceiver::AssignHybridization(Ligand *lig)$/;"	f	class:chemlib::LigandPerceiver
AssignHybridization	libs/chemlib/LigandPerceiver.cpp	/^void LigandPerceiver::AssignHybridization(MIAtom *atm, Ligand *lig)$/;"	f	class:chemlib::LigandPerceiver
AssignHybridization	libs/chemlib/LigandPerceiver.cpp	/^void LigandPerceiver::AssignHybridization(Monomer &res, Ligand *lig)$/;"	f	class:chemlib::LigandPerceiver
AssignIdealLength	libs/chemlib/Bond.h	/^        inline void AssignIdealLength(float length)$/;"	f	class:chemlib::Bond
AssignImageList	apps/MIFit/ui/MIQTreeWidget.cpp	/^void MIQTreeWidget::AssignImageList(std::vector<QIcon> &imageList)$/;"	f	class:MIQTreeWidget
AssignImpHydrogens	libs/chemlib/LigandPerceiver.cpp	/^void LigandPerceiver::AssignImpHydrogens(Ligand *lig)$/;"	f	class:chemlib::LigandPerceiver
AssignImpHydrogens	libs/chemlib/LigandPerceiver.cpp	/^void LigandPerceiver::AssignImpHydrogens(MIAtom &atom, const std::vector<Bond> bonds)$/;"	f	class:chemlib::LigandPerceiver
AssignImpHydrogens	libs/chemlib/LigandPerceiver.cpp	/^void LigandPerceiver::AssignImpHydrogens(Monomer &res, const std::vector<Bond> bonds)$/;"	f	class:chemlib::LigandPerceiver
AssignResidue	libs/chemlib/CovalentGeom.cpp	/^void CovalentGeometry::AssignResidue()$/;"	f	class:chemlib::CovalentGeometry
AsuBounds	libs/map/CMapHeaderBase.cpp	/^bool CMapHeaderBase::AsuBounds(float &xmin, float &xmax, float &ymin, float &ymax, float &zmin, float &zmax)$/;"	f	class:CMapHeaderBase
AtFiveFiveFusion	libs/chemlib/mol_util.cpp	/^bool AtFiveFiveFusion(const MIAtom &atom, const std::vector<Bond> &bonds)$/;"	f	namespace:chemlib
AtFiveSixFusion	libs/chemlib/mol_util.cpp	/^bool AtFiveSixFusion(const MIAtom &atom, const std::vector<Bond> &bonds)$/;"	f	namespace:chemlib
AtSixSixFusion	libs/chemlib/mol_util.cpp	/^bool AtSixSixFusion(const MIAtom &atom, const std::vector<Bond> &bonds)$/;"	f	namespace:chemlib
AtomColors	apps/MIFit/ui/AtomColors.cpp	/^AtomColors::AtomColors(QWidget *parent)$/;"	f	class:AtomColors
AtomColors	apps/MIFit/ui/AtomColors.h	/^class AtomColors : public QDialog, public Ui::AtomColors$/;"	c
AtomColors	apps/MIFit/ui/ui_AtomColors.h	/^    class AtomColors: public Ui_AtomColors {};$/;"	c	namespace:Ui
AtomDist	libs/chemlib/mol_util.h	/^    inline double AtomDist(const MIAtom &a, const MIAtom &b)$/;"	f	namespace:chemlib
AtomGraph	libs/conflib/FlexTorsion.cpp	/^typedef boost::adjacency_list<boost::vecS, boost::vecS, boost::undirectedS> AtomGraph;$/;"	t	file:
AtomGraphIndex	libs/conflib/FlexTorsion.cpp	/^typedef boost::graph_traits<AtomGraph>::vertices_size_type AtomGraphIndex; \/\/effectively an int$/;"	t	file:
AtomInPlane	apps/MIFit/ui/DictEditCanvas.cpp	/^bool DictEditCanvas::AtomInPlane(MIAtom *a)$/;"	f	class:DictEditCanvas
AtomKeyIndices	libs/chemlib/CifData.cpp	/^AtomKeyIndices::AtomKeyIndices(std::vector<std::string> &names)$/;"	f	class:AtomKeyIndices
AtomKeyIndices	libs/chemlib/CifData.h	/^class AtomKeyIndices$/;"	c
AtomLabelList	apps/MIFit/core/Molecule.h	/^    typedef std::vector<ATOMLABEL*> AtomLabelList;$/;"	t	class:Molecule
AtomLabelToDataMap	apps/MIFit/ui/DisplayView.cpp	/^    typedef std::map<ATOMLABEL*, TreeData*> AtomLabelToDataMap;$/;"	t	class:DisplayTree	file:
AtomName	libs/chemlib/mmCIF.cpp	/^bool mmCIF::AtomName(MIAtom *atom, map<MIAtom*, int>&, std::string &str)$/;"	f	class:chemlib::mmCIF
AtomRefCountMap	libs/chemlib/MIAtom.h	/^        typedef std::map<const MIAtom*, size_t> AtomRefCountMap;$/;"	t	class:chemlib::MIAtom
AtomRefiner	libs/conflib/AtomRefiner.cpp	/^AtomRefiner::AtomRefiner(CoordGenerator *xyzGen)$/;"	f	class:AtomRefiner
AtomRefiner	libs/conflib/AtomRefiner.h	/^    class AtomRefiner$/;"	c	namespace:conflib
AtomStack	apps/MIFit/ui/DictEditCanvas.h	/^    Stack *AtomStack;$/;"	m	class:DictEditCanvas
AtomStack	apps/MIFit/ui/MIGLWidget.h	/^    Stack *AtomStack;$/;"	m	class:MIGLWidget
AtomStep	libs/chemlib/mol_util.h	/^    inline void AtomStep(MIAtom *atom, const double *step_direction, double step_size)$/;"	f	namespace:chemlib
AtomStep	libs/chemlib/mol_util.h	/^    inline void AtomStep(MIAtom *atom, const float *step_direction, float step_size)$/;"	f	namespace:chemlib
AtomToDataMap	apps/MIFit/ui/ModelsView.cpp	/^    typedef std::map<MIAtom*, TreeData*> AtomToDataMap;$/;"	t	class:AtomsTree	file:
AtomType	libs/chemlib/RefmacAtomTyper.cpp	/^char*RefmacAtomTyper::AtomType(const MIAtom *a) const$/;"	f	class:chemlib::RefmacAtomTyper
AtomType	libs/chemlib/model.h	/^    namespace AtomType$/;"	n	namespace:chemlib
AtomTyper	libs/chemlib/AtomTyper.cpp	/^AtomTyper::AtomTyper(const Residue &res, const vector<Bond> &bonds)$/;"	f	class:chemlib::AtomTyper
AtomTyper	libs/chemlib/AtomTyper.h	/^    class AtomTyper$/;"	c	namespace:chemlib
AtomVectMatchesRes	libs/chemlib/Residue.cpp	/^bool AtomVectMatchesRes(const MIAtomList &ptrs, const Residue *res)$/;"	f	namespace:chemlib
Atomic_Name	libs/chemlib/mol_util.cpp	/^const char *Atomic_Name(int atomic_number)$/;"	f	namespace:chemlib
Atomic_Number	libs/chemlib/mol_util.cpp	/^int Atomic_Number(const char *symbol)$/;"	f	namespace:chemlib
Atomic_Number_Nformat	libs/chemlib/mol_util.cpp	/^int Atomic_Number_Nformat(const std::string &atname)$/;"	f	namespace:chemlib
AtomsOnly	apps/MIFit/ui/surf.h	/^    const unsigned int AtomsOnly = 0;$/;"	m	namespace:MISurfaceSelectionMode
AtomsTree	apps/MIFit/ui/ModelsView.cpp	/^AtomsTree::AtomsTree(QWidget *parent)$/;"	f	class:AtomsTree
AtomsTree	apps/MIFit/ui/ModelsView.cpp	/^class AtomsTree$/;"	c	file:
AugmentMatrix	libs/chemlib/Matrix.h	/^    void AugmentMatrix(const Matrix<T> &A, Matrix<T> &B)$/;"	f	namespace:TNT
AutoFindChirals	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::AutoFindChirals(bool copyChiralClass)$/;"	f	class:DictEditCanvas
AutoFit	apps/MIFit/ui/MIGLWidget.h	/^    bool AutoFit;$/;"	m	class:MIGLWidget
AutoFit	libs/molopt/MIMolOpt.h	/^    int AutoFit;$/;"	m	class:MIMolOpt
AutoSave	apps/MIFit/ui/MIGLWidget.h	/^    bool AutoSave;$/;"	m	class:MIGLWidget
AutoShowErrors	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::AutoShowErrors()$/;"	f	class:DisplayTree
AverageBondAngle	libs/chemlib/mol_util.cpp	/^float AverageBondAngle(MIAtom &atom)$/;"	f	namespace:chemlib
Axes	libs/opengl/Axes.cpp	/^Axes::Axes(std::auto_ptr<Text> font)$/;"	f	class:mi::opengl::Axes
Axes	libs/opengl/Axes.h	/^        class Axes$/;"	c	namespace:mi::opengl
Axis	libs/opengl/Axis.cpp	/^Axis::Axis()$/;"	f	class:mi::opengl::Axis
Axis	libs/opengl/Axis.h	/^        class Axis$/;"	c	namespace:mi::opengl
AzimuthAngle	libs/chemlib/math_util.h	/^    inline double AzimuthAngle(double x, double y)$/;"	f	namespace:chemlib
B	libs/chemlib/RefmacType.h	/^    const unsigned int B    = 152;$/;"	m	namespace:RefmacType
BA	libs/chemlib/RefmacType.h	/^    const unsigned int BA   = 103;$/;"	m	namespace:RefmacType
BAD	libs/opengl/zlib/inflate.cpp	/^    BAD$/;"	e	enum:__anon42	file:
BAD	libs/opengl/zlib/infutil.h	/^    BAD$/;"	e	enum:__anon34
BADCODE	libs/opengl/zlib/infcodes.cpp	/^ BADCODE}       \/* x: got error *\/$/;"	e	enum:__anon38	file:
BALLANDCYLINDER	apps/MIFit/ui/ViewPointSettings.cpp	/^const int ViewPointSettings::BALLANDCYLINDER = 3;$/;"	m	class:ViewPointSettings	file:
BALLANDCYLINDER	apps/MIFit/ui/ViewPointSettings.h	/^    static const int BALLANDCYLINDER;$/;"	m	class:ViewPointSettings
BALLANDSTICK	apps/MIFit/ui/ViewPointSettings.cpp	/^const int ViewPointSettings::BALLANDSTICK = 1;$/;"	m	class:ViewPointSettings	file:
BALLANDSTICK	apps/MIFit/ui/ViewPointSettings.h	/^    static const int BALLANDSTICK;$/;"	m	class:ViewPointSettings
BASE	libs/opengl/zlib/adler32.cpp	10;"	d	file:
BE	libs/chemlib/RefmacType.h	/^    const unsigned int BE   = 99;$/;"	m	namespace:RefmacType
BI	libs/chemlib/RefmacType.h	/^    const unsigned int BI   = 160;$/;"	m	namespace:RefmacType
BLACK	apps/MIFit/core/Colors.cpp	/^const int Colors::BLACK = 0;$/;"	m	class:Colors	file:
BLACK	apps/MIFit/core/Colors.h	/^    static const int BLACK;$/;"	m	class:Colors
BLOCKS	libs/opengl/zlib/inflate.cpp	/^    BLOCKS,     \/* decompressing blocks *\/$/;"	e	enum:__anon42	file:
BLUE	apps/MIFit/core/Colors.cpp	/^const int Colors::BLUE = 3;$/;"	m	class:Colors	file:
BLUE	apps/MIFit/core/Colors.h	/^    static const int BLUE;$/;"	m	class:Colors
BMAX	libs/opengl/zlib/inftrees.cpp	92;"	d	file:
BONDED	libs/chemlib/model.h	/^        const unsigned int BONDED = ((unsigned int)0x00000100);$/;"	m	namespace:chemlib::AtomType
BONDRENDERER_H	apps/MIFit/ui/BondRenderer.h	2;"	d
BONDTWIST	apps/MIFit/ui/MIGLWidget.cpp	117;"	d	file:
BOND_H	libs/chemlib/Bond.h	2;"	d
BOTTOM	libs/opengl/Frustum.cpp	/^const int Frustum::BOTTOM = 1;$/;"	m	class:mi::opengl::Frustum	file:
BOTTOM	libs/opengl/Frustum.h	/^            static const int BOTTOM;$/;"	m	class:mi::opengl::Frustum
BOX_CLASS_H	libs/chemlib/Box.h	2;"	d
BPallette	apps/MIFit/core/Colors.cpp	/^unsigned char Colors::BPallette[Colors_NUMBERPALETTE];$/;"	m	class:Colors	file:
BPallette	apps/MIFit/core/Colors.h	/^    static unsigned char BPallette[Colors_NUMBERPALETTE];$/;"	m	class:Colors
BR	libs/chemlib/RefmacType.h	/^    const unsigned int BR   = 166;$/;"	m	namespace:RefmacType
BRANCH	apps/MIFit/core/RESIDUE.h	17;"	d
BRANCH	libs/chemlib/model.h	79;"	d
BROWN	apps/MIFit/core/Colors.cpp	/^const int Colors::BROWN = 9;$/;"	m	class:Colors	file:
BROWN	apps/MIFit/core/Colors.h	/^    static const int BROWN;$/;"	m	class:Colors
BTREE	libs/opengl/zlib/infutil.h	/^    BTREE,      \/* get bit lengths tree for a dynamic block *\/$/;"	e	enum:__anon34
BUILDFIXED	libs/opengl/zlib/inftrees.cpp	10;"	d	file:
BVALUE_COLORS_DIALOG_H	apps/MIFit/ui/BValueColors.h	2;"	d
BValue	libs/chemlib/MIAtom.h	/^        float BValue() const$/;"	f	class:chemlib::MIAtom
BValueColors	apps/MIFit/core/Colors.cpp	/^int Colors::BValueColors[Colors_NumBValueColors] =$/;"	m	class:Colors	file:
BValueColors	apps/MIFit/core/Colors.h	/^    static int BValueColors[Colors_NumBValueColors];$/;"	m	class:Colors
BValueColors	apps/MIFit/ui/BValueColors.cpp	/^BValueColors::BValueColors(QWidget *parent)$/;"	f	class:BValueColors
BValueColors	apps/MIFit/ui/BValueColors.h	/^        int BValueColors[Colors_NumBValueColors];$/;"	m	struct:BValueColors::ColorValues
BValueColors	apps/MIFit/ui/BValueColors.h	/^class BValueColors : public QDialog, public Ui::BValueColors$/;"	c
BValueColors	apps/MIFit/ui/ui_BValueColors.h	/^    class BValueColors: public Ui_BValueColors {};$/;"	c	namespace:Ui
BValueRanges	apps/MIFit/core/Colors.cpp	/^int Colors::BValueRanges[Colors_NumBValueColors] =$/;"	m	class:Colors	file:
BValueRanges	apps/MIFit/core/Colors.h	/^    static int BValueRanges[Colors_NumBValueColors];$/;"	m	class:Colors
BValueRanges	apps/MIFit/ui/BValueColors.h	/^        float BValueRanges[Colors_NumBValueColors];$/;"	m	struct:BValueColors::ColorValues
BValue_	libs/chemlib/MIAtom.h	/^        float BValue_;$/;"	m	class:chemlib::MIAtom
BYTE	libs/cmtz/ccp4_sysdep.h	231;"	d
BYTE	libs/umtz/library.h	363;"	d
B_	libs/map/fftsub.cpp	/^double B_(double x, int j, int N)$/;"	f
B_CONNECT	libs/chemlib/model.h	34;"	d
B_LINK	libs/chemlib/model.h	32;"	d
B_NORMAL	libs/chemlib/model.h	30;"	d
B_POINT	libs/chemlib/model.h	31;"	d
B_RIBBON	libs/chemlib/model.h	33;"	d
B_SYMM	libs/chemlib/model.h	35;"	d
B_SYMM_POINT	libs/chemlib/model.h	36;"	d
BackgroundColor	apps/MIFit/ui/Application.h	/^    PaletteColor BackgroundColor;$/;"	m	class:Application
BallLines	apps/MIFit/ui/DictEditCanvas.cpp	/^    BallLines,$/;"	e	enum:RenderMode	file:
BallSticks	apps/MIFit/ui/DictEditCanvas.cpp	/^    BallSticks,$/;"	e	enum:RenderMode	file:
BatchJob	apps/MIFit/jobs/BatchJob.cpp	/^BatchJob::BatchJob()$/;"	f	class:BatchJob
BatchJob	apps/MIFit/jobs/BatchJob.cpp	/^BatchJob::BatchJob(const QString &dir)$/;"	f	class:BatchJob
BatchJob	apps/MIFit/jobs/BatchJob.h	/^class BatchJob : public QObject$/;"	c
BatchJobManager	apps/MIFit/jobs/BatchJobManager.cpp	/^BatchJobManager::BatchJobManager()$/;"	f	class:BatchJobManager
BatchJobManager	apps/MIFit/jobs/BatchJobManager.h	/^class BatchJobManager : public QObject$/;"	c
BeforeSelectedResidue	apps/MIFit/ui/AddResidueDialog.h	/^        BeforeSelectedResidue,$/;"	e	enum:AddResidueDialog::ModelLocation
BeginLine	libs/jacgrid/jacgrid.h	/^    virtual void BeginLine()$/;"	f	class:VertexSender
BeginTag	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::BeginTag(const char *t)$/;"	f	class:XMLArchive
BeginTag	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::BeginTag(const char *t, const char *attr)$/;"	f	class:XMLArchive
BestFit	apps/MIFit/ui/AddResidueDialog.h	/^        BestFit,$/;"	e	enum:AddResidueDialog::ResidueOffset
Beta2	libs/chemlib/MIMolDictionary.h	/^        Residue *Beta2;$/;"	m	class:chemlib::MIMolDictionary
BetaSheet	apps/MIFit/ui/AddResidueDialog.h	/^        BetaSheet$/;"	e	enum:AddResidueDialog::ResidueOffset
BisectAtom	libs/chemlib/mol_util.cpp	/^void BisectAtom(const MIAtom *source, double *v)$/;"	f	namespace:chemlib
Bits	libs/opengl/zlib/inftrees.h	/^            Byte Bits;  \/* number of bits in this code or subcode *\/$/;"	m	struct:inflate_huft_s::__anon32::__anon33
Blink	apps/MIFit/ui/MIGLWidget.h	/^    bool Blink;$/;"	m	class:MIGLWidget
BlinkCounter	apps/MIFit/ui/MIGLWidget.h	/^    int BlinkCounter;$/;"	m	class:MIGLWidget
BlinkTime	apps/MIFit/ui/MIGLWidget.h	/^    int BlinkTime;$/;"	m	class:MIGLWidget
BlobRadius	libs/map/MapSettingsBase.h	/^    float BlobRadius;$/;"	m	class:MapSettingsBase
Bond	libs/chemlib/Bond.cpp	/^Bond::Bond()$/;"	f	class:chemlib::Bond
Bond	libs/chemlib/Bond.cpp	/^Bond::Bond(MIAtom *in_atom1,$/;"	f	class:chemlib::Bond
Bond	libs/chemlib/Bond.cpp	/^Bond::Bond(const Bond &bond,$/;"	f	class:chemlib::Bond
Bond	libs/chemlib/Bond.h	/^    class Bond$/;"	c	namespace:chemlib
BondCode	libs/chemlib/molfile.cpp	/^int molfile::BondCode(unsigned char order)$/;"	f	class:chemlib::molfile
BondDICT	libs/chemlib/MIMolDictionary.cpp	/^class BondDICT$/;"	c	namespace:chemlib	file:
BondKeyIndices	libs/chemlib/CifData.cpp	/^BondKeyIndices::BondKeyIndices(std::vector<std::string> &names)$/;"	f	class:BondKeyIndices
BondKeyIndices	libs/chemlib/CifData.h	/^class BondKeyIndices$/;"	c
BondLength	libs/chemlib/Constraint.h	/^    class BondLength$/;"	c	namespace:chemlib
BondLimit	libs/chemlib/mol_util.cpp	/^double BondLimit(const char *s)$/;"	f	namespace:chemlib
BondRenderer	apps/MIFit/ui/BondRenderer.cpp	/^BondRenderer::BondRenderer()$/;"	f	class:BondRenderer
BondRenderer	apps/MIFit/ui/BondRenderer.h	/^class BondRenderer$/;"	c
BondVector	libs/chemlib/mol_util.h	/^    inline void BondVector(const MIAtom *source, const MIAtom *target, double v[])$/;"	f	namespace:chemlib
BondVector	libs/chemlib/mol_util.h	/^    inline void BondVector(const MIAtom *source, const MIAtom *target, std::vector<double> &v)$/;"	f	namespace:chemlib
BondWeight	libs/conflib/AtomRefiner.h	/^        float BondWeight, AngleWeight, PlaneWeight, TorsionWeight;$/;"	m	class:conflib::AtomRefiner
BondWeight	libs/conflib/LigRefiner.h	/^        float BondWeight, AngleWeight, PlaneWeight, TorsionWeight, BumpWeight;$/;"	m	class:conflib::LigRefiner
BondWeight	libs/molopt/MIMolOpt.h	/^    float BondWeight, AngleWeight, PlaneWeight, MapWeight, TorsionWeight, BumpWeight;$/;"	m	class:MIMolOpt
Bonds	libs/chemlib/Constraint.h	/^        std::vector<BondLength> Bonds;$/;"	m	class:chemlib::ConstraintList
Bonds	libs/chemlib/DictResidue.cpp	/^std::vector<Bond>*DictResidue::Bonds()$/;"	f	class:DictResidue
BondsBegin	libs/chemlib/MIMoleculeBase.h	/^        std::vector<Bond>::iterator BondsBegin()$/;"	f	class:chemlib::MIMoleculeBase
BondsEnd	libs/chemlib/MIMoleculeBase.h	/^        std::vector<Bond>::iterator BondsEnd()$/;"	f	class:chemlib::MIMoleculeBase
Bool	apps/MIFit/ui/GenericDataDialog.h	/^        Bool,$/;"	e	enum:GenericDataDialog::FieldType
BoundingBox	apps/MIFit/ui/MIGLWidget.h	/^    InterpBox *BoundingBox;$/;"	m	class:MIGLWidget
Box	apps/MIFit/ui/graphlib.cpp	523;"	d	file:
Box	libs/chemlib/Box.cpp	/^Box::Box(const std::vector<Monomer*> &residues, float margin)$/;"	f	class:chemlib::Box
Box	libs/chemlib/Box.h	/^    class Box$/;"	c	namespace:chemlib
Bracket3DMin	libs/conflib/AtomRefiner.cpp	/^void AtomRefiner::Bracket3DMin(MIAtom *atom, float *grad, float &min, float *b, float *d)$/;"	f	class:AtomRefiner
BreakBond	libs/chemlib/MIMoleculeBase.cpp	/^bool MIMoleculeBase::BreakBond(MIAtom *a1, MIAtom *a2)$/;"	f	class:chemlib::MIMoleculeBase
Bscale	libs/map/sfcalc_data.h	/^double Bscale = 20.0;$/;"	v
Bsolvent	libs/map/CMapHeaderBase.h	/^    float Bsolvent, Ksolvent; \/* bulk solvent model *\/$/;"	m	class:CMapHeaderBase
Build	libs/chemlib/DictResidue.cpp	/^bool DictResidue::Build()$/;"	f	class:DictResidue
Build	libs/chemlib/MIMoleculeBase.cpp	/^int MIMoleculeBase::Build(bool symmetryAtomsOnly)$/;"	f	class:chemlib::MIMoleculeBase
Build	libs/chemlib/mol_util.cpp	/^int Build(Ligand &lig)$/;"	f	namespace:chemlib
BuildAngles	libs/chemlib/DictResidue.cpp	/^void DictResidue::BuildAngles()$/;"	f	class:DictResidue
BuildBonds	libs/chemlib/DictResidue.cpp	/^void DictResidue::BuildBonds()$/;"	f	class:DictResidue
BuildBumps	libs/chemlib/MIMolDictionary.cpp	/^int MIMolDictionary::BuildBumps(Residue *RefiRes, int nRefiRes)$/;"	f	class:chemlib::MIMolDictionary
BuildBumps	libs/conflib/LigRefiner.cpp	/^int LigRefiner::BuildBumps()$/;"	f	class:LigRefiner
BuildCALinks	libs/chemlib/mol_util.cpp	/^int BuildCALinks(vector<Bond> &bonds, const Residue *res)$/;"	f	namespace:chemlib
BuildCB	libs/chemlib/MIMoleculeBase.cpp	/^bool MIMoleculeBase::BuildCB(Residue *test)$/;"	f	class:chemlib::MIMoleculeBase
BuildClusters	apps/MIFit/core/clusterList.cpp	/^Residue*ClusterList::BuildClusters(Residue *first, Residue *last, int min_size)$/;"	f	class:ClusterList
BuildHBonds	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::BuildHBonds()$/;"	f	class:chemlib::MIMoleculeBase
BuildInternalBumpBonds	libs/chemlib/MIMolDictionary.cpp	/^unsigned int MIMolDictionary::BuildInternalBumpBonds(MIAtomList &CurrentAtoms, vector<Bond> &bonds)$/;"	f	class:chemlib::MIMolDictionary
BuildLinks	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::BuildLinks()$/;"	f	class:chemlib::MIMoleculeBase
BuildMainchain	libs/molopt/MIMolOpt.cpp	/^bool MIMolOpt::BuildMainchain(Residue *res, MIMoleculeBase *model, EMapBase *emap, bool addAtomsToNextResidue)$/;"	f	class:MIMolOpt
BuildNeighborList	libs/jacgrid/surface.cpp	/^void surfaceT::BuildNeighborList(std::vector< std::set<unsigned int> > &nbrList) const$/;"	f	class:surfaceT
BuildPalette	apps/MIFit/ui/Application.cpp	/^void Application::BuildPalette()$/;"	f	class:Application
BuildPropColors	apps/MIFit/ui/surf.cpp	/^    void BuildPropColors()$/;"	f	class:MISurface
BuildResList	libs/chemlib/itertest.cxx	/^RESIDUE *BuildResList()$/;"	f
BuildRibbons	apps/MIFit/core/Molecule.cpp	/^void Molecule::BuildRibbons()$/;"	f	class:Molecule
BuildVertexToTriangleList	libs/jacgrid/surface.cpp	/^void surfaceT::BuildVertexToTriangleList(std::vector< std::set<unsigned int> > &v2tList) const$/;"	f	class:surfaceT
Bump	libs/chemlib/Constraint.h	/^    class Bump$/;"	c	namespace:chemlib
BumpScore	libs/molopt/MIMolOpt.cpp	/^float BumpScore(vector<Bond> &bumps)$/;"	f
BumpTolerance	libs/chemlib/CovalentGeom.cpp	/^void CovalentGeometry::BumpTolerance(Bump &bump)$/;"	f	class:chemlib::CovalentGeometry
BumpValue	libs/chemlib/CovalentGeom.cpp	/^void CovalentGeometry::BumpValue(Bump &bump)$/;"	f	class:chemlib::CovalentGeometry
BumpWeight	libs/conflib/LigRefiner.h	/^        float BondWeight, AngleWeight, PlaneWeight, TorsionWeight, BumpWeight;$/;"	m	class:conflib::LigRefiner
BumpWeight	libs/molopt/MIMolOpt.h	/^    float BondWeight, AngleWeight, PlaneWeight, MapWeight, TorsionWeight, BumpWeight;$/;"	m	class:MIMolOpt
Bumps	libs/chemlib/Constraint.h	/^        std::vector<Bump> Bumps;$/;"	m	class:chemlib::ConstraintList
Busy	apps/MIFit/ui/Application.cpp	/^bool MIBusyManager::Busy() const$/;"	f	class:MIBusyManager
ButtonCtrlToLineEditMap	apps/MIFit/ui/ModelsView.h	/^    typedef std::map<QPushButton*, QLineEdit*> ButtonCtrlToLineEditMap;$/;"	t	class:ModelsView
ButtonCtrlToModelsTreeMap	apps/MIFit/ui/ModelsView.h	/^    typedef std::map<QPushButton*, ModelsTree*> ButtonCtrlToModelsTreeMap;$/;"	t	class:ModelsView
Byte	libs/opengl/zlib/zconf.h	/^typedef unsigned char Byte;   \/* 8 bits *\/$/;"	t
Byte	libs/opengl/zlib/zconf.h	35;"	d
Bytef	libs/opengl/zlib/zconf.h	/^typedef Byte FAR Bytef;$/;"	t
Bytef	libs/opengl/zlib/zconf.h	217;"	d
Bytef	libs/opengl/zlib/zconf.h	38;"	d
C	libs/chemlib/RefmacType.h	/^    const unsigned int C    = 3;    \/\/Sp2 hybridized, no hydrogen$/;"	m	namespace:RefmacType
C0	libs/opengl/zlib/inftrees.cpp	135;"	d	file:
C1	libs/chemlib/RefmacType.h	/^    const unsigned int C1   = 4;    \/\/Sp2 hybridized, 1 hydrogen$/;"	m	namespace:RefmacType
C2	libs/chemlib/RefmacType.h	/^    const unsigned int C2   = 5;    \/\/Sp2 hybridized, 2 hydrogens$/;"	m	namespace:RefmacType
C2	libs/opengl/zlib/inftrees.cpp	136;"	d	file:
C4	libs/opengl/zlib/inftrees.cpp	137;"	d	file:
CA	libs/chemlib/RefmacType.h	/^    const unsigned int CA   = 101;$/;"	m	namespace:RefmacType
CALL_LIKE_HPUX	libs/cmtz/ccp4_sysdep.h	32;"	d
CALL_LIKE_HPUX	libs/cmtz/ccp4_sysdep.h	37;"	d
CALL_LIKE_HPUX	libs/umtz/library.h	125;"	d
CALL_LIKE_HPUX	libs/umtz/library.h	77;"	d
CALL_LIKE_MVS	libs/cmtz/ccp4_sysdep.h	79;"	d
CALL_LIKE_MVS	libs/cmtz/ccp4_sysdep.h	81;"	d
CALL_LIKE_MVS	libs/umtz/library.h	193;"	d
CALL_LIKE_STARDENT	libs/umtz/library.h	97;"	d
CALL_LIKE_SUN	libs/cmtz/ccp4_sysdep.h	101;"	d
CALL_LIKE_SUN	libs/cmtz/ccp4_sysdep.h	105;"	d
CALL_LIKE_SUN	libs/cmtz/ccp4_sysdep.h	106;"	d
CALL_LIKE_SUN	libs/cmtz/ccp4_sysdep.h	111;"	d
CALL_LIKE_SUN	libs/cmtz/ccp4_sysdep.h	112;"	d
CALL_LIKE_SUN	libs/cmtz/ccp4_sysdep.h	117;"	d
CALL_LIKE_SUN	libs/cmtz/ccp4_sysdep.h	118;"	d
CALL_LIKE_SUN	libs/cmtz/ccp4_sysdep.h	48;"	d
CALL_LIKE_SUN	libs/cmtz/ccp4_sysdep.h	53;"	d
CALL_LIKE_SUN	libs/cmtz/ccp4_sysdep.h	64;"	d
CALL_LIKE_SUN	libs/cmtz/ccp4_sysdep.h	87;"	d
CALL_LIKE_SUN	libs/cmtz/ccp4_sysdep.h	89;"	d
CALL_LIKE_SUN	libs/cmtz/ccp4_sysdep.h	93;"	d
CALL_LIKE_SUN	libs/cmtz/ccp4_sysdep.h	95;"	d
CALL_LIKE_SUN	libs/cmtz/ccp4_sysdep.h	99;"	d
CALL_LIKE_SUN	libs/umtz/library.h	107;"	d
CALL_LIKE_SUN	libs/umtz/library.h	117;"	d
CALL_LIKE_SUN	libs/umtz/library.h	140;"	d
CALL_LIKE_SUN	libs/umtz/library.h	155;"	d
CALL_LIKE_SUN	libs/umtz/library.h	171;"	d
CALL_LIKE_SUN	libs/umtz/library.h	198;"	d
CALL_LIKE_SUN	libs/umtz/library.h	200;"	d
CALL_LIKE_SUN	libs/umtz/library.h	214;"	d
CALL_LIKE_SUN	libs/umtz/library.h	215;"	d
CALL_LIKE_SUN	libs/umtz/library.h	84;"	d
CALL_LIKE_VMS	libs/cmtz/ccp4_sysdep.h	74;"	d
CALL_LIKE_VMS	libs/umtz/library.h	187;"	d
CArchive	apps/MIFit/core/Cfiles.cpp	/^CArchive::CArchive(const char *pathname, int m)$/;"	f	class:CArchive
CArchive	apps/MIFit/core/Cfiles.h	/^class CArchive$/;"	c
CC	apps/MIFit/core/Makefile	/^CC            = gcc$/;"	m
CC	apps/MIFit/jobs/Makefile	/^CC            = gcc$/;"	m
CC	apps/MIFit/main/Makefile	/^CC            = gcc$/;"	m
CC	apps/MIFit/script/Makefile	/^CC            = gcc$/;"	m
CC	apps/MIFit/ui/Makefile	/^CC            = gcc$/;"	m
CC	libs/chemlib/Makefile	/^CC            = gcc$/;"	m
CC	libs/conflib/Makefile	/^CC            = gcc$/;"	m
CC	libs/jacgrid/Makefile	/^CC            = gcc$/;"	m
CC	libs/ligand/Makefile	/^CC            = gcc$/;"	m
CC	libs/map/Makefile	/^CC            = gcc$/;"	m
CC	libs/math/Makefile	/^CC            = gcc$/;"	m
CC	libs/molopt/Makefile	/^CC            = gcc$/;"	m
CC	libs/opengl/Makefile	/^CC            = gcc$/;"	m
CC	libs/umtz/Makefile	/^CC            = gcc$/;"	m
CC	libs/util/Makefile	/^CC            = gcc$/;"	m
CCP4	libs/cmtz/ccp4_errno.h	/^namespace CCP4 {$/;"	n
CCP4	libs/cmtz/ccp4_parser.h	/^namespace CCP4 {$/;"	n
CCP4	libs/cmtz/ccp4_utils.h	/^namespace CCP4 {$/;"	n
CCP4	libs/cmtz/library_file.h	/^namespace CCP4 {$/;"	n
CCP4File	libs/cmtz/cmtzlib.h	/^typedef CCP4::CCP4File CCP4File;$/;"	t
CCP4File	libs/cmtz/library_file.h	/^typedef struct _CFileStruct CCP4File;$/;"	t	typeref:struct:CCP4::_CFileStruct
CCP4PARSERARRAY	libs/cmtz/ccp4_parser.h	/^} CCP4PARSERARRAY;     $/;"	t	typeref:struct:CCP4::__anon27
CCP4PARSERTOKEN	libs/cmtz/ccp4_parser.h	/^} CCP4PARSERTOKEN;$/;"	t	typeref:struct:CCP4::__anon26
CCP4SPG	libs/cmtz/ccp4_spg.h	/^} CCP4SPG;$/;"	t	typeref:struct:CSym::ccp4_spacegroup_
CCP4_COUNT	libs/cmtz/ccp4_errno.h	60;"	d
CCP4_ERRGETCODE	libs/cmtz/ccp4_errno.h	47;"	d
CCP4_ERRGETLEVEL	libs/cmtz/ccp4_errno.h	44;"	d
CCP4_ERRGETSYS	libs/cmtz/ccp4_errno.h	41;"	d
CCP4_ERRLEVEL	libs/cmtz/ccp4_errno.h	35;"	d
CCP4_ERRNO	libs/cmtz/ccp4_file_err.h	22;"	d
CCP4_ERRNO	libs/cmtz/library_utils.c	61;"	d	file:
CCP4_ERRSETLEVEL	libs/cmtz/ccp4_errno.h	38;"	d
CCP4_ERRSYSTEM	libs/cmtz/ccp4_errno.h	32;"	d
CCP4_ERR_COORD	libs/cmtz/ccp4_errno.h	52;"	d
CCP4_ERR_FILE	libs/cmtz/ccp4_errno.h	51;"	d
CCP4_ERR_GEN	libs/cmtz/ccp4_errno.h	58;"	d
CCP4_ERR_MAP	libs/cmtz/ccp4_errno.h	54;"	d
CCP4_ERR_MTZ	libs/cmtz/ccp4_errno.h	53;"	d
CCP4_ERR_PARS	libs/cmtz/ccp4_errno.h	56;"	d
CCP4_ERR_SYM	libs/cmtz/ccp4_errno.h	57;"	d
CCP4_ERR_SYS	libs/cmtz/ccp4_errno.h	50;"	d
CCP4_ERR_UTILS	libs/cmtz/ccp4_errno.h	55;"	d
CCP4_LIBRARY_C	libs/umtz/library.h	58;"	d
CCP4_MMTZLIB_INC	libs/umtz/mmtzlib.h	61;"	d
CCP4_NAN	libs/cmtz/library_utils.c	215;"	d	file:
CCP4_NAN	libs/cmtz/library_utils.c	221;"	d	file:
CCP4_NAN	libs/cmtz/library_utils.c	224;"	d	file:
CCP4_UMTZLIB_INC	libs/umtz/umtzlib.h	7;"	d
CCP4_fatal	libs/umtz/library.c	/^void CCP4_fatal (const char *message)$/;"	f
CCP4_map	libs/map/EMapBase.h	/^        CCP4_map,$/;"	e	enum:EMapBase::__anon47
CCP4_phase	libs/map/EMapBase.h	/^        CCP4_phase,$/;"	e	enum:EMapBase::__anon47
CCP4uc	libs/cmtz/ccp4_unitcell.h	/^namespace CCP4uc {$/;"	n
CD	libs/chemlib/RefmacType.h	/^    const unsigned int CD   = 150;$/;"	m	namespace:RefmacType
CE	libs/chemlib/RefmacType.h	/^    const unsigned int CE   = 107;$/;"	m	namespace:RefmacType
CELL_ENTRY	libs/jacgrid/cell_table.h	/^}               CELL_ENTRY;$/;"	t	typeref:struct:__anon30
CENTER	apps/MIFit/ui/MIGLWidget.cpp	114;"	d	file:
CFILES_H_	apps/MIFit/core/Cfiles.h	2;"	d
CFLAGS	apps/MIFit/core/Makefile	/^CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CFLAGS	apps/MIFit/jobs/Makefile	/^CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CFLAGS	apps/MIFit/main/Makefile	/^CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -Wall -W -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CFLAGS	apps/MIFit/script/Makefile	/^CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CFLAGS	apps/MIFit/ui/Makefile	/^CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CFLAGS	libs/chemlib/Makefile	/^CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CFLAGS	libs/conflib/Makefile	/^CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CFLAGS	libs/jacgrid/Makefile	/^CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wno-unknown-pragmas $(DEFINES)$/;"	m
CFLAGS	libs/ligand/Makefile	/^CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CFLAGS	libs/map/Makefile	/^CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CFLAGS	libs/math/Makefile	/^CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CFLAGS	libs/molopt/Makefile	/^CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CFLAGS	libs/opengl/Makefile	/^CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CFLAGS	libs/umtz/Makefile	/^CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wno-unknown-pragmas $(DEFINES)$/;"	m
CFLAGS	libs/util/Makefile	/^CFLAGS        = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CFile_Perror	libs/cmtz/library_err.c	/^int CFile_Perror(const char *msg)$/;"	f
CH1	libs/chemlib/RefmacType.h	/^    const unsigned int CH1  = 16;   \/\/Sp3 hybridized, 1 hydrogen$/;"	m	namespace:RefmacType
CH2	libs/chemlib/RefmacType.h	/^    const unsigned int CH2  = 17;   \/\/Sp3 hybridized, 2 hydrogens$/;"	m	namespace:RefmacType
CH3	libs/chemlib/RefmacType.h	/^    const unsigned int CH3  = 18;   \/\/Sp3 hybridized, 3 hydrogens$/;"	m	namespace:RefmacType
CHECK1	libs/opengl/zlib/inflate.cpp	/^    CHECK1,     \/* one check byte to go *\/$/;"	e	enum:__anon42	file:
CHECK2	libs/opengl/zlib/inflate.cpp	/^    CHECK2,     \/* two check bytes to go *\/$/;"	e	enum:__anon42	file:
CHECK3	libs/opengl/zlib/inflate.cpp	/^    CHECK3,     \/* three check bytes to go *\/$/;"	e	enum:__anon42	file:
CHECK4	libs/opengl/zlib/inflate.cpp	/^    CHECK4,     \/* four check bytes to go *\/$/;"	e	enum:__anon42	file:
CHECK_MANAGE_BUMP_H	libs/conflib/bumps.h	2;"	d
CHIRAL	libs/chemlib/CHIRALDICT.h	/^        CHIRAL() : center(NULL), atom1(NULL), atom2(NULL), atom3(NULL), order(0), flags(0)$/;"	f	class:chemlib::CHIRAL
CHIRAL	libs/chemlib/CHIRALDICT.h	/^    class CHIRAL$/;"	c	namespace:chemlib
CHIRALDICT	libs/chemlib/CHIRALDICT.h	/^        CHIRALDICT()$/;"	f	class:chemlib::CHIRALDICT
CHIRALDICT	libs/chemlib/CHIRALDICT.h	/^    class CHIRALDICT$/;"	c	namespace:chemlib
CHIRAL_AUTO	libs/chemlib/CHIRALDICT.h	12;"	d
CHIRAL_DELETED	libs/chemlib/CHIRALDICT.h	14;"	d
CHIRAL_H	libs/chemlib/Chiral.h	2;"	d
CHIRAL_USERADD	libs/chemlib/CHIRALDICT.h	13;"	d
CHK_DIR_EXISTS	Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	apps/MIFit/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	apps/MIFit/core/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	apps/MIFit/jobs/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	apps/MIFit/main/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	apps/MIFit/script/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	apps/MIFit/ui/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	apps/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	libs/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	libs/chemlib/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	libs/conflib/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	libs/jacgrid/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	libs/ligand/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	libs/map/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	libs/math/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	libs/molopt/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	libs/opengl/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	libs/umtz/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CHK_DIR_EXISTS	libs/util/Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CH_ALLENE_LIKE	libs/chemlib/model.h	58;"	d
CH_DEFAULT	libs/chemlib/model.h	55;"	d
CH_NONE	libs/chemlib/model.h	56;"	d
CH_OCTAHEDRAL	libs/chemlib/model.h	61;"	d
CH_SQUARE_PLANAR	libs/chemlib/model.h	60;"	d
CH_TETRAHEDRAL	libs/chemlib/model.h	57;"	d
CH_TRIGONAL_BIPYRAMIDAL	libs/chemlib/model.h	59;"	d
CIO_BadMode	libs/cmtz/ccp4_file_err.h	24;"	d
CIO_CantOpenFile	libs/cmtz/ccp4_file_err.h	25;"	d
CIO_CloseFail	libs/cmtz/ccp4_file_err.h	29;"	d
CIO_EOF	libs/cmtz/ccp4_file_err.h	32;"	d
CIO_MaxFile	libs/cmtz/ccp4_file_err.h	26;"	d
CIO_NoFile	libs/cmtz/ccp4_file_err.h	33;"	d
CIO_NotOpen	libs/cmtz/ccp4_file_err.h	34;"	d
CIO_NullPtr	libs/cmtz/ccp4_file_err.h	31;"	d
CIO_Ok	libs/cmtz/ccp4_file_err.h	23;"	d
CIO_ReadFail	libs/cmtz/ccp4_file_err.h	27;"	d
CIO_SeekFail	libs/cmtz/ccp4_file_err.h	30;"	d
CIO_UnlinkFail	libs/cmtz/ccp4_file_err.h	35;"	d
CIO_WriteFail	libs/cmtz/ccp4_file_err.h	28;"	d
CL	libs/chemlib/RefmacType.h	/^    const unsigned int CL   = 165;$/;"	m	namespace:RefmacType
CLAMP	apps/MIFit/core/SecondaryStructure.cpp	232;"	d	file:
CLAMP	apps/MIFit/core/SecondaryStructure.cpp	31;"	d	file:
CLOCKWISE	libs/chemlib/model.h	40;"	d
CMTZERR_AllocFail	libs/cmtz/cmtzlib.c	52;"	d	file:
CMTZERR_BadBatchHeader	libs/cmtz/cmtzlib.c	62;"	d	file:
CMTZERR_BadVersion	libs/cmtz/cmtzlib.c	59;"	d	file:
CMTZERR_COLUMNIncomplete	libs/cmtz/cmtzlib.c	61;"	d	file:
CMTZERR_CantOpenFile	libs/cmtz/cmtzlib.c	44;"	d	file:
CMTZERR_Cellerr	libs/cmtz/cmtzlib.c	49;"	d	file:
CMTZERR_ColTypeMismatch	libs/cmtz/cmtzlib.c	64;"	d	file:
CMTZERR_DatasetIncomplete	libs/cmtz/cmtzlib.c	56;"	d	file:
CMTZERR_DifferentVersion	libs/cmtz/cmtzlib.c	63;"	d	file:
CMTZERR_FileStamp	libs/cmtz/cmtzlib.c	50;"	d	file:
CMTZERR_MaxFile	libs/cmtz/cmtzlib.c	53;"	d	file:
CMTZERR_NoArch	libs/cmtz/cmtzlib.c	57;"	d	file:
CMTZERR_NoChannel	libs/cmtz/cmtzlib.c	41;"	d	file:
CMTZERR_NoFile	libs/cmtz/cmtzlib.c	42;"	d	file:
CMTZERR_NoHeader	libs/cmtz/cmtzlib.c	45;"	d	file:
CMTZERR_NoLogicalName	libs/cmtz/cmtzlib.c	43;"	d	file:
CMTZERR_NotMTZ	libs/cmtz/cmtzlib.c	55;"	d	file:
CMTZERR_NullDataset	libs/cmtz/cmtzlib.c	58;"	d	file:
CMTZERR_Ok	libs/cmtz/cmtzlib.c	40;"	d	file:
CMTZERR_ParamError	libs/cmtz/cmtzlib.c	48;"	d	file:
CMTZERR_ParserFail	libs/cmtz/cmtzlib.c	54;"	d	file:
CMTZERR_ReadFail	libs/cmtz/cmtzlib.c	46;"	d	file:
CMTZERR_SYMINFIncomplete	libs/cmtz/cmtzlib.c	60;"	d	file:
CMTZERR_SymErr	libs/cmtz/cmtzlib.c	51;"	d	file:
CMTZERR_WriteFail	libs/cmtz/cmtzlib.c	47;"	d	file:
CMTZ_ERRNO	libs/cmtz/cmtzlib.c	37;"	d	file:
CMapHeader	apps/MIFit/ui/CMapHeader.cpp	/^CMapHeader::CMapHeader()$/;"	f	class:CMapHeader
CMapHeader	apps/MIFit/ui/CMapHeader.h	/^class CMapHeader : public CMapHeaderBase$/;"	c
CMapHeaderBase	libs/map/CMapHeaderBase.cpp	/^CMapHeaderBase::CMapHeaderBase()$/;"	f	class:CMapHeaderBase
CMapHeaderBase	libs/map/CMapHeaderBase.cpp	/^CMapHeaderBase::CMapHeaderBase(const CMapHeaderBase &rhs)$/;"	f	class:CMapHeaderBase
CMapHeaderBase	libs/map/CMapHeaderBase.cpp	/^CMapHeaderBase::CMapHeaderBase(const std::string &from_label)$/;"	f	class:CMapHeaderBase
CMapHeaderBase	libs/map/CMapHeaderBase.h	/^class CMapHeaderBase : public QObject$/;"	c
CMolwViewAnnotationPickingRenderable	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.cpp	/^CMolwViewAnnotationPickingRenderable::CMolwViewAnnotationPickingRenderable(StereoView *stereoView, Frustum *frustum, MIGLWidget *canvas)$/;"	f	class:CMolwViewAnnotationPickingRenderable
CMolwViewAnnotationPickingRenderable	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.h	/^class CMolwViewAnnotationPickingRenderable : public mi::opengl::Renderable$/;"	c
CMolwViewAnnotationRenderable	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.cpp	/^CMolwViewAnnotationRenderable::CMolwViewAnnotationRenderable(GLRenderer *renderer)$/;"	f	class:CMolwViewAnnotationRenderable
CMolwViewAnnotationRenderable	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.h	/^class CMolwViewAnnotationRenderable : public mi::opengl::Renderable$/;"	c
CMolwViewAtomPickingRenderable	apps/MIFit/ui/CMolwViewAtomPickingRenderable.cpp	/^CMolwViewAtomPickingRenderable::CMolwViewAtomPickingRenderable(StereoView *stereoView)$/;"	f	class:CMolwViewAtomPickingRenderable
CMolwViewAtomPickingRenderable	apps/MIFit/ui/CMolwViewAtomPickingRenderable.h	/^class CMolwViewAtomPickingRenderable : public mi::opengl::Renderable$/;"	c
CMolwViewAtomRenderable	apps/MIFit/ui/CMolwViewAtomPickingRenderable.cpp	/^CMolwViewAtomRenderable::CMolwViewAtomRenderable(GLRenderer *renderer)$/;"	f	class:CMolwViewAtomRenderable
CMolwViewAtomRenderable	apps/MIFit/ui/CMolwViewAtomPickingRenderable.h	/^class CMolwViewAtomRenderable : public mi::opengl::Renderable$/;"	c
CMolwViewBondPickingRenderable	apps/MIFit/ui/CMolwViewBondPickingRenderable.cpp	/^CMolwViewBondPickingRenderable::CMolwViewBondPickingRenderable(StereoView *stereoView)$/;"	f	class:CMolwViewBondPickingRenderable
CMolwViewBondPickingRenderable	apps/MIFit/ui/CMolwViewBondPickingRenderable.h	/^class CMolwViewBondPickingRenderable : public mi::opengl::Renderable$/;"	c
CMolwViewBondRenderable	apps/MIFit/ui/CMolwViewBondPickingRenderable.cpp	/^CMolwViewBondRenderable::CMolwViewBondRenderable(GLRenderer *renderer)$/;"	f	class:CMolwViewBondRenderable
CMolwViewBondRenderable	apps/MIFit/ui/CMolwViewBondPickingRenderable.h	/^class CMolwViewBondRenderable : public mi::opengl::Renderable$/;"	c
CMolwViewScene	apps/MIFit/ui/CMolwViewScene.cpp	/^CMolwViewScene::CMolwViewScene()$/;"	f	class:CMolwViewScene
CMolwViewScene	apps/MIFit/ui/CMolwViewScene.h	/^class CMolwViewScene : public mi::opengl::Scene$/;"	c
CMolwViewSlabPickingRenderable	apps/MIFit/ui/CMolwViewSlabPickingRenderable.cpp	/^CMolwViewSlabPickingRenderable::CMolwViewSlabPickingRenderable(StereoView *stereoView)$/;"	f	class:CMolwViewSlabPickingRenderable
CMolwViewSlabPickingRenderable	apps/MIFit/ui/CMolwViewSlabPickingRenderable.h	/^class CMolwViewSlabPickingRenderable : public mi::opengl::Renderable$/;"	c
CMolwViewSlabRenderable	apps/MIFit/ui/CMolwViewSlabPickingRenderable.cpp	/^CMolwViewSlabRenderable::CMolwViewSlabRenderable()$/;"	f	class:CMolwViewSlabRenderable
CMolwViewSlabRenderable	apps/MIFit/ui/CMolwViewSlabPickingRenderable.h	/^class CMolwViewSlabRenderable : public mi::opengl::Renderable$/;"	c
CMtz	libs/cmtz/cmtzlib.h	/^namespace CMtz {$/;"	n
CNS_phase	libs/map/EMapBase.h	/^        CNS_phase,$/;"	e	enum:EMapBase::__anon47
CO	libs/chemlib/RefmacType.h	/^    const unsigned int CO   = 140;$/;"	m	namespace:RefmacType
CODES	libs/opengl/zlib/infutil.h	/^    CODES,      \/* processing fixed or dynamic block *\/$/;"	e	enum:__anon34
COIL	apps/MIFit/core/Colors.cpp	/^const int Colors::COIL = 2;$/;"	m	class:Colors	file:
COIL	apps/MIFit/core/Colors.h	/^    static const int COIL;$/;"	m	class:Colors
COLORALL	apps/MIFit/core/Colors.cpp	/^const int Colors::COLORALL = 1;$/;"	m	class:Colors	file:
COLORALL	apps/MIFit/core/Colors.h	/^    static const int COLORALL;$/;"	m	class:Colors
COLORASIS	apps/MIFit/core/Colors.cpp	/^const int Colors::COLORASIS = 8;$/;"	m	class:Colors	file:
COLORASIS	apps/MIFit/core/Colors.h	/^    static const int COLORASIS;$/;"	m	class:Colors
COLORBVALUE	apps/MIFit/core/Colors.cpp	/^const int Colors::COLORBVALUE = 3;$/;"	m	class:Colors	file:
COLORBVALUE	apps/MIFit/core/Colors.h	/^    static const int COLORBVALUE;$/;"	m	class:Colors
COLORC	apps/MIFit/core/Colors.cpp	/^const int Colors::COLORC = 0;$/;"	m	class:Colors	file:
COLORC	apps/MIFit/core/Colors.h	/^    static const int COLORC;$/;"	m	class:Colors
COLORCHARGE	apps/MIFit/core/Colors.cpp	/^const int Colors::COLORCHARGE = 5;$/;"	m	class:Colors	file:
COLORCHARGE	apps/MIFit/core/Colors.h	/^    static const int COLORCHARGE;$/;"	m	class:Colors
COLORHYDRO	apps/MIFit/core/Colors.cpp	/^const int Colors::COLORHYDRO = 6;$/;"	m	class:Colors	file:
COLORHYDRO	apps/MIFit/core/Colors.h	/^    static const int COLORHYDRO;$/;"	m	class:Colors
COLOROFF	apps/MIFit/core/Colors.cpp	/^const int Colors::COLOROFF = (-1);$/;"	m	class:Colors	file:
COLOROFF	apps/MIFit/core/Colors.h	/^    static const int COLOROFF;$/;"	m	class:Colors
COLORON	apps/MIFit/core/Colors.cpp	/^const int Colors::COLORON = 9;$/;"	m	class:Colors	file:
COLORON	apps/MIFit/core/Colors.h	/^    static const int COLORON;$/;"	m	class:Colors
COLORSECOND	apps/MIFit/core/Colors.cpp	/^const int Colors::COLORSECOND = 2;$/;"	m	class:Colors	file:
COLORSECOND	apps/MIFit/core/Colors.h	/^    static const int COLORSECOND;$/;"	m	class:Colors
COLORSHAPELY	apps/MIFit/core/Colors.cpp	/^const int Colors::COLORSHAPELY = 7;$/;"	m	class:Colors	file:
COLORSHAPELY	apps/MIFit/core/Colors.h	/^    static const int COLORSHAPELY;$/;"	m	class:Colors
COLORS_H	apps/MIFit/core/Colors.h	2;"	d
COLORTYPE	apps/MIFit/core/Colors.cpp	/^const int Colors::COLORTYPE = 4;$/;"	m	class:Colors	file:
COLORTYPE	apps/MIFit/core/Colors.h	/^    static const int COLORTYPE;$/;"	m	class:Colors
COLOR_SETTER	libs/chemlib/PDB.cpp	/^static MIColorSetter *COLOR_SETTER = 0;$/;"	m	namespace:chemlib	file:
COLUMNLABEL	libs/cmtz/ccp4_vars.h	43;"	d
COLUMNTYPE	libs/cmtz/ccp4_vars.h	44;"	d
COMP32	libs/cmtz/ccp4_sysdep.h	235;"	d
COMP32	libs/umtz/library.h	367;"	d
COMP64	libs/cmtz/ccp4_sysdep.h	236;"	d
COMP64	libs/umtz/library.h	368;"	d
COMPLEX	libs/cmtz/ccp4_types.h	/^               } COMPLEX;              \/* a complex number *\/$/;"	t	typeref:struct:__anon18
COMPLEX	libs/umtz/library.h	/^} COMPLEX;                             \/* a complex number *\/$/;"	t	typeref:struct:__anon57
COMPRESS	apps/MIFit/core/Makefile	/^COMPRESS      = gzip -9f$/;"	m
COMPRESS	apps/MIFit/jobs/Makefile	/^COMPRESS      = gzip -9f$/;"	m
COMPRESS	apps/MIFit/main/Makefile	/^COMPRESS      = gzip -9f$/;"	m
COMPRESS	apps/MIFit/script/Makefile	/^COMPRESS      = gzip -9f$/;"	m
COMPRESS	apps/MIFit/ui/Makefile	/^COMPRESS      = gzip -9f$/;"	m
COMPRESS	libs/chemlib/Makefile	/^COMPRESS      = gzip -9f$/;"	m
COMPRESS	libs/conflib/Makefile	/^COMPRESS      = gzip -9f$/;"	m
COMPRESS	libs/jacgrid/Makefile	/^COMPRESS      = gzip -9f$/;"	m
COMPRESS	libs/ligand/Makefile	/^COMPRESS      = gzip -9f$/;"	m
COMPRESS	libs/map/Makefile	/^COMPRESS      = gzip -9f$/;"	m
COMPRESS	libs/math/Makefile	/^COMPRESS      = gzip -9f$/;"	m
COMPRESS	libs/molopt/Makefile	/^COMPRESS      = gzip -9f$/;"	m
COMPRESS	libs/opengl/Makefile	/^COMPRESS      = gzip -9f$/;"	m
COMPRESS	libs/umtz/Makefile	/^COMPRESS      = gzip -9f$/;"	m
COMPRESS	libs/util/Makefile	/^COMPRESS      = gzip -9f$/;"	m
CONFLIB_CONFORMATION_FINGERPRINT_H	libs/conflib/ConfFingerprint.h	2;"	d
CONFLIB_CONFORMATION_ITERATOR_H	libs/conflib/ConfIterator.h	2;"	d
CONSOLE_h	apps/MIFit/python/Console.h	2;"	d
CONSTRAINT_H	libs/chemlib/Constraint.h	2;"	d
CONTACT	apps/MIFit/core/CONTACT.h	/^class CONTACT$/;"	c
CONTACT_SURFACE	libs/jacgrid/isosurface.cpp	/^static const unsigned int CONTACT_SURFACE = 2;$/;"	v	file:
CONTACT_SURFACE	libs/jacgrid/surface.cpp	/^static const unsigned int CONTACT_SURFACE = 2;$/;"	v	file:
CONTOUR1	apps/MIFit/core/Colors.cpp	/^const int Colors::CONTOUR1 = 31;$/;"	m	class:Colors	file:
CONTOUR1	apps/MIFit/core/Colors.h	/^    static const int CONTOUR1;$/;"	m	class:Colors
CONTOUR10	apps/MIFit/core/Colors.cpp	/^const int Colors::CONTOUR10 = 40;$/;"	m	class:Colors	file:
CONTOUR10	apps/MIFit/core/Colors.h	/^    static const int CONTOUR10;$/;"	m	class:Colors
CONTOUR2	apps/MIFit/core/Colors.cpp	/^const int Colors::CONTOUR2 = 32;$/;"	m	class:Colors	file:
CONTOUR2	apps/MIFit/core/Colors.h	/^    static const int CONTOUR2;$/;"	m	class:Colors
CONTOUR3	apps/MIFit/core/Colors.cpp	/^const int Colors::CONTOUR3 = 33;$/;"	m	class:Colors	file:
CONTOUR3	apps/MIFit/core/Colors.h	/^    static const int CONTOUR3;$/;"	m	class:Colors
CONTOUR4	apps/MIFit/core/Colors.cpp	/^const int Colors::CONTOUR4 = 34;$/;"	m	class:Colors	file:
CONTOUR4	apps/MIFit/core/Colors.h	/^    static const int CONTOUR4;$/;"	m	class:Colors
CONTOUR5	apps/MIFit/core/Colors.cpp	/^const int Colors::CONTOUR5 = 35;$/;"	m	class:Colors	file:
CONTOUR5	apps/MIFit/core/Colors.h	/^    static const int CONTOUR5;$/;"	m	class:Colors
CONTOUR6	apps/MIFit/core/Colors.cpp	/^const int Colors::CONTOUR6 = 36;$/;"	m	class:Colors	file:
CONTOUR6	apps/MIFit/core/Colors.h	/^    static const int CONTOUR6;$/;"	m	class:Colors
CONTOUR7	apps/MIFit/core/Colors.cpp	/^const int Colors::CONTOUR7 = 37;$/;"	m	class:Colors	file:
CONTOUR7	apps/MIFit/core/Colors.h	/^    static const int CONTOUR7;$/;"	m	class:Colors
CONTOUR8	apps/MIFit/core/Colors.cpp	/^const int Colors::CONTOUR8 = 38;$/;"	m	class:Colors	file:
CONTOUR8	apps/MIFit/core/Colors.h	/^    static const int CONTOUR8;$/;"	m	class:Colors
CONTOUR9	apps/MIFit/core/Colors.cpp	/^const int Colors::CONTOUR9 = 39;$/;"	m	class:Colors	file:
CONTOUR9	apps/MIFit/core/Colors.h	/^    static const int CONTOUR9;$/;"	m	class:Colors
CONTOUR_METHOD_TYPE	libs/map/EMapBase.h	/^typedef enum {MAP_CUBE = 0, MAP_SPHERE, MAP_BBLOB, MAP_BOX} CONTOUR_METHOD_TYPE;$/;"	t	typeref:enum:__anon46
CONTOUR_OPTIONS_WIDGET_H	apps/MIFit/ui/ContourOptionsWidget.h	2;"	d
COORD_GENERATOR_H	libs/conflib/CoordGenerator.h	2;"	d
COPY	Makefile	/^COPY          = cp -f$/;"	m
COPY	apps/MIFit/Makefile	/^COPY          = cp -f$/;"	m
COPY	apps/MIFit/core/Makefile	/^COPY          = cp -f$/;"	m
COPY	apps/MIFit/jobs/Makefile	/^COPY          = cp -f$/;"	m
COPY	apps/MIFit/main/Makefile	/^COPY          = cp -f$/;"	m
COPY	apps/MIFit/script/Makefile	/^COPY          = cp -f$/;"	m
COPY	apps/MIFit/ui/Makefile	/^COPY          = cp -f$/;"	m
COPY	apps/Makefile	/^COPY          = cp -f$/;"	m
COPY	libs/Makefile	/^COPY          = cp -f$/;"	m
COPY	libs/chemlib/Makefile	/^COPY          = cp -f$/;"	m
COPY	libs/conflib/Makefile	/^COPY          = cp -f$/;"	m
COPY	libs/jacgrid/Makefile	/^COPY          = cp -f$/;"	m
COPY	libs/ligand/Makefile	/^COPY          = cp -f$/;"	m
COPY	libs/map/Makefile	/^COPY          = cp -f$/;"	m
COPY	libs/math/Makefile	/^COPY          = cp -f$/;"	m
COPY	libs/molopt/Makefile	/^COPY          = cp -f$/;"	m
COPY	libs/opengl/Makefile	/^COPY          = cp -f$/;"	m
COPY	libs/opengl/zlib/infcodes.cpp	/^ COPY,          \/* o: copying bytes in window, waiting for space *\/$/;"	e	enum:__anon38	file:
COPY	libs/umtz/Makefile	/^COPY          = cp -f$/;"	m
COPY	libs/util/Makefile	/^COPY          = cp -f$/;"	m
COPY_DIR	Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	apps/MIFit/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	apps/MIFit/core/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	apps/MIFit/jobs/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	apps/MIFit/main/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	apps/MIFit/script/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	apps/MIFit/ui/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	apps/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	libs/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	libs/chemlib/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	libs/conflib/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	libs/jacgrid/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	libs/ligand/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	libs/map/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	libs/math/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	libs/molopt/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	libs/opengl/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	libs/umtz/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_DIR	libs/util/Makefile	/^COPY_DIR      = $(COPY) -r$/;"	m
COPY_FILE	Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	apps/MIFit/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	apps/MIFit/core/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	apps/MIFit/jobs/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	apps/MIFit/main/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	apps/MIFit/script/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	apps/MIFit/ui/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	apps/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	libs/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	libs/chemlib/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	libs/conflib/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	libs/jacgrid/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	libs/ligand/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	libs/map/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	libs/math/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	libs/molopt/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	libs/opengl/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	libs/umtz/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COPY_FILE	libs/util/Makefile	/^COPY_FILE     = $(COPY)$/;"	m
COUNTERCLOCKWISE	libs/chemlib/model.h	39;"	d
COV_GEOM_H	libs/chemlib/CovalentGeom.h	2;"	d
CPARSERR_AllocFail	libs/cmtz/ccp4_parser.c	106;"	d	file:
CPARSERR_CantOpenFile	libs/cmtz/ccp4_parser.c	109;"	d	file:
CPARSERR_ExpOverflow	libs/cmtz/ccp4_parser.c	111;"	d	file:
CPARSERR_ExpUnderflow	libs/cmtz/ccp4_parser.c	112;"	d	file:
CPARSERR_LongLine	libs/cmtz/ccp4_parser.c	108;"	d	file:
CPARSERR_MatToSymop	libs/cmtz/ccp4_parser.c	113;"	d	file:
CPARSERR_MaxTokExceeded	libs/cmtz/ccp4_parser.c	105;"	d	file:
CPARSERR_NoName	libs/cmtz/ccp4_parser.c	110;"	d	file:
CPARSERR_NullPointer	libs/cmtz/ccp4_parser.c	107;"	d	file:
CPARSERR_Ok	libs/cmtz/ccp4_parser.c	104;"	d	file:
CPARSERR_SymopToMat	libs/cmtz/ccp4_parser.c	114;"	d	file:
CPARSER_ERRNO	libs/cmtz/ccp4_parser.c	101;"	d	file:
CPK	apps/MIFit/ui/ViewPointSettings.cpp	/^const int ViewPointSettings::CPK = 2;$/;"	m	class:ViewPointSettings	file:
CPK	apps/MIFit/ui/ViewPointSettings.h	/^    static const int CPK;$/;"	m	class:ViewPointSettings
CR	libs/chemlib/RefmacType.h	/^    const unsigned int CR   = 131;$/;"	m	namespace:RefmacType
CR1	libs/chemlib/RefmacType.h	/^    const unsigned int CR1  = 6;$/;"	m	namespace:RefmacType
CR15	libs/chemlib/RefmacType.h	/^    const unsigned int CR15 = 9;    \/\/Sp2 hybridized, in 5-membered ring, 1 hydrogen$/;"	m	namespace:RefmacType
CR16	libs/chemlib/RefmacType.h	/^    const unsigned int CR16 = 13;   \/\/Sp2 hybridized, in 6-membered ring, with one hydrogen$/;"	m	namespace:RefmacType
CR1H	libs/chemlib/RefmacType.h	/^    const unsigned int CR1H = 8;$/;"	m	namespace:RefmacType
CR2	libs/chemlib/RefmacType.h	/^    const unsigned int CR2  = 7;$/;"	m	namespace:RefmacType
CR5	libs/chemlib/RefmacType.h	/^    const unsigned int CR5  = 10;   \/\/Sp2 hybridized, in 5-membered ring, no hydrogens$/;"	m	namespace:RefmacType
CR55	libs/chemlib/RefmacType.h	/^    const unsigned int CR55 = 12;   \/\/Sp2 hybridized, at ring fusion of 2 five-membered rings$/;"	m	namespace:RefmacType
CR56	libs/chemlib/RefmacType.h	/^    const unsigned int CR56 = 11;   \/\/Sp2 hybridized, at ring fusion of five- and six-membered rings$/;"	m	namespace:RefmacType
CR6	libs/chemlib/RefmacType.h	/^    const unsigned int CR6  = 14;   \/\/Sp2 hybridized, in 6-membered ring, with no hydrogens$/;"	m	namespace:RefmacType
CR66	libs/chemlib/RefmacType.h	/^    const unsigned int CR66 = 15;   \/\/Sp2 hybridized, at ring fusion of 2 six-membered rings$/;"	m	namespace:RefmacType
CREFL	libs/map/CREFL.h	/^class CREFL$/;"	c
CRYSTALCELL	libs/cmtz/ccp4_vars.h	38;"	d
CRYSTALPNAME	libs/cmtz/ccp4_vars.h	37;"	d
CRYSTALXTALNAME	libs/cmtz/ccp4_vars.h	36;"	d
CRYSTMAT_H	libs/math/crystmat.h	2;"	d
CS	libs/chemlib/RefmacType.h	/^    const unsigned int CS   = 98;$/;"	m	namespace:RefmacType
CSP	libs/chemlib/RefmacType.h	/^    const unsigned int CSP  = 1;    \/\/Sp hybridized, no hydrogen$/;"	m	namespace:RefmacType
CSP1	libs/chemlib/RefmacType.h	/^    const unsigned int CSP1 = 2;    \/\/Triple-bonded, with one hydrogen$/;"	m	namespace:RefmacType
CSym	libs/cmtz/ccp4_spg.h	/^namespace CSym {$/;"	n
CT	libs/chemlib/RefmacType.h	/^    const unsigned int CT   = 19;   \/\/Sp3 hybridized, no hydrogens$/;"	m	namespace:RefmacType
CTERMINUS	apps/MIFit/core/RESIDUE.h	16;"	d
CTERMINUS	libs/chemlib/model.h	78;"	d
CTP_LOOP	libs/chemlib/CifData.cpp	76;"	d	file:
CTP_WANTNAME	libs/chemlib/CifData.cpp	74;"	d	file:
CTP_WANTVALUE	libs/chemlib/CifData.cpp	75;"	d	file:
CU	libs/chemlib/RefmacType.h	/^    const unsigned int CU   = 146;$/;"	m	namespace:RefmacType
CUBIC	libs/map/fftsub.cpp	423;"	d	file:
CURRENT	apps/MIFit/ui/CustomJobDialog.h	/^        CURRENT,$/;"	e	enum:CustomJobDialog::ModelMode
CURRENTMIGLWIDGETACTION_H	apps/MIFit/ui/CurrentMIGLWidgetAction.h	2;"	d
CURRENT_SURF_SELECTION_MODE	apps/MIFit/ui/surf.cpp	/^static unsigned int CURRENT_SURF_SELECTION_MODE = MISurfaceSelectionMode::Peptide;$/;"	v	file:
CURRENT_SURF_TYPE	apps/MIFit/ui/surf.cpp	/^static unsigned int CURRENT_SURF_TYPE = MISurfaceType::Molecular;$/;"	v	file:
CURRENT_VIEW	apps/MIFit/ui/surf.cpp	/^static void *CURRENT_VIEW = 0;$/;"	v	file:
CURVELABEL	apps/MIFit/ui/graphlib.h	/^class CURVELABEL$/;"	c
CUSTOM1	apps/MIFit/core/Colors.cpp	/^const int Colors::CUSTOM1 = 11;$/;"	m	class:Colors	file:
CUSTOM1	apps/MIFit/core/Colors.h	/^    static const int CUSTOM1;$/;"	m	class:Colors
CUSTOM10	apps/MIFit/core/Colors.cpp	/^const int Colors::CUSTOM10 = 20;$/;"	m	class:Colors	file:
CUSTOM10	apps/MIFit/core/Colors.h	/^    static const int CUSTOM10;$/;"	m	class:Colors
CUSTOM2	apps/MIFit/core/Colors.cpp	/^const int Colors::CUSTOM2 = 12;$/;"	m	class:Colors	file:
CUSTOM2	apps/MIFit/core/Colors.h	/^    static const int CUSTOM2;$/;"	m	class:Colors
CUSTOM3	apps/MIFit/core/Colors.cpp	/^const int Colors::CUSTOM3 = 13;$/;"	m	class:Colors	file:
CUSTOM3	apps/MIFit/core/Colors.h	/^    static const int CUSTOM3;$/;"	m	class:Colors
CUSTOM4	apps/MIFit/core/Colors.cpp	/^const int Colors::CUSTOM4 = 14;$/;"	m	class:Colors	file:
CUSTOM4	apps/MIFit/core/Colors.h	/^    static const int CUSTOM4;$/;"	m	class:Colors
CUSTOM5	apps/MIFit/core/Colors.cpp	/^const int Colors::CUSTOM5 = 15;$/;"	m	class:Colors	file:
CUSTOM5	apps/MIFit/core/Colors.h	/^    static const int CUSTOM5;$/;"	m	class:Colors
CUSTOM6	apps/MIFit/core/Colors.cpp	/^const int Colors::CUSTOM6 = 16;$/;"	m	class:Colors	file:
CUSTOM6	apps/MIFit/core/Colors.h	/^    static const int CUSTOM6;$/;"	m	class:Colors
CUSTOM7	apps/MIFit/core/Colors.cpp	/^const int Colors::CUSTOM7 = 17;$/;"	m	class:Colors	file:
CUSTOM7	apps/MIFit/core/Colors.h	/^    static const int CUSTOM7;$/;"	m	class:Colors
CUSTOM8	apps/MIFit/core/Colors.cpp	/^const int Colors::CUSTOM8 = 18;$/;"	m	class:Colors	file:
CUSTOM8	apps/MIFit/core/Colors.h	/^    static const int CUSTOM8;$/;"	m	class:Colors
CUSTOM9	apps/MIFit/core/Colors.cpp	/^const int Colors::CUSTOM9 = 19;$/;"	m	class:Colors	file:
CUSTOM9	apps/MIFit/core/Colors.h	/^    static const int CUSTOM9;$/;"	m	class:Colors
CUSTOMJOBDIALOG_H	apps/MIFit/ui/CustomJobDialog.h	2;"	d
CUSTOMJOBPREFERENCES_H	apps/MIFit/ui/CustomJobPreferences.h	2;"	d
CXX	apps/MIFit/core/Makefile	/^CXX           = g++$/;"	m
CXX	apps/MIFit/jobs/Makefile	/^CXX           = g++$/;"	m
CXX	apps/MIFit/main/Makefile	/^CXX           = g++$/;"	m
CXX	apps/MIFit/script/Makefile	/^CXX           = g++$/;"	m
CXX	apps/MIFit/ui/Makefile	/^CXX           = g++$/;"	m
CXX	libs/chemlib/Makefile	/^CXX           = g++$/;"	m
CXX	libs/conflib/Makefile	/^CXX           = g++$/;"	m
CXX	libs/jacgrid/Makefile	/^CXX           = g++$/;"	m
CXX	libs/ligand/Makefile	/^CXX           = g++$/;"	m
CXX	libs/map/Makefile	/^CXX           = g++$/;"	m
CXX	libs/math/Makefile	/^CXX           = g++$/;"	m
CXX	libs/molopt/Makefile	/^CXX           = g++$/;"	m
CXX	libs/opengl/Makefile	/^CXX           = g++$/;"	m
CXX	libs/umtz/Makefile	/^CXX           = g++$/;"	m
CXX	libs/util/Makefile	/^CXX           = g++$/;"	m
CXXFLAGS	apps/MIFit/core/Makefile	/^CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wall -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CXXFLAGS	apps/MIFit/jobs/Makefile	/^CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wall -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CXXFLAGS	apps/MIFit/main/Makefile	/^CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -Wall -W -Wall -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CXXFLAGS	apps/MIFit/script/Makefile	/^CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wall -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CXXFLAGS	apps/MIFit/ui/Makefile	/^CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wall -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CXXFLAGS	libs/chemlib/Makefile	/^CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wall -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CXXFLAGS	libs/conflib/Makefile	/^CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wall -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CXXFLAGS	libs/jacgrid/Makefile	/^CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wall -Wno-unknown-pragmas $(DEFINES)$/;"	m
CXXFLAGS	libs/ligand/Makefile	/^CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wall -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CXXFLAGS	libs/map/Makefile	/^CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wall -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CXXFLAGS	libs/math/Makefile	/^CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wall -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CXXFLAGS	libs/molopt/Makefile	/^CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wall -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CXXFLAGS	libs/opengl/Makefile	/^CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wall -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CXXFLAGS	libs/umtz/Makefile	/^CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wall -Wno-unknown-pragmas $(DEFINES)$/;"	m
CXXFLAGS	libs/util/Makefile	/^CXXFLAGS      = -pipe -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -O2 -fPIC -Wall -W -Wall -Wno-unknown-pragmas -D_REENTRANT $(DEFINES)$/;"	m
CYAN	apps/MIFit/core/Colors.cpp	/^const int Colors::CYAN = 4;$/;"	m	class:Colors	file:
CYAN	apps/MIFit/core/Colors.h	/^    static const int CYAN;$/;"	m	class:Colors
CYCLEIZE	libs/chemlib/MIMolDictionary.h	/^        int CYCLEIZE; \/\/ currently, there's no way to set this$/;"	m	class:chemlib::MIMolDictionary
C_f	libs/map/fftlib.cpp	/^typedef VOID C_f;   \/* complex function *\/$/;"	t	file:
C_fp	libs/map/fftlib.cpp	/^typedef \/* Complex *\/ VOID (*C_fp)(...);$/;"	t	file:
CalcAtomAngle	libs/chemlib/mol_util.cpp	/^double CalcAtomAngle(const MIAtom &a1, const MIAtom &a2, const MIAtom &a3)$/;"	f	namespace:chemlib
CalcAtomTorsion	libs/chemlib/mol_util.cpp	/^double CalcAtomTorsion(MIAtom *na, MIAtom *nb, MIAtom *nc, MIAtom *nd)$/;"	f	namespace:chemlib
CalcAtomTorsion	libs/chemlib/mol_util.cpp	/^double CalcAtomTorsion(const MIAtom *na, const MIAtom *nb, const MIAtom *nc, const MIAtom *nd)$/;"	f	namespace:chemlib
CalcBestHDistance	libs/chemlib/atom_util.cpp	/^float CalcBestHDistance(const MIAtom *donor,$/;"	f	namespace:chemlib
CalcBulkSolvent	libs/map/sfcalc.cpp	/^int CalcBulkSolvent(CREFL refl[], int nrefl, CMapHeaderBase *mh)$/;"	f
CalcDirection	libs/chemlib/Substituent.cpp	/^void Substituent::CalcDirection()$/;"	f	class:chemlib::Substituent
CalcDistance	apps/MIFit/ui/surf.cpp	/^    bool CalcDistance(const std::vector<Molecule*> &mols,$/;"	f	class:MISurface
CalcGradNorm	libs/chemlib/math_util.h	/^    inline double CalcGradNorm(T *u, T *v, T *w)$/;"	f	namespace:chemlib
CalcInitialCoordinates	libs/conflib/CoordGenerator.cpp	/^void CoordGenerator::CalcInitialCoordinates(MIAtom *atom)$/;"	f	class:CoordGenerator
CalcNormal	libs/chemlib/transform_util.cpp	/^void CalcNormal(MIAtomList &ref, std::vector<double> &normal)$/;"	f	namespace:chemlib
CalcRMS	libs/map/EMapBase.cpp	/^float EMapBase::CalcRMS()$/;"	f	class:EMapBase
CalcRotMatrix	libs/chemlib/transform_util.cpp	/^void CalcRotMatrix(double *rot_axis,$/;"	f	namespace:chemlib
CalcRotMatrix	libs/chemlib/transform_util.cpp	/^void CalcRotMatrix(double vx,$/;"	f	namespace:chemlib
CalcRotMatrix	libs/chemlib/transform_util.cpp	/^void CalcRotMatrix(std::vector<double> rot_axis,$/;"	f	namespace:chemlib
CalcRotationToZAxis	libs/chemlib/transform_util.cpp	/^void CalcRotationToZAxis(std::vector<double> &normal,$/;"	f	namespace:chemlib
CalcSolventMask	libs/map/EMapBase.cpp	/^bool EMapBase::CalcSolventMask(float percentSolvent, float radius)$/;"	f	class:EMapBase
CalcStrainAngle	libs/chemlib/CovalentGeom.cpp	/^void CovalentGeometry::CalcStrainAngle(Angle *angle)$/;"	f	class:chemlib::CovalentGeometry
CalcTetraVolume	libs/chemlib/math_util.h	/^    inline double CalcTetraVolume(double d12, double d13, double d14, double d23,$/;"	f	namespace:chemlib
CalcTetraVolume	libs/chemlib/math_util.h	/^    inline double CalcTetraVolume(std::vector<double> &dists)$/;"	f	namespace:chemlib
CalcTheta	libs/chemlib/Substituent.cpp	/^void Substituent::CalcTheta()$/;"	f	class:chemlib::Substituent
Camera	libs/opengl/Camera.cpp	/^Camera::Camera()$/;"	f	class:mi::opengl::Camera
Camera	libs/opengl/Camera.h	/^        class Camera : public Viewpoint$/;"	c	namespace:mi::opengl
CanDoMapType	libs/map/EMapBase.cpp	/^bool EMapBase::CanDoMapType(unsigned int type)$/;"	f	class:EMapBase
CanRedo	libs/molopt/MIMolOpt.h	/^    bool CanRedo()$/;"	f	class:MIMolOpt
CanUndo	libs/molopt/MIMolOpt.h	/^    bool CanUndo()$/;"	f	class:MIMolOpt
Cancel	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::Cancel()$/;"	f	class:MIMolOpt
Card	libs/chemlib/Chiral.cpp	/^void Chiral::Card(std::string &s)$/;"	f	class:chemlib::Chiral
Card	libs/chemlib/Constraint.cpp	/^void Improper::Card(std::string &s)$/;"	f	class:chemlib::Improper
Card	libs/chemlib/Constraint.cpp	/^void Plane::Card(std::string &s)$/;"	f	class:chemlib::Plane
Card	libs/chemlib/Constraint.cpp	/^void Torsion::Card(std::string &s)$/;"	f	class:chemlib::Torsion
CartesianToRelative	libs/chemlib/transform_util.cpp	/^void CartesianToRelative(const MIAtom *ref1,$/;"	f	namespace:chemlib
CellTableT	libs/jacgrid/plane.cpp	/^} CellTableT;$/;"	t	typeref:struct:__anon31	file:
Center	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::Center(float &x, float &y, float &z)$/;"	f	class:chemlib::MIMoleculeBase
CenterAtResidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::CenterAtResidue(const Residue *res)$/;"	f	class:MIGLWidget
CenterOfMass	libs/chemlib/atom_util.cpp	/^void CenterOfMass(const MIAtomList &atoms, double *com)$/;"	f	namespace:chemlib
CharData	libs/opengl/Text.cpp	/^    struct CharData$/;"	s	namespace:__anon45	file:
ChargeCode	libs/chemlib/molfile.cpp	/^int molfile::ChargeCode(int charge)$/;"	f	class:chemlib::molfile
CheckAngle	libs/chemlib/CovalentGeom.cpp	/^float CheckAngle(MIAtom *atom1, MIAtom *atom2, std::vector<Angle> &angles)$/;"	f	namespace:chemlib
CheckBumps	libs/conflib/bumps.cpp	/^bool CheckBumps(Residue*, std::vector<Bond> &bumps)$/;"	f	namespace:conflib
CheckCenter	apps/MIFit/core/Molecule.cpp	/^bool Molecule::CheckCenter(float x, float y, float z)$/;"	f	class:Molecule
CheckCenter	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::CheckCenter()$/;"	f	class:MIGLWidget
CheckCenter	libs/map/EMapBase.cpp	/^void EMapBase::CheckCenter(float x, float y, float z)$/;"	f	class:EMapBase
CheckConf	libs/conflib/ConfIterator.cpp	/^bool ConfEnumerator::CheckConf()$/;"	f	class:conflib::ConfEnumerator
CheckConf	libs/conflib/ConfIterator.cpp	/^bool ConfSampler::CheckConf()$/;"	f	class:conflib::ConfSampler
CheckConsistency	libs/chemlib/Dictionary.cpp	/^bool LigDictionary::CheckConsistency(const std::vector<int> &bond_indices)$/;"	f	class:chemlib::LigDictionary
CheckForAbort	apps/MIFit/ui/Application.cpp	/^bool MIBusyManager::CheckForAbort()$/;"	f	class:MIBusyManager
CheckForAbort	apps/MIFit/ui/WaitCursor.cpp	/^bool WaitCursor::CheckForAbort()$/;"	f	class:WaitCursor
CheckHash	apps/MIFit/ui/surf.cpp	/^    bool CheckHash(const std::vector<Molecule*> &mols, unsigned int count)$/;"	f	class:MISurface
Chiral	libs/chemlib/Chiral.h	/^    class Chiral$/;"	c	namespace:chemlib
ChiralAtomKeyIndices	libs/chemlib/CifData.cpp	/^ChiralAtomKeyIndices::ChiralAtomKeyIndices(std::vector<std::string> &names)$/;"	f	class:ChiralAtomKeyIndices
ChiralAtomKeyIndices	libs/chemlib/CifData.h	/^class ChiralAtomKeyIndices$/;"	c
ChiralCode	libs/chemlib/molfile.cpp	/^int molfile::ChiralCode(const MIAtom *patom, const Residue &res, const vector<Bond> &bonds)$/;"	f	class:chemlib::molfile
ChiralDict	libs/chemlib/MIMolDictionary.h	/^        std::vector<CHIRALDICT> ChiralDict;$/;"	m	class:chemlib::MIMolDictionary
ChiralKeyIndices	libs/chemlib/CifData.cpp	/^ChiralKeyIndices::ChiralKeyIndices(std::vector<std::string> &names)$/;"	f	class:ChiralKeyIndices
ChiralKeyIndices	libs/chemlib/CifData.h	/^class ChiralKeyIndices$/;"	c
Chirals	libs/chemlib/Constraint.h	/^        std::vector<Chiral> Chirals;$/;"	m	class:chemlib::ConstraintList
ChooseActiveMap	apps/MIFit/ui/Displaylist.cpp	/^void Displaylist::ChooseActiveMap()$/;"	f	class:Displaylist
CifDataBlock	libs/chemlib/CifData.cpp	/^CifDataBlock::CifDataBlock()$/;"	f	class:CifDataBlock
CifDataBlock	libs/chemlib/CifData.h	/^class CifDataBlock$/;"	c
CifLoop	libs/chemlib/CifData.cpp	/^CifLoop::CifLoop()$/;"	f	class:CifLoop
CifLoop	libs/chemlib/CifData.h	/^class CifLoop$/;"	c
CifParser	libs/chemlib/CifParser.cpp	/^CifParser::CifParser(FILE *fp)$/;"	f	class:CifParser
CifParser	libs/chemlib/CifParser.h	/^class CifParser$/;"	c
CifTokenizer	libs/chemlib/CifParser.cpp	/^CifTokenizer::CifTokenizer(std::string input)$/;"	f	class:CifTokenizer
CifTokenizer	libs/chemlib/CifParser.h	/^class CifTokenizer$/;"	c
Circle	apps/MIFit/ui/graphlib.cpp	526;"	d	file:
Circle	libs/opengl/Circle.cpp	/^Circle::Circle(float radius)$/;"	f	class:mi::opengl::Circle
Circle	libs/opengl/Circle.cpp	/^Circle::Circle(float radius, float angle)$/;"	f	class:mi::opengl::Circle
Circle	libs/opengl/Circle.h	/^        class Circle$/;"	c	namespace:mi::opengl
CircleAtoms	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::CircleAtoms(MIAtom **atoms, int natoms)$/;"	f	class:GLRenderer
CleanAll	apps/MIFit/jobs/BatchJobManager.cpp	/^void BatchJobManager::CleanAll()$/;"	f	class:BatchJobManager
CleanAll	apps/MIFit/ui/JobsView.cpp	/^void JobsTree::CleanAll()$/;"	f	class:JobsTree
CleanSucc	apps/MIFit/jobs/BatchJobManager.cpp	/^void BatchJobManager::CleanSucc()$/;"	f	class:BatchJobManager
CleanSuccessful	apps/MIFit/ui/JobsView.cpp	/^void JobsTree::CleanSuccessful()$/;"	f	class:JobsTree
CleanUp2D	libs/chemlib/Ligand.cpp	/^void Ligand::CleanUp2D()$/;"	f	class:chemlib::Ligand
Clear	apps/MIFit/core/Annotation.h	/^    void Clear()$/;"	f	class:Annotation
Clear	libs/chemlib/ANGLE.h	/^        void Clear()$/;"	f	class:chemlib::ANGLE
Clear	libs/chemlib/Aromatic.cpp	/^void Aromatic::Clear()$/;"	f	class:chemlib::Aromatic
Clear	libs/chemlib/Bond.h	/^        void Clear()$/;"	f	class:chemlib::Bond
Clear	libs/chemlib/CHIRALDICT.h	/^        void Clear()$/;"	f	class:chemlib::CHIRAL
Clear	libs/chemlib/CHIRALDICT.h	/^        void Clear()$/;"	f	class:chemlib::CHIRALDICT
Clear	libs/chemlib/Chiral.cpp	/^void Chiral::Clear()$/;"	f	class:chemlib::Chiral
Clear	libs/chemlib/CifData.cpp	/^void CifDataBlock::Clear()$/;"	f	class:CifDataBlock
Clear	libs/chemlib/CifData.cpp	/^void CifLoop::Clear()$/;"	f	class:CifLoop
Clear	libs/chemlib/Constraint.cpp	/^void ConstraintList::Clear()$/;"	f	class:chemlib::ConstraintList
Clear	libs/chemlib/Constraint.cpp	/^void Improper::Clear()$/;"	f	class:chemlib::Improper
Clear	libs/chemlib/Constraint.cpp	/^void Plane::Clear()$/;"	f	class:chemlib::Plane
Clear	libs/chemlib/Constraint.cpp	/^void Torsion::Clear()$/;"	f	class:chemlib::Torsion
Clear	libs/chemlib/GeomSaver.cpp	/^void GeomSaver::Clear()$/;"	f	class:chemlib::GeomSaver
Clear	libs/chemlib/MIMolDictionary.cpp	/^void MIMolDictionary::Clear()$/;"	f	class:chemlib::MIMolDictionary
Clear	libs/chemlib/PLANE.h	/^        void Clear()$/;"	f	class:chemlib::PLANE
Clear	libs/chemlib/PLANE.h	/^        void Clear()$/;"	f	class:chemlib::PLANEDICT
Clear	libs/chemlib/RingSystem.cpp	/^void RingSystem::Clear()$/;"	f	class:chemlib::RingSystem
Clear	libs/chemlib/Substituent.cpp	/^void Substituent::Clear()$/;"	f	class:chemlib::Substituent
Clear	libs/chemlib/TORSION.h	/^        void Clear()$/;"	f	class:chemlib::TORSDICT
Clear	libs/chemlib/TORSION.h	/^        void Clear()$/;"	f	class:chemlib::TORSION
Clear	libs/conflib/LigRefiner.cpp	/^void LigRefiner::Clear()$/;"	f	class:LigRefiner
Clear	libs/jacgrid/grid.cpp	/^void gridT::Clear()$/;"	f	class:gridT
Clear	libs/jacgrid/surface.cpp	/^void surfaceT::Clear()$/;"	f	class:surfaceT
ClearAtomStack	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::ClearAtomStack()$/;"	f	class:MIGLWidget
ClearBondOrders	libs/chemlib/Ligand.cpp	/^void Ligand::ClearBondOrders()$/;"	f	class:chemlib::Ligand
ClearCharges	libs/chemlib/atom_util.cpp	/^void ClearCharges(const Residue *res)$/;"	f	namespace:chemlib
ClearContacts	apps/MIFit/ui/Displaylist.h	/^inline void Displaylist::ClearContacts()$/;"	f	class:Displaylist
ClearCurrentSurface	apps/MIFit/ui/Displaylist.cpp	/^void Displaylist::ClearCurrentSurface()$/;"	f	class:Displaylist
ClearData	apps/MIFit/ui/RamaPlot.cpp	/^void RamaPlotMgr::ClearData()$/;"	f	class:RamaPlotMgr
ClearHbonds	libs/chemlib/MIMoleculeBase.h	/^        void ClearHbonds()$/;"	f	class:chemlib::MIMoleculeBase
ClearHybrid	libs/chemlib/MIAtom.cpp	/^void MIAtom::ClearHybrid()$/;"	f	class:chemlib::MIAtom
ClearLabels	apps/MIFit/ui/Displaylist.cpp	/^void Displaylist::ClearLabels()$/;"	f	class:Displaylist
ClearLinks	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::ClearLinks()$/;"	f	class:chemlib::MIMoleculeBase
ClearOrder	libs/chemlib/Bond.cpp	/^void Bond::ClearOrder()$/;"	f	class:chemlib::Bond
ClearResidueBuffer	apps/MIFit/ui/Application.cpp	/^void Application::ClearResidueBuffer()$/;"	f	class:Application
ClearRibbons	apps/MIFit/core/Molecule.cpp	/^void Molecule::ClearRibbons()$/;"	f	class:Molecule
ClearSymmList	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::ClearSymmList()$/;"	f	class:chemlib::MIMoleculeBase
ClearTorsion	libs/chemlib/MIMoleculeBase.cpp	/^bool MIMoleculeBase::ClearTorsion(void)$/;"	f	class:chemlib::MIMoleculeBase
ClearVus	apps/MIFit/ui/Displaylist.h	/^inline void Displaylist::ClearVus()$/;"	f	class:Displaylist
ClipCategory	libs/chemlib/CifData.cpp	/^void ClipCategory(std::vector<std::string> &names)$/;"	f
ClockTick	apps/MIFit/ui/MIGLWidget.h	/^    int ClockTick;$/;"	m	class:MIGLWidget
Close	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::Close()$/;"	f	class:MIGLWidget
Cluster	apps/MIFit/core/clusterList.h	/^class Cluster$/;"	c
ClusterList	apps/MIFit/core/clusterList.cpp	/^ClusterList::ClusterList()$/;"	f	class:ClusterList
ClusterList	apps/MIFit/core/clusterList.h	/^class ClusterList$/;"	c
ClusterSize	apps/MIFit/ui/MIGLWidget.h	/^    unsigned int ClusterSize;$/;"	m	class:MIGLWidget
CodeDistance	libs/conflib/ConfFingerprint.cpp	/^int ConfFingerprint::CodeDistance(const Bond &dist)$/;"	f	class:ConfFingerprint
Color	apps/MIFit/ui/GenericDataDialog.h	/^        Color,$/;"	e	enum:GenericDataDialog::FieldType
ColorByAtomType	apps/MIFit/ui/surf.cpp	/^    bool ColorByAtomType(const std::vector<Molecule*> &mols,$/;"	f	class:MISurface
ColorIndex	apps/MIFit/ui/GenericDataDialog.h	/^        ColorIndex$/;"	e	enum:GenericDataDialog::FieldType
ColorIndexButton	apps/MIFit/ui/GenericDataDialog.cpp	/^    ColorIndexButton(QWidget *parent = 0)$/;"	f	class:__anon15::ColorIndexButton
ColorIndexButton	apps/MIFit/ui/GenericDataDialog.cpp	/^class ColorIndexButton$/;"	c	namespace:__anon15	file:
ColorItem	apps/MIFit/ui/ModelsView.cpp	/^void AtomsTree::ColorItem()$/;"	f	class:AtomsTree
ColorItem	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::ColorItem()$/;"	f	class:ModelsTree
ColorItem	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::ColorItem()$/;"	f	class:ResiduesTree
ColorModel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::ColorModel(Molecule *node)$/;"	f	class:MIGLWidget
ColorValues	apps/MIFit/ui/BValueColors.h	/^    struct ColorValues$/;"	s	class:BValueColors
Colors	apps/MIFit/core/Colors.h	/^class Colors$/;"	c
Colors_NCOLORS	apps/MIFit/core/Colors.h	/^static const int Colors_NCOLORS = 41;$/;"	v
Colors_NUMBERCOLORS	apps/MIFit/core/Colors.h	/^static const int Colors_NUMBERCOLORS = 41;$/;"	v
Colors_NUMBERPALETTE	apps/MIFit/core/Colors.h	/^static const int Colors_NUMBERPALETTE = 410;$/;"	v
Colors_NumBValueColors	apps/MIFit/core/Colors.h	/^const int Colors_NumBValueColors = 10;$/;"	v
Combo	apps/MIFit/ui/GenericDataDialog.h	/^        Combo,$/;"	e	enum:GenericDataDialog::FieldType
Commands	apps/MIFit/core/Annotation.h	/^        Commands,$/;"	e	enum:Annotation::__anon1
Complete	libs/chemlib/SmilesReader.cpp	/^void SmiRingClosures::Complete(int halfbond)$/;"	f	class:chemlib::SmiRingClosures
ComputeScale	libs/map/sfcalc.cpp	/^float ComputeScale(std::vector<CREFL> &refl, CMapHeaderBase *mh)$/;"	f
ComputeScale2	libs/map/sfcalc.cpp	/^float ComputeScale2(CREFL refl[], int nrefl, CMapHeaderBase *mh)$/;"	f
ConfEnumerator	libs/conflib/ConfIterator.cpp	/^ConfEnumerator::ConfEnumerator(Residue *res, vector<Bond> &bonds, vector<TORSION> &torsions)$/;"	f	class:conflib::ConfEnumerator
ConfEnumerator	libs/conflib/ConfIterator.h	/^    class ConfEnumerator : public ConfIterator$/;"	c	namespace:conflib
ConfFingerprint	libs/conflib/ConfFingerprint.cpp	/^ConfFingerprint::ConfFingerprint(const vector<Bond> &distances)$/;"	f	class:ConfFingerprint
ConfFingerprint	libs/conflib/ConfFingerprint.h	/^    class ConfFingerprint$/;"	c	namespace:conflib
ConfIterator	libs/conflib/ConfIterator.h	/^    class ConfIterator$/;"	c	namespace:conflib
ConfSampler	libs/conflib/ConfIterator.cpp	/^ConfSampler::ConfSampler(Residue *res, vector<Bond> &bonds, vector<TORSION> &torsions)$/;"	f	class:conflib::ConfSampler
ConfSampler	libs/conflib/ConfIterator.h	/^    class ConfSampler : public ConfIterator$/;"	c	namespace:conflib
ConfSaver	libs/chemlib/ConfSaver.cpp	/^ConfSaver::ConfSaver(Residue *res)$/;"	f	class:chemlib::ConfSaver
ConfSaver	libs/chemlib/ConfSaver.h	/^    class ConfSaver$/;"	c	namespace:chemlib
Connect	libs/chemlib/Ligand.cpp	/^void Ligand::Connect(const Bond &connect)$/;"	f	class:chemlib::Ligand
Connect	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::Connect(Bond &connect)$/;"	f	class:chemlib::MIMoleculeBase
ConnectTo	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::ConnectTo(MIMoleculeBase *mol)$/;"	f	class:MIMolOpt
Console	apps/MIFit/python/Console.cpp	/^Console::Console(QWidget *parent)$/;"	f	class:Console
Console	apps/MIFit/python/Console.cpp	/^Console::Console(const QString &text, QWidget *parent)$/;"	f	class:Console
Console	apps/MIFit/python/Console.h	/^class Console : public QTextEdit$/;"	c
ConstrainCalpha	libs/chemlib/MIMolDictionary.cpp	/^void MIMolDictionary::ConstrainCalpha(Residue *RefiRes, int nRefiRes)$/;"	f	class:chemlib::MIMolDictionary
ConstraintList	libs/chemlib/Constraint.h	/^    class ConstraintList$/;"	c	namespace:chemlib
Contacts	apps/MIFit/ui/Displaylist.h	/^    std::vector<CONTACT> Contacts;$/;"	m	class:Displaylist
Contains	apps/MIFit/ui/Displaylist.cpp	/^bool Contains(const CONTACT &c)$/;"	f
Contains	libs/chemlib/Aromatic.cpp	/^bool Aromatic::Contains(const Bond *query) const$/;"	f	class:chemlib::Aromatic
Contains	libs/chemlib/Aromatic.cpp	/^bool Aromatic::Contains(const MIAtom *query) const$/;"	f	class:chemlib::Aromatic
Contains	libs/chemlib/Box.cpp	/^bool Box::Contains(const MIAtom &atom) const$/;"	f	class:chemlib::Box
Contains	libs/chemlib/MIMoleculeBase.cpp	/^bool MIMoleculeBase::Contains(Residue *test)$/;"	f	class:chemlib::MIMoleculeBase
Contains	libs/chemlib/RingSystem.cpp	/^bool RingSystem::Contains(const Bond *query) const$/;"	f	class:chemlib::RingSystem
Contains	libs/chemlib/RingSystem.cpp	/^bool RingSystem::Contains(const MIAtom *query) const$/;"	f	class:chemlib::RingSystem
ContainsAdjacentAtoms	libs/chemlib/MIMolDictionary.cpp	/^static bool ContainsAdjacentAtoms(const TORSDICT &t)$/;"	f	namespace:chemlib
ContainsAtom	libs/chemlib/atom_util.h	/^    struct ContainsAtom : public std::binary_function<Bond, const MIAtom*, bool>$/;"	s	namespace:chemlib
ContainsAtoms	libs/chemlib/atom_util.h	/^    struct ContainsAtoms : public std::binary_function<Bond, std::pair<const MIAtom*, MIAtom*>, bool>$/;"	s	namespace:chemlib
ContainsCoAtoms	libs/chemlib/atom_util.h	/^    struct ContainsCoAtoms : public std::binary_function<Bond, std::pair<const MIAtom*, const MIAtom*>, bool>$/;"	s	namespace:chemlib
ContainsHvyNabor	libs/chemlib/atom_util.h	/^    struct ContainsHvyNabor : public std::binary_function<Bond, const MIAtom*, bool>$/;"	s	namespace:chemlib
ContainsNewAtom	libs/chemlib/atom_util.h	/^    struct ContainsNewAtom : public std::binary_function<Bond, const MIAtom*, bool>$/;"	s	namespace:chemlib
Contour	libs/jacgrid/plane.cpp	/^void JACPlane::Contour(float threshold, VertexSender &vs)$/;"	f	class:JACPlane
Contour	libs/map/wxWweave.cpp	/^void EMapBase::Contour(float center[3], MIAtomList *current)$/;"	f	class:EMapBase
ContourGrid	libs/jacgrid/plane.cpp	/^void JACPlane::ContourGrid(const gridT &grid, char axis,$/;"	f	class:JACPlane
ContourLevels	apps/MIFit/ui/EMap.cpp	/^bool EMap::ContourLevels()$/;"	f	class:EMap
ContourMethod	libs/map/MapSettingsBase.h	/^    int ContourMethod;$/;"	m	class:MapSettingsBase
ContourOptionsWidget	apps/MIFit/ui/ContourOptionsWidget.cpp	/^ContourOptionsWidget::ContourOptionsWidget(QWidget *parent, bool prefsMode)$/;"	f	class:ContourOptionsWidget
ContourOptionsWidget	apps/MIFit/ui/ContourOptionsWidget.h	/^class ContourOptionsWidget : public QWidget, public Ui::ContourOptionsWidget$/;"	c
ContourOptionsWidget	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    class ContourOptionsWidget: public Ui_ContourOptionsWidget {};$/;"	c	namespace:Ui
ConvertToDistance	libs/chemlib/Constraint.cpp	/^double Improper::ConvertToDistance(const ConstraintList &geom) const$/;"	f	class:chemlib::Improper
ConvertToDistance	libs/chemlib/CovalentGeom.cpp	/^void CovalentGeometry::ConvertToDistance(Angle &angle, float d1, float d2)$/;"	f	class:chemlib::CovalentGeometry
ConvertToGeomSaver	libs/chemlib/ConfSaver.cpp	/^void ConfSaver::ConvertToGeomSaver(GeomSaver &gs, MIMoleculeBase *model)$/;"	f	class:chemlib::ConfSaver
CoordGenerator	libs/conflib/CoordGenerator.h	/^        CoordGenerator(chemlib::Ligand *mol, chemlib::Monomer *res)$/;"	f	class:conflib::CoordGenerator
CoordGenerator	libs/conflib/CoordGenerator.h	/^    class CoordGenerator$/;"	c	namespace:conflib
CopyChiral	libs/ligand/LigPostProcessor.cpp	/^void CopyChiral(CHIRALDICT *chiral, const CHIRAL &chiralSource)$/;"	f
CopyItem	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::CopyItem()$/;"	f	class:ModelsTree
CopyItem	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::CopyItem()$/;"	f	class:ResiduesTree
CopyPlane	libs/ligand/LigPostProcessor.cpp	/^void CopyPlane(PLANEDICT *plane, const PLANE &planeSource)$/;"	f
CopyResList	libs/chemlib/Residue.cpp	/^Residue *CopyResList(const Residue *oldres)$/;"	f	namespace:chemlib
CopyResidueBuffer	apps/MIFit/ui/Application.cpp	/^bool Application::CopyResidueBuffer(const Residue *buffer)$/;"	f	class:Application
CopyTorsion	libs/ligand/LigPostProcessor.cpp	/^void CopyTorsion(TORSDICT *torsion, const TORSION &torSource)$/;"	f
CorrScore	libs/map/EMapBase.cpp	/^float EMapBase::CorrScore(MIAtomList atoms)$/;"	f	class:EMapBase
CosVectorAngle	libs/chemlib/math_util.h	/^    inline double CosVectorAngle(double v1[3], double v2[3])$/;"	f	namespace:chemlib
Count	apps/MIFit/ui/surf.cpp	/^    unsigned int Count()$/;"	f	class:SuperSurface
CountAromaticBonds	libs/chemlib/mol_util.cpp	/^int CountAromaticBonds(const MIAtom &atom, const std::vector<Bond> &bonds)$/;"	f	namespace:chemlib
CountAtoms	apps/MIFit/ui/ModelsView.cpp	/^unsigned int CountAtoms(Molecule *model)$/;"	f
CountAtoms	libs/chemlib/SmilesReader.cpp	/^int SmilesReader::CountAtoms()$/;"	f	class:chemlib::SmilesReader
CountAtomsByName	libs/chemlib/Residue.cpp	/^int CountAtomsByName(const char *atom_name, const Residue *res)$/;"	f	namespace:chemlib
CountConformers	libs/chemlib/MIMolDictionary.cpp	/^int MIMolDictionary::CountConformers(const std::string &type) const$/;"	f	class:chemlib::MIMolDictionary
CountCyclicBonds	libs/chemlib/MIAtom.cpp	/^int MIAtom::CountCyclicBonds() const$/;"	f	class:chemlib::MIAtom
CountPlaced	libs/conflib/CoordGenerator.cpp	/^int CoordGenerator::CountPlaced()$/;"	f	class:CoordGenerator
CountPlaced	libs/conflib/CoordGenerator.cpp	/^int CoordGenerator::CountPlaced(Plane *plane)$/;"	f	class:CoordGenerator
CountRepetitions	libs/chemlib/SmilesReader.cpp	/^int SmilesReader::CountRepetitions(char repeated)$/;"	f	class:chemlib::SmilesReader
CountResBonds	libs/chemlib/mol_util.cpp	/^int CountResBonds(const Residue &res, const std::vector<Bond> &bonds)$/;"	f	namespace:chemlib
CovalentGeometry	libs/chemlib/CovalentGeom.cpp	/^CovalentGeometry::CovalentGeometry(Ligand *mol, const Monomer *res)$/;"	f	class:chemlib::CovalentGeometry
CovalentGeometry	libs/chemlib/CovalentGeom.h	/^    class CovalentGeometry$/;"	c	namespace:chemlib
CovalentRadius	libs/chemlib/mol_util.cpp	/^float CovalentRadius(int atomic_number)$/;"	f	namespace:chemlib
Create	libs/chemlib/SmilesReader.cpp	/^void SmiRingClosures::Create(int *halfbond)$/;"	f	class:chemlib::SmiRingClosures
CreateAxis	apps/MIFit/core/Helix.cpp	/^bool Helix::CreateAxis(int axis_len, double caA[4][3], double caB[4][3])$/;"	f	class:Helix
CreateBond	libs/chemlib/PDB.cpp	/^void PDB::CreateBond(MIAtom *atom1, MIAtom *atom2, vector<Bond> &bonds)$/;"	f	class:chemlib::PDB
CreateContours	apps/MIFit/ui/RamaPlot.cpp	/^void RamaPlotMgr::CreateContours()$/;"	f	class:RamaPlotMgr
CreateCylinder	apps/MIFit/core/Helix.cpp	/^bool Helix::CreateCylinder()$/;"	f	class:Helix
CreateData	apps/MIFit/ui/RamaPlot.cpp	/^void RamaPlotMgr::CreateData()$/;"	f	class:RamaPlotMgr
CreateDictAngles	libs/chemlib/MIMolDictionary.cpp	/^bool CreateDictAngles(Residue *res, const multimap<std::string, ANGLEDICT> &angleMap)$/;"	f	namespace:chemlib
CreateDictBonds	libs/chemlib/MIMolDictionary.cpp	/^bool CreateDictBonds(Residue *res, const multimap<std::string, BondDICT> &bondMap)$/;"	f	namespace:chemlib
CreateJob	apps/MIFit/jobs/BatchJobManager.cpp	/^BatchJob *BatchJobManager::CreateJob()$/;"	f	class:BatchJobManager
CreateMap	apps/MIFit/ui/MIGLWidget.cpp	/^static EMap *CreateMap(Displaylist *dl,$/;"	f	file:
CreateMonomerTree	libs/chemlib/mmCIF.cpp	/^bool mmCIF::CreateMonomerTree(FILE *fp, std::string &resname, MIAtom *prev,$/;"	f	class:chemlib::mmCIF
Cross	apps/MIFit/ui/graphlib.cpp	520;"	d	file:
CrossVects	libs/chemlib/math_util.h	/^    inline void CrossVects(double a[3], double b[3], double c[3])$/;"	f	namespace:chemlib
Cross_and_dot_3D	libs/chemlib/math_util.h	/^    inline float Cross_and_dot_3D(double *v0, double *v1, double *v2)$/;"	f	namespace:chemlib
Cross_and_dot_3D	libs/chemlib/math_util.h	/^    inline float Cross_and_dot_3D(float *v0, float *v1, float *v2)$/;"	f	namespace:chemlib
Crystal	libs/map/EMapBase.h	/^    std::string Crystal;$/;"	m	class:EMapBase
CrystalData	apps/MIFit/ui/Application.h	/^    std::string CrystalData;$/;"	m	class:Application
CtoF	libs/map/CMapHeaderBase.h	/^    void CtoF(float *x, float *y, float *z) const$/;"	f	class:CMapHeaderBase
CullingResult	libs/opengl/Frustum.h	/^            enum CullingResult$/;"	g	class:mi::opengl::Frustum
CurrentAnnotation	apps/MIFit/ui/MIGLWidget.h	/^    Annotation *CurrentAnnotation;$/;"	m	class:MIGLWidget
CurrentAtoms	apps/MIFit/ui/DictEditCanvas.h	/^    std::vector<chemlib::MIAtom*> CurrentAtoms;$/;"	m	class:DictEditCanvas
CurrentAtoms	apps/MIFit/ui/MIGLWidget.h	/^    std::vector<chemlib::MIAtom*> CurrentAtoms;$/;"	m	class:MIGLWidget
CurrentAtoms	libs/map/EMapBase.h	/^    std::vector<chemlib::MIAtom*> *CurrentAtoms;$/;"	m	class:EMapBase
CurrentDots	apps/MIFit/ui/Displaylist.h	/^    std::vector<SURFDOT> CurrentDots;$/;"	m	class:Displaylist
CurrentItem	apps/MIFit/ui/Displaylist.h	/^inline Molecule*Displaylist::CurrentItem()$/;"	f	class:Displaylist
CurrentMIGLWidgetAction	apps/MIFit/ui/CurrentMIGLWidgetAction.cpp	/^CurrentMIGLWidgetAction::CurrentMIGLWidgetAction(const QString& text, const QString& statusTip, QMenu *menu,$/;"	f	class:CurrentMIGLWidgetAction
CurrentMIGLWidgetAction	apps/MIFit/ui/CurrentMIGLWidgetAction.h	/^class CurrentMIGLWidgetAction : public QAction$/;"	c
CurrentMap	libs/molopt/MIMolOpt.h	/^    EMapBase *CurrentMap;$/;"	m	class:MIMolOpt
CurrentModel	libs/conflib/LigRefiner.h	/^        chemlib::Ligand *CurrentModel;$/;"	m	class:conflib::LigRefiner
CurrentModel	libs/molopt/MIMolOpt.h	/^    chemlib::MIMoleculeBase *CurrentModel;$/;"	m	class:MIMolOpt
CurrentSolidSurface	apps/MIFit/ui/MIGLWidget.h	/^    unsigned int CurrentSolidSurface()$/;"	f	class:MIGLWidget
CurrentValence	libs/chemlib/mol_util.cpp	/^int CurrentValence(const MIAtom &atom,$/;"	f	namespace:chemlib
CursorArea	apps/MIFit/ui/CursorArea.cpp	/^CursorArea::CursorArea(QDeclarativeItem *parent)$/;"	f	class:CursorArea
CursorArea	apps/MIFit/ui/CursorArea.h	/^class CursorArea : public QDeclarativeItem$/;"	c
CursorArea_h	apps/MIFit/ui/CursorArea.h	2;"	d
CustomJob	apps/MIFit/jobs/BatchJobManager.cpp	/^    CustomJob()$/;"	f	struct:CustomJob
CustomJob	apps/MIFit/jobs/BatchJobManager.cpp	/^    CustomJob(const QString &menuName, const QString &jobName, const QString &executable, const QStringList &arguments, const QString &workingDirectory)$/;"	f	struct:CustomJob
CustomJob	apps/MIFit/jobs/BatchJobManager.cpp	/^Q_DECLARE_METATYPE(CustomJob);$/;"	v
CustomJob	apps/MIFit/jobs/BatchJobManager.cpp	/^struct CustomJob$/;"	s	file:
CustomJobDialog	apps/MIFit/ui/CustomJobDialog.cpp	/^CustomJobDialog::CustomJobDialog(QWidget *parent)$/;"	f	class:CustomJobDialog
CustomJobDialog	apps/MIFit/ui/CustomJobDialog.h	/^class CustomJobDialog : public MIQDialog, public Ui::CustomJobDialog$/;"	c
CustomJobDialog	apps/MIFit/ui/ui_CustomJobDialog.h	/^    class CustomJobDialog: public Ui_CustomJobDialog {};$/;"	c	namespace:Ui
CustomJobPreferences	apps/MIFit/ui/CustomJobPreferences.cpp	/^CustomJobPreferences::CustomJobPreferences(QWidget *parent) :$/;"	f	class:CustomJobPreferences
CustomJobPreferences	apps/MIFit/ui/CustomJobPreferences.h	/^class CustomJobPreferences : public QWidget$/;"	c
CustomJobPreferences	apps/MIFit/ui/ui_CustomJobPreferences.h	/^    class CustomJobPreferences: public Ui_CustomJobPreferences {};$/;"	c	namespace:Ui
CustomJobsPage	apps/MIFit/ui/PreferencesDialog.h	/^    static const int CustomJobsPage = 3;$/;"	m	class:PreferencesDialog
CutTriangle	libs/jacgrid/surface.cpp	/^static void CutTriangle(surfaceT &surf,$/;"	f	file:
CycleSquash	libs/chemlib/Substituent.cpp	/^void Substituent::CycleSquash()$/;"	f	class:chemlib::Substituent
CyclohexImpropers	libs/chemlib/RingSystem.cpp	/^void RingSystem::CyclohexImpropers(LigDictionary &dict) const$/;"	f	class:chemlib::RingSystem
DATA1	libs/jacgrid/isosurface.cpp	/^static float DATA1, DATA2, DATA3, DATA4, DATA5, DATA6, DATA7, DATA8;$/;"	v	file:
DATA2	libs/jacgrid/isosurface.cpp	/^static float DATA1, DATA2, DATA3, DATA4, DATA5, DATA6, DATA7, DATA8;$/;"	v	file:
DATA3	libs/jacgrid/isosurface.cpp	/^static float DATA1, DATA2, DATA3, DATA4, DATA5, DATA6, DATA7, DATA8;$/;"	v	file:
DATA4	libs/jacgrid/isosurface.cpp	/^static float DATA1, DATA2, DATA3, DATA4, DATA5, DATA6, DATA7, DATA8;$/;"	v	file:
DATA5	libs/jacgrid/isosurface.cpp	/^static float DATA1, DATA2, DATA3, DATA4, DATA5, DATA6, DATA7, DATA8;$/;"	v	file:
DATA6	libs/jacgrid/isosurface.cpp	/^static float DATA1, DATA2, DATA3, DATA4, DATA5, DATA6, DATA7, DATA8;$/;"	v	file:
DATA7	libs/jacgrid/isosurface.cpp	/^static float DATA1, DATA2, DATA3, DATA4, DATA5, DATA6, DATA7, DATA8;$/;"	v	file:
DATA8	libs/jacgrid/isosurface.cpp	/^static float DATA1, DATA2, DATA3, DATA4, DATA5, DATA6, DATA7, DATA8;$/;"	v	file:
DATASETDNAME	libs/cmtz/ccp4_vars.h	40;"	d
DATASETWAVELENGTH	libs/cmtz/ccp4_vars.h	41;"	d
DEFAULTDIST	libs/molopt/MIMolOpt.cpp	24;"	d	file:
DEFINES	apps/MIFit/core/Makefile	/^DEFINES       = -DQT_NO_DEBUG -DQT_DECLARATIVE_LIB -DQT_SCRIPT_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED$/;"	m
DEFINES	apps/MIFit/jobs/Makefile	/^DEFINES       = -DQT_NO_DEBUG -DQT_DECLARATIVE_LIB -DQT_SCRIPT_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED$/;"	m
DEFINES	apps/MIFit/main/Makefile	/^DEFINES       = -DQT_NO_DEBUG -DQT_DECLARATIVE_LIB -DQT_SCRIPT_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED$/;"	m
DEFINES	apps/MIFit/script/Makefile	/^DEFINES       = -DQT_NO_DEBUG -DQT_DECLARATIVE_LIB -DQT_SCRIPT_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED$/;"	m
DEFINES	apps/MIFit/ui/Makefile	/^DEFINES       = -DQT_NO_DEBUG -DQT_DECLARATIVE_LIB -DQT_SCRIPT_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED$/;"	m
DEFINES	libs/chemlib/Makefile	/^DEFINES       = -DQT_NO_DEBUG -DQT_DECLARATIVE_LIB -DQT_SCRIPT_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED$/;"	m
DEFINES	libs/conflib/Makefile	/^DEFINES       = -DQT_NO_DEBUG -DQT_DECLARATIVE_LIB -DQT_SCRIPT_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED$/;"	m
DEFINES	libs/jacgrid/Makefile	/^DEFINES       = $/;"	m
DEFINES	libs/ligand/Makefile	/^DEFINES       = -DQT_NO_DEBUG -DQT_DECLARATIVE_LIB -DQT_SCRIPT_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED$/;"	m
DEFINES	libs/map/Makefile	/^DEFINES       = -DQT_NO_DEBUG -DQT_DECLARATIVE_LIB -DQT_SCRIPT_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED$/;"	m
DEFINES	libs/math/Makefile	/^DEFINES       = -DQT_NO_DEBUG -DQT_DECLARATIVE_LIB -DQT_SCRIPT_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED$/;"	m
DEFINES	libs/molopt/Makefile	/^DEFINES       = -DQT_NO_DEBUG -DQT_DECLARATIVE_LIB -DQT_SCRIPT_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED$/;"	m
DEFINES	libs/opengl/Makefile	/^DEFINES       = -DQT_NO_DEBUG -DQT_DECLARATIVE_LIB -DQT_SCRIPT_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED$/;"	m
DEFINES	libs/umtz/Makefile	/^DEFINES       = $/;"	m
DEFINES	libs/util/Makefile	/^DEFINES       = -DQT_NO_DEBUG -DQT_DECLARATIVE_LIB -DQT_SCRIPT_LIB -DQT_XML_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED$/;"	m
DEFMODE	libs/cmtz/ccp4_sysdep.h	209;"	d
DEFMODE	libs/umtz/library.h	328;"	d
DEF_MEM_LEVEL	libs/opengl/zlib/zutil.h	57;"	d
DEF_MEM_LEVEL	libs/opengl/zlib/zutil.h	59;"	d
DEF_WBITS	libs/opengl/zlib/zutil.h	52;"	d
DEG2RAD	libs/math/mathlib.h	15;"	d
DEGREE	libs/cmtz/ccp4_types.h	60;"	d
DEGREE	libs/umtz/library.h	877;"	d
DELETEDATOM	libs/chemlib/model.h	/^        const unsigned int DELETEDATOM = ((unsigned int)0x00000800);$/;"	m	namespace:chemlib::AtomType
DELETED_ATOMS	libs/chemlib/MIAtom.cpp	/^static std::map<MIAtom*, unsigned int> DELETED_ATOMS;$/;"	m	namespace:chemlib	file:
DELETED_MOLECULES	libs/chemlib/MIMoleculeBase.cpp	/^static std::map<MIMoleculeBase*, unsigned int> DELETED_MOLECULES;$/;"	m	namespace:chemlib	file:
DELETED_RESIDUES	libs/chemlib/Monomer.cpp	/^static std::map<Residue*, unsigned int> DELETED_RESIDUES;$/;"	m	namespace:chemlib	file:
DELETE_FLAG	libs/jacgrid/surface.cpp	101;"	d	file:
DELETION_COUNT	libs/chemlib/MIAtom.cpp	/^static unsigned int DELETION_COUNT = 0;$/;"	m	namespace:chemlib	file:
DELETION_COUNT	libs/chemlib/MIMoleculeBase.cpp	/^static unsigned int DELETION_COUNT = 0;$/;"	m	namespace:chemlib	file:
DELETION_COUNT	libs/chemlib/Monomer.cpp	/^static unsigned int DELETION_COUNT = 0;$/;"	m	namespace:chemlib	file:
DEL_DIR	Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	apps/MIFit/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	apps/MIFit/core/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	apps/MIFit/jobs/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	apps/MIFit/main/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	apps/MIFit/script/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	apps/MIFit/ui/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	apps/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	libs/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	libs/chemlib/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	libs/conflib/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	libs/jacgrid/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	libs/ligand/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	libs/map/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	libs/math/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	libs/molopt/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	libs/opengl/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	libs/umtz/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_DIR	libs/util/Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_FILE	Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	apps/MIFit/Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	apps/MIFit/core/Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	apps/MIFit/jobs/Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	apps/MIFit/main/Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	apps/MIFit/script/Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	apps/MIFit/ui/Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	apps/Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	libs/Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	libs/chemlib/Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	libs/conflib/Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	libs/jacgrid/Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	libs/ligand/Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	libs/map/Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	libs/math/Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	libs/molopt/Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	libs/opengl/Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	libs/umtz/Makefile	/^DEL_FILE      = rm -f$/;"	m
DEL_FILE	libs/util/Makefile	/^DEL_FILE      = rm -f$/;"	m
DESTDIR	apps/MIFit/core/Makefile	/^DESTDIR       = ..\/..\/MIFit\/$/;"	m
DESTDIR	apps/MIFit/jobs/Makefile	/^DESTDIR       = ..\/..\/MIFit\/$/;"	m
DESTDIR	apps/MIFit/main/Makefile	/^DESTDIR       = ..\/..\/..\/..\/mifit-mifit\/$/;"	m
DESTDIR	apps/MIFit/script/Makefile	/^DESTDIR       = ..\/..\/MIFit\/$/;"	m
DESTDIR	apps/MIFit/ui/Makefile	/^DESTDIR       = ..\/..\/MIFit\/$/;"	m
DESTDIR	libs/chemlib/Makefile	/^DESTDIR       = ..\/..\/libs\/$/;"	m
DESTDIR	libs/conflib/Makefile	/^DESTDIR       = ..\/..\/libs\/$/;"	m
DESTDIR	libs/jacgrid/Makefile	/^DESTDIR       = ..\/..\/libs\/$/;"	m
DESTDIR	libs/ligand/Makefile	/^DESTDIR       = ..\/..\/libs\/$/;"	m
DESTDIR	libs/map/Makefile	/^DESTDIR       = ..\/..\/libs\/$/;"	m
DESTDIR	libs/math/Makefile	/^DESTDIR       = ..\/..\/libs\/$/;"	m
DESTDIR	libs/molopt/Makefile	/^DESTDIR       = ..\/..\/libs\/$/;"	m
DESTDIR	libs/opengl/Makefile	/^DESTDIR       = ..\/..\/libs\/$/;"	m
DESTDIR	libs/umtz/Makefile	/^DESTDIR       = ..\/..\/libs\/$/;"	m
DESTDIR	libs/util/Makefile	/^DESTDIR       = ..\/..\/libs\/$/;"	m
DFNTF_BEIEEE	libs/cmtz/ccp4_sysdep.h	241;"	d
DFNTF_BEIEEE	libs/umtz/library.h	438;"	d
DFNTF_CONVEXNATIVE	libs/cmtz/ccp4_sysdep.h	243;"	d
DFNTF_CONVEXNATIVE	libs/umtz/library.h	440;"	d
DFNTF_LEIEEE	libs/cmtz/ccp4_sysdep.h	244;"	d
DFNTF_LEIEEE	libs/umtz/library.h	441;"	d
DFNTF_VAX	libs/cmtz/ccp4_sysdep.h	242;"	d
DFNTF_VAX	libs/umtz/library.h	439;"	d
DFNTI_IBO	libs/cmtz/ccp4_sysdep.h	239;"	d
DFNTI_IBO	libs/umtz/library.h	435;"	d
DFNTI_MBO	libs/cmtz/ccp4_sysdep.h	238;"	d
DFNTI_MBO	libs/umtz/library.h	434;"	d
DFNT_CHAR	libs/cmtz/ccp4_sysdep.h	287;"	d
DFNT_CHAR	libs/umtz/library.h	545;"	d
DFNT_DOUBLE	libs/cmtz/ccp4_sysdep.h	289;"	d
DFNT_DOUBLE	libs/umtz/library.h	547;"	d
DFNT_FLOAT	libs/cmtz/ccp4_sysdep.h	288;"	d
DFNT_FLOAT	libs/umtz/library.h	546;"	d
DFNT_INT	libs/cmtz/ccp4_sysdep.h	285;"	d
DFNT_INT	libs/umtz/library.h	543;"	d
DFNT_SINT	libs/cmtz/ccp4_sysdep.h	284;"	d
DFNT_SINT	libs/umtz/library.h	542;"	d
DFNT_UCHAR	libs/cmtz/ccp4_sysdep.h	286;"	d
DFNT_UCHAR	libs/umtz/library.h	544;"	d
DFNT_UINT	libs/cmtz/ccp4_sysdep.h	283;"	d
DFNT_UINT	libs/umtz/library.h	541;"	d
DICT0	libs/opengl/zlib/inflate.cpp	/^    DICT0,      \/* waiting for inflateSetDictionary *\/$/;"	e	enum:__anon42	file:
DICT1	libs/opengl/zlib/inflate.cpp	/^    DICT1,      \/* one dictionary check byte to go *\/$/;"	e	enum:__anon42	file:
DICT2	libs/opengl/zlib/inflate.cpp	/^    DICT2,      \/* two dictionary check bytes to go *\/$/;"	e	enum:__anon42	file:
DICT3	libs/opengl/zlib/inflate.cpp	/^    DICT3,      \/* three dictionary check bytes to go *\/$/;"	e	enum:__anon42	file:
DICT4	libs/opengl/zlib/inflate.cpp	/^    DICT4,      \/* four dictionary check bytes to go *\/$/;"	e	enum:__anon42	file:
DICTIONARY	libs/chemlib/MIMolDictionary.cpp	/^static MIMolDictionary *DICTIONARY = NULL;$/;"	m	namespace:chemlib	file:
DIFFERENCE_MAP_SETTINGS	apps/MIFit/ui/MapSettings.h	/^const unsigned int DIFFERENCE_MAP_SETTINGS = 4;$/;"	v
DIST	apps/MIFit/core/Makefile	/^DIST          = \/usr\/lib64\/qt4\/mkspecs\/common\/unix.conf \\$/;"	m
DIST	apps/MIFit/jobs/Makefile	/^DIST          = \/usr\/lib64\/qt4\/mkspecs\/common\/unix.conf \\$/;"	m
DIST	apps/MIFit/main/Makefile	/^DIST          = \/usr\/lib64\/qt4\/mkspecs\/common\/unix.conf \\$/;"	m
DIST	apps/MIFit/script/Makefile	/^DIST          = \/usr\/lib64\/qt4\/mkspecs\/common\/unix.conf \\$/;"	m
DIST	apps/MIFit/ui/Makefile	/^DIST          = \/usr\/lib64\/qt4\/mkspecs\/common\/unix.conf \\$/;"	m
DIST	libs/chemlib/Makefile	/^DIST          = \/usr\/lib64\/qt4\/mkspecs\/common\/unix.conf \\$/;"	m
DIST	libs/conflib/Makefile	/^DIST          = \/usr\/lib64\/qt4\/mkspecs\/common\/unix.conf \\$/;"	m
DIST	libs/jacgrid/Makefile	/^DIST          = \/usr\/lib64\/qt4\/mkspecs\/common\/unix.conf \\$/;"	m
DIST	libs/ligand/Makefile	/^DIST          = \/usr\/lib64\/qt4\/mkspecs\/common\/unix.conf \\$/;"	m
DIST	libs/map/Makefile	/^DIST          = \/usr\/lib64\/qt4\/mkspecs\/common\/unix.conf \\$/;"	m
DIST	libs/math/Makefile	/^DIST          = \/usr\/lib64\/qt4\/mkspecs\/common\/unix.conf \\$/;"	m
DIST	libs/molopt/Makefile	/^DIST          = \/usr\/lib64\/qt4\/mkspecs\/common\/unix.conf \\$/;"	m
DIST	libs/opengl/Makefile	/^DIST          = \/usr\/lib64\/qt4\/mkspecs\/common\/unix.conf \\$/;"	m
DIST	libs/opengl/zlib/infcodes.cpp	/^ DIST,          \/* i: get distance next *\/$/;"	e	enum:__anon38	file:
DIST	libs/umtz/Makefile	/^DIST          = \/usr\/lib64\/qt4\/mkspecs\/common\/unix.conf \\$/;"	m
DIST	libs/util/Makefile	/^DIST          = \/usr\/lib64\/qt4\/mkspecs\/common\/unix.conf \\$/;"	m
DISTEXT	libs/opengl/zlib/infcodes.cpp	/^ DISTEXT,       \/* i: getting distance extra *\/$/;"	e	enum:__anon38	file:
DIV.ah 	libs/umtz/html/doxygen.css	/^DIV.ah { background-color: black; margin-bottom: 3; margin-top: 3 }$/;"	s
DIV.fragment 	libs/umtz/html/doxygen.css	/^DIV.fragment { width: 100%; border: none; background-color: #eeeeee }$/;"	s
DIV.groupHeader 	libs/umtz/html/doxygen.css	/^DIV.groupHeader { margin-left: 16; margin-top: 12; margin-bottom: 6; font-weight: bold }$/;"	s
DIV.groupText 	libs/umtz/html/doxygen.css	/^DIV.groupText { margin-left: 16; font-style: italic; font-size: smaller }$/;"	s
DL.el 	libs/umtz/html/doxygen.css	/^DL.el { margin-left: -1cm }$/;"	s
DO1	libs/opengl/zlib/adler32.cpp	14;"	d	file:
DO1	libs/opengl/zlib/crc32.cpp	127;"	d	file:
DO16	libs/opengl/zlib/adler32.cpp	18;"	d	file:
DO2	libs/opengl/zlib/adler32.cpp	15;"	d	file:
DO2	libs/opengl/zlib/crc32.cpp	128;"	d	file:
DO4	libs/opengl/zlib/adler32.cpp	16;"	d	file:
DO4	libs/opengl/zlib/crc32.cpp	129;"	d	file:
DO8	libs/opengl/zlib/adler32.cpp	17;"	d	file:
DO8	libs/opengl/zlib/crc32.cpp	130;"	d	file:
DONE	libs/opengl/zlib/inflate.cpp	/^    DONE,       \/* finished check, done *\/$/;"	e	enum:__anon42	file:
DONE	libs/opengl/zlib/infutil.h	/^    DONE,       \/* finished last block, done *\/$/;"	e	enum:__anon34
DOUBLEBOND	libs/chemlib/model.h	21;"	d
DRY	libs/opengl/zlib/infutil.h	/^    DRY,        \/* output remaining window bytes *\/$/;"	e	enum:__anon34
DTREE	libs/opengl/zlib/infutil.h	/^    DTREE,      \/* get length, distance trees for a dynamic block *\/$/;"	e	enum:__anon34
DTrek_ref	libs/map/EMapBase.h	/^        DTrek_ref$/;"	e	enum:EMapBase::__anon47
DUM	libs/chemlib/RefmacType.h	/^    const unsigned int DUM  = 0;$/;"	m	namespace:RefmacType
DUMMYATOM	libs/chemlib/model.h	/^        const unsigned int DUMMYATOM = ((unsigned int)0x00020000);$/;"	m	namespace:chemlib::AtomType
DUMPBITS	libs/opengl/zlib/infutil.h	81;"	d
DY	libs/chemlib/RefmacType.h	/^    const unsigned int DY   = 114;$/;"	m	namespace:RefmacType
DYN_TREES	libs/opengl/zlib/zutil.h	65;"	d
D_fp	libs/map/fftlib.cpp	/^typedef doublereal (*D_fp)(...), (*E_fp)(...);$/;"	t	file:
DashLine	apps/MIFit/ui/graphlib.cpp	515;"	d	file:
Data	apps/MIFit/ui/LSQFitDialog.h	/^    struct Data$/;"	s	class:LSQFitDialog
Data	apps/MIFit/ui/MIDialog.h	/^    struct Data$/;"	s	class:MIFileDialog
Data	apps/MIFit/ui/PhaseFileLoadDialog.h	/^    struct Data$/;"	s	class:PhaseFileLoadDialog
Data	apps/MIFit/ui/RefinementOptionsDialog.h	/^    struct Data$/;"	s	class:RefinementOptionsDialog
Data	apps/MIFit/ui/SmilesDialog.h	/^    struct Data$/;"	s	class:SmilesDialog
DataContainer	apps/MIFit/core/Stack.h	/^    typedef std::deque<StackItem> DataContainer;$/;"	t	class:Stack
DataRefCountMap	libs/util/StringIo.h	/^    typedef std::map<StringIoData*, size_t> DataRefCountMap;$/;"	t	class:StringIo
Debug	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::Debug(const std::string &msg)$/;"	f	class:MIMainWindow
DecodeCifBondOrder	libs/chemlib/CifData.cpp	/^unsigned char DecodeCifBondOrder(const std::string &value)$/;"	f
DefaultChiralClass	libs/chemlib/LigandPerceiver.cpp	/^int LigandPerceiver::DefaultChiralClass(MIAtom &atom)$/;"	f	class:chemlib::LigandPerceiver
Degree	libs/chemlib/atom_util.h	/^    inline int Degree(const MIAtom *atom)$/;"	f	namespace:chemlib
Degree	libs/chemlib/atom_util.h	/^    inline int Degree(const MIAtom *atom, const std::vector<Bond> bonds)$/;"	f	namespace:chemlib
Delete	apps/MIFit/ui/MIQTreeWidget.cpp	/^void MIQTreeWidget::Delete(QTreeWidgetItem *item)$/;"	f	class:MIQTreeWidget
Delete	apps/MIFit/ui/surf.cpp	/^    void Delete(unsigned int surfnum)$/;"	f	class:SuperSurface
DeleteAllResidues	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::DeleteAllResidues()$/;"	f	class:chemlib::MIMoleculeBase
DeleteAllRibbonSegments	apps/MIFit/core/SecondaryStructure.cpp	/^bool SecondaryStructure::DeleteAllRibbonSegments()$/;"	f	class:SecondaryStructure
DeleteAllSchematic	apps/MIFit/core/SecondaryStructure.cpp	/^bool SecondaryStructure::DeleteAllSchematic()$/;"	f	class:SecondaryStructure
DeleteAllSpans	apps/MIFit/core/RibbonSegment.cpp	/^bool RibbonSegment::DeleteAllSpans()$/;"	f	class:RibbonSegment
DeleteAtom	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::DeleteAtom(MIAtom *a)$/;"	f	class:chemlib::MIMoleculeBase
DeleteAtoms	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::DeleteAtoms(MIAtomList atoms)$/;"	f	class:chemlib::MIMoleculeBase
DeleteChain	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::DeleteChain(Residue *chain)$/;"	f	class:chemlib::MIMoleculeBase
DeleteChildren	apps/MIFit/ui/MIQTreeWidget.cpp	/^void MIQTreeWidget::DeleteChildren(QTreeWidgetItem *item)$/;"	f	class:MIQTreeWidget
DeleteConformers	libs/chemlib/MIMolDictionary.cpp	/^void MIMolDictionary::DeleteConformers(const std::string &type)$/;"	f	class:chemlib::MIMolDictionary
DeleteGap	apps/MIFit/core/Mlculseq.cpp	/^void Molecule::DeleteGap(ResidueListIterator gap_point)$/;"	f	class:Molecule
DeleteItem	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::DeleteItem()$/;"	f	class:DisplayTree
DeleteItem	apps/MIFit/ui/ModelsView.cpp	/^void AtomsTree::DeleteItem()$/;"	f	class:AtomsTree
DeleteItem	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::DeleteItem()$/;"	f	class:ModelsTree
DeleteItem	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::DeleteItem()$/;"	f	class:ResiduesTree
DeleteJob	apps/MIFit/jobs/BatchJobManager.cpp	/^bool BatchJobManager::DeleteJob(BatchJob *job)$/;"	f	class:BatchJobManager
DeleteJob	apps/MIFit/ui/JobsView.cpp	/^void JobsTree::DeleteJob()$/;"	f	class:JobsTree
DeleteLowerGap	apps/MIFit/core/Mlculseq.cpp	/^void Molecule::DeleteLowerGap(ResidueListIterator gap_point)$/;"	f	class:Molecule
DeleteMap	apps/MIFit/ui/Displaylist.cpp	/^void Displaylist::DeleteMap(EMap *emap)$/;"	f	class:Displaylist
DeletePlane	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::DeletePlane(PLANE *p)$/;"	f	class:DictEditCanvas
DeleteRes	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::DeleteRes(Residue *oldres)$/;"	f	class:chemlib::MIMoleculeBase
DeleteResidues	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::DeleteResidues(std::vector<Residue*> residues)$/;"	f	class:chemlib::MIMoleculeBase
DeleteSecondaryStructure	apps/MIFit/core/Molecule.cpp	/^void Molecule::DeleteSecondaryStructure()$/;"	f	class:Molecule
DepthFirstSearch	libs/chemlib/Ligand.cpp	/^void Ligand::DepthFirstSearch(MIAtom *root, MIAtom *forbid, std::vector <MIAtom*> &aggregate)$/;"	f	class:chemlib::Ligand
DepthFirstSearch	libs/chemlib/mol_util.cpp	/^void DepthFirstSearch(MIAtom *root,$/;"	f	namespace:chemlib
DetectAromatics	libs/chemlib/RingSystem.cpp	/^void RingSystem::DetectAromatics()$/;"	f	class:chemlib::RingSystem
DetectFusedRing	libs/chemlib/RingSystem.cpp	/^void RingSystem::DetectFusedRing()$/;"	f	class:chemlib::RingSystem
Determinant	libs/chemlib/Matrix.h	/^    T Determinant(Matrix<T> &A)$/;"	f	namespace:TNT
DeterminantSign	libs/chemlib/Matrix.h	/^    inline int DeterminantSign(const std::vector<int> &perm)$/;"	f	namespace:TNT
DeterminantThree	libs/chemlib/Matrix.h	/^    T DeterminantThree(Matrix<T> &A)$/;"	f	namespace:TNT
DeterminantToo	libs/chemlib/Matrix.h	/^    T DeterminantToo(Matrix<T> &A)$/;"	f	namespace:TNT
DictContains	libs/chemlib/MIMolDictionary.cpp	/^bool MIMolDictionary::DictContains(const std::string &res) const$/;"	f	class:chemlib::MIMolDictionary
DictEditAnglePickingRenderable	apps/MIFit/ui/DictEditAnglePickingRenderable.cpp	/^DictEditAnglePickingRenderable::DictEditAnglePickingRenderable(StereoView *stereoView, std::vector<ANGLE> &angles, Frustum *frustum)$/;"	f	class:DictEditAnglePickingRenderable
DictEditAnglePickingRenderable	apps/MIFit/ui/DictEditAnglePickingRenderable.h	/^class DictEditAnglePickingRenderable : public mi::opengl::Renderable$/;"	c
DictEditAngleRenderable	apps/MIFit/ui/DictEditAnglePickingRenderable.cpp	/^DictEditAngleRenderable::DictEditAngleRenderable(GLRenderer *renderer, std::vector<ANGLE> &angles)$/;"	f	class:DictEditAngleRenderable
DictEditAngleRenderable	apps/MIFit/ui/DictEditAnglePickingRenderable.h	/^class DictEditAngleRenderable : public mi::opengl::Renderable$/;"	c
DictEditAnnotationPickingRenderable	apps/MIFit/ui/DictEditAnnotationPickingRenderable.cpp	/^DictEditAnnotationPickingRenderable::DictEditAnnotationPickingRenderable(StereoView *stereoView, Displaylist *displaylist, Frustum *frustum, DictEditCanvas *canvas)$/;"	f	class:DictEditAnnotationPickingRenderable
DictEditAnnotationPickingRenderable	apps/MIFit/ui/DictEditAnnotationPickingRenderable.h	/^class DictEditAnnotationPickingRenderable : public mi::opengl::Renderable$/;"	c
DictEditAnnotationRenderable	apps/MIFit/ui/DictEditAnnotationPickingRenderable.cpp	/^DictEditAnnotationRenderable::DictEditAnnotationRenderable(GLRenderer *renderer, Displaylist *displaylist)$/;"	f	class:DictEditAnnotationRenderable
DictEditAnnotationRenderable	apps/MIFit/ui/DictEditAnnotationPickingRenderable.h	/^class DictEditAnnotationRenderable : public mi::opengl::Renderable$/;"	c
DictEditAtomPickingRenderable	apps/MIFit/ui/DictEditAtomPickingRenderable.cpp	/^DictEditAtomPickingRenderable::DictEditAtomPickingRenderable(StereoView *stereoView, Displaylist *displaylist, Frustum *frustum)$/;"	f	class:DictEditAtomPickingRenderable
DictEditAtomPickingRenderable	apps/MIFit/ui/DictEditAtomPickingRenderable.h	/^class DictEditAtomPickingRenderable : public mi::opengl::Renderable$/;"	c
DictEditAtomRenderable	apps/MIFit/ui/DictEditAtomPickingRenderable.cpp	/^DictEditAtomRenderable::DictEditAtomRenderable(GLRenderer *renderer, Displaylist *displaylist)$/;"	f	class:DictEditAtomRenderable
DictEditAtomRenderable	apps/MIFit/ui/DictEditAtomPickingRenderable.h	/^class DictEditAtomRenderable : public mi::opengl::Renderable$/;"	c
DictEditBondPickingRenderable	apps/MIFit/ui/DictEditBondPickingRenderable.cpp	/^DictEditBondPickingRenderable::DictEditBondPickingRenderable(StereoView *stereoView, std::vector<Bond> &bonds, Frustum *frustum)$/;"	f	class:DictEditBondPickingRenderable
DictEditBondPickingRenderable	apps/MIFit/ui/DictEditBondPickingRenderable.h	/^class DictEditBondPickingRenderable : public mi::opengl::Renderable$/;"	c
DictEditBondRenderable	apps/MIFit/ui/DictEditBondPickingRenderable.cpp	/^DictEditBondRenderable::DictEditBondRenderable(GLRenderer *renderer, std::vector<Bond> &bonds)$/;"	f	class:DictEditBondRenderable
DictEditBondRenderable	apps/MIFit/ui/DictEditBondPickingRenderable.h	/^class DictEditBondRenderable : public mi::opengl::Renderable$/;"	c
DictEditCanvas	apps/MIFit/ui/DictEditCanvas.cpp	/^DictEditCanvas::DictEditCanvas(DictEditDialog *parent)$/;"	f	class:DictEditCanvas
DictEditCanvas	apps/MIFit/ui/DictEditCanvas.h	/^class DictEditCanvas : public QDeclarativeView$/;"	c
DictEditDialog	apps/MIFit/ui/DictEditDialog.cpp	/^DictEditDialog::DictEditDialog(QWidget *parent)$/;"	f	class:DictEditDialog
DictEditDialog	apps/MIFit/ui/DictEditDialog.h	/^class DictEditDialog : public QDialog$/;"	c
DictEditMainItem	apps/MIFit/ui/DictEditCanvas.cpp	/^    DictEditMainItem(DictEditCanvas *widget, QGraphicsItem *parent = 0)$/;"	f	class:DictEditMainItem
DictEditMainItem	apps/MIFit/ui/DictEditCanvas.cpp	/^class DictEditMainItem : public QGraphicsItem$/;"	c	file:
DictEditScene	apps/MIFit/ui/DictEditScene.cpp	/^DictEditScene::DictEditScene()$/;"	f	class:DictEditScene
DictEditScene	apps/MIFit/ui/DictEditScene.h	/^class DictEditScene : public mi::opengl::Scene$/;"	c
DictEditorForm	apps/MIFit/ui/ui_dicteditorform.h	/^    class DictEditorForm: public Ui_DictEditorForm {};$/;"	c	namespace:Ui
DictHCheck	libs/chemlib/MIMolDictionary.cpp	/^bool MIMolDictionary::DictHCheck(Residue *res, unsigned int &level_return)$/;"	f	class:chemlib::MIMolDictionary
DictMap	libs/chemlib/MIMolDictionary.h	/^        dict_map DictMap;$/;"	m	class:chemlib::MIMolDictionary
DictResidue	libs/chemlib/DictResidue.cpp	/^DictResidue::DictResidue(Residue *r)$/;"	f	class:DictResidue
DictResidue	libs/chemlib/DictResidue.h	/^    class DictResidue$/;"	c	namespace:chemlib
DictTest	libs/chemlib/Constraint.h	/^        bool DictTest()$/;"	f	class:chemlib::Improper
DictionaryHLevel	libs/chemlib/MIMolDictionary.h	/^    namespace DictionaryHLevel$/;"	n	namespace:chemlib
Dimensions	libs/chemlib/Box.cpp	/^std::vector<float> Box::Dimensions()$/;"	f	class:chemlib::Box
DirectFFT	libs/map/maptypes.h	/^    const unsigned int DirectFFT = 10; \/\/ has same effect as Fo!$/;"	m	namespace:MIMapType
DirectNextBond	libs/chemlib/atom_util.cpp	/^bool DirectNextBond(const MIAtom *atom, const std::vector<Bond> &bonds, double *v)$/;"	f	namespace:chemlib
DirectNextBond	libs/chemlib/atom_util.cpp	/^bool DirectNextBond(const MIAtom *atom, double *v)$/;"	f	namespace:chemlib
Discussion_thread	apps/MIFit/core/Annotation.h	/^        Discussion_thread,$/;"	e	enum:Annotation::__anon1
DisplayTree	apps/MIFit/ui/DisplayView.cpp	/^DisplayTree::DisplayTree(QWidget *parent)$/;"	f	class:DisplayTree
DisplayTree	apps/MIFit/ui/DisplayView.cpp	/^class DisplayTree$/;"	c	file:
DisplayView	apps/MIFit/ui/DisplayView.cpp	/^DisplayView::DisplayView(QWidget *parent)$/;"	f	class:DisplayView
DisplayView	apps/MIFit/ui/DisplayView.h	/^class DisplayView : public ViewSyncedPanel$/;"	c
Displaylist	apps/MIFit/ui/Displaylist.cpp	/^Displaylist::Displaylist()   \/\/ create a NULL list$/;"	f	class:Displaylist
Displaylist	apps/MIFit/ui/Displaylist.h	/^class Displaylist : public QObject$/;"	c
DisplaylistRefCountMap	apps/MIFit/ui/Displaylist.h	/^    typedef std::map<Displaylist*, size_t> DisplaylistRefCountMap;$/;"	t	class:Displaylist
DistToOrigin	libs/chemlib/transform_util.h	/^    inline double DistToOrigin(MIAtom *atom)$/;"	f	namespace:chemlib
Do	apps/MIFit/core/Molecule.cpp	/^void Molecule::Do()$/;"	f	class:Molecule
Do	apps/MIFit/core/ViewPoint.cpp	/^void ViewPoint::Do()$/;"	f	class:ViewPoint
Do	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::Do()$/;"	f	class:MIMolOpt
DoCycle	libs/conflib/sdg.cpp	/^void sdgEngine::DoCycle(float dist_pace, float vol_pace)$/;"	f	class:conflib::sdgEngine
DoOptimize	libs/conflib/sdg.cpp	/^double sdgEngine::DoOptimize()$/;"	f	class:conflib::sdgEngine
DoReflectY	libs/chemlib/transform_util.h	/^    inline void DoReflectY(MIAtom *atom)$/;"	f	namespace:chemlib
DoStep	libs/conflib/sdg.cpp	/^void sdgEngine::DoStep(float dist_pace, float vol_pace)$/;"	f	class:conflib::sdgEngine
DoTransformAtom	libs/chemlib/transform_util.h	/^    struct DoTransformAtom : public std::binary_function<MIAtom*, const double*, bool>$/;"	s	namespace:chemlib
DoTranslateAtom	libs/chemlib/transform_util.h	/^    struct DoTranslateAtom : public std::binary_function<MIAtom*, const double*, bool>$/;"	s	namespace:chemlib
DoYouWantBallAndCylinder	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::DoYouWantBallAndCylinder()$/;"	f	class:MIGLWidget
DoingRange	apps/MIFit/ui/MIGLWidget.h	/^    unsigned int DoingRange;$/;"	m	class:MIGLWidget
DontConfirmWater	apps/MIFit/ui/MIGLWidget.h	/^    bool DontConfirmWater;$/;"	m	class:MIGLWidget
DotLine	apps/MIFit/ui/graphlib.cpp	516;"	d	file:
DotVect	libs/chemlib/math_util.h	/^    inline double DotVect(const double in1[3], const double in2[3])$/;"	f	namespace:chemlib
DotVect	libs/chemlib/math_util.h	/^    inline double DotVect(const double lhx,$/;"	f	namespace:chemlib
DotsVisible	apps/MIFit/core/Molecule.h	/^inline int Molecule::DotsVisible()$/;"	f	class:Molecule
Double	apps/MIFit/ui/GenericDataDialog.h	/^        Double,$/;"	e	enum:GenericDataDialog::FieldType
DoubleSquash	libs/chemlib/Substituent.cpp	/^void Substituent::DoubleSquash()$/;"	f	class:chemlib::Substituent
DragStart	apps/MIFit/ui/MIGLWidget.h	/^    bool DragStart;$/;"	m	class:MIGLWidget
DraggingRefiAtom	apps/MIFit/ui/MIGLWidget.h	/^    bool DraggingRefiAtom;$/;"	m	class:MIGLWidget
DraggingRotate	apps/MIFit/ui/MIGLWidget.cpp	/^static bool DraggingRotate = false;$/;"	v	file:
DraggingSlab	apps/MIFit/ui/MIGLWidget.cpp	/^static bool DraggingSlab = false;$/;"	v	file:
Draw	apps/MIFit/ui/surf.cpp	/^    void Draw()$/;"	f	class:MISurface
Draw2	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::Draw2(Displaylist *displaylist, bool ShowVus, bool \/* drawMapsFirst *\/, bool showSymmetryAsBackbone)$/;"	f	class:GLRenderer
DrawAnnotationBox	apps/MIFit/core/Molecule.h	/^inline void Molecule::DrawAnnotationBox(bool on)$/;"	f	class:Molecule
DrawAnnotations	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::DrawAnnotations(std::list<Molecule*> &molecules)$/;"	f	class:GLRenderer
DrawCappedCylinder	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::DrawCappedCylinder(int nSeg, double dAxisA[3], double dAxisB[3], double dEndA[][3], double dEndB[][3],$/;"	f	class:GLRenderer
DrawChirals	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::DrawChirals()$/;"	f	class:DictEditCanvas
DrawContacts	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::DrawContacts(std::vector<CONTACT> &Contacts)$/;"	f	class:GLRenderer
DrawCylinder	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::DrawCylinder(const Vector3<float> &start, const Vector3<float> &end, float radius)$/;"	f	class:GLRenderer
DrawHelix	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::DrawHelix(Helix *helix)$/;"	f	class:GLRenderer
DrawLabels	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::DrawLabels(std::list<Molecule*> &molecules)$/;"	f	class:GLRenderer
DrawMaps	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::DrawMaps(std::vector<EMap*> &maps)$/;"	f	class:GLRenderer
DrawMultiLineString	apps/MIFit/ui/graphlib.cpp	/^void GraphWindow::DrawMultiLineString(float x, float y, const std::string &c)$/;"	f	class:GraphWindow
DrawPlanes	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::DrawPlanes()$/;"	f	class:DictEditCanvas
DrawPolySurf	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::DrawPolySurf(int npr, int nseg, double dPoints[][3], double dNorms[][3])$/;"	f	class:GLRenderer
DrawRibbonSegment	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::DrawRibbonSegment(RibbonSegment *ribbonSegment)$/;"	f	class:GLRenderer
DrawRibbonSpan	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::DrawRibbonSpan(RibbonSpan *ribbonSpan)$/;"	f	class:GLRenderer
DrawSecondaryStructure	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::DrawSecondaryStructure(SecondaryStructure *secondaryStructure)$/;"	f	class:GLRenderer
DrawSphere	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::DrawSphere(float c[3], float radius, int tess)$/;"	f	class:GLRenderer
DrawSphere2	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::DrawSphere2(float c[3], float radius, int tess)$/;"	f	class:GLRenderer
DrawTorsions	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::DrawTorsions()$/;"	f	class:DictEditCanvas
DrawVus	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::DrawVus(std::vector<PLINE> &Vus, int w)$/;"	f	class:GLRenderer
DupeAtomNames	libs/chemlib/Residue.cpp	/^int DupeAtomNames(const Residue *res)$/;"	f	namespace:chemlib
EMap	apps/MIFit/ui/EMap.cpp	/^EMap::EMap()$/;"	f	class:EMap
EMap	apps/MIFit/ui/EMap.h	/^class EMap : public EMapBase$/;"	c
EMap	apps/MIFlex/miflex.cpp	/^class EMap$/;"	c	file:
EMapBase	libs/map/EMapBase.cpp	/^EMapBase::EMapBase()$/;"	f	class:EMapBase
EMapBase	libs/map/EMapBase.h	/^class EMapBase : public QObject$/;"	c
END	libs/opengl/zlib/infcodes.cpp	/^ END,           \/* x: got eob and all data flushed *\/$/;"	e	enum:__anon38	file:
ENVIRONMENT_PREFERENCES_H	apps/MIFit/ui/EnvironmentPreferences.h	2;"	d
EPS	libs/molopt/MIMolOpt.cpp	39;"	d	file:
ER	libs/chemlib/RefmacType.h	/^    const unsigned int ER   = 116;$/;"	m	namespace:RefmacType
ERROR	apps/MIFit/core/rotate.cpp	17;"	d	file:
ERR_MSG	libs/opengl/zlib/zutil.h	43;"	d
ERR_RETURN	libs/opengl/zlib/zutil.h	45;"	d
EU	libs/chemlib/RefmacType.h	/^    const unsigned int EU   = 111;$/;"	m	namespace:RefmacType
EVEN	libs/map/maptypes.h	25;"	d
EXTENDED_SURFACE	apps/MIFit/ui/MIGLWidget.cpp	110;"	d	file:
EXT_SEPARATOR	libs/cmtz/ccp4_sysdep.h	201;"	d
EXT_SEPARATOR	libs/cmtz/ccp4_sysdep.h	204;"	d
E_f	libs/map/fftlib.cpp	/^typedef doublereal E_f; \/* real function with -R not specified *\/$/;"	t	file:
E_fp	libs/map/fftlib.cpp	/^typedef doublereal (*D_fp)(...), (*E_fp)(...);$/;"	t	file:
EchoCrystal	libs/map/CMapHeaderBase.cpp	/^void CMapHeaderBase::EchoCrystal()$/;"	f	class:CMapHeaderBase
EditEntry	apps/MIFit/core/GeomRefiner.cpp	/^bool GeomRefiner::EditEntry(const char *type)$/;"	f	class:GeomRefiner
EditEntry	apps/MIFlex/common.cpp	/^MIMoleculeBase *EditEntry(MIMolOpt *opt, const char *type)$/;"	f
EditEntryCleanup	apps/MIFit/core/GeomRefiner.cpp	/^void GeomRefiner::EditEntryCleanup(bool \/*isok*\/)$/;"	f	class:GeomRefiner
EditItem	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::EditItem()$/;"	f	class:DisplayTree
EditItem	apps/MIFit/ui/ModelsView.cpp	/^void AtomsTree::EditItem()$/;"	f	class:AtomsTree
EditItem	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::EditItem()$/;"	f	class:ModelsTree
EditItem	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::EditItem()$/;"	f	class:ResiduesTree
EditItemAtoms	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::EditItemAtoms()$/;"	f	class:ResiduesTree
Electroneg	libs/chemlib/mol_util.cpp	/^int Electroneg(int atomic_number)$/;"	f	namespace:chemlib
EmptyDictCheck	libs/chemlib/MIMolDictionary.cpp	/^bool MIMolDictionary::EmptyDictCheck()$/;"	f	class:chemlib::MIMolDictionary
EndLine	libs/jacgrid/jacgrid.h	/^    virtual void EndLine()$/;"	f	class:VertexSender
EndOfModel	apps/MIFit/ui/AddResidueDialog.h	/^        EndOfModel$/;"	e	enum:AddResidueDialog::ModelLocation
EndTag	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::EndTag()$/;"	f	class:XMLArchive
EntireMolecule	apps/MIFit/ui/surf.h	/^    const unsigned int EntireMolecule = 4;$/;"	m	namespace:MISurfaceSelectionMode
EnumerateTorsions	libs/chemlib/mol_util.cpp	/^void EnumerateTorsions(const Bond *bond, std::vector< MIAtomList > &torsions)$/;"	f	namespace:chemlib
EnvironmentPreferences	apps/MIFit/ui/EnvironmentPreferences.cpp	/^EnvironmentPreferences::EnvironmentPreferences(QWidget *parent)$/;"	f	class:EnvironmentPreferences
EnvironmentPreferences	apps/MIFit/ui/EnvironmentPreferences.h	/^class EnvironmentPreferences : public QWidget, public Ui::EnvironmentPreferences$/;"	c
EnvironmentPreferences	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    class EnvironmentPreferences: public Ui_EnvironmentPreferences {};$/;"	c	namespace:Ui
EqualizeSpacing	libs/chemlib/substituent_util.cpp	/^void EqualizeSpacing(std::vector < Substituent > &subs)$/;"	f	namespace:chemlib
EstimateBulkSolvent	libs/map/sfcalc.cpp	/^float EstimateBulkSolvent(CREFL refl[], int nrefl, float *B, float *K, int ntimes, CMapHeaderBase *mh)$/;"	f
ExclDepthFirstSearch	libs/chemlib/mol_util.cpp	/^void ExclDepthFirstSearch(MIAtom *root,$/;"	f	namespace:chemlib
ExcludeFromDict	libs/chemlib/Constraint.h	/^        void ExcludeFromDict()$/;"	f	class:chemlib::Improper
ExoDirection	libs/chemlib/RingSystem.cpp	/^void RingSystem::ExoDirection(MIAtom *source, double *v) const$/;"	f	class:chemlib::RingSystem
Exop	libs/opengl/zlib/inftrees.h	/^            Byte Exop;  \/* number of extra bits or operation *\/$/;"	m	struct:inflate_huft_s::__anon32::__anon33
Expand	libs/chemlib/Box.cpp	/^void Box::Expand(const MIAtom &atom, float margin)$/;"	f	class:chemlib::Box
ExpandConfs	libs/chemlib/MIMolDictionary.cpp	/^Residue *ExpandConfs(const Residue *single, const GeomSaver &confs)$/;"	f	namespace:chemlib
Explode	libs/conflib/sdg.cpp	/^void sdgEngine::Explode(float factor)$/;"	f	class:conflib::sdgEngine
Export	apps/MIFit/ui/EMap.cpp	/^void EMap::Export()$/;"	f	class:EMap
Export	libs/chemlib/Ligand.cpp	/^void Ligand::Export(std::vector<Residue*> &rdues, std::vector<Bond> &bnds)$/;"	f	class:chemlib::Ligand
Extend	libs/chemlib/RingSystem.cpp	/^void RingSystem::Extend(MIAtom *atom)$/;"	f	class:chemlib::RingSystem
ExtendAliphaticPath	libs/chemlib/RingSystem.cpp	/^void RingSystem::ExtendAliphaticPath(int *path,     \/\/Ordered array of atom indices in the path$/;"	f	class:chemlib::RingSystem
ExtendAromatic	libs/chemlib/RingSystem.cpp	/^void RingSystem::ExtendAromatic(Aromatic &arom, MIAtom *atom, bool *used)$/;"	f	class:chemlib::RingSystem
ExtendPath	libs/chemlib/Aromatic.cpp	/^void Aromatic::ExtendPath(int *path,            \/\/Ordered array of atom indices in the path$/;"	f	class:chemlib::Aromatic
ExtendPath	libs/chemlib/RingSystem.cpp	/^void RingSystem::ExtendPath(int *path,          \/\/Ordered array of atom indices in the path$/;"	f	class:chemlib::RingSystem
Extern	libs/map/fftlib.cpp	28;"	d	file:
F	libs/chemlib/RefmacType.h	/^    const unsigned int F    = 164;$/;"	m	namespace:RefmacType
F2C_INCLUDE	libs/map/fftlib.cpp	8;"	d	file:
F2C_proc_par_types	libs/map/fftlib.cpp	164;"	d	file:
FALSE	libs/cmtz/ccp4_types.h	43;"	d
FALSE	libs/umtz/library.h	862;"	d
FAR	libs/opengl/zlib/zconf.h	147;"	d
FAR	libs/opengl/zlib/zconf.h	149;"	d
FAR	libs/opengl/zlib/zconf.h	155;"	d
FAR	libs/opengl/zlib/zconf.h	163;"	d
FAR	libs/opengl/zlib/zconf.h	206;"	d
FARPLANE	libs/opengl/Frustum.cpp	/^const int Frustum::FARPLANE = 5;$/;"	m	class:mi::opengl::Frustum	file:
FARPLANE	libs/opengl/Frustum.h	/^            static const int FARPLANE;$/;"	m	class:mi::opengl::Frustum
FE	libs/chemlib/RefmacType.h	/^    const unsigned int FE   = 137;$/;"	m	namespace:RefmacType
FFTCalc	libs/map/EMapBase.cpp	/^bool EMapBase::FFTCalc()$/;"	f	class:EMapBase
FFTMap	apps/MIFit/ui/EMap.cpp	/^bool EMap::FFTMap(int mt, int gl, float rMin, float rMax)$/;"	f	class:EMap
FFTMap	libs/map/EMapBase.cpp	/^bool EMapBase::FFTMap(int maptype, int gridlevel,$/;"	f	class:EMapBase
FFT_H	libs/map/fft.h	2;"	d
FFT_PRIME	libs/map/maptypes.h	24;"	d
FILE	apps/MIFit/ui/CustomJobDialog.h	/^        FILE$/;"	e	enum:CustomJobDialog::ModelMode
FILE_ADD_MODEL	apps/MIFit/ui/id.h	4;"	d
FIRST	apps/MIFit/core/RESIDUE.h	13;"	d
FIRST	libs/chemlib/model.h	75;"	d
FITATOM	libs/chemlib/model.h	/^        const unsigned int FITATOM = ((unsigned int)0x00004000);$/;"	m	namespace:chemlib::AtomType
FIXEDH	libs/opengl/zlib/inftrees.cpp	396;"	d	file:
FLAG	libs/opengl/zlib/inflate.cpp	/^    FLAG,       \/* waiting for flag byte *\/$/;"	e	enum:__anon42	file:
FLEX_TORSION_H	libs/conflib/FlexTorsion.h	2;"	d
FLOAT32	libs/cmtz/ccp4_sysdep.h	234;"	d
FLOAT32	libs/umtz/library.h	366;"	d
FLUSH	libs/opengl/zlib/infutil.h	86;"	d
FOMsValid	libs/map/EMapBase.h	/^    bool FOMsValid;$/;"	m	class:EMapBase
FONT.charliteral   	libs/umtz/html/doxygen.css	/^FONT.charliteral   { color: #008080 }$/;"	s
FONT.comment       	libs/umtz/html/doxygen.css	/^FONT.comment       { color: #800000 }$/;"	s
FONT.keyword       	libs/umtz/html/doxygen.css	/^FONT.keyword       { color: #008000 }$/;"	s
FONT.keywordflow   	libs/umtz/html/doxygen.css	/^FONT.keywordflow   { color: #e08000 }$/;"	s
FONT.keywordtype   	libs/umtz/html/doxygen.css	/^FONT.keywordtype   { color: #604020 }$/;"	s
FONT.preprocessor  	libs/umtz/html/doxygen.css	/^FONT.preprocessor  { color: #806020 }$/;"	s
FONT.stringliteral 	libs/umtz/html/doxygen.css	/^FONT.stringliteral { color: #002080 }$/;"	s
FORTRAN_CALL	libs/umtz/library.h	724;"	d
FORTRAN_CALL	libs/umtz/library.h	747;"	d
FORTRAN_CALL	libs/umtz/library.h	771;"	d
FORTRAN_CALL	libs/umtz/library.h	798;"	d
FORTRAN_CALL	libs/umtz/library.h	822;"	d
FORTRAN_CALL	libs/umtz/library.h	848;"	d
FORTRAN_FUN	libs/umtz/library.h	726;"	d
FORTRAN_FUN	libs/umtz/library.h	749;"	d
FORTRAN_FUN	libs/umtz/library.h	773;"	d
FORTRAN_FUN	libs/umtz/library.h	800;"	d
FORTRAN_FUN	libs/umtz/library.h	824;"	d
FORTRAN_FUN	libs/umtz/library.h	850;"	d
FORTRAN_SUBR	libs/umtz/library.h	722;"	d
FORTRAN_SUBR	libs/umtz/library.h	745;"	d
FORTRAN_SUBR	libs/umtz/library.h	769;"	d
FORTRAN_SUBR	libs/umtz/library.h	796;"	d
FORTRAN_SUBR	libs/umtz/library.h	820;"	d
FORTRAN_SUBR	libs/umtz/library.h	846;"	d
FO_TEXT	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^static const char *FO_TEXT = "Fo = ";$/;"	v	file:
FREEZE	libs/chemlib/model.h	/^        const unsigned int FREEZE = ((unsigned int)0x00040000);$/;"	m	namespace:chemlib::AtomType
FTN_LEN	libs/umtz/library.h	710;"	d
FTN_LEN	libs/umtz/library.h	733;"	d
FTN_LEN	libs/umtz/library.h	756;"	d
FTN_LEN	libs/umtz/library.h	781;"	d
FTN_LEN	libs/umtz/library.h	808;"	d
FTN_LEN	libs/umtz/library.h	834;"	d
FTN_STR	libs/umtz/library.h	709;"	d
FTN_STR	libs/umtz/library.h	732;"	d
FTN_STR	libs/umtz/library.h	755;"	d
FTN_STR	libs/umtz/library.h	780;"	d
FTN_STR	libs/umtz/library.h	807;"	d
FTN_STR	libs/umtz/library.h	833;"	d
F_OPEN	libs/opengl/zlib/zutil.h	101;"	d
F_OPEN	libs/opengl/zlib/zutil.h	148;"	d
F_TEXT	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^static const char *F_TEXT = "F = ";$/;"	v	file:
FarCheck	libs/map/EMapBase.cpp	/^static int FarCheck(float cx, float cy, float cz, MINATOM *atoms, int natoms, float dmax)$/;"	f	file:
Fc	libs/map/maptypes.h	/^    const unsigned int Fc = 1;$/;"	m	namespace:MIMapType
Fconvert	libs/umtz/library.c	/^    Fconvert[MAXFILES];         \/* real convserion needed on read*\/$/;"	v	file:
FcsValid	libs/map/EMapBase.h	/^    bool FcsValid;$/;"	m	class:EMapBase
FieldOfViewZoomCommand	libs/opengl/interact/FieldOfViewZoomCommand.cpp	/^FieldOfViewZoomCommand::FieldOfViewZoomCommand(Frustum *frustum)$/;"	f	class:mi::opengl::interact::FieldOfViewZoomCommand
FieldOfViewZoomCommand	libs/opengl/interact/FieldOfViewZoomCommand.h	/^            class FieldOfViewZoomCommand : public PropertyCommand$/;"	c	namespace:mi::opengl::interact
FieldType	apps/MIFit/ui/GenericDataDialog.h	/^    enum FieldType$/;"	g	class:GenericDataDialog
FileHead	libs/chemlib/MIMoleculeBase.h	/^        std::vector<std::string> FileHead;$/;"	m	class:chemlib::MIMoleculeBase
FileIo	libs/util/FileIo.cpp	/^FileIo::FileIo()$/;"	f	class:FileIo
FileIo	libs/util/FileIo.cpp	/^FileIo::FileIo(const FileIo &fileIo)$/;"	f	class:FileIo
FileIo	libs/util/FileIo.h	/^class FileIo : public io$/;"	c
FilePointerRefCountMap	libs/util/FileIo.h	/^    typedef std::map<FILE*, size_t> FilePointerRefCountMap;$/;"	t	class:FileIo
FileTail	libs/chemlib/MIMoleculeBase.h	/^        std::vector<std::string> FileTail;$/;"	m	class:chemlib::MIMoleculeBase
FillToolsMenu	apps/MIFit/ui/tools.cpp	/^void Tools::FillToolsMenu(QMenu *parent)$/;"	f	class:Tools
FindAcycPlanes	libs/chemlib/Dictionary.cpp	/^void LigDictionary::FindAcycPlanes()$/;"	f	class:chemlib::LigDictionary
FindCIFIndices	libs/map/EMapBase.cpp	/^bool FindCIFIndices(FILE *fp, int &nrefl_start,$/;"	f
FindChiralCenters	libs/chemlib/Chiral.cpp	/^std::string FindChiralCenters(const Monomer &res, const std::vector<Bond> &bonds)$/;"	f	namespace:chemlib
FindChiralCenters	libs/chemlib/Chiral.cpp	/^std::string FindChiralCenters(const Residue *res, std::vector<Bond> &bonds, bool copyChiralClasses)$/;"	f	namespace:chemlib
FindContacts	apps/MIFit/ui/Displaylist.cpp	/^int Displaylist::FindContacts(MIAtom *a, Residue *r, float cutoff)$/;"	f	class:Displaylist
FindDistance	libs/conflib/CoordGenerator.cpp	/^sdgDistance FindDistance(MIAtom *a1, MIAtom *a2, std::vector<sdgDistance> &dists)$/;"	f	namespace:conflib
FindGeom	libs/chemlib/MIMolDictionary.cpp	/^int MIMolDictionary::FindGeom(Residue *reslist, int nres, Residue *ResActiveModel)$/;"	f	class:chemlib::MIMolDictionary
FindGeomErrors	apps/MIFit/core/GeomRefiner.cpp	/^unsigned long GeomRefiner::FindGeomErrors(Molecule *model, float error_threshold)$/;"	f	class:GeomRefiner
FindHMSymbol	libs/map/CMapHeaderBase.cpp	/^int CMapHeaderBase::FindHMSymbol(const char *test)$/;"	f	class:CMapHeaderBase
FindLastModelItem	apps/MIFit/ui/ModelsView.cpp	/^QTreeWidgetItem*ModelsTree::FindLastModelItem()$/;"	f	class:ModelsTree
FindLoop	libs/chemlib/CifData.cpp	/^bool CifDataBlock::FindLoop(std::string category, CifLoop &loop)$/;"	f	class:CifDataBlock
FindModel	apps/MIFit/ui/MIGLWidget.cpp	/^static Molecule *FindModel(const std::string &mname, Displaylist *dl, bool or_current = false)$/;"	f	file:
FindNeighbours	libs/molopt/MIMolOpt.cpp	/^int MIMolOpt::FindNeighbours(MIAtomList &CurrentAtoms, MIAtomList &Neighbours,$/;"	f	class:MIMolOpt
FindRingSystems	libs/chemlib/Ligand.cpp	/^int Ligand::FindRingSystems()$/;"	f	class:chemlib::Ligand
FindSpacegroup	libs/map/CMapHeaderBase.cpp	/^int CMapHeaderBase::FindSpacegroup(const char *value)$/;"	f	class:CMapHeaderBase
FiniteConfs	libs/conflib/ConfIterator.h	/^        virtual bool FiniteConfs() const$/;"	f	class:conflib::ConfEnumerator
FiniteConfs	libs/conflib/ConfIterator.h	/^        virtual bool FiniteConfs() const$/;"	f	class:conflib::ConfSampler
FirstItem	apps/MIFit/ui/Displaylist.h	/^inline Molecule*Displaylist::FirstItem()$/;"	f	class:Displaylist
FitOK	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::FitOK()$/;"	f	class:MIGLWidget
FitToXYPlane	libs/chemlib/transform_util.cpp	/^void FitToXYPlane(Ligand *mol)$/;"	f	namespace:chemlib
FitToken	apps/MIFit/ui/MIGLWidget.h	/^    unsigned int FitToken;$/;"	m	class:MIGLWidget
FitTorsion	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::FitTorsion(const char *t)$/;"	f	class:MIGLWidget
FiveFoThreeFc	libs/map/maptypes.h	/^    const unsigned int FiveFoThreeFc = 7;$/;"	m	namespace:MIMapType
FixAtomicNumbers	libs/chemlib/Ligand.cpp	/^void Ligand::FixAtomicNumbers()$/;"	f	class:chemlib::Ligand
FixAtomicNumbers	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::FixAtomicNumbers()$/;"	f	class:chemlib::MIMoleculeBase
FixChains	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::FixChains()$/;"	f	class:chemlib::MIMoleculeBase
FixExocyclics	libs/chemlib/RingSystem.cpp	/^void RingSystem::FixExocyclics()$/;"	f	class:chemlib::RingSystem
FixHeaders	apps/MIFit/core/Molecule.cpp	/^void Molecule::FixHeaders(std::vector<std::string> &headers)$/;"	f	class:Molecule
FixHeaders	libs/chemlib/MIMoleculeBase.h	/^        virtual void FixHeaders(std::vector<std::string>&)$/;"	f	class:chemlib::MIMoleculeBase
Flatten	libs/chemlib/Ligand.cpp	/^void Ligand::Flatten()$/;"	f	class:chemlib::Ligand
Flatten	libs/chemlib/RingSystem.cpp	/^void RingSystem::Flatten()$/;"	f	class:chemlib::RingSystem
FlattenRings	libs/chemlib/Ligand.cpp	/^void Ligand::FlattenRings()$/;"	f	class:chemlib::Ligand
FlexTorsion	libs/conflib/FlexTorsion.cpp	/^FlexTorsion::FlexTorsion(const FlexTorsion &rhs)$/;"	f	class:FlexTorsion
FlexTorsion	libs/conflib/FlexTorsion.cpp	/^FlexTorsion::FlexTorsion(const TORSION &t, const std::vector<Bond> &bonds, bool set)$/;"	f	class:FlexTorsion
FlexTorsion	libs/conflib/FlexTorsion.h	/^    class FlexTorsion$/;"	c	namespace:conflib
FlipAtoms	libs/chemlib/transform_util.cpp	/^void FlipAtoms(Bond &bond, MIAtomList &atoms)$/;"	f	namespace:chemlib
FlipBond	libs/chemlib/Ligand.cpp	/^void Ligand::FlipBond(Bond &bond)$/;"	f	class:chemlib::Ligand
Flush	apps/MIFit/core/Cfiles.cpp	/^void CArchive::Flush()$/;"	f	class:CArchive
Fo	libs/map/maptypes.h	/^    const unsigned int Fo = 0;$/;"	m	namespace:MIMapType
FoFc	libs/map/maptypes.h	/^    const unsigned int FoFc = 3;$/;"	m	namespace:MIMapType
FoFcSigmaA	libs/map/maptypes.h	/^    const unsigned int FoFcSigmaA = 9;$/;"	m	namespace:MIMapType
FoFo	libs/map/maptypes.h	/^    const unsigned int FoFo = 4;$/;"	m	namespace:MIMapType
Fofom	libs/map/maptypes.h	/^    const unsigned int Fofom = 5;$/;"	m	namespace:MIMapType
ForceAbort	apps/MIFit/ui/Application.cpp	/^void MIBusyManager::ForceAbort()$/;"	f	class:MIBusyManager
FosValid	libs/map/EMapBase.h	/^    bool FosValid;$/;"	m	class:EMapBase
FreeBonds	libs/chemlib/Ligand.cpp	/^void Ligand::FreeBonds()$/;"	f	class:chemlib::Ligand
FreeBonds	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::FreeBonds()$/;"	f	class:chemlib::MIMoleculeBase
FreeDots	apps/MIFit/core/Molecule.cpp	/^void Molecule::FreeDots()$/;"	f	class:Molecule
FreeRSet	libs/map/EMapBase.h	/^    bool FreeRSet;$/;"	m	class:EMapBase
FreeResidueList	libs/chemlib/Residue.cpp	/^void FreeResidueList(Residue *reslist)$/;"	f	namespace:chemlib
Frustum	libs/opengl/Frustum.cpp	/^Frustum::Frustum()$/;"	f	class:mi::opengl::Frustum
Frustum	libs/opengl/Frustum.h	/^        class Frustum$/;"	c	namespace:mi::opengl
FtoC	libs/map/CMapHeaderBase.h	/^    void FtoC(float *x, float *y, float *z) const$/;"	f	class:CMapHeaderBase
FullOptimize	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::FullOptimize(MIAtomList &CurrentAtoms, MIMoleculeBase *fitmol, EMapBase *emap, const float *center,$/;"	f	class:MIMolOpt
FullScreen	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::FullScreen(bool full)$/;"	f	class:MIGLWidget
GA	libs/chemlib/RefmacType.h	/^    const unsigned int GA   = 154;$/;"	m	namespace:RefmacType
GD	libs/chemlib/RefmacType.h	/^    const unsigned int GD   = 112;$/;"	m	namespace:RefmacType
GE	libs/chemlib/RefmacType.h	/^    const unsigned int GE   = 90;$/;"	m	namespace:RefmacType
GE1	libs/chemlib/RefmacType.h	/^    const unsigned int GE1  = 91;$/;"	m	namespace:RefmacType
GENERAL_PREFERENCES_H	apps/MIFit/ui/GeneralPreferences.h	2;"	d
GLFORMATDIALOG_H	apps/MIFit/ui/GLFormatDialog.h	2;"	d
GLFORMATEDIT_H	apps/MIFit/ui/GLFormatEdit.h	2;"	d
GLFormatDialog	apps/MIFit/ui/GLFormatDialog.cpp	/^GLFormatDialog::GLFormatDialog(QWidget *parent)$/;"	f	class:GLFormatDialog
GLFormatDialog	apps/MIFit/ui/GLFormatDialog.h	/^class GLFormatDialog : public QDialog$/;"	c
GLFormatDialog	apps/MIFit/ui/ui_GLFormatDialog.h	/^    class GLFormatDialog: public Ui_GLFormatDialog {};$/;"	c	namespace:Ui
GLFormatEdit	apps/MIFit/ui/GLFormatEdit.cpp	/^GLFormatEdit::GLFormatEdit(QWidget *parent)$/;"	f	class:GLFormatEdit
GLFormatEdit	apps/MIFit/ui/GLFormatEdit.h	/^class GLFormatEdit : public QDialog$/;"	c
GLFormatEdit	apps/MIFit/ui/ui_GLFormatEdit.h	/^    class GLFormatEdit: public Ui_GLFormatEdit {};$/;"	c	namespace:Ui
GLOBAL	apps/MIFit/ui/Application.cpp	47;"	d	file:
GLOverviewCanvas	apps/MIFit/ui/GLOverviewCanvas.cpp	/^GLOverviewCanvas::GLOverviewCanvas(QWidget *parent)$/;"	f	class:GLOverviewCanvas
GLOverviewCanvas	apps/MIFit/ui/GLOverviewCanvas.h	/^class GLOverviewCanvas : public QGLWidget$/;"	c
GLRenderer	apps/MIFit/ui/GLRenderer.cpp	/^GLRenderer::GLRenderer()$/;"	f	class:GLRenderer
GLRenderer	apps/MIFit/ui/GLRenderer.h	/^class GLRenderer$/;"	c
GPallette	apps/MIFit/core/Colors.cpp	/^unsigned char Colors::GPallette[Colors_NUMBERPALETTE];$/;"	m	class:Colors	file:
GPallette	apps/MIFit/core/Colors.h	/^    static unsigned char GPallette[Colors_NUMBERPALETTE];$/;"	m	class:Colors
GRABBITS	libs/opengl/zlib/inffast.cpp	21;"	d	file:
GREEN	apps/MIFit/core/Colors.cpp	/^const int Colors::GREEN = 5;$/;"	m	class:Colors	file:
GREEN	apps/MIFit/core/Colors.h	/^    static const int GREEN;$/;"	m	class:Colors
GR_AUTO	apps/MIFit/ui/asplib.cpp	/^const float asplib::GR_AUTO = 1234567.89f;$/;"	m	class:asplib	file:
GR_AUTO	apps/MIFit/ui/asplib.h	/^    static const float GR_AUTO;$/;"	m	class:asplib
GR_BOX	apps/MIFit/ui/asplib.cpp	/^const int asplib::GR_BOX = 64;$/;"	m	class:asplib	file:
GR_BOX	apps/MIFit/ui/asplib.h	/^    static const int GR_BOX;$/;"	m	class:asplib
GR_BREAK	apps/MIFit/ui/asplib.cpp	/^const int asplib::GR_BREAK = 1;$/;"	m	class:asplib	file:
GR_BREAK	apps/MIFit/ui/asplib.h	/^    static const int GR_BREAK;$/;"	m	class:asplib
GR_CIRCLE	apps/MIFit/ui/asplib.cpp	/^const int asplib::GR_CIRCLE = 128;$/;"	m	class:asplib	file:
GR_CIRCLE	apps/MIFit/ui/asplib.h	/^    static const int GR_CIRCLE;$/;"	m	class:asplib
GR_CROSS	apps/MIFit/ui/asplib.cpp	/^const int asplib::GR_CROSS = 32;$/;"	m	class:asplib	file:
GR_CROSS	apps/MIFit/ui/asplib.h	/^    static const int GR_CROSS;$/;"	m	class:asplib
GR_CUBEDTORES	apps/MIFit/ui/asplib.cpp	/^const int asplib::GR_CUBEDTORES = 1;$/;"	m	class:asplib	file:
GR_CUBEDTORES	apps/MIFit/ui/asplib.h	/^    static const int GR_CUBEDTORES;$/;"	m	class:asplib
GR_DASH	apps/MIFit/ui/asplib.cpp	/^const int asplib::GR_DASH = 256;$/;"	m	class:asplib	file:
GR_DASH	apps/MIFit/ui/asplib.h	/^    static const int GR_DASH;$/;"	m	class:asplib
GR_LABEL	apps/MIFit/ui/asplib.cpp	/^const int asplib::GR_LABEL = 512;$/;"	m	class:asplib	file:
GR_LABEL	apps/MIFit/ui/asplib.h	/^    static const int GR_LABEL;$/;"	m	class:asplib
GR_POINT	apps/MIFit/ui/asplib.cpp	/^const int asplib::GR_POINT = 8192;$/;"	m	class:asplib	file:
GR_POINT	apps/MIFit/ui/asplib.h	/^    static const int GR_POINT;$/;"	m	class:asplib
GR_POINT	apps/MIFit/ui/graphlib.h	/^    GR_POINT() : data(0), color(GraphColor(255, 255, 255)), width(1)$/;"	f	class:GR_POINT
GR_POINT	apps/MIFit/ui/graphlib.h	/^class GR_POINT$/;"	c
GR_SMALLBOX	apps/MIFit/ui/asplib.cpp	/^const int asplib::GR_SMALLBOX = 2048;$/;"	m	class:asplib	file:
GR_SMALLBOX	apps/MIFit/ui/asplib.h	/^    static const int GR_SMALLBOX;$/;"	m	class:asplib
GR_SMALLCIRCLE	apps/MIFit/ui/asplib.cpp	/^const int asplib::GR_SMALLCIRCLE = 4096;$/;"	m	class:asplib	file:
GR_SMALLCIRCLE	apps/MIFit/ui/asplib.h	/^    static const int GR_SMALLCIRCLE;$/;"	m	class:asplib
GR_SMALLCROSS	apps/MIFit/ui/asplib.cpp	/^const int asplib::GR_SMALLCROSS = 1024;$/;"	m	class:asplib	file:
GR_SMALLCROSS	apps/MIFit/ui/asplib.h	/^    static const int GR_SMALLCROSS;$/;"	m	class:asplib
GammaCorrection	apps/MIFit/ui/Application.h	/^    int GammaCorrection;$/;"	m	class:Application
GatherAtmPtrs	libs/chemlib/mol_util.cpp	/^void GatherAtmPtrs(MIAtomList &target, const std::vector<Monomer*> &source)$/;"	f	namespace:chemlib
GatherAtomConstraints	libs/conflib/CoordGenerator.cpp	/^void CoordGenerator::GatherAtomConstraints(MIAtom *atom)$/;"	f	class:CoordGenerator
GatherFlexAtoms	libs/conflib/FlexTorsion.cpp	/^void GatherFlexAtoms(const AtomGraphIndex *distances, const Residue *res, std::vector<MIAtom*> &atoms)$/;"	f	namespace:conflib
GenChirals	libs/chemlib/Dictionary.cpp	/^void LigDictionary::GenChirals()$/;"	f	class:chemlib::LigDictionary
GenDoubleBondImpropers	libs/chemlib/Dictionary.cpp	/^void LigDictionary::GenDoubleBondImpropers()$/;"	f	class:chemlib::LigDictionary
GenMolStruct	libs/conflib/CoordGenerator.cpp	/^double CoordGenerator::GenMolStruct(std::string &log)$/;"	f	class:CoordGenerator
GenSymmAtoms	apps/MIFit/core/Molecule.cpp	/^void Molecule::GenSymmAtoms(ViewPoint *viewpoint)$/;"	f	class:Molecule
GenTorsions	libs/chemlib/Dictionary.cpp	/^void LigDictionary::GenTorsions()$/;"	f	class:chemlib::LigDictionary
General	apps/MIFit/ui/rama.h	/^    const unsigned int General = 0;$/;"	m	namespace:RamaPlotType
GeneralPreferences	apps/MIFit/ui/GeneralPreferences.cpp	/^GeneralPreferences::GeneralPreferences(QWidget *parent)$/;"	f	class:GeneralPreferences
GeneralPreferences	apps/MIFit/ui/GeneralPreferences.h	/^class GeneralPreferences : public QWidget, public Ui::GeneralPreferences$/;"	c
GeneralPreferences	apps/MIFit/ui/ui_GeneralPreferences.h	/^    class GeneralPreferences: public Ui_GeneralPreferences {};$/;"	c	namespace:Ui
GeneralPrefsGroupBox	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QGroupBox *GeneralPrefsGroupBox;$/;"	m	class:Ui_GeneralPreferences
GenerateConfs	libs/conflib/ConfIterator.cpp	/^int ConfEnumerator::GenerateConfs(ConfSaver &confs, int max)$/;"	f	class:conflib::ConfEnumerator
GenerateConfs	libs/conflib/ConfIterator.cpp	/^int ConfSampler::GenerateConfs(ConfSaver &confs, int max)$/;"	f	class:conflib::ConfSampler
GenerateConnTable	libs/chemlib/Aromatic.cpp	/^void Aromatic::GenerateConnTable()$/;"	f	class:chemlib::Aromatic
GenerateConnTable	libs/chemlib/RingSystem.cpp	/^void RingSystem::GenerateConnTable()$/;"	f	class:chemlib::RingSystem
GenerateConstraints	libs/ligand/LigPostProcessor.cpp	/^void LigPostProcessor::GenerateConstraints()$/;"	f	class:LigPostProcessor
GenerateConstraints	libs/ligand/LigPostProcessor.cpp	/^void LigPostProcessor::GenerateConstraints(bool allConstraints)$/;"	f	class:LigPostProcessor
GenerateCoordinates	libs/conflib/confgen.cpp	/^void GenerateCoordinates(Ligand *lig, std::string &log)$/;"	f	namespace:conflib
GenerateCoordinates	libs/conflib/confgen.cpp	/^void GenerateCoordinates(Residue *res,$/;"	f	namespace:conflib
GenerateCoordinates	libs/ligand/LigPostProcessor.cpp	/^void LigPostProcessor::GenerateCoordinates()$/;"	f	class:LigPostProcessor
GenerateDictionary	libs/conflib/confgen.cpp	/^void GenerateDictionary(Residue *res,$/;"	f	namespace:conflib
GenerateEnsemble	libs/conflib/confgen.cpp	/^int GenerateEnsemble(Residue *res,$/;"	f	namespace:conflib
GenerateImpropers	libs/chemlib/Aromatic.cpp	/^void Aromatic::GenerateImpropers(LigDictionary &dict) const$/;"	f	class:chemlib::Aromatic
GenerateImpropers	libs/chemlib/RingSystem.cpp	/^void RingSystem::GenerateImpropers(LigDictionary &dict)$/;"	f	class:chemlib::RingSystem
GeneratePlane	libs/chemlib/Aromatic.cpp	/^void Aromatic::GeneratePlane(LigDictionary &dict) const$/;"	f	class:chemlib::Aromatic
GeneratePlanes	libs/chemlib/RingSystem.cpp	/^void RingSystem::GeneratePlanes(LigDictionary &dict)$/;"	f	class:chemlib::RingSystem
GenerateSRData	libs/chemlib/Aromatic.cpp	/^void Aromatic::GenerateSRData()$/;"	f	class:chemlib::Aromatic
GenerateSRData	libs/chemlib/RingSystem.cpp	/^void RingSystem::GenerateSRData()$/;"	f	class:chemlib::RingSystem
GenericDataDialog	apps/MIFit/ui/GenericDataDialog.cpp	/^GenericDataDialog::GenericDataDialog(QWidget *parent, Qt::WindowFlags f)$/;"	f	class:GenericDataDialog
GenericDataDialog	apps/MIFit/ui/GenericDataDialog.h	/^class GenericDataDialog : public QDialog$/;"	c
GeomRefiner	apps/MIFit/core/GeomRefiner.h	/^class GeomRefiner : public MIMolOpt$/;"	c
GeomSaver	libs/chemlib/GeomSaver.cpp	/^GeomSaver::GeomSaver()$/;"	f	class:chemlib::GeomSaver
GeomSaver	libs/chemlib/GeomSaver.h	/^    class GeomSaver$/;"	c	namespace:chemlib
Geom_error	apps/MIFit/core/Annotation.h	/^        Geom_error,$/;"	e	enum:Annotation::__anon1
GetAlpha2	libs/chemlib/MIMolDictionary.h	/^        Residue *GetAlpha2()$/;"	f	class:chemlib::MIMolDictionary
GetAngle	libs/chemlib/Constraint.h	/^        double GetAngle(int i) const$/;"	f	class:chemlib::Improper
GetAngleLength	libs/chemlib/Constraint.cpp	/^float ConstraintList::GetAngleLength(const MIAtom *a1, const MIAtom *a2, const MIAtom *a3) const$/;"	f	class:chemlib::ConstraintList
GetAngleWeightI	libs/molopt/MIMolOpt.h	/^    int GetAngleWeightI()$/;"	f	class:MIMolOpt
GetAromaticSys	libs/chemlib/RingSystem.cpp	/^Aromatic*RingSystem::GetAromaticSys(const Bond *bond)$/;"	f	class:chemlib::RingSystem
GetAromaticSys	libs/chemlib/RingSystem.cpp	/^Aromatic*RingSystem::GetAromaticSys(const MIAtom *atom)$/;"	f	class:chemlib::RingSystem
GetAromaticSys	libs/chemlib/RingSystem.cpp	/^Aromatic*RingSystem::GetAromaticSys(const MIAtom *atom1,$/;"	f	class:chemlib::RingSystem
GetAtom	apps/MIFit/core/Molecule.cpp	/^MIAtom*Molecule::GetAtom(int natom)$/;"	f	class:Molecule
GetAtom	libs/chemlib/Constraint.cpp	/^MIAtom*Improper::GetAtom(int x_atom)$/;"	f	class:chemlib::Improper
GetAtom	libs/chemlib/Constraint.cpp	/^MIAtom*Plane::GetAtom(int x_atom)$/;"	f	class:chemlib::Plane
GetAtom	libs/chemlib/Constraint.cpp	/^const MIAtom*Improper::GetAtom(int x_atom) const$/;"	f	class:chemlib::Improper
GetAtom	libs/chemlib/MIMoleculeBase.cpp	/^MIAtom*MIMoleculeBase::GetAtom(int natom)$/;"	f	class:chemlib::MIMoleculeBase
GetAtomIndex	libs/chemlib/Aromatic.cpp	/^int Aromatic::GetAtomIndex(const MIAtom *query) const$/;"	f	class:chemlib::Aromatic
GetAtomIndex	libs/chemlib/RingSystem.cpp	/^int RingSystem::GetAtomIndex(const MIAtom *query) const$/;"	f	class:chemlib::RingSystem
GetAtomIndex	libs/chemlib/atom_util.cpp	/^int GetAtomIndex(const MIAtom *patm, const Residue &res)$/;"	f	namespace:chemlib
GetBFactor	libs/jacgrid/atom.cpp	/^float JACAtomsMerge::GetBFactor(unsigned int i) const$/;"	f	class:JACAtomsMerge
GetBFactor	libs/jacgrid/atom.cpp	/^float JACAtomsXYZROTE::GetBFactor(unsigned int i) const$/;"	f	class:JACAtomsXYZROTE
GetBFactor	libs/jacgrid/atom.h	/^    float GetBFactor(unsigned int) const$/;"	f	class:JACAtomsXYZR
GetBackgroundColor	apps/MIFit/ui/Application.h	/^    PaletteColor GetBackgroundColor()$/;"	f	class:Application
GetBallSize	apps/MIFit/ui/ViewPointSettings.cpp	/^int ViewPointSettings::GetBallSize()$/;"	f	class:ViewPointSettings
GetBallandStick	apps/MIFit/ui/ViewPointSettings.cpp	/^int ViewPointSettings::GetBallandStick()$/;"	f	class:ViewPointSettings
GetBeta2	libs/chemlib/MIMolDictionary.h	/^        Residue *GetBeta2()$/;"	f	class:chemlib::MIMolDictionary
GetBinDirectory	apps/MIFit/ui/Application.cpp	/^const std::string&Application::GetBinDirectory()$/;"	f	class:Application
GetBond	libs/chemlib/Ligand.cpp	/^Bond*Ligand::GetBond(const MIAtom *a1, const MIAtom *a2)$/;"	f	class:chemlib::Ligand
GetBond	libs/chemlib/Ligand.cpp	/^Bond*Ligand::GetBond(int index)$/;"	f	class:chemlib::Ligand
GetBond	libs/chemlib/Ligand.cpp	/^const Bond*Ligand::GetBond(int index) const$/;"	f	class:chemlib::Ligand
GetBond	libs/chemlib/atom_util.h	/^    GetBond(const MIAtom *atom1,$/;"	f	namespace:chemlib
GetBondLength	libs/chemlib/Constraint.cpp	/^float ConstraintList::GetBondLength(const MIAtom *a1, const MIAtom *a2) const$/;"	f	class:chemlib::ConstraintList
GetBondOrder	apps/MIFit/ui/DictEditCanvas.cpp	/^float DictEditCanvas::GetBondOrder(Bond *e)$/;"	f	class:DictEditCanvas
GetBondOrder	apps/MIFit/ui/DictEditCanvas.cpp	/^float DictEditCanvas::GetBondOrder(unsigned char c)$/;"	f	class:DictEditCanvas
GetBondOrder	apps/MIFit/ui/DictEditCanvas.cpp	/^float DictEditCanvas::GetBondOrder(vector<Bond> &edges)$/;"	f	class:DictEditCanvas
GetBondOrder	apps/MIFit/ui/DictEditCanvas.cpp	/^unsigned char DictEditCanvas::GetBondOrder(float c)$/;"	f	class:DictEditCanvas
GetBondOrder	libs/chemlib/mmCIF.cpp	/^std::string mmCIF::GetBondOrder(unsigned char c)$/;"	f	class:chemlib::mmCIF
GetBondWeightI	libs/molopt/MIMolOpt.h	/^    int GetBondWeightI()$/;"	f	class:MIMolOpt
GetBonds	libs/chemlib/mmCIF.cpp	/^void mmCIF::GetBonds(MIAtom *atom, vector<Bond*> &bondlist,$/;"	f	class:chemlib::mmCIF
GetBumpWeightI	libs/molopt/MIMolOpt.h	/^    int GetBumpWeightI()$/;"	f	class:MIMolOpt
GetBumps	libs/conflib/bumps.cpp	/^void GetBumps(const Residue *res, std::vector<Bond> &bumps, const std::vector<Bond> &bonds)$/;"	f	namespace:conflib
GetCategory	libs/chemlib/CifData.cpp	/^std::string GetCategory(const std::vector<std::string> &names)$/;"	f
GetCenter	libs/chemlib/Chiral.cpp	/^MIAtom*Chiral::GetCenter()$/;"	f	class:chemlib::Chiral
GetCenter	libs/molopt/MIMolOpt.cpp	/^static void GetCenter(MIAtomList &atoms, float &cx, float &cy, float &cz)$/;"	f	file:
GetChanged	libs/map/EMapBase.h	/^    bool GetChanged()$/;"	f	class:EMapBase
GetConfs	libs/chemlib/MIMolDictionary.cpp	/^bool GetConfs(GeomSaver &confs, Residue *res, MIMolDictionary *dict, MIMoleculeBase *model, unsigned int max)$/;"	f	namespace:chemlib
GetConstrainCA	libs/chemlib/MIMolDictionary.h	/^        bool GetConstrainCA()$/;"	f	class:chemlib::MIMolDictionary
GetConstrainEnds	libs/chemlib/MIMolDictionary.h	/^        bool GetConstrainEnds()$/;"	f	class:chemlib::MIMolDictionary
GetConstraints	libs/chemlib/Ligand.cpp	/^void Ligand::GetConstraints(const MIAtomList &mifit_atms,$/;"	f	class:chemlib::Ligand
GetCoord	libs/jacgrid/atom.cpp	/^const float*JACAtomsMerge::GetCoord(unsigned int i) const$/;"	f	class:JACAtomsMerge
GetCoord	libs/jacgrid/atom.cpp	/^const float*JACAtomsXYZR::GetCoord(unsigned int i) const$/;"	f	class:JACAtomsXYZR
GetCount	libs/jacgrid/atom.cpp	/^unsigned int JACAtomsMerge::GetCount() const$/;"	f	class:JACAtomsMerge
GetCount	libs/jacgrid/atom.cpp	/^unsigned int JACAtomsXYZR::GetCount() const$/;"	f	class:JACAtomsXYZR
GetCovExocyclics	libs/chemlib/RingSystem.cpp	/^void RingSystem::GetCovExocyclics(std::vector<std::pair <MIAtom*, MIAtom*> > *exocycs)$/;"	f	class:chemlib::RingSystem
GetCrystalCell	apps/MIFit/ui/Application.cpp	/^bool Application::GetCrystalCell(const char *crystal, float &a, float &b, float &c,$/;"	f	class:Application
GetCrystalData	apps/MIFit/ui/Application.cpp	/^std::string Application::GetCrystalData(const char *crystal, const char *key)$/;"	f	class:Application
GetCrystalData	apps/MIFit/ui/Application.h	/^    const std::string&GetCrystalData()$/;"	f	class:Application
GetCrystalNCSSymmops	apps/MIFit/ui/Application.cpp	/^int Application::GetCrystalNCSSymmops(const char *crystal, float ncrsymm[MISymmop::MAXNCRSYMMOPS][12])$/;"	f	class:Application
GetCurrentAtomsTree	apps/MIFit/ui/ModelsView.cpp	/^AtomsTree*ModelsView::GetCurrentAtomsTree() const$/;"	f	class:ModelsView
GetCurrentMap	apps/MIFit/ui/Displaylist.h	/^inline EMap*Displaylist::GetCurrentMap()$/;"	f	class:Displaylist
GetCurrentModel	apps/MIFit/ui/Displaylist.h	/^inline Molecule*Displaylist::GetCurrentModel()$/;"	f	class:Displaylist
GetCurrentModel	libs/molopt/MIMolOpt.h	/^    chemlib::MIMoleculeBase *GetCurrentModel()$/;"	f	class:MIMolOpt
GetCurrentModelsTree	apps/MIFit/ui/ModelsView.cpp	/^ModelsTree*ModelsView::GetCurrentModelsTree() const$/;"	f	class:ModelsView
GetCurrentResiduesTree	apps/MIFit/ui/ModelsView.cpp	/^ResiduesTree*ModelsView::GetCurrentResiduesTree() const$/;"	f	class:ModelsView
GetCylinderSize	apps/MIFit/ui/ViewPointSettings.cpp	/^int ViewPointSettings::GetCylinderSize()$/;"	f	class:ViewPointSettings
GetData	apps/MIFit/ui/AtomColors.cpp	/^void AtomColors::GetData(std::vector<std::string> &atomNames,$/;"	f	class:AtomColors
GetData	apps/MIFit/ui/BValueColors.cpp	/^void BValueColors::GetData(ColorValues &data)$/;"	f	class:BValueColors
GetData	apps/MIFit/ui/ContourOptionsWidget.cpp	/^void ContourOptionsWidget::GetData(MapSettingsBase &data)$/;"	f	class:ContourOptionsWidget
GetData	apps/MIFit/ui/LSQFitDialog.cpp	/^LSQFitDialog::Data LSQFitDialog::GetData()$/;"	f	class:LSQFitDialog
GetData	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::GetData(Data &data)$/;"	f	class:PhaseFileLoadDialog
GetData	apps/MIFit/ui/graphlib.h	/^    const std::vector<GR_POINT>&GetData()$/;"	f	class:GraphWindow
GetDictAngles	libs/chemlib/MIMolDictionary.cpp	/^vector<ANGLE>*MIMolDictionary::GetDictAngles(const char *type, int nconformer)$/;"	f	class:chemlib::MIMolDictionary
GetDictBonds	libs/chemlib/MIMolDictionary.cpp	/^vector<Bond>*MIMolDictionary::GetDictBonds(const char *type, int nconformer)$/;"	f	class:chemlib::MIMolDictionary
GetDictEntry	libs/chemlib/MIMolDictionary.cpp	/^dict_map::iterator MIMolDictionary::GetDictEntry(const char *type, int nconformer)$/;"	f	class:chemlib::MIMolDictionary
GetDictRes	apps/MIFit/ui/MIGLWidget.cpp	/^Residue*MIGLWidget::GetDictRes(const char *key, int confomer)$/;"	f	class:MIGLWidget
GetDictRes	apps/MIFit/ui/MIGLWidget.cpp	/^Residue*MIGLWidget::GetDictRes(const char key_single, int confomer)$/;"	f	class:MIGLWidget
GetDictResList	apps/MIFit/core/GeomRefiner.cpp	/^vector<std::string> GetDictResList(GeomRefiner *gr)$/;"	f
GetDictResList	apps/MIFit/ui/MIGLWidget.cpp	/^vector<std::string> MIGLWidget::GetDictResList()$/;"	f	class:MIGLWidget
GetDictResList	libs/chemlib/MIMolDictionary.cpp	/^vector<std::string> MIMolDictionary::GetDictResList()$/;"	f	class:chemlib::MIMolDictionary
GetDictResidue	libs/chemlib/MIMolDictionary.cpp	/^Residue*MIMolDictionary::GetDictResidue(const char *type, int nconformer)$/;"	f	class:chemlib::MIMolDictionary
GetDictResidue	libs/chemlib/MIMolDictionary.cpp	/^Residue*MIMolDictionary::GetDictResidue(const char single, int nconformer)$/;"	f	class:chemlib::MIMolDictionary
GetDisplaylist	apps/MIFit/ui/MIGLWidget.h	/^    Displaylist *GetDisplaylist()$/;"	f	class:MIGLWidget
GetDots	apps/MIFit/core/Molecule.h	/^inline SURFDOT*Molecule::GetDots()$/;"	f	class:Molecule
GetDoublePartner	libs/chemlib/atom_util.cpp	/^MIAtom *GetDoublePartner(const MIAtom *atom, std::vector<Bond> &bonds)$/;"	f	namespace:chemlib
GetElement	libs/jacgrid/atom.cpp	/^unsigned short JACAtomsMerge::GetElement(unsigned int i) const$/;"	f	class:JACAtomsMerge
GetElement	libs/jacgrid/atom.cpp	/^unsigned short JACAtomsXYZROTE::GetElement(unsigned int i) const$/;"	f	class:JACAtomsXYZROTE
GetElement	libs/jacgrid/atom.h	/^    unsigned short GetElement(unsigned int) const$/;"	f	class:JACAtomsXYZR
GetEntry	libs/chemlib/molfile.cpp	/^bool MolPropertyLine::GetEntry(int &xAtom, int &value)$/;"	f	class:chemlib::MolPropertyLine
GetExocyclics	libs/chemlib/RingSystem.cpp	/^void RingSystem::GetExocyclics(std::vector<std::pair <MIAtom*, MIAtom*> > *exocycs) const$/;"	f	class:chemlib::RingSystem
GetFileHead	libs/chemlib/MIMoleculeBase.h	/^        std::vector<std::string> *GetFileHead()$/;"	f	class:chemlib::MIMoleculeBase
GetFileTail	libs/chemlib/MIMoleculeBase.h	/^        std::vector<std::string> *GetFileTail()$/;"	f	class:chemlib::MIMoleculeBase
GetFilename	apps/MIFit/ui/MIGLWidget.h	/^    std::string GetFilename() const$/;"	f	class:MIGLWidget
GetFlexibleTorsions	libs/chemlib/MIMolDictionary.cpp	/^int MIMolDictionary::GetFlexibleTorsions(vector <TORSION> &torsions, Residue *res) const$/;"	f	class:chemlib::MIMolDictionary
GetGammaCorrection	apps/MIFit/ui/Application.h	/^    double GetGammaCorrection()$/;"	f	class:Application
GetGeomRefiner	apps/MIFit/ui/Application.h	/^    GeomRefiner *GetGeomRefiner()$/;"	f	class:Application
GetHMSymbol	libs/map/CMapHeaderBase.cpp	/^const char*CMapHeaderBase::GetHMSymbol()$/;"	f	class:CMapHeaderBase
GetHardcodedDefaults	apps/MIFit/ui/MapSettings.cpp	/^static bool GetHardcodedDefaults(MapSettingsBase &settings, int styleno)$/;"	f	file:
GetHeavyNeighbor	libs/chemlib/MIAtom.h	/^    inline const MIAtom*MIAtom::GetHeavyNeighbor(const MIAtom *atom)$/;"	f	class:chemlib::MIAtom
GetIcon	apps/MIFit/ui/MIQTreeWidget.cpp	/^QIcon&MIQTreeWidget::GetIcon(unsigned int id)$/;"	f	class:MIQTreeWidget
GetId	apps/MIFit/ui/TreeData.h	/^    QTreeWidgetItem *GetId() const$/;"	f	class:TreeData
GetIdeal	libs/conflib/sdg.cpp	/^double sdgDistance::GetIdeal()$/;"	f	class:conflib::sdgDistance
GetIndex	libs/chemlib/Ligand.cpp	/^int Ligand::GetIndex(MIAtom *query, MIAtom **domain, int size)$/;"	f	class:chemlib::Ligand
GetIndex	libs/chemlib/sequence_util.h	/^    int GetIndex(const T query, const std::vector<T> &domain)$/;"	f	namespace:chemlib
GetItemData	apps/MIFit/ui/MIQTreeWidget.cpp	/^TreeData*MIQTreeWidget::GetItemData(QTreeWidgetItem *item)$/;"	f	class:MIQTreeWidget
GetJob	apps/MIFit/jobs/BatchJobManager.h	/^    BatchJob *GetJob(int i)$/;"	f	class:BatchJobManager
GetJobList	apps/MIFit/jobs/BatchJobManager.h	/^    std::vector<BatchJob*> *GetJobList()$/;"	f	class:BatchJobManager
GetJobManager	apps/MIFit/ui/MIMainWindow.cpp	/^BatchJobManager *MIMainWindow::GetJobManager()$/;"	f	class:MIMainWindow
GetLPpal	apps/MIFit/ui/Application.h	/^    MIPalette *GetLPpal()$/;"	f	class:Application
GetLineThickness	apps/MIFit/ui/ViewPointSettings.cpp	/^int ViewPointSettings::GetLineThickness()$/;"	f	class:ViewPointSettings
GetMTZColumnInfo	libs/map/EMapBase.cpp	/^bool EMapBase::GetMTZColumnInfo(const std::string &fname,$/;"	f	class:EMapBase
GetMap	apps/MIFit/ui/Displaylist.h	/^inline EMap*Displaylist::GetMap(int i)$/;"	f	class:Displaylist
GetMap	libs/molopt/MIMolOpt.h	/^    EMapBase *GetMap()$/;"	f	class:MIMolOpt
GetMapHeader	apps/MIFit/core/Molecule.h	/^inline CMapHeaderBase&Molecule::GetMapHeader()$/;"	f	class:Molecule
GetMapHeader	libs/map/EMapBase.h	/^    CMapHeaderBase *GetMapHeader()$/;"	f	class:EMapBase
GetMapLinewidth	libs/map/EMapBase.h	/^    float GetMapLinewidth()$/;"	f	class:EMapBase
GetMapNumber	libs/map/EMapBase.h	/^    int GetMapNumber()$/;"	f	class:EMapBase
GetMapSettingsForStyle	apps/MIFit/ui/MapSettings.cpp	/^bool GetMapSettingsForStyle(int styleno, MapSettingsBase &settings, bool hardcodedOnly)$/;"	f
GetMapTypes	libs/map/EMapBase.cpp	/^bool EMapBase::GetMapTypes(std::vector<unsigned int> &maptypes,$/;"	f	class:EMapBase
GetMapWeightI	libs/molopt/MIMolOpt.h	/^    int GetMapWeightI()$/;"	f	class:MIMolOpt
GetMatrix	libs/math/LSQMatrix.cpp	/^void LSQMatrix::GetMatrix(double m[3][3], double v[3])$/;"	f	class:LSQMatrix
GetMaxDistance	apps/MIFit/core/clusterList.h	/^    float GetMaxDistance()$/;"	f	class:ClusterList
GetModelsTree	apps/MIFit/ui/MIMainWindow.h	/^    ViewSyncedPanel *GetModelsTree()$/;"	f	class:MIMainWindow
GetModified	libs/chemlib/MIMolDictionary.h	/^        bool GetModified()$/;"	f	class:chemlib::MIMolDictionary
GetModified	libs/chemlib/MIMoleculeBase.h	/^        bool GetModified() const$/;"	f	class:chemlib::MIMoleculeBase
GetMolimageHome	apps/MIFit/ui/Application.h	/^    const std::string&GetMolimageHome() const$/;"	f	class:Application
GetNabor	libs/chemlib/Ligand.cpp	/^MIAtom*Ligand::GetNabor(const MIAtom *source, int nabor_index)$/;"	f	class:chemlib::Ligand
GetNabors	libs/chemlib/atom_util.cpp	/^void GetNabors(const MIAtom *atom,$/;"	f	namespace:chemlib
GetNewNabor	libs/chemlib/Ligand.cpp	/^MIAtom*Ligand::GetNewNabor(MIAtom *root, MIAtom *forbid)$/;"	f	class:chemlib::Ligand
GetNextBlock	libs/chemlib/CifParser.cpp	/^bool CifParser::GetNextBlock(CifDataBlock &block)$/;"	f	class:CifParser
GetNormal	libs/chemlib/RingSystem.cpp	/^void RingSystem::GetNormal(std::vector<double> &normal) const$/;"	f	class:chemlib::RingSystem
GetNumAtoms	libs/chemlib/Ligand.cpp	/^int Ligand::GetNumAtoms() const$/;"	f	class:chemlib::Ligand
GetNumHydrogens	libs/chemlib/atom_util.h	/^    inline int GetNumHydrogens(const MIAtom &atom)$/;"	f	namespace:chemlib
GetNumber	libs/chemlib/SmilesReader.cpp	/^int SmilesReader::GetNumber()$/;"	f	class:chemlib::SmilesReader
GetNumberCycles	libs/conflib/AtomRefiner.h	/^        int GetNumberCycles()$/;"	f	class:conflib::AtomRefiner
GetNumberCycles	libs/conflib/LigRefiner.h	/^        int GetNumberCycles()$/;"	f	class:conflib::LigRefiner
GetNumberCycles	libs/molopt/MIMolOpt.h	/^    int GetNumberCycles()$/;"	f	class:MIMolOpt
GetNumberInDict	libs/chemlib/MIMolDictionary.cpp	/^unsigned int MIMolDictionary::GetNumberInDict(const char *type)$/;"	f	class:chemlib::MIMolDictionary
GetOccupancy	libs/jacgrid/atom.cpp	/^float JACAtomsMerge::GetOccupancy(unsigned int i) const$/;"	f	class:JACAtomsMerge
GetOccupancy	libs/jacgrid/atom.cpp	/^float JACAtomsXYZROTE::GetOccupancy(unsigned int i) const$/;"	f	class:JACAtomsXYZROTE
GetOccupancy	libs/jacgrid/atom.h	/^    float GetOccupancy(unsigned int) const$/;"	f	class:JACAtomsXYZR
GetOpenFilenames	apps/MIFit/ui/MIMainWindow.cpp	/^static bool GetOpenFilenames(std::vector<std::string> &fnames)$/;"	f	file:
GetOrder	libs/chemlib/Chiral.cpp	/^int Chiral::GetOrder()$/;"	f	class:chemlib::Chiral
GetPDBInfo	apps/MIFit/core/Molecule.cpp	/^void Molecule::GetPDBInfo(FILE *fp)$/;"	f	class:Molecule
GetPickedAtom	apps/MIFit/ui/Displaylist.h	/^inline chemlib::MIAtom*Displaylist::GetPickedAtom()$/;"	f	class:Displaylist
GetPickedMolecule	apps/MIFit/ui/Displaylist.h	/^inline Molecule*Displaylist::GetPickedMolecule()$/;"	f	class:Displaylist
GetPickedResidue	apps/MIFit/ui/Displaylist.h	/^inline chemlib::Residue*Displaylist::GetPickedResidue()$/;"	f	class:Displaylist
GetPid	apps/MIFit/ui/Application.cpp	/^long Application::GetPid()$/;"	f	class:Application
GetPlaneWeightI	libs/molopt/MIMolOpt.h	/^    int GetPlaneWeightI()$/;"	f	class:MIMolOpt
GetPossibleMapTypes	libs/map/EMapBase.cpp	/^bool EMapBase::GetPossibleMapTypes(const std::string &pathname,$/;"	f	class:EMapBase
GetRadius	libs/jacgrid/atom.cpp	/^float JACAtomsMerge::GetRadius(unsigned int i) const$/;"	f	class:JACAtomsMerge
GetRadius	libs/jacgrid/atom.cpp	/^float JACAtomsXYZR::GetRadius(unsigned int i) const$/;"	f	class:JACAtomsXYZR
GetReaderCount	libs/chemlib/MIMolIOBase.h	/^        unsigned int GetReaderCount() const$/;"	f	class:chemlib::MIMolIOBase
GetReaderDescription	libs/chemlib/MIMolIO.cpp	/^std::string MIMolIOBase::GetReaderDescription(unsigned int idx) const$/;"	f	class:chemlib::MIMolIOBase
GetRefiSecStruct	libs/chemlib/MIMolDictionary.h	/^        bool GetRefiSecStruct()$/;"	f	class:chemlib::MIMolDictionary
GetRefineWhileFit	libs/molopt/MIMolOpt.h	/^    bool GetRefineWhileFit()$/;"	f	class:MIMolOpt
GetRefls	libs/map/EMapBase.h	/^    const std::vector<CREFL>&GetRefls()$/;"	f	class:EMapBase
GetResdict	libs/chemlib/MIMolDictionary.h	/^        Residue *GetResdict()$/;"	f	class:chemlib::MIMolDictionary
GetResidue	libs/chemlib/ConfSaver.cpp	/^const Residue*ConfSaver::GetResidue() const$/;"	f	class:chemlib::ConfSaver
GetResidue	libs/chemlib/Constraint.h	/^        const Monomer *GetResidue()$/;"	f	class:chemlib::Improper
GetResidue	libs/chemlib/Constraint.h	/^        const Monomer *GetResidue()$/;"	f	class:chemlib::Plane
GetResidue	libs/chemlib/Constraint.h	/^        const Monomer *GetResidue()$/;"	f	class:chemlib::Torsion
GetResidue	libs/chemlib/Dictionary.h	/^        const Monomer *GetResidue()$/;"	f	class:chemlib::LigDictionary
GetResidueBonds	libs/chemlib/Ligand.cpp	/^void Ligand::GetResidueBonds(const Monomer *res, std::vector<Bond*> &resbonds)$/;"	f	class:chemlib::Ligand
GetResidueBuffer	apps/MIFit/ui/Application.h	/^    chemlib::Residue *GetResidueBuffer()$/;"	f	class:Application
GetResidueIntBonds	libs/chemlib/Ligand.cpp	/^void Ligand::GetResidueIntBonds(const Monomer *res, std::vector<Bond> &resbonds)$/;"	f	class:chemlib::Ligand
GetResidueTorsions	libs/chemlib/MIMolDictionary.cpp	/^int MIMolDictionary::GetResidueTorsions(Residue *res, vector<TORSION> &torsions)$/;"	f	class:chemlib::MIMolDictionary
GetResidues	libs/chemlib/itertest.cxx	/^MIIterBase<RESIDUE> *MIMoleculeBase::GetResidues()$/;"	f	class:MIMoleculeBase
GetResult	apps/MIFit/ui/MIColorPickerDlg.h	/^    unsigned int GetResult() const$/;"	f	class:MIColorPickerDlg
GetResults	apps/MIFit/ui/MIDialog.cpp	/^bool MIFileDialog::GetResults(Data &data)$/;"	f	class:MIFileDialog
GetResults	apps/MIFit/ui/RefinementOptionsDialog.cpp	/^void RefinementOptionsDialog::GetResults(Data &data)$/;"	f	class:RefinementOptionsDialog
GetResults	apps/MIFit/ui/SmilesDialog.cpp	/^void SmilesDialog::GetResults(Data &data)$/;"	f	class:SmilesDialog
GetRootAtom	libs/conflib/CoordGenerator.cpp	/^void CoordGenerator::GetRootAtom(MIAtom *atom)$/;"	f	class:CoordGenerator
GetRootNeighbor	libs/conflib/CoordGenerator.cpp	/^int CoordGenerator::GetRootNeighbor()$/;"	f	class:CoordGenerator
GetRootVector	libs/conflib/CoordGenerator.cpp	/^void CoordGenerator::GetRootVector()$/;"	f	class:CoordGenerator
GetScreenCenter	apps/MIFit/ui/MIGLWidget.cpp	/^static void GetScreenCenter(float *center, ViewPoint *vp)$/;"	f	file:
GetSelections	apps/MIFit/ui/MIQTreeWidget.cpp	/^void MIQTreeWidget::GetSelections(QList<QTreeWidgetItem*> &selected)$/;"	f	class:MIQTreeWidget
GetSeq	apps/MIFit/core/Mlculseq.cpp	/^char Molecule::GetSeq(int index)$/;"	f	class:Molecule
GetSettings	libs/map/EMapBase.h	/^    MapSettingsBase *GetSettings()$/;"	f	class:EMapBase
GetShelxHome	apps/MIFit/ui/Application.cpp	/^const std::string&Application::GetShelxHome()$/;"	f	class:Application
GetShowAllowed	apps/MIFit/ui/RamaPlot.h	/^    bool GetShowAllowed() const$/;"	f	class:RamaPlotMgr
GetSigmaAngle	libs/chemlib/MIMolDictionary.h	/^        float GetSigmaAngle()$/;"	f	class:chemlib::MIMolDictionary
GetSigmaBond	libs/chemlib/MIMolDictionary.h	/^        float GetSigmaBond()$/;"	f	class:chemlib::MIMolDictionary
GetSigmaBump	libs/chemlib/MIMolDictionary.h	/^        float GetSigmaBump()$/;"	f	class:chemlib::MIMolDictionary
GetSigmaPlane	libs/chemlib/Dictionary.h	/^        float GetSigmaPlane()$/;"	f	class:chemlib::LigDictionary
GetSigmaPlane	libs/chemlib/MIMolDictionary.h	/^        float GetSigmaPlane()$/;"	f	class:chemlib::MIMolDictionary
GetSigmaTorsion	libs/chemlib/MIMolDictionary.h	/^        float GetSigmaTorsion()$/;"	f	class:chemlib::MIMolDictionary
GetSilentMode	apps/MIFit/ui/Application.h	/^    bool GetSilentMode()$/;"	f	class:Application
GetSize	libs/jacgrid/grid.h	/^    unsigned int GetSize() const$/;"	f	class:gridT
GetStatic	libs/map/sfcalc.cpp	/^int GetStatic(CREFL refl[], int nrefl, CMapHeaderBase *mh)$/;"	f
GetString	libs/chemlib/CifParser.h	/^    inline bool GetString(std::string &token)$/;"	f	class:CifTokenizer
GetSub	libs/chemlib/Chiral.cpp	/^MIAtom*Chiral::GetSub(int i)$/;"	f	class:chemlib::Chiral
GetSymInfo	libs/map/CMapHeaderBase.cpp	/^bool CMapHeaderBase::GetSymInfo()$/;"	f	class:CMapHeaderBase
GetTargetVolume	libs/conflib/CoordGenerator.cpp	/^double GetTargetVolume(Chiral &chiral, std::vector<sdgDistance> &dists)$/;"	f	namespace:conflib
GetText	apps/MIFit/core/Annotation.h	/^    const char *GetText()$/;"	f	class:Annotation
GetTitle	apps/MIFit/ui/MIGLWidget.h	/^    std::string GetTitle() const$/;"	f	class:MIGLWidget
GetToken	libs/chemlib/CifParser.cpp	/^bool CifTokenizer::GetToken(std::string &token)$/;"	f	class:CifTokenizer
GetTolerance	libs/chemlib/Constraint.h	/^        float GetTolerance()$/;"	f	class:chemlib::Plane
GetTorsionAtom1	libs/chemlib/MIMoleculeBase.h	/^        MIAtom *GetTorsionAtom1() const$/;"	f	class:chemlib::MIMoleculeBase
GetTorsionAtom2	libs/chemlib/MIMoleculeBase.h	/^        MIAtom *GetTorsionAtom2() const$/;"	f	class:chemlib::MIMoleculeBase
GetTorsionValue	libs/chemlib/MIMoleculeBase.cpp	/^bool MIMoleculeBase::GetTorsionValue(char *str, Residue *res)$/;"	f	class:chemlib::MIMoleculeBase
GetTorsionWeightI	libs/molopt/MIMolOpt.h	/^    int GetTorsionWeightI()$/;"	f	class:MIMolOpt
GetTriplePartner	libs/chemlib/atom_util.cpp	/^MIAtom *GetTriplePartner(const MIAtom *atom, std::vector<Bond> &bonds)$/;"	f	namespace:chemlib
GetTypes	libs/map/EMapBase.cpp	/^void GetTypes(std::vector<unsigned int> &types,$/;"	f
GetUpdate	apps/MIFit/ui/MIGLWidget.h	/^inline int MIGLWidget::GetUpdate()$/;"	f	class:MIGLWidget
GetValenceStates	libs/chemlib/valence.cpp	/^std::vector<int> GetValenceStates(int atomicnumber)$/;"	f	namespace:chemlib
GetValenceType	libs/chemlib/valence.cpp	/^unsigned int GetValenceType(int atomicnumber)$/;"	f	namespace:chemlib
GetVerbose	libs/molopt/MIMolOpt.h	/^    bool GetVerbose()$/;"	f	class:MIMolOpt
GetView	apps/MIFit/ui/GLOverviewCanvas.cpp	/^static MIGLWidget *GetView()$/;"	f	file:
GetViewPoint	apps/MIFit/ui/MIGLWidget.h	/^inline ViewPoint*MIGLWidget::GetViewPoint()$/;"	f	class:MIGLWidget
GetVuCenter	apps/MIFit/ui/Displaylist.cpp	/^APOINT Displaylist::GetVuCenter()$/;"	f	class:Displaylist
GetWriterCount	libs/chemlib/MIMolIOBase.h	/^        unsigned int GetWriterCount() const$/;"	f	class:chemlib::MIMolIOBase
GetWriterDescription	libs/chemlib/MIMolIO.cpp	/^std::string MIMolIOBase::GetWriterDescription(unsigned int idx) const$/;"	f	class:chemlib::MIMolIOBase
GetX	apps/MIFit/core/Annotation.h	/^    float GetX()$/;"	f	class:Annotation
GetXdim	libs/jacgrid/plane.h	/^    unsigned int GetXdim() const$/;"	f	class:JACPlane
GetXfitMouseMode	apps/MIFit/ui/Application.h	/^    bool GetXfitMouseMode()$/;"	f	class:Application
GetY	apps/MIFit/core/Annotation.h	/^    float GetY()$/;"	f	class:Annotation
GetYdim	libs/jacgrid/plane.h	/^    unsigned int GetYdim() const$/;"	f	class:JACPlane
GetZ	apps/MIFit/core/Annotation.h	/^    float GetZ()$/;"	f	class:Annotation
Gly	apps/MIFit/ui/rama.h	/^    const unsigned int Gly = 1;$/;"	m	namespace:RamaPlotType
GraphColor	apps/MIFit/ui/graphlib.h	/^    GraphColor() : _r(0), _g(0), _b(0)$/;"	f	class:GraphColor
GraphColor	apps/MIFit/ui/graphlib.h	/^    GraphColor(unsigned char r, unsigned char g, unsigned char b)$/;"	f	class:GraphColor
GraphColor	apps/MIFit/ui/graphlib.h	/^class GraphColor$/;"	c
GraphPotentials	libs/chemlib/Chiral.cpp	/^void GraphPotentials(const Monomer &res,$/;"	f	namespace:chemlib
GraphPotentials	libs/chemlib/Chiral.cpp	/^void GraphPotentials(const Residue &res,$/;"	f	namespace:chemlib
GraphResidue	apps/MIFit/ui/RamaPlot.cpp	/^void RamaPlotMgr::GraphResidue(ResidueListIterator prev,$/;"	f	class:RamaPlotMgr
GraphWindow	apps/MIFit/ui/graphlib.cpp	/^GraphWindow::GraphWindow(QWidget *parent)$/;"	f	class:GraphWindow
GraphWindow	apps/MIFit/ui/graphlib.h	/^class GraphWindow : public QGLWidget$/;"	c
Grid	libs/math/Grid.h	/^        Grid<Type>::Grid(Type *lowerBoundary, Type *upperBoundary, Type *spacing)$/;"	f	class:mi::math::Grid
Grid	libs/math/Grid.h	/^        Grid<Type>::Grid(int *size, Type *spacing, Point3<Type> &origin)$/;"	f	class:mi::math::Grid
Grid	libs/math/Grid.h	/^        class Grid$/;"	c	namespace:mi::math
GroupKey	apps/MIFit/ui/AddResidueDialog.cpp	/^    const QString GroupKey = "AddResidueDialog";$/;"	m	namespace:__anon14	file:
GroupSubstituents	libs/chemlib/Ligand.cpp	/^void Ligand::GroupSubstituents(MIAtom *origin,$/;"	f	class:chemlib::Ligand
GrowPlane	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::GrowPlane(int size)$/;"	f	class:DictEditCanvas
GuessBondOrders	libs/chemlib/Ligand.cpp	/^void Ligand::GuessBondOrders()$/;"	f	class:chemlib::Ligand
GuessBondOrders	libs/chemlib/mol_util.cpp	/^void GuessBondOrders(Residue *res, vector<Bond> &bonds)$/;"	f	namespace:chemlib
GuessBondOrders	libs/ligand/LigPostProcessor.cpp	/^void LigPostProcessor::GuessBondOrders()$/;"	f	class:LigPostProcessor
GuessIdeal	libs/conflib/FlexTorsion.cpp	/^void FlexTorsion::GuessIdeal()$/;"	f	class:FlexTorsion
H	libs/chemlib/RefmacType.h	/^    const unsigned int H    = 63;$/;"	m	namespace:RefmacType
H1 	libs/umtz/html/doxygen.css	/^H1 { text-align: center; }$/;"	s
HAVE_MEMCPY	libs/opengl/zlib/zutil.h	171;"	d
HC1	libs/chemlib/RefmacType.h	/^    const unsigned int HC1  = 69;$/;"	m	namespace:RefmacType
HC2	libs/chemlib/RefmacType.h	/^    const unsigned int HC2  = 70;$/;"	m	namespace:RefmacType
HCH	libs/chemlib/RefmacType.h	/^    const unsigned int HCH  = 64;$/;"	m	namespace:RefmacType
HCH1	libs/chemlib/RefmacType.h	/^    const unsigned int HCH1 = 65;$/;"	m	namespace:RefmacType
HCH2	libs/chemlib/RefmacType.h	/^    const unsigned int HCH2 = 66;$/;"	m	namespace:RefmacType
HCH3	libs/chemlib/RefmacType.h	/^    const unsigned int HCH3 = 67;$/;"	m	namespace:RefmacType
HCR1	libs/chemlib/RefmacType.h	/^    const unsigned int HCR1 = 68;$/;"	m	namespace:RefmacType
HCR5	libs/chemlib/RefmacType.h	/^    const unsigned int HCR5 = 71;$/;"	m	namespace:RefmacType
HCR6	libs/chemlib/RefmacType.h	/^    const unsigned int HCR6 = 72;$/;"	m	namespace:RefmacType
HE	libs/chemlib/RefmacType.h	/^    const unsigned int HE   = 169;$/;"	m	namespace:RefmacType
HELIX	apps/MIFit/core/Colors.cpp	/^const int Colors::HELIX = 0;$/;"	m	class:Colors	file:
HELIX	apps/MIFit/core/Colors.h	/^    static const int HELIX;$/;"	m	class:Colors
HF	libs/chemlib/RefmacType.h	/^    const unsigned int HF   = 127;$/;"	m	namespace:RefmacType
HG	libs/chemlib/RefmacType.h	/^    const unsigned int HG   = 151;$/;"	m	namespace:RefmacType
HKL_scaF	libs/map/EMapBase.h	/^        HKL_scaF,$/;"	e	enum:EMapBase::__anon47
HKL_scaI	libs/map/EMapBase.h	/^        HKL_scaI,$/;"	e	enum:EMapBase::__anon47
HLevel	libs/chemlib/MIMolDictionary.h	/^        unsigned int HLevel;$/;"	m	class:chemlib::MIMolDictionary
HNC1	libs/chemlib/RefmacType.h	/^    const unsigned int HNC1 = 73;$/;"	m	namespace:RefmacType
HNC2	libs/chemlib/RefmacType.h	/^    const unsigned int HNC2 = 74;$/;"	m	namespace:RefmacType
HNH1	libs/chemlib/RefmacType.h	/^    const unsigned int HNH1 = 75;$/;"	m	namespace:RefmacType
HNH2	libs/chemlib/RefmacType.h	/^    const unsigned int HNH2 = 76;$/;"	m	namespace:RefmacType
HNR5	libs/chemlib/RefmacType.h	/^    const unsigned int HNR5 = 77;$/;"	m	namespace:RefmacType
HNR6	libs/chemlib/RefmacType.h	/^    const unsigned int HNR6 = 78;$/;"	m	namespace:RefmacType
HNT1	libs/chemlib/RefmacType.h	/^    const unsigned int HNT1 = 79;$/;"	m	namespace:RefmacType
HNT2	libs/chemlib/RefmacType.h	/^    const unsigned int HNT2 = 80;$/;"	m	namespace:RefmacType
HNT3	libs/chemlib/RefmacType.h	/^    const unsigned int HNT3 = 81;$/;"	m	namespace:RefmacType
HO	libs/chemlib/RefmacType.h	/^    const unsigned int HO   = 115;$/;"	m	namespace:RefmacType
HOH1	libs/chemlib/RefmacType.h	/^    const unsigned int HOH1 = 82;$/;"	m	namespace:RefmacType
HOH2	libs/chemlib/RefmacType.h	/^    const unsigned int HOH2 = 83;$/;"	m	namespace:RefmacType
HOHA	libs/chemlib/RefmacType.h	/^    const unsigned int HOHA = 84;$/;"	m	namespace:RefmacType
HOHB	libs/chemlib/RefmacType.h	/^    const unsigned int HOHB = 85;$/;"	m	namespace:RefmacType
HOHC	libs/chemlib/RefmacType.h	/^    const unsigned int HOHC = 86;$/;"	m	namespace:RefmacType
HSH1	libs/chemlib/RefmacType.h	/^    const unsigned int HSH1 = 87;$/;"	m	namespace:RefmacType
HTMLBrowser	apps/MIFit/ui/Application.h	/^    std::string HTMLBrowser;$/;"	m	class:Application
HUGE	apps/MIFit/core/eigen.cpp	5;"	d	file:
HVisible	apps/MIFit/core/Molecule.h	/^    bool HVisible;$/;"	m	class:Molecule
HYDROGENBOND	libs/chemlib/model.h	24;"	d
H_f	libs/map/fftlib.cpp	/^typedef VOID H_f;   \/* character function *\/$/;"	t	file:
H_fp	libs/map/fftlib.cpp	/^typedef \/* Character *\/ VOID (*H_fp)(...);$/;"	t	file:
HalfSplineOrder	libs/map/fftsub.cpp	/^static double HalfSplineOrder;$/;"	v	file:
HammingDistance	libs/chemlib/sequence_util.h	/^    int HammingDistance(std::vector<T> &v1, std::vector<T> &v2)$/;"	f	namespace:chemlib
HasColumnLabels	libs/map/EMapBase.cpp	/^bool EMapBase::HasColumnLabels(const std::string &fname,$/;"	f	class:EMapBase
HasDensity	libs/map/EMapBase.h	/^    bool HasDensity()$/;"	f	class:EMapBase
HasFOMs	libs/map/EMapBase.h	/^    bool HasFOMs()$/;"	f	class:EMapBase
HasFcs	libs/map/EMapBase.h	/^    bool HasFcs()$/;"	f	class:EMapBase
HasFos	libs/map/EMapBase.h	/^    bool HasFos()$/;"	f	class:EMapBase
HasFreeRFlag	libs/map/EMapBase.h	/^    bool HasFreeRFlag()$/;"	f	class:EMapBase
HasPhases	libs/map/EMapBase.h	/^    bool HasPhases()$/;"	f	class:EMapBase
HasPhic	libs/map/EMapBase.h	/^    bool HasPhic()$/;"	f	class:EMapBase
Has_Intersection	libs/chemlib/util.h	/^    bool Has_Intersection(Iterator1 start1, Iterator1 end1, Iterator2 start2, Iterator2 end2)$/;"	f	namespace:chemlib
HeaderKeyIndices	libs/chemlib/CifData.cpp	/^HeaderKeyIndices::HeaderKeyIndices(std::vector<std::string> &names)$/;"	f	class:HeaderKeyIndices
HeaderKeyIndices	libs/chemlib/CifData.h	/^class HeaderKeyIndices$/;"	c
HeavyDegree	libs/chemlib/atom_util.h	/^    inline int HeavyDegree(const MIAtom *atom)$/;"	f	namespace:chemlib
HeavyDegree	libs/chemlib/atom_util.h	/^    inline int HeavyDegree(const MIAtom *atom, const std::vector<Bond> &bonds)$/;"	f	namespace:chemlib
Helix	apps/MIFit/core/Helix.cpp	/^Helix::Helix(double radius)$/;"	f	class:Helix
Helix	apps/MIFit/core/Helix.h	/^class Helix$/;"	c
Helix_NSEG	apps/MIFit/core/Helix.h	29;"	d
Hide	apps/MIFit/core/Molecule.cpp	/^void Molecule::Hide()$/;"	f	class:Molecule
Hide	libs/map/EMapBase.h	/^    void Hide()$/;"	f	class:EMapBase
HideAll	apps/MIFit/core/Molecule.cpp	/^void Molecule::HideAll()$/;"	f	class:Molecule
HideAnnotations	apps/MIFit/core/Molecule.h	/^inline void Molecule::HideAnnotations()$/;"	f	class:Molecule
HideDots	apps/MIFit/core/Molecule.h	/^inline void Molecule::HideDots()$/;"	f	class:Molecule
HideLabels	apps/MIFit/core/Molecule.h	/^inline void Molecule::HideLabels()$/;"	f	class:Molecule
HybridFromGeom	libs/chemlib/mol_util.cpp	/^void HybridFromGeom(MIAtom &atom)$/;"	f	namespace:chemlib
HybridizeTerminalAtom	libs/chemlib/mol_util.cpp	/^void HybridizeTerminalAtom(MIAtom &atom, std::vector<Bond> &bonds)$/;"	f	namespace:chemlib
HydrateMap	libs/map/EMapBase.cpp	/^int EMapBase::HydrateMap(int minlevel, int maxadd, int add_water, MIMoleculeBase *model,$/;"	f	class:EMapBase
I	libs/chemlib/RefmacType.h	/^    const unsigned int I    = 167;$/;"	m	namespace:RefmacType
IA1	libs/molopt/MIMolOpt.cpp	30;"	d	file:
IA2	libs/molopt/MIMolOpt.cpp	31;"	d	file:
IDEAL_DIST	libs/chemlib/MIMolDictionary.cpp	/^static const float IDEAL_DIST = 3.80F;$/;"	m	namespace:chemlib	file:
ID_ABOUT	apps/MIFit/ui/id.h	272;"	d
ID_ANIMATE_BLINK	apps/MIFit/ui/id.h	5;"	d
ID_ANIMATE_ROCK	apps/MIFit/ui/id.h	6;"	d
ID_ANIMATE_ROCKANDROLLPARAMETERS	apps/MIFit/ui/id.h	7;"	d
ID_ANIMATE_ROLL	apps/MIFit/ui/id.h	8;"	d
ID_ANIMEMENU	apps/MIFit/ui/id.h	9;"	d
ID_ANNOT_MOVETOATOM	apps/MIFit/ui/id.h	10;"	d
ID_ANNOT_MOVETOCENTER	apps/MIFit/ui/id.h	11;"	d
ID_BACKBONEMENU	apps/MIFit/ui/id.h	250;"	d
ID_BACKGROUNDCOLOR	apps/MIFit/ui/id.h	12;"	d
ID_CANVASMENU	apps/MIFit/ui/id.h	266;"	d
ID_COLORMENU	apps/MIFit/ui/id.h	13;"	d
ID_COLORTOOL	apps/MIFit/ui/id.h	14;"	d
ID_COLOR_RESIDUE	apps/MIFit/ui/id.h	15;"	d
ID_CONTOUR_LIST_FILE	apps/MIFit/ui/id.h	248;"	d
ID_CPK_RESIDUE	apps/MIFit/ui/id.h	16;"	d
ID_DECREASE_PERSP	apps/MIFit/ui/id.h	17;"	d
ID_DELETEATOM	apps/MIFit/ui/id.h	246;"	d
ID_DELETESECONDARYSTRUCTURE	apps/MIFit/ui/id.h	244;"	d
ID_DOTSURFACE_ATOM	apps/MIFit/ui/id.h	158;"	d
ID_DOTSURFACE_ATOMS	apps/MIFit/ui/id.h	159;"	d
ID_DOTSURFACE_ATOMSPHERE	apps/MIFit/ui/id.h	157;"	d
ID_DOTSURFACE_CLEAR	apps/MIFit/ui/id.h	155;"	d
ID_DOTSURFACE_CREATESOLVENTEXPOSED	apps/MIFit/ui/id.h	156;"	d
ID_DOTSURFACE_CREATEVDW	apps/MIFit/ui/id.h	152;"	d
ID_DOTSURFACE_MENU	apps/MIFit/ui/id.h	153;"	d
ID_DOTSURFACE_RESIDUE	apps/MIFit/ui/id.h	154;"	d
ID_DOTSURFACE_RESIDUES	apps/MIFit/ui/id.h	160;"	d
ID_EDIT_ANNOTATION	apps/MIFit/ui/id.h	18;"	d
ID_EDIT_CLEARLABELS	apps/MIFit/ui/id.h	19;"	d
ID_EDIT_DICT_RESIDUE	apps/MIFit/ui/id.h	235;"	d
ID_EDIT_LABELS	apps/MIFit/ui/id.h	20;"	d
ID_EDIT_SELECTMODEL	apps/MIFit/ui/id.h	21;"	d
ID_FILE_PRINTOPTIONS	apps/MIFit/ui/id.h	22;"	d
ID_FIND_DENSITY	apps/MIFit/ui/id.h	23;"	d
ID_FIT_ADDWATER	apps/MIFit/ui/id.h	24;"	d
ID_FIT_APPLY	apps/MIFit/ui/id.h	25;"	d
ID_FIT_ATOMS	apps/MIFit/ui/id.h	26;"	d
ID_FIT_BACKBONE_MENU	apps/MIFit/ui/id.h	27;"	d
ID_FIT_CANCEL	apps/MIFit/ui/id.h	28;"	d
ID_FIT_CENTERMODE	apps/MIFit/ui/id.h	29;"	d
ID_FIT_CLEARPENTAMER	apps/MIFit/ui/id.h	30;"	d
ID_FIT_CLEARTORSION	apps/MIFit/ui/id.h	31;"	d
ID_FIT_DELETERESIDUE	apps/MIFit/ui/id.h	32;"	d
ID_FIT_FITMOLECULE	apps/MIFit/ui/id.h	33;"	d
ID_FIT_FLIPPEPTIDE	apps/MIFit/ui/id.h	34;"	d
ID_FIT_INSERTRESIDUE	apps/MIFit/ui/id.h	35;"	d
ID_FIT_LSQSUPERPOSE	apps/MIFit/ui/id.h	36;"	d
ID_FIT_MARKAFTER	apps/MIFit/ui/id.h	37;"	d
ID_FIT_MARKBEFORE	apps/MIFit/ui/id.h	38;"	d
ID_FIT_MARK_ALPHA	apps/MIFit/ui/id.h	39;"	d
ID_FIT_MARK_BETA	apps/MIFit/ui/id.h	40;"	d
ID_FIT_MATCHPENTAMER	apps/MIFit/ui/id.h	41;"	d
ID_FIT_NEXTCONFOMER	apps/MIFit/ui/id.h	42;"	d
ID_FIT_POLYALA	apps/MIFit/ui/id.h	43;"	d
ID_FIT_POLYALACHAIN	apps/MIFit/ui/id.h	44;"	d
ID_FIT_RANGE	apps/MIFit/ui/id.h	45;"	d
ID_FIT_REDO	apps/MIFit/ui/id.h	46;"	d
ID_FIT_RENAMERESIDUE	apps/MIFit/ui/id.h	47;"	d
ID_FIT_REPLACEALL	apps/MIFit/ui/id.h	48;"	d
ID_FIT_REPLACEFIRST4	apps/MIFit/ui/id.h	49;"	d
ID_FIT_REPLACELAST4	apps/MIFit/ui/id.h	50;"	d
ID_FIT_REPLACEMIDDLE3	apps/MIFit/ui/id.h	51;"	d
ID_FIT_REPLACESEQUENCE	apps/MIFit/ui/id.h	52;"	d
ID_FIT_REPLACEWITH	apps/MIFit/ui/id.h	53;"	d
ID_FIT_RESET	apps/MIFit/ui/id.h	54;"	d
ID_FIT_RESIDUE	apps/MIFit/ui/id.h	55;"	d
ID_FIT_RESIDUES	apps/MIFit/ui/id.h	56;"	d
ID_FIT_ROTATE	apps/MIFit/ui/id.h	57;"	d
ID_FIT_SETUPTORSION	apps/MIFit/ui/id.h	58;"	d
ID_FIT_SINGLEATOM	apps/MIFit/ui/id.h	59;"	d
ID_FIT_SPLITFIT	apps/MIFit/ui/id.h	60;"	d
ID_FIT_SPLITTORSION	apps/MIFit/ui/id.h	61;"	d
ID_FIT_SURFEXT	apps/MIFit/ui/id.h	62;"	d
ID_FIT_SURFMENU	apps/MIFit/ui/id.h	63;"	d
ID_FIT_SURFNONE	apps/MIFit/ui/id.h	64;"	d
ID_FIT_SURFPROBE	apps/MIFit/ui/id.h	65;"	d
ID_FIT_SURFVDW	apps/MIFit/ui/id.h	66;"	d
ID_FIT_TORSION	apps/MIFit/ui/id.h	67;"	d
ID_FIT_TRANSLATE	apps/MIFit/ui/id.h	68;"	d
ID_FIT_UNDO	apps/MIFit/ui/id.h	69;"	d
ID_GEOMETRY_ANGLE	apps/MIFit/ui/id.h	70;"	d
ID_GEOMETRY_DISTANCE	apps/MIFit/ui/id.h	71;"	d
ID_GEOMETRY_TORSION	apps/MIFit/ui/id.h	72;"	d
ID_GEOM_ADDSINGLEHBOND	apps/MIFit/ui/id.h	73;"	d
ID_GEOM_BOND	apps/MIFit/ui/id.h	74;"	d
ID_GEOM_CLEARGEOMERRORS	apps/MIFit/ui/id.h	75;"	d
ID_GEOM_CLEARHBONDS	apps/MIFit/ui/id.h	76;"	d
ID_GEOM_CLEARNEIGHBOURS	apps/MIFit/ui/id.h	77;"	d
ID_GEOM_FINDGEOMERRORS	apps/MIFit/ui/id.h	78;"	d
ID_GEOM_HBONDS	apps/MIFit/ui/id.h	79;"	d
ID_GEOM_NEIGHBOURS	apps/MIFit/ui/id.h	80;"	d
ID_GEOM_UNBOND	apps/MIFit/ui/id.h	81;"	d
ID_GOTO_CTER	apps/MIFit/ui/id.h	82;"	d
ID_GOTO_FITALLTOSCREEN	apps/MIFit/ui/id.h	83;"	d
ID_GOTO_FITTOSCREEN	apps/MIFit/ui/id.h	84;"	d
ID_GOTO_GOTOXYZ	apps/MIFit/ui/id.h	85;"	d
ID_GOTO_NTER	apps/MIFit/ui/id.h	86;"	d
ID_GOTO_ZOOMIIN	apps/MIFit/ui/id.h	87;"	d
ID_GOTO_ZOOMOUT	apps/MIFit/ui/id.h	88;"	d
ID_H	apps/MIFit/ui/id.h	2;"	d
ID_HARDWARE_STEREO	apps/MIFit/ui/id.h	240;"	d
ID_HELP	apps/MIFit/ui/id.h	273;"	d
ID_HIDEMODEL	apps/MIFit/ui/id.h	89;"	d
ID_HIDETOOL	apps/MIFit/ui/id.h	90;"	d
ID_HIDE_RESIDUE	apps/MIFit/ui/id.h	91;"	d
ID_INCREASE_PERSP	apps/MIFit/ui/id.h	92;"	d
ID_INVERTCHIRAL	apps/MIFit/ui/id.h	232;"	d
ID_JOBSVIEW_OPENRESULTS	apps/MIFit/ui/id.h	259;"	d
ID_LABELSMENU	apps/MIFit/ui/id.h	267;"	d
ID_LOAD_DICT_APPEND	apps/MIFit/ui/id.h	93;"	d
ID_LOAD_DICT_CIF	apps/MIFit/ui/id.h	236;"	d
ID_LOAD_DICT_MOL	apps/MIFit/ui/id.h	237;"	d
ID_LOAD_DICT_PDB	apps/MIFit/ui/id.h	238;"	d
ID_LOAD_DICT_REPLACE	apps/MIFit/ui/id.h	94;"	d
ID_LOAD_DICT_SMI	apps/MIFit/ui/id.h	239;"	d
ID_MAP_ADDFREE	apps/MIFit/ui/id.h	95;"	d
ID_MAP_CENTERDENSITY	apps/MIFit/ui/id.h	96;"	d
ID_MAP_COMBINEPHASES	apps/MIFit/ui/id.h	97;"	d
ID_MAP_CONTOUR	apps/MIFit/ui/id.h	98;"	d
ID_MAP_CONTOURLEVELS	apps/MIFit/ui/id.h	99;"	d
ID_MAP_FFT	apps/MIFit/ui/id.h	100;"	d
ID_MAP_LOADMAP	apps/MIFit/ui/id.h	101;"	d
ID_MAP_LOADMAPFILE	apps/MIFit/ui/id.h	102;"	d
ID_MAP_REINDEX	apps/MIFit/ui/id.h	231;"	d
ID_MAP_RIDGELINES	apps/MIFit/ui/id.h	103;"	d
ID_MAP_SFCALC	apps/MIFit/ui/id.h	104;"	d
ID_MAP_SOLVENTFLATTEN	apps/MIFit/ui/id.h	105;"	d
ID_MAP_SWITCH	apps/MIFit/ui/id.h	106;"	d
ID_MODELSVIEW_RESIDUESTREE_EDITATOMS	apps/MIFit/ui/id.h	256;"	d
ID_MODEL_AUTOCHECKPOINT	apps/MIFit/ui/id.h	247;"	d
ID_MODEL_CHECKPOINT	apps/MIFit/ui/id.h	108;"	d
ID_MODEL_REVERT	apps/MIFit/ui/id.h	109;"	d
ID_NAVIGATION_SPLIT	apps/MIFit/ui/id.h	270;"	d
ID_NAVIGATION_UNSPLIT	apps/MIFit/ui/id.h	271;"	d
ID_OBJECTS_ALLATOMS	apps/MIFit/ui/id.h	110;"	d
ID_OBJECTS_MODELS	apps/MIFit/ui/id.h	111;"	d
ID_OBJECTS_SECONDARYSTRUCTURE	apps/MIFit/ui/id.h	112;"	d
ID_OBJECT_ANNOTATION	apps/MIFit/ui/id.h	113;"	d
ID_OBJECT_ATOMS_COLOR	apps/MIFit/ui/id.h	114;"	d
ID_OBJECT_ATOMS_RADIUS	apps/MIFit/ui/id.h	115;"	d
ID_OBJECT_ATOM_COLOR	apps/MIFit/ui/id.h	116;"	d
ID_OBJECT_ATOM_RADIUS	apps/MIFit/ui/id.h	117;"	d
ID_OBJECT_BACKBONERIBBON	apps/MIFit/ui/id.h	118;"	d
ID_OBJECT_CLEARRIBBON	apps/MIFit/ui/id.h	119;"	d
ID_OBJECT_CLEARSTACK	apps/MIFit/ui/id.h	120;"	d
ID_OBJECT_LINEMENU	apps/MIFit/ui/id.h	122;"	d
ID_OBJECT_MAPMENU	apps/MIFit/ui/id.h	123;"	d
ID_OBJECT_NEWMODEL	apps/MIFit/ui/id.h	124;"	d
ID_OBJECT_RADIUSIS_BALL	apps/MIFit/ui/id.h	125;"	d
ID_OBJECT_RADIUSIS_CPK	apps/MIFit/ui/id.h	126;"	d
ID_OBJECT_RADIUSIS_CYLINDER	apps/MIFit/ui/id.h	127;"	d
ID_OBJECT_READCOLORS	apps/MIFit/ui/id.h	128;"	d
ID_OBJECT_RESIDUERANGE_COLOR	apps/MIFit/ui/id.h	129;"	d
ID_OBJECT_RESIDUERANGE_RADIUS	apps/MIFit/ui/id.h	130;"	d
ID_OBJECT_RESIDUERANGE_TURNOFF	apps/MIFit/ui/id.h	131;"	d
ID_OBJECT_RESIDUES_COLOR	apps/MIFit/ui/id.h	132;"	d
ID_OBJECT_RESIDUES_RADIUS	apps/MIFit/ui/id.h	133;"	d
ID_OBJECT_RESIDUES_TURNOFF	apps/MIFit/ui/id.h	134;"	d
ID_OBJECT_RESIDUE_COLOR	apps/MIFit/ui/id.h	135;"	d
ID_OBJECT_RESIDUE_RADIUS	apps/MIFit/ui/id.h	136;"	d
ID_OBJECT_RESIDUE_TURNOFF	apps/MIFit/ui/id.h	137;"	d
ID_OBJECT_SAVECOLORS	apps/MIFit/ui/id.h	138;"	d
ID_OBJECT_SEQUENCEMENU	apps/MIFit/ui/id.h	139;"	d
ID_OBJECT_SHOWRESIDUE	apps/MIFit/ui/id.h	141;"	d
ID_OBJECT_SHOWRESIDUERANGE	apps/MIFit/ui/id.h	142;"	d
ID_OBJECT_SHOWRESIDUES	apps/MIFit/ui/id.h	143;"	d
ID_OBJECT_SHOWSIDECHAIN	apps/MIFit/ui/id.h	144;"	d
ID_OBJECT_SHOWSIDECHAINRANGE	apps/MIFit/ui/id.h	145;"	d
ID_OBJECT_SHOWSIDECHAINS	apps/MIFit/ui/id.h	146;"	d
ID_OBJECT_STACKMENU	apps/MIFit/ui/id.h	147;"	d
ID_OBJECT_STACK_DELETETOPITEM	apps/MIFit/ui/id.h	148;"	d
ID_OBJECT_STACK_EXPANDTOP2ALLATOMSINRANGE	apps/MIFit/ui/id.h	149;"	d
ID_OBJECT_STACK_EXPANDTOP2RESIDUES	apps/MIFit/ui/id.h	150;"	d
ID_OBJECT_STACK_EXPANDTOPALLATOMSINRESIDUE	apps/MIFit/ui/id.h	151;"	d
ID_OBJECT_WHENSHOWNCOLOR	apps/MIFit/ui/id.h	161;"	d
ID_RADIUSOPTIONSMENU	apps/MIFit/ui/id.h	269;"	d
ID_RAMAPLOT	apps/MIFit/ui/id.h	162;"	d
ID_RAMAPLOT_ALLOWED	apps/MIFit/ui/id.h	258;"	d
ID_READ_LIGAND	apps/MIFit/ui/id.h	234;"	d
ID_REFINE_LIGANDFIT	apps/MIFit/ui/id.h	163;"	d
ID_REFI_ACCEPT	apps/MIFit/ui/id.h	165;"	d
ID_REFI_CANCEL	apps/MIFit/ui/id.h	166;"	d
ID_REFI_MOLECULE	apps/MIFit/ui/id.h	167;"	d
ID_REFI_OPTIONS	apps/MIFit/ui/id.h	168;"	d
ID_REFI_RANGE	apps/MIFit/ui/id.h	169;"	d
ID_REFI_REDO	apps/MIFit/ui/id.h	170;"	d
ID_REFI_REGION	apps/MIFit/ui/id.h	171;"	d
ID_REFI_RESET	apps/MIFit/ui/id.h	172;"	d
ID_REFI_RESIDUE	apps/MIFit/ui/id.h	173;"	d
ID_REFI_RIGIDBODY	apps/MIFit/ui/id.h	174;"	d
ID_REFI_UNDO	apps/MIFit/ui/id.h	175;"	d
ID_RENDERING_AMOUNTTODIMNONACTIVEMODELS	apps/MIFit/ui/id.h	257;"	d
ID_RENDERING_BALLANDSTICK	apps/MIFit/ui/id.h	176;"	d
ID_RENDERING_DEPTHCUEDCOLORS	apps/MIFit/ui/id.h	177;"	d
ID_RENDERING_DEPTHCUEDLINEWIDTH	apps/MIFit/ui/id.h	178;"	d
ID_RENDERING_DIMNONACTIVEMODELS	apps/MIFit/ui/id.h	249;"	d
ID_RENDER_BALLANDCYLINDER	apps/MIFit/ui/id.h	179;"	d
ID_RENDER_BALLSIZE	apps/MIFit/ui/id.h	180;"	d
ID_RENDER_SMOOTHLINES	apps/MIFit/ui/id.h	181;"	d
ID_RENDER_SPACEFILLING	apps/MIFit/ui/id.h	182;"	d
ID_RENDER_STICKS	apps/MIFit/ui/id.h	183;"	d
ID_RENDER_TARGETSIZE	apps/MIFit/ui/id.h	255;"	d
ID_REPLACEANDFIT	apps/MIFit/ui/id.h	184;"	d
ID_RIBBONSECONDARYSTRUCTURE	apps/MIFit/ui/id.h	242;"	d
ID_SAVE_DICT	apps/MIFit/ui/id.h	230;"	d
ID_SCHEMATICSECONDARYSTRUCTURE	apps/MIFit/ui/id.h	243;"	d
ID_SECONDARYSTRUCTUREMENU	apps/MIFit/ui/id.h	268;"	d
ID_SECONDARYSTRUCTUREOPTIONS_HELIX	apps/MIFit/ui/id.h	278;"	d
ID_SECONDARYSTRUCTUREOPTIONS_RANDOM	apps/MIFit/ui/id.h	277;"	d
ID_SECONDARYSTRUCTUREOPTIONS_SHEET	apps/MIFit/ui/id.h	275;"	d
ID_SECONDARYSTRUCTUREOPTIONS_TUBE	apps/MIFit/ui/id.h	274;"	d
ID_SECONDARYSTRUCTUREOPTIONS_TURN	apps/MIFit/ui/id.h	276;"	d
ID_SEQUENCE_DELETEGAP	apps/MIFit/ui/id.h	185;"	d
ID_SEQUENCE_DELETELOWERGAP	apps/MIFit/ui/id.h	186;"	d
ID_SEQUENCE_ENTER	apps/MIFit/ui/id.h	187;"	d
ID_SEQUENCE_INSERTGAP	apps/MIFit/ui/id.h	188;"	d
ID_SEQUENCE_INSERTLOWERGAP	apps/MIFit/ui/id.h	189;"	d
ID_SEQUENCE_READ	apps/MIFit/ui/id.h	190;"	d
ID_SEQUENCE_SAVE	apps/MIFit/ui/id.h	191;"	d
ID_SEQUENCE_SPLIT	apps/MIFit/ui/id.h	192;"	d
ID_SEQUENCE_UNSPLIT	apps/MIFit/ui/id.h	193;"	d
ID_SEQU_SAVEPROTEIN	apps/MIFit/ui/id.h	194;"	d
ID_SEQU_SETCHAIN	apps/MIFit/ui/id.h	195;"	d
ID_SEQU_SETPOSITION	apps/MIFit/ui/id.h	196;"	d
ID_SEQWINSCROLLBAR	apps/MIFit/ui/id.h	197;"	d
ID_SHOWATOMSMENU	apps/MIFit/ui/id.h	265;"	d
ID_SHOWRESMENU	apps/MIFit/ui/id.h	198;"	d
ID_SHOWTOOL	apps/MIFit/ui/id.h	199;"	d
ID_SHOW_ALLPICKEDATOMS_TURNOFF	apps/MIFit/ui/id.h	200;"	d
ID_SHOW_ALLPICKEDATOMS_TURNON	apps/MIFit/ui/id.h	201;"	d
ID_SHOW_BACKBONEATOMS	apps/MIFit/ui/id.h	251;"	d
ID_SHOW_BACKBONECA	apps/MIFit/ui/id.h	140;"	d
ID_SHOW_COLORALLATOMS	apps/MIFit/ui/id.h	202;"	d
ID_SHOW_HIDEBACKBONE	apps/MIFit/ui/id.h	121;"	d
ID_SHOW_HIDEHYDROGENS	apps/MIFit/ui/id.h	203;"	d
ID_SHOW_HIDESIDECHAINATOMS	apps/MIFit/ui/id.h	253;"	d
ID_SHOW_HIDESYMMATOMS	apps/MIFit/ui/id.h	262;"	d
ID_SHOW_LABELEVERYNTH	apps/MIFit/ui/id.h	204;"	d
ID_SHOW_PICKEDATOM_TURNOFF	apps/MIFit/ui/id.h	205;"	d
ID_SHOW_PICKEDATOM_TURNON	apps/MIFit/ui/id.h	206;"	d
ID_SHOW_RADIUSMODEL	apps/MIFit/ui/id.h	207;"	d
ID_SHOW_SAVESYMMATOMS	apps/MIFit/ui/id.h	263;"	d
ID_SHOW_SHOWWITHINSPHERE	apps/MIFit/ui/id.h	208;"	d
ID_SHOW_SIDECHAINATOMS	apps/MIFit/ui/id.h	252;"	d
ID_SHOW_SYMMATOMSASATOMS	apps/MIFit/ui/id.h	260;"	d
ID_SHOW_SYMMATOMSASCA	apps/MIFit/ui/id.h	261;"	d
ID_SHOW_UNDOCOLORRADIUS	apps/MIFit/ui/id.h	209;"	d
ID_SIDEMENU	apps/MIFit/ui/id.h	210;"	d
ID_SIDETOOL	apps/MIFit/ui/id.h	211;"	d
ID_SOLIDSURFACE_ACCESSIBLE	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_ACCESSIBLE,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_ALPHA	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_ALPHA,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_ATOMS_MODE	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_ATOMS_MODE,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_BUILD	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_BUILD,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_CALCDIST	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_CALCDIST,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_CLEAR	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_CLEAR,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_COLOR	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_COLOR,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_COLOR_BY_ATOM	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_COLOR_BY_ATOM,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_GRADCOLOR	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_GRADCOLOR,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_MAXCOLOR	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_MAXCOLOR,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_MAXVAL	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_MAXVAL,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_MEDCOLOR	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_MEDCOLOR,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_MEDVAL	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_MEDVAL,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_MINCOLOR	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_MINCOLOR,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_MINVAL	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_MINVAL,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_MOLECULAR	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_MOLECULAR,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_MOLECULE_MODE	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_MOLECULE_MODE,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_PEPTIDE_MODE	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_PEPTIDE_MODE,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_QUALITY_0	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_QUALITY_0,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_QUALITY_1	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_QUALITY_1,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_QUALITY_2	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_QUALITY_2,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_RESIDUES_MODE	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_RESIDUES_MODE,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_RESIDUE_MODE	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_RESIDUE_MODE,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_RESMOOTH	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_RESMOOTH,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_USESURF_0	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_USESURF_0,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_USESURF_1	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_USESURF_1,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_USESURF_2	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_USESURF_2,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_USESURF_3	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_USESURF_3,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_USESURF_4	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_USESURF_4,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_USESURF_5	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_USESURF_5,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_USESURF_6	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_USESURF_6,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_USESURF_7	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_USESURF_7,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_USESURF_8	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_USESURF_8,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_SOLIDSURFACE_USESURF_9	apps/MIFit/ui/MIGLWidget.cpp	/^        ID_SOLIDSURFACE_USESURF_9,$/;"	e	enum:__anon10::SolidSurfaceMenuId	file:
ID_STEREO_TOGGLE	apps/MIFit/ui/id.h	241;"	d
ID_SYMMATOMSMENU	apps/MIFit/ui/id.h	264;"	d
ID_VIEWCHIRAL	apps/MIFit/ui/id.h	233;"	d
ID_VIEW_ATOMSTACK	apps/MIFit/ui/id.h	212;"	d
ID_VIEW_CLEARMESSAGE	apps/MIFit/ui/id.h	213;"	d
ID_VIEW_CLIPPLANES	apps/MIFit/ui/id.h	214;"	d
ID_VIEW_CONTACTS	apps/MIFit/ui/id.h	215;"	d
ID_VIEW_FULLSCREEN	apps/MIFit/ui/id.h	216;"	d
ID_VIEW_GNOMON	apps/MIFit/ui/id.h	217;"	d
ID_VIEW_LABELS	apps/MIFit/ui/id.h	218;"	d
ID_VIEW_LOAD	apps/MIFit/ui/id.h	219;"	d
ID_VIEW_ORTHONORMAL	apps/MIFit/ui/id.h	220;"	d
ID_VIEW_ROTATEY90	apps/MIFit/ui/id.h	221;"	d
ID_VIEW_ROTATEYMINUS	apps/MIFit/ui/id.h	222;"	d
ID_VIEW_SAVE	apps/MIFit/ui/id.h	223;"	d
ID_VIEW_SITEPLOT	apps/MIFit/ui/id.h	224;"	d
ID_VIEW_SLABIN	apps/MIFit/ui/id.h	225;"	d
ID_VIEW_SLABOUT	apps/MIFit/ui/id.h	226;"	d
ID_VIEW_TOPVIEW	apps/MIFit/ui/id.h	227;"	d
ID_VIEW_UNDO	apps/MIFit/ui/id.h	228;"	d
ID_VIEW_UNITCELL	apps/MIFit/ui/id.h	245;"	d
ID_WIZARDS_SELECTANDCOLOR	apps/MIFit/ui/id.h	229;"	d
IFC	apps/MIFit/ui/MIGLWidget.cpp	7961;"	d	file:
IFC	apps/MIFit/ui/MIGLWidget.cpp	8705;"	d	file:
IGNORE_DUMMY	libs/chemlib/PDB.cpp	/^static bool IGNORE_DUMMY = true;$/;"	m	namespace:chemlib	file:
IM1	libs/molopt/MIMolOpt.cpp	27;"	d	file:
IM2	libs/molopt/MIMolOpt.cpp	28;"	d	file:
IMM1	libs/molopt/MIMolOpt.cpp	36;"	d	file:
IN	libs/chemlib/RefmacType.h	/^    const unsigned int IN   = 155;$/;"	m	namespace:RefmacType
INCPATH	apps/MIFit/core/Makefile	/^INCPATH       = -I\/usr\/lib64\/qt4\/mkspecs\/linux-g++ -I. -I\/usr\/include\/QtCore -I\/usr\/include\/QtNetwork -I\/usr\/include\/QtGui -I\/usr\/include\/QtOpenGL -I\/usr\/include\/QtXml -I\/usr\/include\/QtScript -I\/usr\/include\/QtDeclarative -I\/usr\/include -I..\/..\/..\/libs -I\/usr\/include\/X11 -I..\/..\/MIFit -I..\/..\/MIFit -I\/usr\/X11R6\/include -Imoc$/;"	m
INCPATH	apps/MIFit/jobs/Makefile	/^INCPATH       = -I\/usr\/lib64\/qt4\/mkspecs\/linux-g++ -I. -I\/usr\/include\/QtCore -I\/usr\/include\/QtNetwork -I\/usr\/include\/QtGui -I\/usr\/include\/QtOpenGL -I\/usr\/include\/QtXml -I\/usr\/include\/QtScript -I\/usr\/include\/QtDeclarative -I\/usr\/include -I..\/..\/..\/libs -I\/usr\/include\/X11 -I..\/..\/MIFit -I..\/..\/MIFit -I\/usr\/X11R6\/include -Imoc$/;"	m
INCPATH	apps/MIFit/main/Makefile	/^INCPATH       = -I\/usr\/lib64\/qt4\/mkspecs\/linux-g++ -I. -I\/usr\/include\/QtCore -I\/usr\/include\/QtNetwork -I\/usr\/include\/QtGui -I\/usr\/include\/QtOpenGL -I\/usr\/include\/QtXml -I\/usr\/include\/QtScript -I\/usr\/include\/QtDeclarative -I\/usr\/include -I..\/..\/..\/libs -I\/usr\/include\/X11 -I..\/..\/MIFit -I..\/..\/MIFit -I..\/..\/..\/libs -I\/usr\/X11R6\/include -Imoc$/;"	m
INCPATH	apps/MIFit/script/Makefile	/^INCPATH       = -I\/usr\/lib64\/qt4\/mkspecs\/linux-g++ -I. -I\/usr\/include\/QtCore -I\/usr\/include\/QtNetwork -I\/usr\/include\/QtGui -I\/usr\/include\/QtOpenGL -I\/usr\/include\/QtXml -I\/usr\/include\/QtScript -I\/usr\/include\/QtDeclarative -I\/usr\/include -I..\/..\/..\/libs -I\/usr\/include\/X11 -I..\/..\/MIFit -I..\/..\/MIFit -I\/usr\/X11R6\/include -Imoc$/;"	m
INCPATH	apps/MIFit/ui/Makefile	/^INCPATH       = -I\/usr\/lib64\/qt4\/mkspecs\/linux-g++ -I. -I\/usr\/include\/QtCore -I\/usr\/include\/QtNetwork -I\/usr\/include\/QtGui -I\/usr\/include\/QtOpenGL -I\/usr\/include\/QtXml -I\/usr\/include\/QtScript -I\/usr\/include\/QtDeclarative -I\/usr\/include -I..\/..\/..\/libs -I\/usr\/include\/X11 -I..\/..\/MIFit -I..\/..\/MIFit -I\/usr\/X11R6\/include -Imoc -I.$/;"	m
INCPATH	libs/chemlib/Makefile	/^INCPATH       = -I\/usr\/lib64\/qt4\/mkspecs\/linux-g++ -I. -I\/usr\/include\/QtCore -I\/usr\/include\/QtNetwork -I\/usr\/include\/QtGui -I\/usr\/include\/QtOpenGL -I\/usr\/include\/QtXml -I\/usr\/include\/QtScript -I\/usr\/include\/QtDeclarative -I\/usr\/include -I..\/..\/libs -I\/usr\/include\/X11 -I..\/..\/apps\/MIFit -I\/usr\/X11R6\/include -Imoc$/;"	m
INCPATH	libs/conflib/Makefile	/^INCPATH       = -I\/usr\/lib64\/qt4\/mkspecs\/linux-g++ -I. -I\/usr\/include\/QtCore -I\/usr\/include\/QtNetwork -I\/usr\/include\/QtGui -I\/usr\/include\/QtOpenGL -I\/usr\/include\/QtXml -I\/usr\/include\/QtScript -I\/usr\/include\/QtDeclarative -I\/usr\/include -I..\/..\/libs -I\/usr\/include\/X11 -I..\/..\/apps\/MIFit -I\/usr\/X11R6\/include -Imoc$/;"	m
INCPATH	libs/jacgrid/Makefile	/^INCPATH       = -I\/usr\/lib64\/qt4\/mkspecs\/linux-g++ -I. -I..\/..\/libs -I\/usr\/include\/X11 -I..\/..\/apps\/MIFit -I\/usr\/X11R6\/include$/;"	m
INCPATH	libs/ligand/Makefile	/^INCPATH       = -I\/usr\/lib64\/qt4\/mkspecs\/linux-g++ -I. -I\/usr\/include\/QtCore -I\/usr\/include\/QtNetwork -I\/usr\/include\/QtGui -I\/usr\/include\/QtOpenGL -I\/usr\/include\/QtXml -I\/usr\/include\/QtScript -I\/usr\/include\/QtDeclarative -I\/usr\/include -I..\/..\/libs -I\/usr\/include\/X11 -I..\/..\/apps\/MIFit -I\/usr\/X11R6\/include -Imoc$/;"	m
INCPATH	libs/map/Makefile	/^INCPATH       = -I\/usr\/lib64\/qt4\/mkspecs\/linux-g++ -I. -I\/usr\/include\/QtCore -I\/usr\/include\/QtNetwork -I\/usr\/include\/QtGui -I\/usr\/include\/QtOpenGL -I\/usr\/include\/QtXml -I\/usr\/include\/QtScript -I\/usr\/include\/QtDeclarative -I\/usr\/include -I..\/..\/libs -I\/usr\/include\/X11 -I..\/..\/apps\/MIFit -I\/usr\/X11R6\/include -Imoc$/;"	m
INCPATH	libs/math/Makefile	/^INCPATH       = -I\/usr\/lib64\/qt4\/mkspecs\/linux-g++ -I. -I\/usr\/include\/QtCore -I\/usr\/include\/QtNetwork -I\/usr\/include\/QtGui -I\/usr\/include\/QtOpenGL -I\/usr\/include\/QtXml -I\/usr\/include\/QtScript -I\/usr\/include\/QtDeclarative -I\/usr\/include -I..\/..\/libs -I\/usr\/include\/X11 -I..\/..\/apps\/MIFit -I\/usr\/X11R6\/include -Imoc$/;"	m
INCPATH	libs/molopt/Makefile	/^INCPATH       = -I\/usr\/lib64\/qt4\/mkspecs\/linux-g++ -I. -I\/usr\/include\/QtCore -I\/usr\/include\/QtNetwork -I\/usr\/include\/QtGui -I\/usr\/include\/QtOpenGL -I\/usr\/include\/QtXml -I\/usr\/include\/QtScript -I\/usr\/include\/QtDeclarative -I\/usr\/include -I..\/..\/libs -I\/usr\/include\/X11 -I..\/..\/apps\/MIFit -I\/usr\/X11R6\/include -Imoc$/;"	m
INCPATH	libs/opengl/Makefile	/^INCPATH       = -I\/usr\/lib64\/qt4\/mkspecs\/linux-g++ -I. -I\/usr\/include\/QtCore -I\/usr\/include\/QtNetwork -I\/usr\/include\/QtGui -I\/usr\/include\/QtOpenGL -I\/usr\/include\/QtXml -I\/usr\/include\/QtScript -I\/usr\/include\/QtDeclarative -I\/usr\/include -I..\/..\/libs -I\/usr\/include\/X11 -I..\/..\/apps\/MIFit -Izlib -I\/usr\/X11R6\/include -Imoc$/;"	m
INCPATH	libs/umtz/Makefile	/^INCPATH       = -I\/usr\/lib64\/qt4\/mkspecs\/linux-g++ -I. -I..\/..\/libs -I\/usr\/include\/X11 -I..\/..\/apps\/MIFit -I\/usr\/X11R6\/include$/;"	m
INCPATH	libs/util/Makefile	/^INCPATH       = -I\/usr\/lib64\/qt4\/mkspecs\/linux-g++ -I. -I\/usr\/include\/QtCore -I\/usr\/include\/QtNetwork -I\/usr\/include\/QtGui -I\/usr\/include\/QtOpenGL -I\/usr\/include\/QtXml -I\/usr\/include\/QtScript -I\/usr\/include\/QtDeclarative -I\/usr\/include -I..\/..\/libs -I\/usr\/include\/X11 -I..\/..\/apps\/MIFit -I\/usr\/X11R6\/include -Imoc$/;"	m
INSIDE	libs/opengl/Frustum.h	/^                OUTSIDE, INTERSECT, INSIDE$/;"	e	enum:mi::opengl::Frustum::CullingResult
INSTALL_DIR	Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	apps/MIFit/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	apps/MIFit/core/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	apps/MIFit/jobs/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	apps/MIFit/main/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	apps/MIFit/script/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	apps/MIFit/ui/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	apps/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	libs/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	libs/chemlib/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	libs/conflib/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	libs/jacgrid/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	libs/ligand/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	libs/map/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	libs/math/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	libs/molopt/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	libs/opengl/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	libs/umtz/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_DIR	libs/util/Makefile	/^INSTALL_DIR   = $(COPY_DIR)$/;"	m
INSTALL_FILE	Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	apps/MIFit/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	apps/MIFit/core/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	apps/MIFit/jobs/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	apps/MIFit/main/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	apps/MIFit/script/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	apps/MIFit/ui/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	apps/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	libs/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	libs/chemlib/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	libs/conflib/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	libs/jacgrid/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	libs/ligand/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	libs/map/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	libs/math/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	libs/molopt/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	libs/opengl/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	libs/umtz/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_FILE	libs/util/Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	apps/MIFit/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	apps/MIFit/core/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	apps/MIFit/jobs/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	apps/MIFit/main/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	apps/MIFit/script/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	apps/MIFit/ui/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	apps/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	libs/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	libs/chemlib/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	libs/conflib/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	libs/jacgrid/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	libs/ligand/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	libs/map/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	libs/math/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	libs/molopt/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	libs/opengl/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	libs/umtz/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INSTALL_PROGRAM	libs/util/Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
INT16	libs/cmtz/ccp4_sysdep.h	232;"	d
INT16	libs/umtz/library.h	364;"	d
INT32	libs/cmtz/ccp4_sysdep.h	233;"	d
INT32	libs/umtz/library.h	365;"	d
INTERSECT	libs/opengl/Frustum.h	/^                OUTSIDE, INTERSECT, INSIDE$/;"	e	enum:mi::opengl::Frustum::CullingResult
INVISIBLE	libs/chemlib/model.h	/^        const unsigned int INVISIBLE = ((unsigned int)0x00100000);$/;"	m	namespace:chemlib::AtomType
IONICBOND	libs/chemlib/model.h	25;"	d
IQ1	libs/molopt/MIMolOpt.cpp	32;"	d	file:
IQ2	libs/molopt/MIMolOpt.cpp	33;"	d	file:
IR	libs/chemlib/RefmacType.h	/^    const unsigned int IR   = 142;$/;"	m	namespace:RefmacType
IR1	libs/molopt/MIMolOpt.cpp	34;"	d	file:
IR2	libs/molopt/MIMolOpt.cpp	35;"	d	file:
IRRELEVANT_OP	libs/cmtz/ccp4_sysdep.h	211;"	d
IRRELEVANT_OP	libs/umtz/library.h	333;"	d
I_fp	libs/map/fftlib.cpp	/^typedef integer (*I_fp)(...);$/;"	t	file:
Iconvert	libs/umtz/library.c	/^    Iconvert[MAXFILES],         \/* integer convserion needed on read*\/$/;"	v	file:
IdealBondLength	libs/chemlib/CovalentGeom.cpp	/^float IdealBondLength(const Bond &bond)$/;"	f	namespace:chemlib
IdealBondLength	libs/chemlib/CovalentGeom.cpp	/^float IdealBondLength(int element1, int element2, unsigned char bnd_order)$/;"	f	namespace:chemlib
ImageIndexMap	apps/MIFit/ui/ModelsView.cpp	/^typedef std::map<const char*, int> ImageIndexMap;$/;"	t	file:
ImportErrors	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::ImportErrors()$/;"	f	class:DisplayTree
Improper	libs/chemlib/Constraint.h	/^    class Improper$/;"	c	namespace:chemlib
Impropers	libs/chemlib/Constraint.h	/^        std::vector<Improper> Impropers;$/;"	m	class:chemlib::ConstraintList
IncludeInDict	libs/chemlib/Constraint.h	/^        void IncludeInDict()$/;"	f	class:chemlib::Improper
InclusionCenter	libs/map/wxWweave.cpp	/^static float InclusionRadSq, InclusionCenter[3];$/;"	v	file:
InclusionRadSq	libs/map/wxWweave.cpp	/^static float InclusionRadSq, InclusionCenter[3];$/;"	v	file:
Index	libs/chemlib/RefmacAtomTyper.cpp	/^unsigned int RefmacAtomTyper::Index(const char *name) const$/;"	f	class:chemlib::RefmacAtomTyper
IndexOutOfBoundsException	libs/math/IndexOutOfBoundsException.cpp	/^IndexOutOfBoundsException::IndexOutOfBoundsException($/;"	f	class:mi::math::IndexOutOfBoundsException
IndexOutOfBoundsException	libs/math/IndexOutOfBoundsException.cpp	/^IndexOutOfBoundsException::IndexOutOfBoundsException()$/;"	f	class:mi::math::IndexOutOfBoundsException
IndexOutOfBoundsException	libs/math/IndexOutOfBoundsException.cpp	/^IndexOutOfBoundsException::IndexOutOfBoundsException(const char *detail)$/;"	f	class:mi::math::IndexOutOfBoundsException
IndexOutOfBoundsException	libs/math/IndexOutOfBoundsException.h	/^        class IndexOutOfBoundsException$/;"	c	namespace:mi::math
Info	apps/MIFit/jobs/BatchJob.cpp	/^QString BatchJob::Info()$/;"	f	class:BatchJob
Info	libs/map/EMapBase.cpp	/^std::string EMapBase::Info()$/;"	f	class:EMapBase
Init	apps/MIFit/ui/Application.cpp	/^void Application::Init()$/;"	f	class:Application
Init	libs/map/InterpBox.cpp	/^void InterpBox::Init()$/;"	f	class:InterpBox
InitBondAngle	libs/chemlib/CovalentGeom.cpp	/^void CovalentGeometry::InitBondAngle(MIAtom *atom1,$/;"	f	class:chemlib::CovalentGeometry
InitRingData	libs/chemlib/Ligand.cpp	/^void Ligand::InitRingData()$/;"	f	class:chemlib::Ligand
InitSeqPos	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::InitSeqPos()$/;"	f	class:chemlib::MIMoleculeBase
InitializeArray	libs/chemlib/sequence_util.h	/^    void InitializeArray(T *array, size_t size, T value)$/;"	f	namespace:chemlib
InitializeFromData	apps/MIFit/ui/BValueColors.cpp	/^void BValueColors::InitializeFromData(const ColorValues &dat)$/;"	f	class:BValueColors
InitializeFromData	apps/MIFit/ui/ContourOptionsWidget.cpp	/^void ContourOptionsWidget::InitializeFromData(const MapSettingsBase &data)$/;"	f	class:ContourOptionsWidget
InitializeFromData	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::InitializeFromData()$/;"	f	class:LSQFitDialog
InsertGap	apps/MIFit/core/Mlculseq.cpp	/^void Molecule::InsertGap(ResidueListIterator gap_point)$/;"	f	class:Molecule
InsertItem	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::InsertItem()$/;"	f	class:ModelsTree
InsertItem	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::InsertItem()$/;"	f	class:ResiduesTree
InsertLowerGap	apps/MIFit/core/Mlculseq.cpp	/^void Molecule::InsertLowerGap(ResidueListIterator gap_point)$/;"	f	class:Molecule
InsertMRK	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::InsertMRK(Residue *where, Molecule *model, bool before)$/;"	f	class:MIGLWidget
InsertRes	libs/chemlib/MIMoleculeBase.cpp	/^Residue*MIMoleculeBase::InsertRes(Residue *atres, const Residue *dictres, int where, unsigned short chain_id)$/;"	f	class:chemlib::MIMoleculeBase
InsertResidues	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::InsertResidues(Residue *atResidue, Residue *residues, int where, unsigned short chain_id)$/;"	f	class:chemlib::MIMoleculeBase
Int	apps/MIFit/ui/GenericDataDialog.h	/^        Int,$/;"	e	enum:GenericDataDialog::FieldType
InterpBox	libs/map/InterpBox.cpp	/^InterpBox::InterpBox(MIAtomList &vatoms, EMapBase *from_map)$/;"	f	class:InterpBox
InterpBox	libs/map/InterpBox.h	/^class InterpBox$/;"	c
InterpretColumnLabelString	libs/map/EMapBase.cpp	/^bool EMapBase::InterpretColumnLabelString(const char *s)$/;"	f	class:EMapBase
InvertChiralCenter	libs/chemlib/transform_util.cpp	/^bool InvertChiralCenter(MIAtom *center, const vector<Bond> &bonds, std::string &error)$/;"	f	namespace:chemlib
InvertMap	libs/map/EMapBase.cpp	/^static int InvertMap(micomplex x[], CMapHeaderBase *mh, std::vector<CREFL> &refl)$/;"	f	file:
InvertMatrix	libs/chemlib/Matrix.h	/^    bool InvertMatrix(Matrix<T> &A, double &det)$/;"	f	namespace:TNT
IsAllAromatic	libs/chemlib/RingSystem.cpp	/^bool RingSystem::IsAllAromatic() const$/;"	f	class:chemlib::RingSystem
IsAminoAcid	libs/chemlib/mol_util.cpp	/^bool IsAminoAcid(Residue *res)$/;"	f	namespace:chemlib
IsAromatic	libs/chemlib/Bond.h	/^    struct IsAromatic : public std::unary_function<Bond, bool>$/;"	s	namespace:chemlib
IsAromatic	libs/chemlib/RingSystem.cpp	/^bool RingSystem::IsAromatic() const$/;"	f	class:chemlib::RingSystem
IsAutoChiral	apps/MIFit/ui/DictEditCanvas.cpp	/^bool IsAutoChiral(CHIRAL c)$/;"	f
IsBeingRefined	libs/molopt/MIMolOpt.cpp	/^bool MIMolOpt::IsBeingRefined(MIAtom *atom)$/;"	f	class:MIMolOpt
IsBondRotatable	libs/chemlib/mol_util.h	/^    struct IsBondRotatable$/;"	s	namespace:chemlib
IsCCP4MTZFile	libs/map/EMapBase.cpp	/^bool EMapBase::IsCCP4MTZFile(const char *pathname)$/;"	f	class:EMapBase
IsCCP4MapFile	libs/map/EMapBase.cpp	/^bool EMapBase::IsCCP4MapFile(const char *pathname)$/;"	f	class:EMapBase
IsCNSMapFile	libs/map/EMapBase.cpp	/^bool EMapBase::IsCNSMapFile(const char *pathname)$/;"	f	class:EMapBase
IsCarbon	libs/chemlib/MIAtom.h	/^        inline bool IsCarbon() const$/;"	f	class:chemlib::MIAtom
IsCif	libs/map/EMapBase.cpp	/^bool EMapBase::IsCif(const char *pathname)$/;"	f	class:EMapBase
IsCifWhitespace	libs/chemlib/CifParser.h	/^inline bool IsCifWhitespace(char c)$/;"	f
IsCoordsChanged	libs/chemlib/MIMoleculeBase.h	/^        bool IsCoordsChanged() const$/;"	f	class:chemlib::MIMoleculeBase
IsDna	libs/chemlib/mol_util.cpp	/^int IsDna(const Monomer &res)     \/\/ does residue have minimal requirements for dna?$/;"	f	namespace:chemlib
IsDna	libs/chemlib/mol_util.cpp	/^int IsDna(const Residue &res)     \/\/ does residue have minimal requirements for dna?$/;"	f	namespace:chemlib
IsDrawing	apps/MIFit/ui/MIGLWidget.h	/^inline bool MIGLWidget::IsDrawing()$/;"	f	class:MIGLWidget
IsFinFile	libs/map/EMapBase.cpp	/^bool EMapBase::IsFinFile(const char *pathname)$/;"	f	class:EMapBase
IsFitting	apps/MIFit/ui/MIGLWidget.h	/^inline bool MIGLWidget::IsFitting()$/;"	f	class:MIGLWidget
IsFullScreen	apps/MIFit/ui/MIGLWidget.h	/^    bool IsFullScreen;$/;"	m	class:MIGLWidget
IsHeavy	libs/chemlib/MIAtom.h	/^    struct IsHeavy : std::unary_function<MIAtom*, bool>$/;"	s	namespace:chemlib
IsHydrogen	libs/chemlib/MIAtom.h	/^        inline bool IsHydrogen() const$/;"	f	class:chemlib::MIAtom
IsHydrogen	libs/chemlib/atom_util.h	/^    struct IsHydrogen : std::unary_function<const MIAtom*, bool>$/;"	s	namespace:chemlib
IsLoading	apps/MIFit/core/Cfiles.h	/^    bool IsLoading() const$/;"	f	class:CArchive
IsModified	apps/MIFit/ui/Displaylist.cpp	/^bool Displaylist::IsModified()$/;"	f	class:Displaylist
IsModified	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::IsModified()$/;"	f	class:MIGLWidget
IsModified	libs/map/EMapBase.h	/^    bool IsModified()$/;"	f	class:EMapBase
IsNitrogen	libs/chemlib/MIAtom.h	/^        inline bool IsNitrogen() const$/;"	f	class:chemlib::MIAtom
IsNucleic	libs/chemlib/mol_util.cpp	/^bool IsNucleic(Monomer *res)$/;"	f	namespace:chemlib
IsNucleic	libs/chemlib/mol_util.cpp	/^bool IsNucleic(Residue *res)$/;"	f	namespace:chemlib
IsOK	libs/math/LSQMatrix.h	/^inline bool LSQMatrix::IsOK()$/;"	f	class:LSQMatrix
IsOk	libs/map/CMapHeaderBase.cpp	/^bool CMapHeaderBase::IsOk()$/;"	f	class:CMapHeaderBase
IsOpened	apps/MIFit/core/Cfiles.cpp	/^bool CArchive::IsOpened() const$/;"	f	class:CArchive
IsOxygen	libs/chemlib/MIAtom.h	/^        inline bool IsOxygen() const$/;"	f	class:chemlib::MIAtom
IsPeptide	libs/chemlib/mol_util.cpp	/^bool IsPeptide(const Monomer &res)$/;"	f	namespace:chemlib
IsPhsFile	libs/map/EMapBase.cpp	/^bool EMapBase::IsPhsFile(const char *pathname)$/;"	f	class:EMapBase
IsPlanar	libs/chemlib/RingSystem.cpp	/^bool RingSystem::IsPlanar(float tolerance) const$/;"	f	class:chemlib::RingSystem
IsPolarH	libs/chemlib/mol_util.cpp	/^bool IsPolarH(const MIAtom *atom, const Residue *res)$/;"	f	namespace:chemlib
IsRefFile	libs/map/EMapBase.cpp	/^bool EMapBase::IsRefFile(const char *pathname)$/;"	f	class:EMapBase
IsRefining	libs/molopt/MIMolOpt.h	/^    bool IsRefining()$/;"	f	class:MIMolOpt
IsRegularMapType	libs/map/EMapBase.cpp	/^bool IsRegularMapType(unsigned int maptype)$/;"	f
IsRotatable	libs/chemlib/Bond.cpp	/^bool Bond::IsRotatable() const$/;"	f	class:chemlib::Bond
IsScaFile	libs/map/EMapBase.cpp	/^bool EMapBase::IsScaFile(const char *pathname)$/;"	f	class:EMapBase
IsSelected	libs/jacgrid/atom.cpp	/^bool JACAtomsMerge::IsSelected(unsigned int i) const$/;"	f	class:JACAtomsMerge
IsSelected	libs/jacgrid/atom.cpp	/^bool JACAtomsXYZR::IsSelected(unsigned int i) const$/;"	f	class:JACAtomsXYZR
IsShown	apps/MIFit/ui/RamaPlot.cpp	/^bool RamaPlotMgr::IsShown()$/;"	f	class:RamaPlotMgr
IsSmilesWhitespace	libs/chemlib/FirstToken.cpp	/^static inline bool IsSmilesWhitespace(char c)$/;"	f	file:
IsStoring	apps/MIFit/core/Cfiles.h	/^    bool IsStoring() const$/;"	f	class:CArchive
IsSulfur	libs/chemlib/MIAtom.h	/^        inline bool IsSulfur() const$/;"	f	class:chemlib::MIAtom
IsTorsioning	apps/MIFit/ui/MIGLWidget.h	/^inline bool MIGLWidget::IsTorsioning()$/;"	f	class:MIGLWidget
IsValid	apps/MIFit/ui/surf.cpp	/^    bool IsValid() const$/;"	f	class:MISurface
IsValid	libs/jacgrid/grid.h	/^    bool IsValid() const$/;"	f	class:gridT
IsWater	libs/chemlib/mol_util.cpp	/^bool IsWater(const Residue *res)$/;"	f	namespace:chemlib
IsWindowEnabled	apps/MIFit/ui/MIGLWidget.cpp	/^static bool IsWindowEnabled()$/;"	f	file:
IsXML	apps/MIFit/core/xmlarchive.cpp	/^bool IsXML(FILE *fp)$/;"	f
IsXMLDocument	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::IsXMLDocument(const char *pathname)$/;"	f	class:MIGLWidget
IsXMLMolecule	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::IsXMLMolecule(io &file)$/;"	f	class:MIGLWidget
Is_Onium	libs/chemlib/LigandPerceiver.cpp	/^bool Is_Onium(MIAtom &atom, std::vector<Bond> bonds)$/;"	f	namespace:chemlib
IterateTest	libs/chemlib/itertest.cxx	/^void IterateTest(MIMoleculeBase *mol)$/;"	f
JACATOMS_H	libs/jacgrid/atom.h	2;"	d
JACAtomsBase	libs/jacgrid/atom.h	/^class JACAtomsBase$/;"	c
JACAtomsMerge	libs/jacgrid/atom.cpp	/^JACAtomsMerge::JACAtomsMerge(const JACAtomsBase &atoms1,$/;"	f	class:JACAtomsMerge
JACAtomsMerge	libs/jacgrid/atom.h	/^class JACAtomsMerge : public JACAtomsBase$/;"	c
JACAtomsXYZR	libs/jacgrid/atom.cpp	/^JACAtomsXYZR::JACAtomsXYZR(const float *xyzr,$/;"	f	class:JACAtomsXYZR
JACAtomsXYZR	libs/jacgrid/atom.h	/^class JACAtomsXYZR : public JACAtomsBase$/;"	c
JACAtomsXYZROTE	libs/jacgrid/atom.cpp	/^JACAtomsXYZROTE::JACAtomsXYZROTE(const float *xyzr,$/;"	f	class:JACAtomsXYZROTE
JACAtomsXYZROTE	libs/jacgrid/atom.h	/^class JACAtomsXYZROTE : public JACAtomsXYZR$/;"	c
JACCalculateAccessibleVolume	libs/jacgrid/surface.cpp	/^float JACCalculateAccessibleVolume(const JACAtomsBase &atoms)$/;"	f
JACCalculateMolecularVolume	libs/jacgrid/surface.cpp	/^float JACCalculateMolecularVolume(const JACAtomsBase &atoms)$/;"	f
JACCalculateVdWVolume	libs/jacgrid/surface.cpp	/^float JACCalculateVdWVolume(const JACAtomsBase &atoms)$/;"	f
JACCalculateVolume	libs/jacgrid/surface.cpp	/^float JACCalculateVolume(unsigned int itype,$/;"	f
JACDifferenceGrid	libs/jacgrid/surface.cpp	/^void JACDifferenceGrid(gridT &grid,$/;"	f
JACDifferenceSurface	libs/jacgrid/surface.cpp	/^void JACDifferenceSurface(surfaceT &surface,$/;"	f
JACFlagGrid	libs/jacgrid/surface.cpp	/^static int JACFlagGrid(gridT &grid, const JACAtomsBase &atoms,$/;"	f	file:
JACGetGridDimension	libs/jacgrid/surface.cpp	/^unsigned int JACGetGridDimension()$/;"	f
JACGetProbeRadius	libs/jacgrid/surface.cpp	/^float JACGetProbeRadius()$/;"	f
JACInvertTriangles	libs/jacgrid/surface.cpp	/^void JACInvertTriangles(surfaceT &surface,$/;"	f
JACMakeAccessibleSurface	libs/jacgrid/surface.cpp	/^bool JACMakeAccessibleSurface(surfaceT &surf, const JACAtomsBase &atoms)$/;"	f
JACMakeMolecularSurface	libs/jacgrid/surface.cpp	/^bool JACMakeMolecularSurface(surfaceT &surf, const JACAtomsBase &atoms)$/;"	f
JACMakeSurface	libs/jacgrid/surface.cpp	/^bool JACMakeSurface(surfaceT &surf, unsigned int itype,$/;"	f
JACOverlapGrid	libs/jacgrid/surface.cpp	/^void JACOverlapGrid(gridT &grid,$/;"	f
JACOverlapOrDifferenceGrid	libs/jacgrid/surface.cpp	/^void JACOverlapOrDifferenceGrid(gridT &grid1,$/;"	f
JACOverlapSurface	libs/jacgrid/surface.cpp	/^void JACOverlapSurface(surfaceT &surface,$/;"	f
JACPlane	libs/jacgrid/plane.cpp	/^JACPlane::JACPlane()$/;"	f	class:JACPlane
JACPlane	libs/jacgrid/plane.cpp	/^JACPlane::JACPlane(unsigned int _xdim, unsigned int _ydim)$/;"	f	class:JACPlane
JACPlane	libs/jacgrid/plane.h	/^class JACPlane$/;"	c
JACSetGridDimension	libs/jacgrid/surface.cpp	/^void JACSetGridDimension(unsigned int d)$/;"	f
JACSetGridParams	libs/jacgrid/surface.cpp	/^void JACSetGridParams(gridT &grid, unsigned int itype,$/;"	f
JACSetProbeRadius	libs/jacgrid/surface.cpp	/^void JACSetProbeRadius(float r)$/;"	f
JACSmoothSurface	libs/jacgrid/surface.cpp	/^void JACSmoothSurface(surfaceT &surf, unsigned int beg, unsigned int end)$/;"	f
JACSurfaceArea	libs/jacgrid/surface.cpp	/^float JACSurfaceArea(const JACAtomsBase &atoms,$/;"	f
JACSurfaceArea	libs/jacgrid/surface.cpp	/^float JACSurfaceArea(const surfaceT &surface, unsigned int *select, unsigned int sel_mask)$/;"	f
JACSurfaceNormalize	libs/jacgrid/surface.cpp	/^void JACSurfaceNormalize(surfaceT &surface)$/;"	f
JACSurfaceSwapFace	libs/jacgrid/surface.cpp	/^void JACSurfaceSwapFace(surfaceT &surface,$/;"	f
JACSurfaceTypes	libs/jacgrid/jacgrid.h	/^namespace JACSurfaceTypes$/;"	n
JACSurfaceVolume	libs/jacgrid/surface.cpp	/^float JACSurfaceVolume(const surfaceT &surface, unsigned int *select, unsigned int sel_mask)$/;"	f
JACUnFlagGrid	libs/jacgrid/surface.cpp	/^static int JACUnFlagGrid(gridT &grid, surfaceT &surface)$/;"	f	file:
JAC_GRID_H	libs/jacgrid/grid.h	2;"	d
JAC_JACGRID_H	libs/jacgrid/jacgrid.h	2;"	d
JAC_JACGRID_PRIVATE_H	libs/jacgrid/jacgrid_private.h	2;"	d
JAC_LINALG_H	libs/jacgrid/linalg.h	2;"	d
JAC_PLANE_H	libs/jacgrid/plane.h	2;"	d
JAC_SURFACE_H	libs/jacgrid/surface.h	2;"	d
J_fp	libs/map/fftlib.cpp	/^typedef shortint (*J_fp)(...);$/;"	t	file:
JobFinishedStatusLabel	apps/MIFit/jobs/BatchJob.cpp	/^JobFinishedStatusLabel::JobFinishedStatusLabel(const QString &text, int timeout, QStatusBar *parent)$/;"	f	class:JobFinishedStatusLabel
JobFinishedStatusLabel	apps/MIFit/jobs/BatchJob.h	/^class JobFinishedStatusLabel : public QLabel$/;"	c
JobList	apps/MIFit/jobs/BatchJobManager.h	/^    std::vector<BatchJob*> JobList;$/;"	m	class:BatchJobManager
JobManager	apps/MIFit/ui/MIMainWindow.h	/^    BatchJobManager *JobManager;$/;"	m	class:MIMainWindow
JobsTree	apps/MIFit/ui/JobsView.cpp	/^JobsTree::JobsTree(QWidget *parent)$/;"	f	class:JobsTree
JobsTree	apps/MIFit/ui/JobsView.cpp	/^class JobsTree$/;"	c	file:
JobsView	apps/MIFit/ui/JobsView.cpp	/^JobsView::JobsView(QWidget *parent)$/;"	f	class:JobsView
JobsView	apps/MIFit/ui/JobsView.h	/^class JobsView : public QWidget$/;"	c
K	libs/chemlib/RefmacType.h	/^    const unsigned int K    = 96;$/;"	m	namespace:RefmacType
KNOWN_MACHINE	libs/cmtz/ccp4_sysdep.h	100;"	d
KNOWN_MACHINE	libs/cmtz/ccp4_sysdep.h	107;"	d
KNOWN_MACHINE	libs/cmtz/ccp4_sysdep.h	113;"	d
KNOWN_MACHINE	libs/cmtz/ccp4_sysdep.h	119;"	d
KNOWN_MACHINE	libs/cmtz/ccp4_sysdep.h	31;"	d
KNOWN_MACHINE	libs/cmtz/ccp4_sysdep.h	36;"	d
KNOWN_MACHINE	libs/cmtz/ccp4_sysdep.h	47;"	d
KNOWN_MACHINE	libs/cmtz/ccp4_sysdep.h	52;"	d
KNOWN_MACHINE	libs/cmtz/ccp4_sysdep.h	63;"	d
KNOWN_MACHINE	libs/cmtz/ccp4_sysdep.h	73;"	d
KNOWN_MACHINE	libs/cmtz/ccp4_sysdep.h	83;"	d
KNOWN_MACHINE	libs/cmtz/ccp4_sysdep.h	88;"	d
KNOWN_MACHINE	libs/cmtz/ccp4_sysdep.h	94;"	d
KNOWN_MACHINE	libs/umtz/library.h	106;"	d
KNOWN_MACHINE	libs/umtz/library.h	116;"	d
KNOWN_MACHINE	libs/umtz/library.h	124;"	d
KNOWN_MACHINE	libs/umtz/library.h	139;"	d
KNOWN_MACHINE	libs/umtz/library.h	154;"	d
KNOWN_MACHINE	libs/umtz/library.h	170;"	d
KNOWN_MACHINE	libs/umtz/library.h	186;"	d
KNOWN_MACHINE	libs/umtz/library.h	194;"	d
KNOWN_MACHINE	libs/umtz/library.h	199;"	d
KNOWN_MACHINE	libs/umtz/library.h	216;"	d
KNOWN_MACHINE	libs/umtz/library.h	76;"	d
KNOWN_MACHINE	libs/umtz/library.h	83;"	d
KNOWN_MACHINE	libs/umtz/library.h	96;"	d
KR	libs/chemlib/RefmacType.h	/^    const unsigned int KR   = 172;$/;"	m	namespace:RefmacType
K_fp	libs/map/fftlib.cpp	/^typedef shortlogical (*K_fp)(...);$/;"	t	file:
Ksolvent	libs/map/CMapHeaderBase.h	/^    float Bsolvent, Ksolvent; \/* bulk solvent model *\/$/;"	m	class:CMapHeaderBase
LA	libs/chemlib/RefmacType.h	/^    const unsigned int LA   = 106;$/;"	m	namespace:RefmacType
LABEL_ROOM	apps/MIFit/ui/graphlib.cpp	16;"	d	file:
LAST	apps/MIFit/core/RESIDUE.h	15;"	d
LAST	libs/chemlib/model.h	77;"	d
LAST_RES	libs/chemlib/mol_util.cpp	/^static Residue *LAST_RES = NULL;$/;"	m	namespace:chemlib	file:
LAST_RES_LIST	libs/chemlib/mol_util.cpp	/^static Residue *LAST_RES_LIST = NULL;$/;"	m	namespace:chemlib	file:
LEAVE	libs/opengl/zlib/infutil.h	75;"	d
LEFT	libs/opengl/Frustum.cpp	/^const int Frustum::LEFT = 2;$/;"	m	class:mi::opengl::Frustum	file:
LEFT	libs/opengl/Frustum.h	/^            static const int LEFT;$/;"	m	class:mi::opengl::Frustum
LEN	libs/opengl/zlib/infcodes.cpp	/^ LEN,           \/* i: get length\/literal\/eob next *\/$/;"	e	enum:__anon38	file:
LENEXT	libs/opengl/zlib/infcodes.cpp	/^ LENEXT,        \/* i: getting length extra (have base) *\/$/;"	e	enum:__anon38	file:
LENS	libs/opengl/zlib/infutil.h	/^    LENS,       \/* get lengths for stored *\/$/;"	e	enum:__anon34
LFLAGS	apps/MIFit/main/Makefile	/^LFLAGS        = -Wl,--rpath=\\$$ORIGIN -Wl,--rpath=\\$$ORIGIN\/lib -Wl,--rpath=\\$$ORIGIN\/libs -Wl,-O1 -Wl,-z,relro$/;"	m
LI	libs/chemlib/RefmacType.h	/^    const unsigned int LI   = 94;$/;"	m	namespace:RefmacType
LIBS	apps/MIFit/main/Makefile	/^LIBS          = $(SUBLIBS)  -L\/usr\/X11R6\/lib -L\/usr\/lib64 -L\/mnt\/multimedia\/ipnoise\/IPNoise\/packages\/ipnoise-neuron\/neuron-rc\/3rdparty\/mifit-mifit\/apps\/MIFit\/main\/.. -lui -ljobs -lscript -lcore -L\/mnt\/multimedia\/ipnoise\/IPNoise\/packages\/ipnoise-neuron\/neuron-rc\/3rdparty\/mifit-mifit\/apps\/MIFit\/main\/..\/..\/..\/libs -lligand -lmap -lmolopt -lconflib -lchemlib -lmiopengl -lmimath -lmiutil -ljacgrid -lumtz -lGL -lQtDeclarative -lQtSvg -lQtSql -lQtXmlPatterns -lQtScript -lQtXml -lQtOpenGL -lQtGui -lQtNetwork -lQtCore -lpthread -lglut -lGLU$/;"	m
LIGAND_H	libs/chemlib/Ligand.h	2;"	d
LIGAND_PERCEIVER_H	libs/chemlib/LigandPerceiver.h	2;"	d
LIGDICTIONARY_H	libs/chemlib/Dictionary.h	2;"	d
LIG_REFINER_H	libs/conflib/LigRefiner.h	2;"	d
LINE	libs/math/LINE.h	/^class LINE$/;"	c
LINEAR	libs/chemlib/model.h	65;"	d
LINK	apps/MIFit/main/Makefile	/^LINK          = g++$/;"	m
LINKAGEMASK	apps/MIFit/core/RESIDUE.h	18;"	d
LINKAGEMASK	libs/chemlib/model.h	80;"	d
LINKED	apps/MIFit/core/pdbmatch.cpp	324;"	d	file:
LINKEDAA	apps/MIFit/core/pdbmatch.cpp	325;"	d	file:
LIT	libs/opengl/zlib/infcodes.cpp	/^ LIT,           \/* o: got literal, waiting for output space *\/$/;"	e	enum:__anon38	file:
LOAD	libs/opengl/zlib/infutil.h	90;"	d
LOADIN	libs/opengl/zlib/infutil.h	77;"	d
LOADOUT	libs/opengl/zlib/infutil.h	84;"	d
LOWER_MASK	libs/math/MersenneTwister.h	/^            const unsigned int LOWER_MASK;$/;"	m	class:mi::math::MersenneTwister
LSQFitDialog	apps/MIFit/ui/LSQFitDialog.cpp	/^LSQFitDialog::LSQFitDialog(QWidget *parent)$/;"	f	class:LSQFitDialog
LSQFitDialog	apps/MIFit/ui/LSQFitDialog.h	/^class LSQFitDialog : public QDialog, public Ui::LSQFitDialog$/;"	c
LSQFitDialog	apps/MIFit/ui/ui_LSQFitDialog.h	/^    class LSQFitDialog: public Ui_LSQFitDialog {};$/;"	c	namespace:Ui
LSQMatrix	libs/math/LSQMatrix.h	/^class LSQMatrix$/;"	c
LSQMatrix	libs/math/LSQMatrix.h	/^inline LSQMatrix::LSQMatrix()$/;"	f	class:LSQMatrix
LSqrPlane	libs/chemlib/Ligand.cpp	/^void Ligand::LSqrPlane(double vm[3], double *d) const$/;"	f	class:chemlib::Ligand
LSqrPlane	libs/chemlib/RingSystem.cpp	/^void RingSystem::LSqrPlane(double vm[3], double *d) const$/;"	f	class:chemlib::RingSystem
LU	libs/chemlib/RefmacType.h	/^    const unsigned int LU   = 119;$/;"	m	namespace:RefmacType
L_fp	libs/map/fftlib.cpp	/^typedef logical (*L_fp)(...);$/;"	t	file:
Label	apps/MIFit/ui/graphlib.cpp	518;"	d	file:
Label	libs/map/CMapHeaderBase.cpp	/^std::string CMapHeaderBase::Label() const$/;"	f	class:CMapHeaderBase
LabelPick	apps/MIFit/ui/Displaylist.cpp	/^void Displaylist::LabelPick(bool toggle)$/;"	f	class:Displaylist
LabelPicks	apps/MIFit/ui/Application.h	/^    bool LabelPicks; \/\/ if true then picked atoms are labeled.$/;"	m	class:Application
LabelToggle	apps/MIFit/ui/Application.h	/^    bool LabelToggle; \/\/ If true then picking an atom for the second time toggles the label off.$/;"	m	class:Application
LabelsVisible	apps/MIFit/core/Molecule.h	/^inline int Molecule::LabelsVisible()$/;"	f	class:Molecule
LastItem	apps/MIFit/ui/Displaylist.h	/^inline Molecule*Displaylist::LastItem()$/;"	f	class:Displaylist
LeastTheta	libs/chemlib/substituent_util.h	/^    struct LeastTheta$/;"	s	namespace:chemlib
LeftFooter	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::LeftFooter(const std::string &msg, int timeout)$/;"	f	class:MIMainWindow
Left_Atomic_Name	libs/chemlib/mol_util.cpp	/^const char *Left_Atomic_Name(int atomic_number)$/;"	f	namespace:chemlib
LengthChain	libs/chemlib/MIMoleculeBase.cpp	/^size_t MIMoleculeBase::LengthChain(unsigned short chain_id)$/;"	f	class:chemlib::MIMoleculeBase
LengthTolerance	libs/chemlib/CovalentGeom.cpp	/^void CovalentGeometry::LengthTolerance(BondLength &bondlength)$/;"	f	class:chemlib::CovalentGeometry
LengthValue	libs/chemlib/CovalentGeom.cpp	/^void CovalentGeometry::LengthValue(BondLength &bondlength)$/;"	f	class:chemlib::CovalentGeometry
LigDictEntry	libs/ligand/LigDictEntry.cpp	/^LigDictEntry::LigDictEntry(chemlib::Residue *r)$/;"	f	class:LigDictEntry
LigDictEntry	libs/ligand/LigDictEntry.h	/^class LigDictEntry$/;"	c
LigDictionary	libs/chemlib/Dictionary.cpp	/^LigDictionary::LigDictionary(Ligand *mol, const Monomer *res)$/;"	f	class:chemlib::LigDictionary
LigDictionary	libs/chemlib/Dictionary.h	/^    class LigDictionary$/;"	c	namespace:chemlib
LigPostProcessor	libs/ligand/LigPostProcessor.cpp	/^LigPostProcessor::LigPostProcessor(LigDictEntry &mon, const char *formatString)$/;"	f	class:LigPostProcessor
LigPostProcessor	libs/ligand/LigPostProcessor.h	/^class LigPostProcessor$/;"	c
LigRefiner	libs/conflib/LigRefiner.cpp	/^LigRefiner::LigRefiner()$/;"	f	class:LigRefiner
LigRefiner	libs/conflib/LigRefiner.h	/^    class LigRefiner$/;"	c	namespace:conflib
Ligand	libs/chemlib/Ligand.cpp	/^Ligand::Ligand(const Residue &res, const std::vector<Bond> &orig_bonds)$/;"	f	class:chemlib::Ligand
Ligand	libs/chemlib/Ligand.cpp	/^Ligand::Ligand(const Residue *res, const std::vector<Bond> &orig_bonds)$/;"	f	class:chemlib::Ligand
Ligand	libs/chemlib/Ligand.cpp	/^Ligand::Ligand(const std::vector<Monomer*> &orig_res, const std::vector<Bond> &orig_bonds)$/;"	f	class:chemlib::Ligand
Ligand	libs/chemlib/Ligand.cpp	/^Ligand::Ligand(int type)$/;"	f	class:chemlib::Ligand
Ligand	libs/chemlib/Ligand.h	/^    class Ligand$/;"	c	namespace:chemlib
LigandOptimize	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::LigandOptimize(MIAtomList &CurrentAtoms, MIMoleculeBase *fitmol, EMapBase *emap, const float *center,$/;"	f	class:MIMolOpt
LigandPerceiver	libs/chemlib/LigandPerceiver.h	/^    class LigandPerceiver$/;"	c	namespace:chemlib
LigandRefiner_IsHydrogen	libs/conflib/LigRefiner.cpp	/^inline bool LigandRefiner_IsHydrogen(const MIAtom *atom)$/;"	f
Light	libs/opengl/Light.cpp	/^Light::Light(int lightId, float *ambientColor)$/;"	f	class:mi::opengl::Light
Light	libs/opengl/Light.h	/^        class Light$/;"	c	namespace:mi::opengl
Line	apps/MIFit/ui/graphlib.cpp	513;"	d	file:
LineEditToModelsTreeMap	apps/MIFit/ui/ModelsView.h	/^    typedef std::map<QLineEdit*, ModelsTree*> LineEditToModelsTreeMap;$/;"	t	class:ModelsView
Lines	apps/MIFit/ui/DictEditCanvas.cpp	/^    Lines,$/;"	e	enum:RenderMode	file:
ListMatches	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::ListMatches()$/;"	f	class:LSQFitDialog
ListSource	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::ListSource()$/;"	f	class:LSQFitDialog
ListSourceChoices	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::ListSourceChoices()$/;"	f	class:LSQFitDialog
ListTarget	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::ListTarget()$/;"	f	class:LSQFitDialog
ListTargetChoices	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::ListTargetChoices()$/;"	f	class:LSQFitDialog
Load	apps/MIFit/core/Molecule.cpp	/^void Molecule::Load(FILE *fp)$/;"	f	class:Molecule
Load	libs/math/LSQMatrix.cpp	/^bool LSQMatrix::Load(const char *pathname)$/;"	f	class:LSQMatrix
LoadCCP4Map	libs/map/EMapBase.cpp	/^long EMapBase::LoadCCP4Map(const char *pathname, float *rms, float *min, float *max)$/;"	f	class:EMapBase
LoadCIFMap	apps/MIFit/ui/EMap.cpp	/^long EMap::LoadCIFMap(const char *pathname, int datablock)$/;"	f	class:EMap
LoadCIFMap	libs/map/EMapBase.cpp	/^long EMapBase::LoadCIFMap(const char *pathname, int datablock)$/;"	f	class:EMapBase
LoadCNSMap	libs/map/EMapBase.cpp	/^long EMapBase::LoadCNSMap(const char *pathname)$/;"	f	class:EMapBase
LoadCrystal	apps/MIFit/ui/CMapHeader.cpp	/^bool CMapHeader::LoadCrystal(const char *crystal)$/;"	f	class:CMapHeader
LoadCrystal	libs/map/CMapHeaderBase.h	/^    virtual bool LoadCrystal(const char*)$/;"	f	class:CMapHeaderBase
LoadDefaultDictionary	libs/chemlib/MIMolDictionary.cpp	/^bool MIMolDictionary::LoadDefaultDictionary(const std::string &dictionary,$/;"	f	class:chemlib::MIMolDictionary
LoadDict	libs/chemlib/MIMolDictionary.cpp	/^int MIMolDictionary::LoadDict(FILE *fp, bool append, bool replace_old)$/;"	f	class:chemlib::MIMolDictionary
LoadDictionary	apps/MIFit/ui/Application.cpp	/^void Application::LoadDictionary()$/;"	f	class:Application
LoadDictionary	libs/chemlib/MIMolDictionary.cpp	/^bool MIMolDictionary::LoadDictionary(const char *path, bool append, bool replace,$/;"	f	class:chemlib::MIMolDictionary
LoadFSFOURMapFile	libs/map/EMapBase.cpp	/^long EMapBase::LoadFSFOURMapFile(const char *pathname)$/;"	f	class:EMapBase
LoadFromGrid	libs/jacgrid/plane.cpp	/^void JACPlane::LoadFromGrid(const gridT &grid)$/;"	f	class:JACPlane
LoadLigand	apps/MIFlex/common.cpp	/^MIMoleculeBase *LoadLigand(const std::string &filename,$/;"	f
LoadMTZMap	libs/map/EMapBase.cpp	/^long EMapBase::LoadMTZMap(const char *pathname, bool require_fo)$/;"	f	class:EMapBase
LoadMap	apps/MIFit/ui/EMap.cpp	/^long EMap::LoadMap(const char *pathname, int type)$/;"	f	class:EMap
LoadMap	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::LoadMap(const char *buf, const char *pathname, const std::string &col_names)$/;"	f	class:MIGLWidget
LoadMap	libs/map/EMapBase.cpp	/^long EMapBase::LoadMap(const char *pathname, int type)$/;"	f	class:EMapBase
LoadMapFile	libs/map/EMapBase.cpp	/^bool EMapBase::LoadMapFile(const char *s)$/;"	f	class:EMapBase
LoadMapPhaseFile	libs/map/EMapBase.cpp	/^bool EMapBase::LoadMapPhaseFile(const char *s, bool require_fo)$/;"	f	class:EMapBase
LoadMol	apps/MIFlex/common.cpp	/^MIMoleculeBase *LoadMol(const char *fname)$/;"	f
LoadPDB	libs/chemlib/PDB.cpp	/^Residue *LoadPDB(FILE *f, std::vector<Bond> *connects)$/;"	f	namespace:chemlib
LoadPDBFile	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::LoadPDBFile(const char *pathname)$/;"	f	class:MIGLWidget
LoadRes	libs/chemlib/MIMolDictionary.cpp	/^int MIMolDictionary::LoadRes(Residue *respdb, bool append, bool replace_old, bool rplc_backbone_tor)$/;"	f	class:chemlib::MIMolDictionary
LoadScript	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::LoadScript(const char *path)$/;"	f	class:MIGLWidget
LoadSmiles	apps/MIFit/ui/MIMainWindow.cpp	/^bool MIMainWindow::LoadSmiles(std::string &smiles, std::string &tlcode, MIMolInfo &mi)$/;"	f	class:MIMainWindow
LoadXMLMolecule	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::LoadXMLMolecule(const char *pathname, int nmodel)$/;"	f	class:MIGLWidget
LocalSocketScript	apps/MIFit/script/LocalSocketScript.cpp	/^LocalSocketScript::LocalSocketScript(QObject *parent)$/;"	f	class:LocalSocketScript
LocalSocketScript	apps/MIFit/script/LocalSocketScript.h	/^class LocalSocketScript : public QObject$/;"	c
Log	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::Log(const std::string &msg)$/;"	f	class:MIMainWindow
Logger	apps/MIFit/ui/Logger.h	/^class Logger$/;"	c
Long	libs/map/fftlib.cpp	/^typedef long Long;  \/* No longer used; formerly in Namelist *\/$/;"	t	file:
M	libs/math/MersenneTwister.h	/^            const int M;$/;"	m	class:mi::math::MersenneTwister
MAGENTA	apps/MIFit/core/Colors.cpp	/^const int Colors::MAGENTA = 6;$/;"	m	class:Colors	file:
MAGENTA	apps/MIFit/core/Colors.h	/^    static const int MAGENTA;$/;"	m	class:Colors
MAGIC	libs/math/MersenneTwister.h	/^            static unsigned int MAGIC(unsigned int y)$/;"	f	class:mi::math::MersenneTwister
MAINCHAIN	libs/chemlib/model.h	/^        const unsigned int MAINCHAIN = ((unsigned int)0x00001000);$/;"	m	namespace:chemlib::AtomType
MAINWINDOW_H	apps/MIFit/ui/MIMainWindow.h	2;"	d
MAKEFILE	Makefile	/^MAKEFILE      = Makefile$/;"	m
MAKEFILE	apps/MIFit/Makefile	/^MAKEFILE      = Makefile$/;"	m
MAKEFILE	apps/Makefile	/^MAKEFILE      = Makefile$/;"	m
MAKEFILE	libs/Makefile	/^MAKEFILE      = Makefile$/;"	m
MANAGE_CRYSTALS_DIALOG_H	apps/MIFit/ui/ManageCrystals.h	2;"	d
MANY	libs/opengl/zlib/inftrees.h	35;"	d
MAP1	apps/MIFit/core/Colors.cpp	/^const int Colors::MAP1 = 21;$/;"	m	class:Colors	file:
MAP1	apps/MIFit/core/Colors.h	/^    static const int MAP1;$/;"	m	class:Colors
MAP10	apps/MIFit/core/Colors.cpp	/^const int Colors::MAP10 = 30;$/;"	m	class:Colors	file:
MAP10	apps/MIFit/core/Colors.h	/^    static const int MAP10;$/;"	m	class:Colors
MAP2	apps/MIFit/core/Colors.cpp	/^const int Colors::MAP2 = 22;$/;"	m	class:Colors	file:
MAP2	apps/MIFit/core/Colors.h	/^    static const int MAP2;$/;"	m	class:Colors
MAP3	apps/MIFit/core/Colors.cpp	/^const int Colors::MAP3 = 23;$/;"	m	class:Colors	file:
MAP3	apps/MIFit/core/Colors.h	/^    static const int MAP3;$/;"	m	class:Colors
MAP4	apps/MIFit/core/Colors.cpp	/^const int Colors::MAP4 = 24;$/;"	m	class:Colors	file:
MAP4	apps/MIFit/core/Colors.h	/^    static const int MAP4;$/;"	m	class:Colors
MAP5	apps/MIFit/core/Colors.cpp	/^const int Colors::MAP5 = 25;$/;"	m	class:Colors	file:
MAP5	apps/MIFit/core/Colors.h	/^    static const int MAP5;$/;"	m	class:Colors
MAP6	apps/MIFit/core/Colors.cpp	/^const int Colors::MAP6 = 26;$/;"	m	class:Colors	file:
MAP6	apps/MIFit/core/Colors.h	/^    static const int MAP6;$/;"	m	class:Colors
MAP7	apps/MIFit/core/Colors.cpp	/^const int Colors::MAP7 = 27;$/;"	m	class:Colors	file:
MAP7	apps/MIFit/core/Colors.h	/^    static const int MAP7;$/;"	m	class:Colors
MAP8	apps/MIFit/core/Colors.cpp	/^const int Colors::MAP8 = 28;$/;"	m	class:Colors	file:
MAP8	apps/MIFit/core/Colors.h	/^    static const int MAP8;$/;"	m	class:Colors
MAP9	apps/MIFit/core/Colors.cpp	/^const int Colors::MAP9 = 29;$/;"	m	class:Colors	file:
MAP9	apps/MIFit/core/Colors.h	/^    static const int MAP9;$/;"	m	class:Colors
MAP_BBLOB	libs/map/EMapBase.h	/^typedef enum {MAP_CUBE = 0, MAP_SPHERE, MAP_BBLOB, MAP_BOX} CONTOUR_METHOD_TYPE;$/;"	e	enum:__anon46
MAP_BOX	libs/map/EMapBase.h	/^typedef enum {MAP_CUBE = 0, MAP_SPHERE, MAP_BBLOB, MAP_BOX} CONTOUR_METHOD_TYPE;$/;"	e	enum:__anon46
MAP_CUBE	libs/map/EMapBase.h	/^typedef enum {MAP_CUBE = 0, MAP_SPHERE, MAP_BBLOB, MAP_BOX} CONTOUR_METHOD_TYPE;$/;"	e	enum:__anon46
MAP_POINT	libs/map/MAP_POINT.h	/^class MAP_POINT$/;"	c
MAP_SPHERE	libs/map/EMapBase.h	/^typedef enum {MAP_CUBE = 0, MAP_SPHERE, MAP_BBLOB, MAP_BOX} CONTOUR_METHOD_TYPE;$/;"	e	enum:__anon46
MAP_TYPE_COUNT	libs/map/EMapBase.cpp	/^const unsigned int MAP_TYPE_COUNT = 11;$/;"	v
MATCH	apps/MIFit/ui/LSQFitDialog.h	/^class MATCH$/;"	c
MATH_UTIL_H	libs/chemlib/math_util.h	2;"	d
MATRICES_H	libs/math/Matrices.h	2;"	d
MAX	libs/cmtz/ccp4_types.h	66;"	d
MAX	libs/jacgrid/surface.cpp	/^inline float MAX(float a, float b)$/;"	f
MAX	libs/umtz/library.h	879;"	d
MAXATOMNAME	libs/chemlib/MIAtom_fwd.h	/^    const unsigned int MAXATOMNAME = 6;$/;"	m	namespace:chemlib
MAXBINS	libs/map/fftsub.cpp	1183;"	d	file:
MAXBINS	libs/map/sfcalc.cpp	988;"	d	file:
MAXFILES	libs/cmtz/ccp4_sysdep.h	208;"	d
MAXFILES	libs/umtz/library.h	327;"	d
MAXFLEN	libs/cmtz/ccp4_sysdep.h	207;"	d
MAXFLEN	libs/umtz/library.h	326;"	d
MAXFTABLE	libs/map/sfcalc_data.h	/^int MAXFTABLE;$/;"	v
MAXHITS	apps/MIFit/core/pdbmatch.cpp	326;"	d	file:
MAXHNAME	libs/map/sfcalc_data.h	4;"	d
MAXLENGTH	libs/chemlib/RefmacType.h	/^    const int MAXLENGTH = 4;        \/\/# of characters in a Refmac type$/;"	m	namespace:RefmacType
MAXLOOP	libs/map/EMapBase.cpp	87;"	d	file:
MAXNAME	libs/chemlib/Residue.h	16;"	d
MAXNAME	libs/chemlib/model.h	16;"	d
MAXNCRSYMMOPS	libs/map/CMapHeaderBase.h	/^    const unsigned int MAXNCRSYMMOPS = 48;$/;"	m	namespace:MISymmop
MAXPLANE	libs/chemlib/PLANE.h	42;"	d
MAXSEG_64K	libs/opengl/zlib/zconf.h	64;"	d
MAXSPGNAMELENGTH	libs/cmtz/mtzdata.h	40;"	d
MAXSTRING	libs/map/CMapHeaderBase.h	/^    const unsigned int MAXSTRING = 1024;$/;"	m	namespace:MISymmop
MAXSYMMOPS	libs/map/CMapHeaderBase.h	/^    const unsigned int MAXSYMMOPS = 192;$/;"	m	namespace:MISymmop
MAXTYPE	libs/chemlib/RefmacType.h	/^    const unsigned int MAXTYPE = 175;$/;"	m	namespace:RefmacType
MAXTYPES	libs/map/sfcalc.h	15;"	d
MAX_MATCH	libs/opengl/zlib/zutil.h	69;"	d
MAX_MEM_LEVEL	libs/opengl/zlib/zconf.h	101;"	d
MAX_MEM_LEVEL	libs/opengl/zlib/zconf.h	99;"	d
MAX_MOLFILE_LINE	libs/chemlib/molfile.cpp	11;"	d	file:
MAX_PTR	libs/opengl/zlib/zutil.cpp	97;"	d	file:
MAX_WBITS	libs/opengl/zlib/zconf.h	111;"	d
MCOLUMNS	libs/cmtz/mtzdata.h	48;"	d
MDFBIG	libs/cmtz/library_utils.c	256;"	d	file:
METALLIGANDBOND	libs/chemlib/model.h	26;"	d
METHOD	libs/opengl/zlib/inflate.cpp	/^    METHOD,     \/* waiting for method byte *\/$/;"	e	enum:__anon42	file:
MG	libs/chemlib/RefmacType.h	/^    const unsigned int MG   = 100;$/;"	m	namespace:RefmacType
MIAfterFirst	libs/util/system.cpp	/^std::string MIAfterFirst(const std::string &s, char sep)$/;"	f
MIAfterLast	libs/util/system.cpp	/^std::string MIAfterLast(const std::string &s, char sep)$/;"	f
MIAtom	libs/chemlib/MIAtom.cpp	/^MIAtom::MIAtom()$/;"	f	class:chemlib::MIAtom
MIAtom	libs/chemlib/MIAtom.h	/^    class MIAtom$/;"	c	namespace:chemlib
MIAtomColorSurface	apps/MIFit/ui/surf.cpp	/^bool MIAtomColorSurface(unsigned int surfnum,$/;"	f
MIAtomFromNameIncludingSynonyms	libs/chemlib/MIMolDictionary.cpp	/^MIAtom *MIAtomFromNameIncludingSynonyms(const char *name, const Residue *residue)$/;"	f	namespace:chemlib
MIAtomList	libs/chemlib/MIAtom_fwd.h	/^    typedef std::vector<MIAtom*> MIAtomList;$/;"	t	namespace:chemlib
MIAtomRadiusForType	libs/chemlib/MIAtom.cpp	/^float MIAtom::MIAtomRadiusForType(int i)$/;"	f	class:chemlib::MIAtom
MIAtom_const_iter	libs/chemlib/MIAtom_fwd.h	/^    typedef MIAtomList::const_iterator MIAtom_const_iter;$/;"	t	namespace:chemlib
MIAtom_iter	libs/chemlib/MIAtom_fwd.h	/^    typedef MIAtomList::iterator MIAtom_iter;$/;"	t	namespace:chemlib
MIBeforeFirst	libs/util/system.cpp	/^std::string MIBeforeFirst(const std::string &s, char sep)$/;"	f
MIBeforeLast	libs/util/system.cpp	/^std::string MIBeforeLast(const std::string &s, char sep)$/;"	f
MIBrowsePair	apps/MIFit/ui/MIBrowsePair.cpp	/^MIBrowsePair::MIBrowsePair(QPushButton *button, QLineEdit *lineEdit, const QString &filter, bool isDir)$/;"	f	class:MIBrowsePair
MIBrowsePair	apps/MIFit/ui/MIBrowsePair.h	/^class MIBrowsePair : public QObject$/;"	c
MIBusyManager	apps/MIFit/ui/Application.cpp	/^MIBusyManager::MIBusyManager()$/;"	f	class:MIBusyManager
MIBusyManager	apps/MIFit/ui/Application.h	/^class MIBusyManager$/;"	c
MICOLORPICKER_H	apps/MIFit/ui/MIColorPickerDlg.h	2;"	d
MIColorPickerDlg	apps/MIFit/ui/MIColorPickerDlg.cpp	/^MIColorPickerDlg::MIColorPickerDlg(QWidget *parent, int selected, const QString& title)$/;"	f	class:MIColorPickerDlg
MIColorPickerDlg	apps/MIFit/ui/MIColorPickerDlg.h	/^class MIColorPickerDlg : public QDialog$/;"	c
MIColorSetter	libs/chemlib/MIMolIOBase.h	/^    class MIColorSetter$/;"	c	namespace:chemlib
MIColorSurface	apps/MIFit/ui/surf.cpp	/^bool MIColorSurface(unsigned int surfnum, short color)$/;"	f
MIColorSurface	apps/MIFit/ui/surf.cpp	/^bool MIColorSurface(unsigned int surfnum,$/;"	f
MIColorToolButton	apps/MIFit/ui/MIColorPickerDlg.h	/^        MIColorToolButton(QWidget *parent = 0)$/;"	f	class:MIColorToolButton
MIColorToolButton	apps/MIFit/ui/MIColorPickerDlg.h	/^    MIColorToolButton(const QColor &c, QWidget *parent = 0)$/;"	f	class:MIColorToolButton
MIColorToolButton	apps/MIFit/ui/MIColorPickerDlg.h	/^class MIColorToolButton : public QToolButton$/;"	c
MICopyCoords	libs/chemlib/mol_util.cpp	/^bool MICopyCoords(Residue *target, const Residue *source)$/;"	f	namespace:chemlib
MIDDLE	apps/MIFit/core/RESIDUE.h	14;"	d
MIDDLE	libs/chemlib/model.h	76;"	d
MIDeleteSurface	apps/MIFit/ui/surf.cpp	/^void MIDeleteSurface(unsigned int surfnum)$/;"	f
MIDrawSurfaces	apps/MIFit/ui/surf.cpp	/^void MIDrawSurfaces()$/;"	f
MIFIT_ALGORITHM_H_	apps/MIFit/core/mifit_algorithm.h	2;"	d
MIFIT_DEPRECATED	libs/chemlib/MIMoleculeBase.h	12;"	d
MIFIT_DEPRECATED	libs/chemlib/MIMoleculeBase.h	14;"	d
MIFIT_LEGACY_XGUICRYST_H_	apps/MIFit/ui/Xguicryst.h	2;"	d
MIFIT_MODEL_APOINT_H_	libs/math/APOINT.h	2;"	d
MIFIT_MODEL_CHIRALDICT_H_	apps/MIFit/core/CHIRALDICT.h	2;"	d
MIFIT_MODEL_CONTACT_H_	apps/MIFit/core/CONTACT.h	2;"	d
MIFIT_MODEL_CREFL_H_	libs/map/CREFL.h	2;"	d
MIFIT_MODEL_DISPLAYLIST_H_	apps/MIFit/ui/Displaylist.h	2;"	d
MIFIT_MODEL_LINE_H_	libs/math/LINE.h	2;"	d
MIFIT_MODEL_MAP_POINT_H_	libs/map/MAP_POINT.h	2;"	d
MIFIT_MODEL_MOLECULETYPE_H_	apps/MIFit/core/MoleculeType.h	2;"	d
MIFIT_MODEL_MOLECULE_H_	apps/MIFit/core/Molecule.h	2;"	d
MIFIT_MODEL_PLINE_H_	libs/math/PLINE.h	2;"	d
MIFIT_MODEL_RESIDUE_H_	apps/MIFit/core/RESIDUE.h	2;"	d
MIFIT_MOLECULEXMLHANDLER_H_	apps/MIFit/ui/MoleculeXmlHandler.h	2;"	d
MIFIT_UI_COLORUTIL_H_	apps/MIFit/core/ColorUtil.h	2;"	d
MIFIT_UI_DICTEDITANGLEPICKINGRENDERABLE_H_	apps/MIFit/ui/DictEditAnglePickingRenderable.h	2;"	d
MIFIT_UI_DICTEDITANNOTATIONPICKINGRENDERABLE_H_	apps/MIFit/ui/DictEditAnnotationPickingRenderable.h	2;"	d
MIFIT_UI_DICTEDITATOMPICKINGRENDERABLE_H_	apps/MIFit/ui/DictEditAtomPickingRenderable.h	2;"	d
MIFIT_UI_DICTEDITBONDPICKINGRENDERABLE_H_	apps/MIFit/ui/DictEditBondPickingRenderable.h	2;"	d
MIFIT_UI_DICTEDITCANVAS_H_	apps/MIFit/ui/DictEditCanvas.h	2;"	d
MIFIT_UI_DICTEDITSCENE_H_	apps/MIFit/ui/DictEditScene.h	2;"	d
MIFIT_UI_GLOVERVIEWCANVAS_H_	apps/MIFit/ui/GLOverviewCanvas.h	2;"	d
MIFIT_UI_MYAPP_H_	apps/MIFit/ui/Application.h	2;"	d
MIFIT_UI_SAVEMODEL_H_	apps/MIFit/ui/SaveModel.h	2;"	d
MIFIT_VIEWPOINT_H_	apps/MIFit/core/ViewPoint.h	2;"	d
MIFLEX_COMMON_H	apps/MIFlex/common.h	2;"	d
MIFileDialog	apps/MIFit/ui/MIDialog.cpp	/^MIFileDialog::MIFileDialog(QWidget *parent, const std::string &message,$/;"	f	class:MIFileDialog
MIFileDialog	apps/MIFit/ui/MIDialog.h	/^class MIFileDialog$/;"	c
MIFileSelector	apps/MIFit/ui/MIDialog.cpp	/^std::string MIFileSelector(const std::string &title,$/;"	f
MIFirstToken	libs/chemlib/FirstToken.cpp	/^std::string MIFirstToken(FILE *fp)$/;"	f	namespace:chemlib
MIFitDictionary	apps/MIFit/ui/Application.cpp	/^chemlib::MIMolDictionary *MIFitDictionary()$/;"	f
MIFitGeomRefiner	apps/MIFit/ui/Application.cpp	/^GeomRefiner *MIFitGeomRefiner()$/;"	f
MIFitScriptObject	apps/MIFit/script/MIFitScriptObject.cpp	/^MIFitScriptObject::MIFitScriptObject(QScriptEngine *engine, QObject *parent)$/;"	f	class:MIFitScriptObject
MIFitScriptObject	apps/MIFit/script/MIFitScriptObject.h	/^class MIFitScriptObject : public QObject$/;"	c
MIFit_version	apps/MIFit/core/Version.cpp	/^char MIFit_version[] = "2010.10";$/;"	v
MIFlexLigandFit	apps/MIFlex/miflex.cpp	/^bool MIFlexLigandFit(EMapBase *currentmap,$/;"	f
MIFlexLigandFit	apps/MIFlex/miflex.cpp	/^bool MIFlexLigandFit(const std::string &model_filename,$/;"	f
MIGLWidget	apps/MIFit/ui/MIGLWidget.cpp	/^MIGLWidget::MIGLWidget()$/;"	f	class:MIGLWidget
MIGLWidget	apps/MIFit/ui/MIGLWidget.h	/^class MIGLWidget : public QDeclarativeView$/;"	c
MIGenConfs	apps/MIFlex/common.cpp	/^bool MIGenConfs(GeomSaver confs, MIMoleculeBase *fitmol, MIMolOpt *opt, bool print)$/;"	f
MIGetAtomTypeFromName	libs/chemlib/MIAtom.cpp	/^int MIAtom::MIGetAtomTypeFromName(const char *name)$/;"	f	class:chemlib::MIAtom
MIGetColorSetter	libs/chemlib/PDB.cpp	/^MIColorSetter *MIGetColorSetter()$/;"	f	namespace:chemlib
MIGetDictionary	libs/chemlib/MIMolDictionary.cpp	/^MIMolDictionary *MIGetDictionary()$/;"	f	namespace:chemlib
MIGetSpacegroups	libs/map/CMapHeaderBase.cpp	/^void MIGetSpacegroups(std::vector<std::string> &spacegroups)$/;"	f
MIGetSurfaceAlpha	apps/MIFit/ui/surf.cpp	/^float MIGetSurfaceAlpha()$/;"	f
MIGetSurfaceMaxColor	apps/MIFit/ui/surf.cpp	/^int MIGetSurfaceMaxColor()$/;"	f
MIGetSurfaceMaxValue	apps/MIFit/ui/surf.cpp	/^float MIGetSurfaceMaxValue()$/;"	f
MIGetSurfaceMinColor	apps/MIFit/ui/surf.cpp	/^int MIGetSurfaceMinColor()$/;"	f
MIGetSurfaceMinValue	apps/MIFit/ui/surf.cpp	/^float MIGetSurfaceMinValue()$/;"	f
MIGetSurfaceQuality	apps/MIFit/ui/surf.cpp	/^unsigned int MIGetSurfaceQuality()$/;"	f
MIGetSurfaceSelectionMode	apps/MIFit/ui/surf.cpp	/^unsigned int MIGetSurfaceSelectionMode()$/;"	f
MIGetSurfaceSmoothingSteps	apps/MIFit/ui/surf.cpp	/^unsigned int MIGetSurfaceSmoothingSteps()$/;"	f
MIGetSurfaceType	apps/MIFit/ui/surf.cpp	/^unsigned int MIGetSurfaceType()$/;"	f
MIGetSurfaceUseGradColor	apps/MIFit/ui/surf.cpp	/^bool MIGetSurfaceUseGradColor()$/;"	f
MIGetTorsionWritePrompt	libs/chemlib/mmCIF.cpp	/^MITorsionWritePrompt *MIGetTorsionWritePrompt()$/;"	f	namespace:chemlib
MIIsHBondable	libs/chemlib/MIAtom.cpp	/^bool MIAtom::MIIsHBondable(const MIAtom *a1, const MIAtom *a2)$/;"	f	class:chemlib::MIAtom
MIIsHydrogen	libs/chemlib/MIAtom.cpp	/^bool MIAtom::MIIsHydrogen(const MIAtom *atom)$/;"	f	class:chemlib::MIAtom
MIIsMainChainAtom	libs/chemlib/MIAtom.cpp	/^bool MIAtom::MIIsMainChainAtom(const MIAtom *atom)$/;"	f	class:chemlib::MIAtom
MIIsMainChainDNAAtom	libs/chemlib/MIAtom.cpp	/^bool MIAtom::MIIsMainChainDNAAtom(const MIAtom *atom)$/;"	f	class:chemlib::MIAtom
MIIsNan	libs/math/mathlib.h	/^inline bool MIIsNan(double x)$/;"	f
MIIsSideChainAtom	libs/chemlib/MIAtom.cpp	/^bool MIAtom::MIIsSideChainAtom(const MIAtom *atom)$/;"	f	class:chemlib::MIAtom
MIIsSideChainDNAAtom	libs/chemlib/MIAtom.cpp	/^bool MIAtom::MIIsSideChainDNAAtom(const MIAtom *atom)$/;"	f	class:chemlib::MIAtom
MILigandConfs	apps/MIFlex/miconf.cpp	/^bool MILigandConfs(const std::string &ligand_filename)$/;"	f
MIMainWindow	apps/MIFit/ui/MIMainWindow.cpp	/^MIMainWindow::MIMainWindow()$/;"	f	class:MIMainWindow
MIMainWindow	apps/MIFit/ui/MIMainWindow.h	/^class MIMainWindow : public QMainWindow$/;"	c
MIMainWindowDebug	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindowDebug(const std::string &str)$/;"	f
MIMainWindowLeftFooter	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindowLeftFooter(const std::string &str, int timeout)$/;"	f
MIMainWindowLog	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindowLog(const std::string &str)$/;"	f
MIMainWindowMiddleFooter	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindowMiddleFooter(const std::string &str)$/;"	f
MIMainWindowRightFooter	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindowRightFooter(const std::string &str)$/;"	f
MIMakeSurface	apps/MIFit/ui/surf.cpp	/^unsigned int MIMakeSurface(const std::vector<Molecule*> &mols,$/;"	f
MIMapFactor	libs/map/factor.cpp	/^int MIMapFactor(int ntest, int prime, int even, int inc)$/;"	f
MIMapFreeScatteringFactorTables	libs/map/sfcalc.cpp	/^unsigned int MIMapFreeScatteringFactorTables()$/;"	f
MIMapInitializeScatteringFactorTables	libs/map/sfcalc.cpp	/^unsigned int MIMapInitializeScatteringFactorTables($/;"	f
MIMapType	libs/map/maptypes.h	/^namespace MIMapType$/;"	n
MIMolDictionary	libs/chemlib/MIMolDictionary.cpp	/^MIMolDictionary::MIMolDictionary()$/;"	f	class:chemlib::MIMolDictionary
MIMolDictionary	libs/chemlib/MIMolDictionary.h	/^    class MIMolDictionary$/;"	c	namespace:chemlib
MIMolIO	apps/MIFit/ui/MIMolIO.cpp	/^MIMolIO::MIMolIO()$/;"	f	class:MIMolIO
MIMolIO	apps/MIFit/ui/MIMolIO.h	/^class MIMolIO : public chemlib::MIMolIOBase$/;"	c
MIMolIOBase	libs/chemlib/MIMolIO.cpp	/^MIMolIOBase::MIMolIOBase()$/;"	f	class:chemlib::MIMolIOBase
MIMolIOBase	libs/chemlib/MIMolIOBase.h	/^    class MIMolIOBase$/;"	c	namespace:chemlib
MIMolIOBase_h	libs/chemlib/MIMolInfo.h	2;"	d
MIMolIO_H	libs/chemlib/MIMolIOBase.h	2;"	d
MIMolInfo	libs/chemlib/MIMolInfo.h	/^        MIMolInfo() : res(0)$/;"	f	class:chemlib::MIMolInfo
MIMolInfo	libs/chemlib/MIMolInfo.h	/^    class MIMolInfo$/;"	c	namespace:chemlib
MIMolOpt	libs/molopt/MIMolOpt.cpp	/^MIMolOpt::MIMolOpt()$/;"	f	class:MIMolOpt
MIMolOpt	libs/molopt/MIMolOpt.h	/^class MIMolOpt : public QObject$/;"	c
MIMolOptCheckPoint	libs/molopt/MIMolOpt.h	/^class MIMolOptCheckPoint$/;"	c
MIMoleculeBase	libs/chemlib/MIMoleculeBase.cpp	/^MIMoleculeBase::MIMoleculeBase()$/;"	f	class:chemlib::MIMoleculeBase
MIMoleculeBase	libs/chemlib/MIMoleculeBase.cpp	/^MIMoleculeBase::MIMoleculeBase(Residue *reslist, const std::string &cmpd, Bond *conns, int nconns)$/;"	f	class:chemlib::MIMoleculeBase
MIMoleculeBase	libs/chemlib/MIMoleculeBase.h	/^    class MIMoleculeBase : public QObject$/;"	c	namespace:chemlib
MIMoleculeBase	libs/chemlib/itertest.cxx	/^    MIMoleculeBase(RESIDUE *res) : _res(res) {}$/;"	f	class:MIMoleculeBase
MIMoleculeBase	libs/chemlib/itertest.cxx	/^class MIMoleculeBase$/;"	c	file:
MIN	libs/cmtz/ccp4_types.h	69;"	d
MIN	libs/jacgrid/surface.cpp	/^inline float MIN(float a, float b)$/;"	f
MIN	libs/umtz/library.h	880;"	d
MINATOM	libs/map/MINATOM.h	/^} MINATOM;$/;"	t	typeref:struct:minatom
MIN_MATCH	libs/opengl/zlib/zutil.h	68;"	d
MIPalette	apps/MIFit/core/Colors.h	/^class MIPalette$/;"	c
MIQDIALOG_H	apps/MIFit/ui/MIQDialog.h	2;"	d
MIQDialog	apps/MIFit/ui/MIQDialog.cpp	/^MIQDialog::MIQDialog(QWidget *parent)$/;"	f	class:MIQDialog
MIQDialog	apps/MIFit/ui/MIQDialog.h	/^class MIQDialog : public QDialog$/;"	c
MIQTREEWIDGET_H	apps/MIFit/ui/MIQTreeWidget.h	2;"	d
MIQTreeWidget	apps/MIFit/ui/MIQTreeWidget.h	/^    MIQTreeWidget(QWidget *parent) : QTreeWidget(parent)$/;"	f	class:MIQTreeWidget
MIQTreeWidget	apps/MIFit/ui/MIQTreeWidget.h	/^class MIQTreeWidget : public QTreeWidget$/;"	c
MIRegisterColorSetter	libs/chemlib/PDB.cpp	/^void MIRegisterColorSetter(MIColorSetter *cs)$/;"	f	namespace:chemlib
MISetDictionary	libs/chemlib/MIMolDictionary.cpp	/^void MISetDictionary(MIMolDictionary *d)$/;"	f	namespace:chemlib
MISetIgnoreDummyAtomsOnLoad	libs/chemlib/PDB.cpp	/^void MISetIgnoreDummyAtomsOnLoad(bool ignore)$/;"	f	namespace:chemlib
MISetMolPrefsHandler	apps/MIFit/core/Molecule.cpp	/^void MISetMolPrefsHandler(MolPrefsHandler *mph)$/;"	f
MISetSurfaceAlpha	apps/MIFit/ui/surf.cpp	/^void MISetSurfaceAlpha(float alpha)$/;"	f
MISetSurfaceMaxColor	apps/MIFit/ui/surf.cpp	/^void MISetSurfaceMaxColor(int maxcolor)$/;"	f
MISetSurfaceMaxValue	apps/MIFit/ui/surf.cpp	/^void MISetSurfaceMaxValue(float maxval)$/;"	f
MISetSurfaceMinColor	apps/MIFit/ui/surf.cpp	/^void MISetSurfaceMinColor(int mincolor)$/;"	f
MISetSurfaceMinValue	apps/MIFit/ui/surf.cpp	/^void MISetSurfaceMinValue(float minval)$/;"	f
MISetSurfaceQuality	apps/MIFit/ui/surf.cpp	/^bool MISetSurfaceQuality(unsigned int q)$/;"	f
MISetSurfaceSelectionMode	apps/MIFit/ui/surf.cpp	/^void MISetSurfaceSelectionMode(unsigned int s)$/;"	f
MISetSurfaceSmoothingSteps	apps/MIFit/ui/surf.cpp	/^bool MISetSurfaceSmoothingSteps(unsigned int s)$/;"	f
MISetSurfaceType	apps/MIFit/ui/surf.cpp	/^void MISetSurfaceType(unsigned int s)$/;"	f
MISetSurfaceUseGradColor	apps/MIFit/ui/surf.cpp	/^void MISetSurfaceUseGradColor(bool UseGradColor)$/;"	f
MISetTorsionWritePrompt	libs/chemlib/mmCIF.cpp	/^void MISetTorsionWritePrompt(MITorsionWritePrompt *p)$/;"	f	namespace:chemlib
MISplitPath	libs/util/system.cpp	/^void MISplitPath(const std::string &fullname,$/;"	f
MIStringReplace	libs/util/system.cpp	/^std::string::size_type MIStringReplace(std::string &s,$/;"	f
MIStringSplit	libs/util/system.cpp	/^void MIStringSplit(const std::string &s, const std::string &delim, std::vector<std::string> &results)$/;"	f
MIStringToNumber	libs/util/system.cpp	/^bool MIStringToNumber(const std::string &s, float &f)$/;"	f
MIStringToNumber	libs/util/system.cpp	/^bool MIStringToNumber(const std::string &s, int &i)$/;"	f
MIStringToNumber	libs/util/system.cpp	/^bool MIStringToNumber(const std::string &s, long &l)$/;"	f
MIStringTrim	libs/util/system.cpp	/^void MIStringTrim(std::string &str, bool fromRight)$/;"	f
MISurface	apps/MIFit/ui/surf.cpp	/^    MISurface()$/;"	f	class:MISurface
MISurface	apps/MIFit/ui/surf.cpp	/^    MISurface(unsigned int surface_type,$/;"	f	class:MISurface
MISurface	apps/MIFit/ui/surf.cpp	/^class MISurface$/;"	c	file:
MISurfaceCalcDistance	apps/MIFit/ui/surf.cpp	/^bool MISurfaceCalcDistance(unsigned int surfnum,$/;"	f
MISurfaceCount	apps/MIFit/ui/surf.cpp	/^unsigned int MISurfaceCount()$/;"	f
MISurfaceSelectionMode	apps/MIFit/ui/surf.h	/^namespace MISurfaceSelectionMode$/;"	n
MISurfaceSetCurrentView	apps/MIFit/ui/surf.cpp	/^void MISurfaceSetCurrentView(void *v)$/;"	f
MISurfaceType	apps/MIFit/ui/surf.h	/^namespace MISurfaceType$/;"	n
MISurfaceVectorsFromStack	apps/MIFit/ui/surf.cpp	/^void MISurfaceVectorsFromStack(std::vector<Molecule*> &mols,$/;"	f
MISymmop	libs/map/CMapHeaderBase.h	/^namespace MISymmop$/;"	n
MIToLower	libs/util/system.cpp	/^std::string MIToLower(const std::string &s)$/;"	f
MIToUpper	libs/util/system.cpp	/^std::string MIToUpper(const std::string &s)$/;"	f
MITorsionWritePrompt	libs/chemlib/mmCIF.h	/^    class MITorsionWritePrompt$/;"	c	namespace:chemlib
MI_ANGLE_H	libs/chemlib/ANGLE.h	2;"	d
MI_ASSERT	libs/util/utillib.h	27;"	d
MI_ASSERT	libs/util/utillib.h	32;"	d
MI_BROWSE_PAIR_H	apps/MIFit/ui/MIBrowsePair.h	2;"	d
MI_CHEMLIB_H	libs/chemlib/chemlib.h	2;"	d
MI_CHIRAL_H	libs/chemlib/CHIRALDICT.h	2;"	d
MI_CMapHeader_H	apps/MIFit/ui/CMapHeader.h	2;"	d
MI_CONFLIB_H	libs/conflib/conflib.h	2;"	d
MI_CORELIB_H	apps/MIFit/core/corelib.h	2;"	d
MI_DIALOG_H	apps/MIFit/ui/MIDialog.h	2;"	d
MI_EMap_H	apps/MIFit/ui/EMap.h	2;"	d
MI_FFSUBS_H	libs/map/fssubs.h	2;"	d
MI_GEOM_REFINER_H	apps/MIFit/core/GeomRefiner.h	2;"	d
MI_MAPLIB_H	libs/map/maplib.h	2;"	d
MI_MAPLIB_PRIVATE_H	libs/map/maplib_private.h	2;"	d
MI_MAPTYPES_H	libs/map/maptypes.h	2;"	d
MI_MATHLIB_H	libs/math/mathlib.h	2;"	d
MI_MODEL_H	libs/chemlib/model.h	2;"	d
MI_MOLECULEBASE_H	libs/chemlib/MIMoleculeBase.h	2;"	d
MI_MOLOPT_LIB_H	libs/molopt/moloptlib.h	2;"	d
MI_MOL_UTIL_PRIVATE	libs/chemlib/mol_util_private.h	2;"	d
MI_OPEN_MODE	apps/MIFit/ui/MIDialog.h	/^const unsigned int MI_OPEN_MODE = 0;$/;"	v
MI_PLANE_H	libs/chemlib/PLANE.h	2;"	d
MI_RESIDUE_H	libs/chemlib/Residue.h	2;"	d
MI_SAVE_MODE	apps/MIFit/ui/MIDialog.h	/^const unsigned int MI_SAVE_MODE = 2;$/;"	v
MI_SURF_H	apps/MIFit/ui/surf.h	2;"	d
MI_SYSTEM_H	libs/util/system.h	2;"	d
MI_TOOLS_H	apps/MIFit/ui/tools.h	2;"	d
MI_TORSION_H	libs/chemlib/TORSION.h	2;"	d
MI_ligand_LIBRARY_H	libs/ligand/ligandlib.h	2;"	d
MI_ui_LIBRARY_H	apps/MIFit/ui/uilib.h	2;"	d
MIbin	apps/MIFit/ui/Application.h	/^    std::string MIbin;$/;"	m	class:Application
MKDIR	Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	apps/MIFit/Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	apps/MIFit/core/Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	apps/MIFit/jobs/Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	apps/MIFit/main/Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	apps/MIFit/script/Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	apps/MIFit/ui/Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	apps/Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	libs/Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	libs/chemlib/Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	libs/conflib/Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	libs/jacgrid/Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	libs/ligand/Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	libs/map/Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	libs/math/Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	libs/molopt/Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	libs/opengl/Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	libs/umtz/Makefile	/^MKDIR         = mkdir -p$/;"	m
MKDIR	libs/util/Makefile	/^MKDIR         = mkdir -p$/;"	m
MMCIF_DATA_CLASSES_H	libs/chemlib/CifData.h	2;"	d
MMCIF_PARSER_H	libs/chemlib/CifParser.h	2;"	d
MN	libs/chemlib/RefmacType.h	/^    const unsigned int MN   = 134;$/;"	m	namespace:RefmacType
MNF	libs/cmtz/mtzdata.h	/^              } MNF;$/;"	t	typeref:union:__anon24
MO	libs/chemlib/RefmacType.h	/^    const unsigned int MO   = 132;$/;"	m	namespace:RefmacType
MODEL_LABEL	apps/MIFit/ui/PhaseFileLoadDialog.cpp	7;"	d	file:
MOLECULE	apps/MIFit/ui/Xguicryst.h	14;"	d
MOLW_H	apps/MIFit/ui/molw.h	2;"	d
MOL_UTIL_H	libs/chemlib/mol_util.h	2;"	d
MONOMER_H	libs/chemlib/Monomer.h	2;"	d
MOVE	Makefile	/^MOVE          = mv -f$/;"	m
MOVE	apps/MIFit/Makefile	/^MOVE          = mv -f$/;"	m
MOVE	apps/MIFit/core/Makefile	/^MOVE          = mv -f$/;"	m
MOVE	apps/MIFit/jobs/Makefile	/^MOVE          = mv -f$/;"	m
MOVE	apps/MIFit/main/Makefile	/^MOVE          = mv -f$/;"	m
MOVE	apps/MIFit/script/Makefile	/^MOVE          = mv -f$/;"	m
MOVE	apps/MIFit/ui/Makefile	/^MOVE          = mv -f$/;"	m
MOVE	apps/Makefile	/^MOVE          = mv -f$/;"	m
MOVE	libs/Makefile	/^MOVE          = mv -f$/;"	m
MOVE	libs/chemlib/Makefile	/^MOVE          = mv -f$/;"	m
MOVE	libs/conflib/Makefile	/^MOVE          = mv -f$/;"	m
MOVE	libs/jacgrid/Makefile	/^MOVE          = mv -f$/;"	m
MOVE	libs/ligand/Makefile	/^MOVE          = mv -f$/;"	m
MOVE	libs/map/Makefile	/^MOVE          = mv -f$/;"	m
MOVE	libs/math/Makefile	/^MOVE          = mv -f$/;"	m
MOVE	libs/molopt/Makefile	/^MOVE          = mv -f$/;"	m
MOVE	libs/opengl/Makefile	/^MOVE          = mv -f$/;"	m
MOVE	libs/umtz/Makefile	/^MOVE          = mv -f$/;"	m
MOVE	libs/util/Makefile	/^MOVE          = mv -f$/;"	m
MPH	apps/MIFit/core/Molecule.cpp	/^static MolPrefsHandler *MPH = 0;$/;"	v	file:
MSDOS	libs/opengl/zlib/zconf.h	56;"	d
MSETS	libs/cmtz/mtzdata.h	47;"	d
MSF	libs/math/Matrices.h	8;"	d
MTZ	libs/cmtz/mtzdata.h	/^	       } MTZ;$/;"	t	typeref:struct:__anon25
MTZBAT	libs/cmtz/mtzdata.h	/^	       } MTZBAT;$/;"	t	typeref:struct:bathead
MTZBATCHR	libs/umtz/umtzlib.h	20;"	d
MTZBATFLT	libs/umtz/umtzlib.h	22;"	d
MTZBATINT	libs/umtz/umtzlib.h	21;"	d
MTZBATLEN	libs/umtz/umtzlib.h	23;"	d
MTZCOL	libs/cmtz/mtzdata.h	/^	       } MTZCOL;$/;"	t	typeref:struct:__anon20
MTZDATAOFF	libs/umtz/umtzlib.h	24;"	d
MTZFILENAME	libs/cmtz/ccp4_vars.h	29;"	d
MTZMNF	libs/cmtz/ccp4_vars.h	33;"	d
MTZNUMREFLS	libs/cmtz/ccp4_vars.h	32;"	d
MTZRECLEN	libs/umtz/umtzlib.h	19;"	d
MTZRECORDLENGTH	libs/cmtz/mtzdata.h	39;"	d
MTZSET	libs/cmtz/mtzdata.h	/^	       } MTZSET;$/;"	t	typeref:struct:__anon21
MTZSORTORDER	libs/cmtz/ccp4_vars.h	34;"	d
MTZSPACEGROUP	libs/cmtz/ccp4_vars.h	31;"	d
MTZTITLE	libs/cmtz/ccp4_vars.h	30;"	d
MTZVERSN	libs/cmtz/mtzdata.h	33;"	d
MTZXTAL	libs/cmtz/mtzdata.h	/^	       } MTZXTAL;$/;"	t	typeref:struct:__anon22
MTZ_MAJOR_VERSN	libs/cmtz/mtzdata.h	34;"	d
MTZ_MINOR_VERSN	libs/cmtz/mtzdata.h	35;"	d
MT_SIZE	libs/math/MersenneTwister.h	42;"	d
MXTALS	libs/cmtz/mtzdata.h	46;"	d
MY_ZCALLOC	libs/opengl/zlib/zutil.cpp	174;"	d	file:
MY_ZCALLOC	libs/opengl/zlib/zutil.cpp	89;"	d	file:
M_Coefficient	libs/map/CMapHeaderBase.h	/^    float M_Coefficient;$/;"	m	class:CMapHeaderBase
M_PI	libs/chemlib/math_util.h	10;"	d
M_PI	libs/cmtz/ccp4_sysdep.h	196;"	d
M_PI	libs/jacgrid/surface.cpp	6;"	d	file:
M_PI	libs/map/EMapBase.cpp	4093;"	d	file:
M_PI	libs/math/mi_math.h	8;"	d
M_PI	libs/umtz/library.h	886;"	d
MainItem	apps/MIFit/ui/MIGLWidget.cpp	/^    MainItem(MIGLWidget *widget, QGraphicsItem *parent = 0)$/;"	f	class:MainItem
MainItem	apps/MIFit/ui/MIGLWidget.cpp	/^class MainItem : public QGraphicsItem$/;"	c	file:
MakeHelix	apps/MIFit/core/Helix.cpp	/^bool Helix::MakeHelix(MIMoleculeBase* \/* mol *\/, Residue *pHelixStart, Residue *pHelixStop)$/;"	f	class:Helix
MakeIcosahedron	libs/jacgrid/surface.cpp	/^void ProbeT::MakeIcosahedron(float v[12][3])$/;"	f	class:ProbeT
MakeRibbon	apps/MIFit/core/RibbonSegment.cpp	/^bool RibbonSegment::MakeRibbon(Residue *pFirstResidue, int nResidues)$/;"	f	class:RibbonSegment
MakeSecondaryStructure	apps/MIFit/core/Molecule.cpp	/^void Molecule::MakeSecondaryStructure(bool bRibbon, bool bSchematic)$/;"	f	class:Molecule
MakeSpan	apps/MIFit/core/RibbonSpan.cpp	/^bool RibbonSpan::MakeSpan(double ptca[4][3], double ptc[4][3], double pto[4][3], bool bFirst)$/;"	f	class:RibbonSpan
ManageCrystals	apps/MIFit/ui/ManageCrystals.cpp	/^ManageCrystals::ManageCrystals(QWidget *parent)$/;"	f	class:ManageCrystals
ManageCrystals	apps/MIFit/ui/ManageCrystals.h	/^class ManageCrystals : public QDialog, public Ui::ManageCrystals$/;"	c
ManageCrystals	apps/MIFit/ui/ui_ManageCrystals.h	/^    class ManageCrystals: public Ui_ManageCrystals {};$/;"	c	namespace:Ui
MapAtomPtrs	libs/chemlib/Ligand.cpp	/^void Ligand::MapAtomPtrs(std::map<MIAtom*, int> &atom_map)$/;"	f	class:chemlib::Ligand
MapAtomPtrs	libs/chemlib/Ligand.cpp	/^void Ligand::MapAtomPtrs(std::map<const MIAtom*, int> &atom_map) const$/;"	f	class:chemlib::Ligand
MapCount	apps/MIFit/ui/Displaylist.h	/^inline int Displaylist::MapCount()$/;"	f	class:Displaylist
MapExport	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::MapExport()$/;"	f	class:ModelsTree
MapHeaderList	apps/MIFit/ui/MIGLWidget.h	/^    typedef std::vector<CMapHeaderBase> MapHeaderList;$/;"	t	class:MIGLWidget
MapHeaderList	apps/MIFit/ui/MoleculeXmlHandler.h	/^    typedef std::vector<CMapHeaderBase> MapHeaderList;$/;"	t	class:MoleculeXmlHandler
MapHeaderOK	libs/map/CMapHeaderBase.cpp	/^bool MapHeaderOK(CMapHeaderBase *mh)$/;"	f
MapHeaderToDataMap	apps/MIFit/ui/ModelsView.cpp	/^    typedef std::map<CMapHeaderBase*, TreeData*> MapHeaderToDataMap;$/;"	t	class:ModelsTree	file:
MapID	libs/map/EMapBase.cpp	/^std::string EMapBase::MapID()$/;"	f	class:EMapBase
MapLevel	libs/map/EMapBase.h	/^    float MapLevel(int index)$/;"	f	class:EMapBase
MapLevel	libs/map/EMapBase.h	/^    void MapLevel(int index, float level)$/;"	f	class:EMapBase
MapLevel	libs/map/MapSettingsBase.h	/^    float MapLevel[5];$/;"	m	class:MapSettingsBase
MapLevelColor	libs/map/EMapBase.h	/^    int MapLevelColor(int index)$/;"	f	class:EMapBase
MapLevelColor	libs/map/EMapBase.h	/^    void MapLevelColor(int index, int color)$/;"	f	class:EMapBase
MapLevelColor	libs/map/MapSettingsBase.h	/^    int MapLevelColor[5];$/;"	m	class:MapSettingsBase
MapLevelOn	libs/map/EMapBase.h	/^    bool MapLevelOn(int index)$/;"	f	class:EMapBase
MapLevelOn	libs/map/EMapBase.h	/^    void MapLevelOn(int index, bool on)$/;"	f	class:EMapBase
MapLevelOn	libs/map/MapSettingsBase.h	/^    bool MapLevelOn[5];$/;"	m	class:MapSettingsBase
MapList	apps/MIFit/ui/Displaylist.h	/^    typedef std::vector<EMap*> MapList;$/;"	t	class:Displaylist
MapProperties	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::MapProperties()$/;"	f	class:ModelsTree
MapSettings	apps/MIFit/ui/MapSettings.h	/^class MapSettings$/;"	c
MapSettingsBase	libs/map/MapSettingsBase.cpp	/^MapSettingsBase::MapSettingsBase()$/;"	f	class:MapSettingsBase
MapSettingsBase	libs/map/MapSettingsBase.h	/^class MapSettingsBase$/;"	c
MapToDataMap	apps/MIFit/ui/ModelsView.cpp	/^    typedef std::map<EMap*, TreeData*> MapToDataMap;$/;"	t	class:ModelsTree	file:
MapTypeForString	libs/map/EMapBase.cpp	/^unsigned int MapTypeForString(const std::string &str)$/;"	f
MapWeight	libs/molopt/MIMolOpt.h	/^    float BondWeight, AngleWeight, PlaneWeight, MapWeight, TorsionWeight, BumpWeight;$/;"	m	class:MIMolOpt
Maps	apps/MIFit/ui/Displaylist.h	/^    MapList Maps;$/;"	m	class:Displaylist
MatchOK	apps/MIFit/ui/LSQFitDialog.cpp	/^bool LSQFitDialog::MatchOK(MATCH *m)$/;"	f	class:LSQFitDialog
MatchPentamer	apps/MIFit/core/Molecule.cpp	/^Residue*Molecule::MatchPentamer(std::string &pentdir, Residue *start)$/;"	f	class:Molecule
Matches	apps/MIFit/ui/LSQFitDialog.h	/^    std::vector<MATCH> Matches;$/;"	m	class:LSQFitDialog
MatchesAtomName	libs/chemlib/atom_util.h	/^    struct MatchesAtomName : public std::binary_function<MIAtom*, std::string, bool>$/;"	s	namespace:chemlib
Matrix	libs/chemlib/Matrix.h	/^        Matrix() : m_(0), n_(0), mn_(0), v_(0), row_(0), vm1_(0), rowm1_(0)$/;"	f	class:TNT::Matrix
Matrix	libs/chemlib/Matrix.h	/^        Matrix(Subscript M, Subscript N, const T &value = T())$/;"	f	class:TNT::Matrix
Matrix	libs/chemlib/Matrix.h	/^        Matrix(Subscript M, Subscript N, const T *v)$/;"	f	class:TNT::Matrix
Matrix	libs/chemlib/Matrix.h	/^        Matrix(Subscript M, Subscript N, const char *s)$/;"	f	class:TNT::Matrix
Matrix	libs/chemlib/Matrix.h	/^        Matrix(const Matrix<T> &A)$/;"	f	class:TNT::Matrix
Matrix	libs/chemlib/Matrix.h	/^    class Matrix$/;"	c	namespace:TNT
Matrix3	libs/math/Matrix3.h	/^        Matrix3<Type>::Matrix3()$/;"	f	class:mi::math::Matrix3
Matrix3	libs/math/Matrix3.h	/^        Matrix3<Type>::Matrix3(Type mm00, Type mm01, Type mm02,$/;"	f	class:mi::math::Matrix3
Matrix3	libs/math/Matrix3.h	/^        Matrix3<Type>::Matrix3(const Type v[])$/;"	f	class:mi::math::Matrix3
Matrix3	libs/math/Matrix3.h	/^        class Matrix3$/;"	c	namespace:mi::math
Matrix4	libs/math/Matrix4.h	/^        Matrix4<Type>::Matrix4()$/;"	f	class:mi::math::Matrix4
Matrix4	libs/math/Matrix4.h	/^        Matrix4<Type>::Matrix4(Type m00, Type m01, Type m02, Type m03,$/;"	f	class:mi::math::Matrix4
Matrix4	libs/math/Matrix4.h	/^        Matrix4<Type>::Matrix4(const Quaternion<Type> &q1)$/;"	f	class:mi::math::Matrix4
Matrix4	libs/math/Matrix4.h	/^        Matrix4<Type>::Matrix4(const Type v[])$/;"	f	class:mi::math::Matrix4
Matrix4	libs/math/Matrix4.h	/^        class Matrix4$/;"	c	namespace:mi::math
MaxNumBonds	libs/chemlib/mol_util.cpp	/^int MaxNumBonds(const MIAtom *atom)$/;"	f	namespace:chemlib
MaxRecentFiles	apps/MIFit/ui/MIMainWindow.h	/^    enum { MaxRecentFiles = 6 };$/;"	e	enum:MIMainWindow::__anon4
MaxValence	libs/chemlib/mol_util.cpp	/^int MaxValence(int atomic_number)$/;"	f	namespace:chemlib
Measure	libs/chemlib/Chiral.cpp	/^int Chiral::Measure()$/;"	f	class:chemlib::Chiral
Measure	libs/conflib/FlexTorsion.cpp	/^float FlexTorsion::Measure()$/;"	f	class:FlexTorsion
Measure	libs/conflib/sdg.cpp	/^double sdgDistance::Measure()$/;"	f	class:conflib::sdgDistance
Measure	libs/conflib/sdg.cpp	/^double sdgVolume::Measure()$/;"	f	class:conflib::sdgVolume
MersenneTwister	libs/math/MersenneTwister.h	/^            MersenneTwister() : N(MT_SIZE), M(397), UPPER_MASK(0x80000000U), LOWER_MASK(0x7fffffffU)$/;"	f	class:mi::math::MersenneTwister
MersenneTwister	libs/math/MersenneTwister.h	/^            MersenneTwister(unsigned int s)  : N(MT_SIZE), M(397), UPPER_MASK(0x80000000U), LOWER_MASK(0x7fffffffU)$/;"	f	class:mi::math::MersenneTwister
MersenneTwister	libs/math/MersenneTwister.h	/^        class MersenneTwister : public Random$/;"	c	namespace:mi::math
MiddleFooter	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::MiddleFooter(const std::string &msg)$/;"	f	class:MIMainWindow
Min1D	libs/conflib/AtomRefiner.cpp	/^void AtomRefiner::Min1D(MIAtom *atom, float *grad, float &min)$/;"	f	class:AtomRefiner
Minor	libs/chemlib/Matrix.h	/^    Matrix<T> Minor(Matrix<T> &A, Subscript skip_row, Subscript skip_col)$/;"	f	namespace:TNT
MixBackgroundColor	apps/MIFit/ui/Application.cpp	/^void Application::MixBackgroundColor()$/;"	f	class:Application
Mode	apps/MIFit/core/Cfiles.h	/^    enum Mode { store = 0, load = 1 };$/;"	g	class:CArchive
Model	libs/chemlib/GeomSaver.cpp	/^MIMoleculeBase*GeomSaver::Model(unsigned int token)$/;"	f	class:chemlib::GeomSaver
ModelExport	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::ModelExport()$/;"	f	class:ModelsTree
ModelList	apps/MIFit/ui/Displaylist.h	/^    typedef std::list<Molecule*> ModelList;$/;"	t	class:Displaylist
ModelLocation	apps/MIFit/ui/AddResidueDialog.h	/^    enum ModelLocation$/;"	g	class:AddResidueDialog
ModelLocationKey	apps/MIFit/ui/AddResidueDialog.cpp	/^    const QString ModelLocationKey = "modelLocation";$/;"	m	namespace:__anon14	file:
ModelMode	apps/MIFit/ui/CustomJobDialog.h	/^    enum ModelMode$/;"	g	class:CustomJobDialog
ModelToDataMap	apps/MIFit/ui/DisplayView.cpp	/^    typedef std::map<Molecule*, TreeData*> ModelToDataMap;$/;"	t	class:DisplayTree	file:
ModelToDataMap	apps/MIFit/ui/ModelsView.cpp	/^    typedef std::map<Molecule*, TreeData*> ModelToDataMap;$/;"	t	class:ModelsTree	file:
ModelType	apps/MIFit/core/Molecule.h	/^    int ModelType;$/;"	m	class:Molecule
ModelType	libs/chemlib/Ligand.h	/^        int ModelType;$/;"	m	class:chemlib::Ligand
Models	apps/MIFit/ui/DictEditCanvas.h	/^    Displaylist *Models;$/;"	m	class:DictEditCanvas
Models	apps/MIFit/ui/Displaylist.h	/^    ModelList Models;$/;"	m	class:Displaylist
Models	apps/MIFit/ui/MIGLWidget.h	/^    Displaylist *Models;$/;"	m	class:MIGLWidget
ModelsTree	apps/MIFit/ui/ModelsView.cpp	/^ModelsTree::ModelsTree(QWidget *parent)$/;"	f	class:ModelsTree
ModelsTree	apps/MIFit/ui/ModelsView.cpp	/^class ModelsTree$/;"	c	file:
ModelsView	apps/MIFit/ui/ModelsView.cpp	/^ModelsView::ModelsView(QWidget *parent)$/;"	f	class:ModelsView
ModelsView	apps/MIFit/ui/ModelsView.h	/^class ModelsView : public ViewSyncedPanel$/;"	c
ModelsViewPanel	apps/MIFit/ui/ModelsView.cpp	/^ModelsViewPanel::ModelsViewPanel(QWidget *parent)$/;"	f	class:ModelsViewPanel
ModelsViewPanel	apps/MIFit/ui/ModelsView.cpp	/^class ModelsViewPanel$/;"	c	file:
Modify	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::Modify(bool modify)$/;"	f	class:MIGLWidget
MolFrom3D	libs/chemlib/mol_util.h	/^namespace MolFrom3D$/;"	n
MolPrefsHandler	apps/MIFit/core/Molecule.h	/^class MolPrefsHandler$/;"	c
MolPropertyLine	libs/chemlib/molfile.cpp	/^MolPropertyLine::MolPropertyLine(const char *input)$/;"	f	class:chemlib::MolPropertyLine
MolPropertyLine	libs/chemlib/molfile.h	/^    class MolPropertyLine$/;"	c	namespace:chemlib
Molecular	apps/MIFit/ui/surf.h	/^    const unsigned int Molecular = 0;$/;"	m	namespace:MISurfaceType
MolecularReplace	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::MolecularReplace(MIMoleculeBase *model, EMapBase *emap)$/;"	f	class:MIMolOpt
Molecule	apps/MIFit/core/Molecule.cpp	/^Molecule::Molecule(Residue *reslist, std::string cmpd, FILE *fp, Bond *conns, int nconns, int type)$/;"	f	class:Molecule
Molecule	apps/MIFit/core/Molecule.cpp	/^Molecule::Molecule(int type)$/;"	f	class:Molecule
Molecule	apps/MIFit/core/Molecule.h	/^    Molecule(const Molecule& \/* mol *\/)$/;"	f	class:Molecule
Molecule	apps/MIFit/core/Molecule.h	/^class Molecule : public chemlib::MIMoleculeBase$/;"	c
MoleculeList	apps/MIFit/ui/MoleculeXmlHandler.h	/^    typedef std::vector<Molecule*> MoleculeList;$/;"	t	class:MoleculeXmlHandler
MoleculeRefCountMap	libs/chemlib/MIMoleculeBase.h	/^        typedef std::map<MIMoleculeBase*, size_t> MoleculeRefCountMap;$/;"	t	class:chemlib::MIMoleculeBase
MoleculeType	apps/MIFit/core/MoleculeType.h	/^class MoleculeType$/;"	c
MoleculeXmlHandler	apps/MIFit/ui/MoleculeXmlHandler.cpp	/^MoleculeXmlHandler::MoleculeXmlHandler()$/;"	f	class:MoleculeXmlHandler
MoleculeXmlHandler	apps/MIFit/ui/MoleculeXmlHandler.h	/^class MoleculeXmlHandler : public QXmlDefaultHandler$/;"	c
MolimageHome	apps/MIFit/ui/Application.h	/^    std::string MolimageHome;$/;"	m	class:Application
Monomer	libs/chemlib/Monomer.cpp	/^Monomer::Monomer()$/;"	f	class:chemlib::Monomer
Monomer	libs/chemlib/Monomer.cpp	/^Monomer::Monomer(const Monomer &rhs)$/;"	f	class:chemlib::Monomer
Monomer	libs/chemlib/Monomer.h	/^    class Monomer$/;"	c	namespace:chemlib
MonomerRefCountMap	libs/chemlib/Monomer.h	/^        typedef std::map<const Monomer*, size_t> MonomerRefCountMap;$/;"	t	class:chemlib::Monomer
MoreCentralAtm	libs/chemlib/Ligand.cpp	/^MIAtom*Ligand::MoreCentralAtm(MIAtom *atom1, MIAtom *atom2)$/;"	f	class:chemlib::Ligand
MouseArcBall	libs/opengl/interact/MouseArcBall.cpp	/^MouseArcBall::MouseArcBall(Viewpoint *viewpoint)$/;"	f	class:mi::opengl::interact::MouseArcBall
MouseArcBall	libs/opengl/interact/MouseArcBall.cpp	/^MouseArcBall::MouseArcBall(Viewpoint *viewpoint, Point3<float> &center, float radius)$/;"	f	class:mi::opengl::interact::MouseArcBall
MouseArcBall	libs/opengl/interact/MouseArcBall.h	/^            class MouseArcBall$/;"	c	namespace:mi::opengl::interact
MouseArcBallOrbitor	libs/opengl/interact/MouseArcBallOrbitor.cpp	/^MouseArcBallOrbitor::MouseArcBallOrbitor(Viewpoint *viewpoint, Point3<float> &center, float radius, float distanceToTarget)$/;"	f	class:mi::opengl::interact::MouseArcBallOrbitor
MouseArcBallOrbitor	libs/opengl/interact/MouseArcBallOrbitor.cpp	/^MouseArcBallOrbitor::MouseArcBallOrbitor(Viewpoint *viewpoint, float distanceToTarget)$/;"	f	class:mi::opengl::interact::MouseArcBallOrbitor
MouseArcBallOrbitor	libs/opengl/interact/MouseArcBallOrbitor.h	/^            class MouseArcBallOrbitor : public MouseArcBall$/;"	c	namespace:mi::opengl::interact
MouseCaptured	apps/MIFit/ui/MIGLWidget.h	/^    bool MouseCaptured;$/;"	m	class:MIGLWidget
MouseInWindow	apps/MIFit/ui/MIGLWidget.h	/^    bool MouseInWindow;$/;"	m	class:MIGLWidget
MouseMoveXfit	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::MouseMoveXfit(QPoint point, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers)$/;"	f	class:MIGLWidget
MousePicker	libs/opengl/interact/MousePicker.cpp	/^MousePicker::MousePicker()$/;"	f	class:mi::opengl::interact::MousePicker
MousePicker	libs/opengl/interact/MousePicker.h	/^            class MousePicker$/;"	c	namespace:mi::opengl::interact
MouseStillTime	apps/MIFit/ui/MIGLWidget.h	/^    long MouseStillTime;$/;"	m	class:MIGLWidget
MouseTranslator	libs/opengl/interact/MouseTranslator.cpp	/^MouseTranslator::MouseTranslator(Viewpoint *viewpoint, Viewpoint *relativeToViewpoint, float scaling)$/;"	f	class:mi::opengl::interact::MouseTranslator
MouseTranslator	libs/opengl/interact/MouseTranslator.h	/^            class MouseTranslator$/;"	c	namespace:mi::opengl::interact
MouseZoomer	libs/opengl/interact/MouseZoomer.cpp	/^MouseZoomer::MouseZoomer(PropertyCommand *propertyCommand, float scaling)$/;"	f	class:mi::opengl::interact::MouseZoomer
MouseZoomer	libs/opengl/interact/MouseZoomer.h	/^            class MouseZoomer$/;"	c	namespace:mi::opengl::interact
MoveAtom	libs/conflib/AtomRefiner.cpp	/^void AtomRefiner::MoveAtom(MIAtom *atom, float *v)$/;"	f	class:AtomRefiner
MoveIntoPlane	libs/chemlib/mol_util.h	/^    inline void MoveIntoPlane(MIAtom *atom,$/;"	f	namespace:chemlib
MoveOnto	apps/MIFit/core/RESIDUE.cpp	/^bool MoveOnto(const Residue *res, Residue *fitres, int nres)$/;"	f
MtzAddColumn	libs/cmtz/cmtzlib.c	/^MTZCOL *MtzAddColumn(MTZ *mtz, MTZSET *set, const char *label,$/;"	f
MtzAddDataset	libs/cmtz/cmtzlib.c	/^MTZSET *MtzAddDataset(MTZ *mtz, MTZXTAL *xtl, const char *dname,$/;"	f
MtzAddHistory	libs/cmtz/cmtzlib.c	/^int MtzAddHistory(MTZ *mtz, const char history[][MTZRECORDLENGTH], const int nlines) {$/;"	f
MtzAddXtal	libs/cmtz/cmtzlib.c	/^MTZXTAL *MtzAddXtal(MTZ *mtz, const char *xname, const char *pname,$/;"	f
MtzArrayToBatch	libs/cmtz/cmtzlib.c	/^int MtzArrayToBatch(const int *intbuf, const float *fltbuf, MTZBAT *batch)$/;"	f
MtzAssignColumn	libs/cmtz/cmtzlib.c	/^int MtzAssignColumn(MTZ *mtz, MTZCOL *col, const char crystal_name[],  $/;"	f
MtzAssignHKLtoBase	libs/cmtz/cmtzlib.c	/^int MtzAssignHKLtoBase(MTZ *mtz)$/;"	f
MtzBatchToArray	libs/cmtz/cmtzlib.c	/^int MtzBatchToArray(MTZBAT *batch, int *intbuf, float *fltbuf)$/;"	f
MtzCallocHist	libs/cmtz/cmtzlib.c	/^char *MtzCallocHist(int nhist)$/;"	f
MtzColLookup	libs/cmtz/cmtzlib.c	/^MTZCOL *MtzColLookup(const MTZ *mtz, const char *label)$/;"	f
MtzColPath	libs/cmtz/cmtzlib.c	/^char *MtzColPath(const MTZ *mtz, const MTZCOL *col)$/;"	f
MtzColSet	libs/cmtz/cmtzlib.c	/^MTZSET *MtzColSet(const MTZ *mtz, const MTZCOL *col)$/;"	f
MtzColType	libs/cmtz/cmtzlib.c	/^char *MtzColType(MTZCOL *col)$/;"	f
MtzColsInSet	libs/cmtz/cmtzlib.c	/^MTZCOL **MtzColsInSet(MTZSET *set)$/;"	f
MtzDebugHierarchy	libs/cmtz/cmtzlib.c	/^void MtzDebugHierarchy(const MTZ *mtz) {$/;"	f
MtzDeleteRefl	libs/cmtz/cmtzlib.c	/^int MtzDeleteRefl(MTZ *mtz, int iref)$/;"	f
MtzFindInd	libs/cmtz/cmtzlib.c	/^int MtzFindInd(const MTZ *mtz, int *ind_xtal, int *ind_set, int ind_col[3]) {$/;"	f
MtzFree	libs/cmtz/cmtzlib.c	/^int MtzFree(MTZ *mtz)$/;"	f
MtzFreeBatch	libs/cmtz/cmtzlib.c	/^int MtzFreeBatch(MTZBAT *batch) $/;"	f
MtzFreeCol	libs/cmtz/cmtzlib.c	/^int MtzFreeCol(MTZCOL *col)$/;"	f
MtzFreeHist	libs/cmtz/cmtzlib.c	/^int MtzFreeHist(char *hist)$/;"	f
MtzGet	libs/cmtz/cmtzlib.c	/^MTZ *MtzGet(const char *logname, int read_refs)$/;"	f
MtzGetUserCellTolerance	libs/cmtz/cmtzlib.c	/^MTZ *MtzGetUserCellTolerance(const char *logname, int read_refs, const double cell_tolerance)$/;"	f
MtzHklcoeffs	libs/cmtz/cmtzlib.c	/^int MtzHklcoeffs(const float cell[6], double coefhkl[6]) {$/;"	f
MtzIcolInSet	libs/cmtz/cmtzlib.c	/^MTZCOL *MtzIcolInSet(const MTZSET *set, const int icol)$/;"	f
MtzInd2reso	libs/cmtz/cmtzlib.c	/^float MtzInd2reso(const int in[3], const double coefhkl[6]) {$/;"	f
MtzIsetInXtal	libs/cmtz/cmtzlib.c	/^MTZSET *MtzIsetInXtal(const MTZXTAL *xtal, const int iset)$/;"	f
MtzIxtal	libs/cmtz/cmtzlib.c	/^MTZXTAL *MtzIxtal(const MTZ *mtz, const int ixtal)$/;"	f
MtzListColumn	libs/cmtz/cmtzlib.c	/^int MtzListColumn(const MTZ *mtz, char clabs[][31], char ctyps[][3], int csetid[]) {$/;"	f
MtzListInputColumn	libs/cmtz/cmtzlib.c	/^int MtzListInputColumn(const MTZ *mtz, char clabs[][31], char ctyps[][3], int csetid[]) {$/;"	f
MtzMalloc	libs/cmtz/cmtzlib.c	/^MTZ *MtzMalloc(int nxtal, int nset[])$/;"	f
MtzMallocBatch	libs/cmtz/cmtzlib.c	/^MTZBAT *MtzMallocBatch()$/;"	f
MtzMallocCol	libs/cmtz/cmtzlib.c	/^MTZCOL *MtzMallocCol(MTZ *mtz, int nref)$/;"	f
MtzNbat	libs/cmtz/cmtzlib.c	/^int MtzNbat(const MTZ *mtz)$/;"	f
MtzNbatchesInSet	libs/cmtz/cmtzlib.c	/^int MtzNbatchesInSet(const MTZ *mtz, const MTZSET *set)$/;"	f
MtzNcol	libs/cmtz/cmtzlib.c	/^int MtzNcol(const MTZ *mtz)$/;"	f
MtzNcolsInSet	libs/cmtz/cmtzlib.c	/^int MtzNcolsInSet(const MTZSET *set)$/;"	f
MtzNref	libs/cmtz/cmtzlib.c	/^int MtzNref(const MTZ *mtz)$/;"	f
MtzNset	libs/cmtz/cmtzlib.c	/^int MtzNset(const MTZ *mtz)$/;"	f
MtzNsetsInXtal	libs/cmtz/cmtzlib.c	/^int MtzNsetsInXtal(const MTZXTAL *xtal)$/;"	f
MtzNumActiveCol	libs/cmtz/cmtzlib.c	/^int MtzNumActiveCol(const MTZ *mtz)$/;"	f
MtzNumActiveColsInSet	libs/cmtz/cmtzlib.c	/^int MtzNumActiveColsInSet(const MTZSET *set)$/;"	f
MtzNumActiveSet	libs/cmtz/cmtzlib.c	/^int MtzNumActiveSet(const MTZ *mtz)$/;"	f
MtzNumActiveSetsInXtal	libs/cmtz/cmtzlib.c	/^int MtzNumActiveSetsInXtal(const MTZ *mtz, const MTZXTAL *xtal)$/;"	f
MtzNumActiveXtal	libs/cmtz/cmtzlib.c	/^int MtzNumActiveXtal(const MTZ *mtz)$/;"	f
MtzNumSourceCol	libs/cmtz/cmtzlib.c	/^int MtzNumSourceCol(const MTZ *mtz)$/;"	f
MtzNumSourceColsInSet	libs/cmtz/cmtzlib.c	/^int MtzNumSourceColsInSet(const MTZSET *set)$/;"	f
MtzNxtal	libs/cmtz/cmtzlib.c	/^int MtzNxtal(const MTZ *mtz)$/;"	f
MtzOpenForWrite	libs/cmtz/cmtzlib.c	/^CCP4File *MtzOpenForWrite(const char *logname)$/;"	f
MtzParseLabin	libs/cmtz/cmtzlib.c	/^int MtzParseLabin(char *labin_line, const char prog_labels[][31], $/;"	f
MtzPathMatch	libs/cmtz/cmtzlib.c	/^int MtzPathMatch(const char *path1, const char *path2)$/;"	f
MtzPrintBatchHeader	libs/cmtz/cmtzlib.c	/^int MtzPrintBatchHeader(const MTZBAT *batch) {$/;"	f
MtzPut	libs/cmtz/cmtzlib.c	/^int MtzPut(MTZ *mtz, const char *logname)$/;"	f
MtzRJustPath	libs/cmtz/cmtzlib.c	/^int MtzRJustPath(char *path, const char *partial, const int njust)$/;"	f
MtzResLimits	libs/cmtz/cmtzlib.c	/^int MtzResLimits(const MTZ *mtz, float *minres, float *maxres) {$/;"	f
MtzRrefl	libs/cmtz/cmtzlib.c	/^int MtzRrefl(CCP4File *filein, int ncol, float *refldata) {$/;"	f
MtzSetLookup	libs/cmtz/cmtzlib.c	/^MTZSET *MtzSetLookup(const MTZ *mtz, const char *label)$/;"	f
MtzSetPath	libs/cmtz/cmtzlib.c	/^char *MtzSetPath(const MTZ *mtz, const MTZSET *set)$/;"	f
MtzSetSortOrder	libs/cmtz/cmtzlib.c	/^int MtzSetSortOrder(MTZ *mtz, MTZCOL *colsort[5]) {$/;"	f
MtzSetXtal	libs/cmtz/cmtzlib.c	/^MTZXTAL *MtzSetXtal(const MTZ *mtz, const MTZSET *set)$/;"	f
MtzSetsInXtal	libs/cmtz/cmtzlib.c	/^MTZSET **MtzSetsInXtal(MTZXTAL *xtal)$/;"	f
MtzSpacegroupNumber	libs/cmtz/cmtzlib.c	/^int MtzSpacegroupNumber(const MTZ *mtz)$/;"	f
MtzToggleColumn	libs/cmtz/cmtzlib.c	/^int MtzToggleColumn(MTZCOL *col)$/;"	f
MtzWhdrLine	libs/cmtz/cmtzlib.c	/^int MtzWhdrLine(CCP4File *fileout, int nitems, char buffer[]) {$/;"	f
MtzWrefl	libs/cmtz/cmtzlib.c	/^int MtzWrefl(CCP4File *fileout, int ncol, float *refldata) {$/;"	f
MtzXtalLookup	libs/cmtz/cmtzlib.c	/^MTZXTAL *MtzXtalLookup(const MTZ *mtz, const char *label)$/;"	f
MtzXtalPath	libs/cmtz/cmtzlib.c	/^char *MtzXtalPath(const MTZXTAL *xtal)$/;"	f
MtzXtals	libs/cmtz/cmtzlib.c	/^MTZXTAL **MtzXtals(MTZ *mtz)$/;"	f
Multitype	libs/map/fftlib.cpp	/^typedef union Multitype Multitype;$/;"	t	typeref:union:Multitype	file:
Multitype	libs/map/fftlib.cpp	/^union Multitype     \/* for multiple entry points *\/$/;"	u	file:
MustAbortNow	apps/MIFit/ui/Application.h	/^    bool MustAbortNow;$/;"	m	class:MIBusyManager
MyLineEdit	apps/MIFit/ui/ModelsView.cpp	/^    MyLineEdit(const QString &str, QWidget *parent)$/;"	f	class:MyLineEdit
MyLineEdit	apps/MIFit/ui/ModelsView.cpp	/^class MyLineEdit$/;"	c	file:
MyMIMolOptCheckPoint	apps/MIFit/ui/MIGLWidget.cpp	/^    MyMIMolOptCheckPoint(MIGLWidget *parent,$/;"	f	class:MyMIMolOptCheckPoint
MyMIMolOptCheckPoint	apps/MIFit/ui/MIGLWidget.cpp	/^class MyMIMolOptCheckPoint$/;"	c	file:
N	libs/chemlib/RefmacType.h	/^    const unsigned int N    = 21;   \/\/Sp2 hybridized, nohydrogen$/;"	m	namespace:RefmacType
N	libs/map/EMapBase.cpp	4091;"	d	file:
N	libs/map/EMapBase.cpp	4183;"	d	file:
N	libs/math/MersenneTwister.h	/^            const int N;$/;"	m	class:mi::math::MersenneTwister
NA	libs/chemlib/RefmacType.h	/^    const unsigned int NA   = 95;$/;"	m	namespace:RefmacType
NAN	libs/map/EMapBase.cpp	1885;"	d	file:
NAN	libs/umtz/library.c	1304;"	d	file:
NAN	libs/umtz/library.c	1310;"	d	file:
NAN	libs/umtz/library.c	1313;"	d	file:
NATIVEFT	libs/cmtz/ccp4_sysdep.h	247;"	d
NATIVEFT	libs/cmtz/ccp4_sysdep.h	253;"	d
NATIVEFT	libs/cmtz/ccp4_sysdep.h	258;"	d
NATIVEFT	libs/cmtz/ccp4_sysdep.h	264;"	d
NATIVEFT	libs/cmtz/ccp4_sysdep.h	266;"	d
NATIVEFT	libs/cmtz/ccp4_sysdep.h	269;"	d
NATIVEFT	libs/cmtz/ccp4_sysdep.h	276;"	d
NATIVEFT	libs/umtz/library.h	452;"	d
NATIVEFT	libs/umtz/library.h	464;"	d
NATIVEFT	libs/umtz/library.h	474;"	d
NATIVEFT	libs/umtz/library.h	485;"	d
NATIVEFT	libs/umtz/library.h	487;"	d
NATIVEFT	libs/umtz/library.h	490;"	d
NATIVEFT	libs/umtz/library.h	503;"	d
NATIVEFT	libs/umtz/library.h	511;"	d
NATIVEFT	libs/umtz/library.h	514;"	d
NATIVEFT	libs/umtz/library.h	525;"	d
NATIVEFT	libs/umtz/library.h	529;"	d
NATIVEIT	libs/cmtz/ccp4_sysdep.h	248;"	d
NATIVEIT	libs/cmtz/ccp4_sysdep.h	252;"	d
NATIVEIT	libs/cmtz/ccp4_sysdep.h	257;"	d
NATIVEIT	libs/cmtz/ccp4_sysdep.h	271;"	d
NATIVEIT	libs/cmtz/ccp4_sysdep.h	275;"	d
NATIVEIT	libs/umtz/library.h	453;"	d
NATIVEIT	libs/umtz/library.h	463;"	d
NATIVEIT	libs/umtz/library.h	473;"	d
NATIVEIT	libs/umtz/library.h	492;"	d
NATIVEIT	libs/umtz/library.h	502;"	d
NATIVEIT	libs/umtz/library.h	509;"	d
NATIVEIT	libs/umtz/library.h	526;"	d
NATIVEIT	libs/umtz/library.h	530;"	d
NB	libs/chemlib/RefmacType.h	/^    const unsigned int NB   = 129;$/;"	m	namespace:RefmacType
NBATCHINTEGERS	libs/cmtz/mtzdata.h	43;"	d
NBATCHREALS	libs/cmtz/mtzdata.h	44;"	d
NBATCHWORDS	libs/cmtz/mtzdata.h	42;"	d
NC1	libs/chemlib/RefmacType.h	/^    const unsigned int NC1  = 22;$/;"	m	namespace:RefmacType
NC2	libs/chemlib/RefmacType.h	/^    const unsigned int NC2  = 24;$/;"	m	namespace:RefmacType
NC3	libs/chemlib/RefmacType.h	/^    const unsigned int NC3  = 26;$/;"	m	namespace:RefmacType
NCRAverage	libs/map/wxWweave.cpp	/^int EMapBase::NCRAverage(int ix, int iy, int iz)$/;"	f	class:EMapBase
NCRSymmops	libs/map/CMapHeaderBase.h	/^    float NCRSymmops[MISymmop::MAXNCRSYMMOPS][12];$/;"	m	class:CMapHeaderBase
NCRTransform	libs/map/wxWweave.cpp	/^void CMapHeaderBase::NCRTransform(float *fx, float *fy, float *fz, int is)$/;"	f	class:CMapHeaderBase
ND	libs/chemlib/RefmacType.h	/^    const unsigned int ND   = 109;$/;"	m	namespace:RefmacType
NDIV	libs/molopt/MIMolOpt.cpp	38;"	d	file:
NE	libs/chemlib/RefmacType.h	/^    const unsigned int NE   = 170;$/;"	m	namespace:RefmacType
NEARPLANE	libs/opengl/Frustum.cpp	/^const int Frustum::NEARPLANE = 4;$/;"	m	class:mi::opengl::Frustum	file:
NEARPLANE	libs/opengl/Frustum.h	/^            static const int NEARPLANE;$/;"	m	class:mi::opengl::Frustum
NEEDBITS	libs/opengl/zlib/infutil.h	80;"	d
NEEDBYTE	libs/opengl/zlib/inflate.cpp	153;"	d	file:
NEEDBYTE	libs/opengl/zlib/infutil.h	78;"	d
NEEDOUT	libs/opengl/zlib/infutil.h	87;"	d
NEED_DUMMY_RETURN	libs/opengl/zlib/zconf.h	92;"	d
NELEMENTS	apps/MIFit/ui/Xguicryst.h	16;"	d
NELEMENTS	libs/chemlib/model.h	84;"	d
NEXTBYTE	libs/opengl/zlib/inflate.cpp	154;"	d	file:
NEXTBYTE	libs/opengl/zlib/infutil.h	79;"	d
NH1	libs/chemlib/RefmacType.h	/^    const unsigned int NH1  = 23;$/;"	m	namespace:RefmacType
NH2	libs/chemlib/RefmacType.h	/^    const unsigned int NH2  = 25;$/;"	m	namespace:RefmacType
NI	libs/chemlib/RefmacType.h	/^    const unsigned int NI   = 143;$/;"	m	namespace:RefmacType
NMAX	libs/opengl/zlib/adler32.cpp	11;"	d	file:
NOMINMAX	apps/MIFit/core/Mlculseq.cpp	1;"	d	file:
NOMINMAX	apps/MIFit/core/RESIDUE.cpp	1;"	d	file:
NORMALBOND	libs/chemlib/model.h	19;"	d
NOUNISTD	libs/cmtz/ccp4_sysdep.h	139;"	d
NOUNISTD	libs/cmtz/ccp4_sysdep.h	147;"	d
NOUNISTD	libs/umtz/library.h	245;"	d
NOUNISTD	libs/umtz/library.h	253;"	d
NO_COORD	apps/MIFit/core/Annotation.cpp	/^const float Annotation::NO_COORD = -99999.9f;$/;"	m	class:Annotation	file:
NO_COORD	apps/MIFit/core/Annotation.h	/^    static const float NO_COORD;$/;"	m	class:Annotation
NO_DUMMY_DECL	libs/opengl/zlib/zconf.h	87;"	d
NO_MEMCPY	libs/opengl/zlib/zutil.h	161;"	d
NO_MEMCPY	libs/opengl/zlib/zutil.h	168;"	d
NO_SURFACE	apps/MIFit/ui/MIGLWidget.cpp	108;"	d	file:
NP	libs/chemlib/RefmacType.h	/^    const unsigned int NP   = 124;$/;"	m	namespace:RefmacType
NPA	libs/chemlib/RefmacType.h	/^    const unsigned int NPA  = 31;$/;"	m	namespace:RefmacType
NPB	libs/chemlib/RefmacType.h	/^    const unsigned int NPB  = 32;$/;"	m	namespace:RefmacType
NR15	libs/chemlib/RefmacType.h	/^    const unsigned int NR15 = 34;$/;"	m	namespace:RefmacType
NR16	libs/chemlib/RefmacType.h	/^    const unsigned int NR16 = 40;$/;"	m	namespace:RefmacType
NR5	libs/chemlib/RefmacType.h	/^    const unsigned int NR5  = 33;$/;"	m	namespace:RefmacType
NR55	libs/chemlib/RefmacType.h	/^    const unsigned int NR55 = 37;$/;"	m	namespace:RefmacType
NR56	libs/chemlib/RefmacType.h	/^    const unsigned int NR56 = 36;$/;"	m	namespace:RefmacType
NR6	libs/chemlib/RefmacType.h	/^    const unsigned int NR6  = 38;$/;"	m	namespace:RefmacType
NR66	libs/chemlib/RefmacType.h	/^    const unsigned int NR66 = 39;$/;"	m	namespace:RefmacType
NRD5	libs/chemlib/RefmacType.h	/^    const unsigned int NRD5 = 35;$/;"	m	namespace:RefmacType
NRD6	libs/chemlib/RefmacType.h	/^    const unsigned int NRD6 = 41;$/;"	m	namespace:RefmacType
NS	libs/chemlib/RefmacType.h	/^    const unsigned int NS   = 20;   \/\/Sp hybridized, no hydrogen$/;"	m	namespace:RefmacType
NT	libs/chemlib/RefmacType.h	/^    const unsigned int NT   = 27;$/;"	m	namespace:RefmacType
NT1	libs/chemlib/RefmacType.h	/^    const unsigned int NT1  = 28;$/;"	m	namespace:RefmacType
NT2	libs/chemlib/RefmacType.h	/^    const unsigned int NT2  = 29;$/;"	m	namespace:RefmacType
NT3	libs/chemlib/RefmacType.h	/^    const unsigned int NT3  = 30;$/;"	m	namespace:RefmacType
NTAB	libs/molopt/MIMolOpt.cpp	37;"	d	file:
NTERMINUS	apps/MIFit/core/RESIDUE.h	12;"	d
NTERMINUS	libs/chemlib/model.h	74;"	d
NTYPES	apps/MIFit/core/Molecule.h	/^const unsigned int NTYPES = 9;$/;"	v
NTYPES	libs/chemlib/MIAtom.cpp	/^static const unsigned int NTYPES = 9;$/;"	m	namespace:chemlib	file:
NUCLEIC	apps/MIFit/core/RESIDUE.h	20;"	d
NUCLEIC	libs/chemlib/model.h	82;"	d
NUM_DEFINED_STYLES	apps/MIFit/ui/ContourOptionsWidget.h	/^const unsigned int NUM_DEFINED_STYLES = 6;$/;"	v
N_Coefficient	libs/map/CMapHeaderBase.h	/^    float N_Coefficient;$/;"	m	class:CMapHeaderBase
Name	libs/chemlib/RefmacAtomTyper.cpp	/^char*RefmacAtomTyper::Name(unsigned int index) const$/;"	f	class:chemlib::RefmacAtomTyper
Namelist	libs/map/fftlib.cpp	/^struct Namelist$/;"	s	file:
Namelist	libs/map/fftlib.cpp	/^typedef struct Namelist Namelist;$/;"	t	typeref:struct:Namelist	file:
NearCheck	libs/map/EMapBase.cpp	/^static int NearCheck(float fx, float fy, float fz, MINATOM *atoms, int natoms, CMapHeaderBase *mh, int add_water, float dmin)$/;"	f	file:
New	apps/MIFit/core/MoleculeType.h	/^        New,$/;"	e	enum:MoleculeType::__anon2
New	libs/chemlib/Ligand.h	/^            New,$/;"	e	enum:chemlib::Ligand::__anon28
NewFile	apps/MIFit/ui/MIGLWidget.h	/^    int NewFile()$/;"	f	class:MIGLWidget
Next	libs/conflib/ConfIterator.cpp	/^bool ConfEnumerator::Next()$/;"	f	class:conflib::ConfEnumerator
Next	libs/conflib/ConfIterator.cpp	/^bool ConfSampler::Next()$/;"	f	class:conflib::ConfSampler
NextConformer	apps/MIFit/ui/MIGLWidget.cpp	/^static bool NextConformer(Residue *fitres, MIGLWidget *win)$/;"	f	file:
NoHydrogens	libs/chemlib/MIMolDictionary.h	/^        const unsigned int NoHydrogens = 1;$/;"	m	namespace:chemlib::DictionaryHLevel
None	libs/chemlib/MIMolDictionary.h	/^        const unsigned int None = 0;$/;"	m	namespace:chemlib::Refine_Level
Nonstringent_acos	libs/chemlib/math_util.h	/^    inline double Nonstringent_acos(double cos)$/;"	f	namespace:chemlib
NormVect	libs/chemlib/math_util.h	/^    inline void NormVect(T *v)$/;"	f	namespace:chemlib
NormVect	libs/chemlib/math_util.h	/^    inline void NormVect(const T *in, T *out)$/;"	f	namespace:chemlib
NormVect	libs/chemlib/math_util.h	/^    inline void NormVect(std::vector<T> &v)$/;"	f	namespace:chemlib
NormVect2D	libs/chemlib/math_util.h	/^    inline void NormVect2D(T *v)$/;"	f	namespace:chemlib
Note_to_self	apps/MIFit/core/Annotation.h	/^        Note_to_self,$/;"	e	enum:Annotation::__anon1
NumAngles	libs/chemlib/Constraint.h	/^        int NumAngles()$/;"	f	class:chemlib::Improper
NumAngles	libs/conflib/FlexTorsion.h	/^        int NumAngles() const$/;"	f	class:conflib::FlexTorsion
NumAromatics	libs/chemlib/RingSystem.h	/^        int NumAromatics() const$/;"	f	class:chemlib::RingSystem
NumAromaticsSum	libs/chemlib/mol_util.h	/^    inline int NumAromaticsSum(int sumSoFar, const RingSystem &rs)$/;"	f	namespace:chemlib
NumAtoms	libs/chemlib/Aromatic.cpp	/^int Aromatic::NumAtoms() const$/;"	f	class:chemlib::Aromatic
NumAtoms	libs/chemlib/Constraint.cpp	/^int Plane::NumAtoms()$/;"	f	class:chemlib::Plane
NumAtoms	libs/chemlib/RingSystem.h	/^        int NumAtoms() const$/;"	f	class:chemlib::RingSystem
NumAtomsSum	libs/chemlib/mol_util.h	/^    NumAtomsSum(MIAtomList::size_type sumSoFar, const Monomer *res)$/;"	f	namespace:chemlib
NumBonds	libs/chemlib/Aromatic.cpp	/^int Aromatic::NumBonds() const$/;"	f	class:chemlib::Aromatic
NumBonds	libs/chemlib/RingSystem.h	/^        int NumBonds() const$/;"	f	class:chemlib::RingSystem
NumEntries	libs/chemlib/molfile.cpp	/^int MolPropertyLine::NumEntries()$/;"	f	class:chemlib::MolPropertyLine
NumLines	apps/MIFit/ui/rama.h	/^    unsigned int NumLines() const$/;"	f	class:OrigRamaData
NumLines	apps/MIFit/ui/rama.h	/^    unsigned int NumLines() const$/;"	f	class:RichardsonRamaData
NumSegs	apps/MIFit/ui/rama.h	/^    unsigned int NumSegs(unsigned int line) const$/;"	f	class:OrigRamaData
NumSegs	apps/MIFit/ui/rama.h	/^    unsigned int NumSegs(unsigned int line) const$/;"	f	class:RichardsonRamaData
NumberConfs	libs/conflib/ConfIterator.h	/^        virtual int NumberConfs() const$/;"	f	class:conflib::ConfEnumerator
NumberConfs	libs/conflib/ConfIterator.h	/^        virtual int NumberConfs() const$/;"	f	class:conflib::ConfSampler
NumberItems	apps/MIFit/ui/Displaylist.h	/^inline int Displaylist::NumberItems()$/;"	f	class:Displaylist
NumberSets	libs/chemlib/ConfSaver.cpp	/^int ConfSaver::NumberSets() const$/;"	f	class:chemlib::ConfSaver
NumberSets	libs/chemlib/GeomSaver.h	/^        int NumberSets() const$/;"	f	class:chemlib::GeomSaver
O	libs/chemlib/RefmacType.h	/^    const unsigned int O    = 43;$/;"	m	namespace:RefmacType
O2	libs/chemlib/RefmacType.h	/^    const unsigned int O2   = 44;$/;"	m	namespace:RefmacType
OB	libs/chemlib/RefmacType.h	/^    const unsigned int OB   = 53;$/;"	m	namespace:RefmacType
OBJECTS	apps/MIFit/core/Makefile	/^OBJECTS       = Annotation.o \\$/;"	m
OBJECTS	apps/MIFit/jobs/Makefile	/^OBJECTS       = BatchJob.o \\$/;"	m
OBJECTS	apps/MIFit/main/Makefile	/^OBJECTS       = main.o$/;"	m
OBJECTS	apps/MIFit/script/Makefile	/^OBJECTS       = LocalSocketScript.o \\$/;"	m
OBJECTS	apps/MIFit/ui/Makefile	/^OBJECTS       = AddResidueDialog.o \\$/;"	m
OBJECTS	libs/chemlib/Makefile	/^OBJECTS       = Aromatic.o \\$/;"	m
OBJECTS	libs/conflib/Makefile	/^OBJECTS       = AtomRefiner.o \\$/;"	m
OBJECTS	libs/jacgrid/Makefile	/^OBJECTS       = grid.o \\$/;"	m
OBJECTS	libs/ligand/Makefile	/^OBJECTS       = LigDictEntry.o \\$/;"	m
OBJECTS	libs/map/Makefile	/^OBJECTS       = CMapHeaderBase.o \\$/;"	m
OBJECTS	libs/math/Makefile	/^OBJECTS       = crystmat.o \\$/;"	m
OBJECTS	libs/molopt/Makefile	/^OBJECTS       = MIMolOpt.o \\$/;"	m
OBJECTS	libs/opengl/Makefile	/^OBJECTS       = Arc.o \\$/;"	m
OBJECTS	libs/umtz/Makefile	/^OBJECTS       = mmtzlib.o \\$/;"	m
OBJECTS	libs/util/Makefile	/^OBJECTS       = FileIo.o \\$/;"	m
OBJECTS_DIR	apps/MIFit/core/Makefile	/^OBJECTS_DIR   = .\/$/;"	m
OBJECTS_DIR	apps/MIFit/jobs/Makefile	/^OBJECTS_DIR   = .\/$/;"	m
OBJECTS_DIR	apps/MIFit/main/Makefile	/^OBJECTS_DIR   = .\/$/;"	m
OBJECTS_DIR	apps/MIFit/script/Makefile	/^OBJECTS_DIR   = .\/$/;"	m
OBJECTS_DIR	apps/MIFit/ui/Makefile	/^OBJECTS_DIR   = .\/$/;"	m
OBJECTS_DIR	libs/chemlib/Makefile	/^OBJECTS_DIR   = .\/$/;"	m
OBJECTS_DIR	libs/conflib/Makefile	/^OBJECTS_DIR   = .\/$/;"	m
OBJECTS_DIR	libs/jacgrid/Makefile	/^OBJECTS_DIR   = .\/$/;"	m
OBJECTS_DIR	libs/ligand/Makefile	/^OBJECTS_DIR   = .\/$/;"	m
OBJECTS_DIR	libs/map/Makefile	/^OBJECTS_DIR   = .\/$/;"	m
OBJECTS_DIR	libs/math/Makefile	/^OBJECTS_DIR   = .\/$/;"	m
OBJECTS_DIR	libs/molopt/Makefile	/^OBJECTS_DIR   = .\/$/;"	m
OBJECTS_DIR	libs/opengl/Makefile	/^OBJECTS_DIR   = .\/$/;"	m
OBJECTS_DIR	libs/umtz/Makefile	/^OBJECTS_DIR   = .\/$/;"	m
OBJECTS_DIR	libs/util/Makefile	/^OBJECTS_DIR   = .\/$/;"	m
OC	libs/chemlib/RefmacType.h	/^    const unsigned int OC   = 51;$/;"	m	namespace:RefmacType
OC2	libs/chemlib/RefmacType.h	/^    const unsigned int OC2  = 50;$/;"	m	namespace:RefmacType
OCTAHEDRAL	libs/chemlib/model.h	70;"	d
ODDOREVEN	libs/map/maptypes.h	26;"	d
OF	libs/opengl/zlib/zconf.h	131;"	d
OF	libs/opengl/zlib/zconf.h	133;"	d
OF	libs/opengl/zlib/zutil.h	/^typedef uLong (ZEXPORT *check_func) OF ((uLong check, const Bytef *buf,$/;"	t
OH1	libs/chemlib/RefmacType.h	/^    const unsigned int OH1  = 45;$/;"	m	namespace:RefmacType
OH2	libs/chemlib/RefmacType.h	/^    const unsigned int OH2  = 46;$/;"	m	namespace:RefmacType
OHA	libs/chemlib/RefmacType.h	/^    const unsigned int OHA  = 47;$/;"	m	namespace:RefmacType
OHB	libs/chemlib/RefmacType.h	/^    const unsigned int OHB  = 48;$/;"	m	namespace:RefmacType
OHC	libs/chemlib/RefmacType.h	/^    const unsigned int OHC  = 49;$/;"	m	namespace:RefmacType
OK	apps/MIFit/core/rotate.cpp	18;"	d	file:
OP	libs/chemlib/RefmacType.h	/^    const unsigned int OP   = 52;$/;"	m	namespace:RefmacType
ORANGE	apps/MIFit/core/Colors.cpp	/^const int Colors::ORANGE = 8;$/;"	m	class:Colors	file:
ORANGE	apps/MIFit/core/Colors.h	/^    static const int ORANGE;$/;"	m	class:Colors
OS	libs/chemlib/RefmacType.h	/^    const unsigned int OS   = 42;$/;"	m	namespace:RefmacType
OSE	libs/chemlib/RefmacType.h	/^    const unsigned int OSE  = 139;$/;"	m	namespace:RefmacType
OS_CODE	libs/opengl/zlib/zutil.h	100;"	d
OS_CODE	libs/opengl/zlib/zutil.h	106;"	d
OS_CODE	libs/opengl/zlib/zutil.h	110;"	d
OS_CODE	libs/opengl/zlib/zutil.h	114;"	d
OS_CODE	libs/opengl/zlib/zutil.h	125;"	d
OS_CODE	libs/opengl/zlib/zutil.h	129;"	d
OS_CODE	libs/opengl/zlib/zutil.h	144;"	d
OS_CODE	libs/opengl/zlib/zutil.h	77;"	d
OS_CODE	libs/opengl/zlib/zutil.h	92;"	d
OS_CODE	libs/opengl/zlib/zutil.h	96;"	d
OUTBYTE	libs/opengl/zlib/infutil.h	88;"	d
OUTSIDE	libs/opengl/Frustum.h	/^                OUTSIDE, INTERSECT, INSIDE$/;"	e	enum:mi::opengl::Frustum::CullingResult
O_APPEND	libs/cmtz/ccp4_sysdep.h	225;"	d
O_CREAT	libs/cmtz/ccp4_sysdep.h	226;"	d
O_RDONLY	libs/cmtz/ccp4_sysdep.h	222;"	d
O_RDWR	libs/cmtz/ccp4_sysdep.h	224;"	d
O_TMP	libs/cmtz/ccp4_sysdep.h	229;"	d
O_TRUNC	libs/cmtz/ccp4_sysdep.h	227;"	d
O_WRONLY	libs/cmtz/ccp4_sysdep.h	223;"	d
Object3d	libs/opengl/Object3d.cpp	/^Object3d::Object3d(istream &input, bool center)$/;"	f	class:mi::opengl::Object3d
Object3d	libs/opengl/Object3d.h	/^        class Object3d$/;"	c	namespace:mi::opengl
OnAbout	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnAbout()$/;"	f	class:MIMainWindow
OnActivated	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnActivated()$/;"	f	class:MIGLWidget
OnAddChiral	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnAddChiral()$/;"	f	class:DictEditCanvas
OnAddMarkAfter	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnAddMarkAfter()$/;"	f	class:MIGLWidget
OnAddMarkBefore	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnAddMarkBefore()$/;"	f	class:MIGLWidget
OnAddPlane	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnAddPlane()$/;"	f	class:DictEditCanvas
OnAddWater	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnAddWater()$/;"	f	class:MIGLWidget
OnAddWaterAtCursor	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnAddWaterAtCursor()$/;"	f	class:MIGLWidget
OnAmountToDimNonactiveModels	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnAmountToDimNonactiveModels()$/;"	f	class:MIGLWidget
OnAnimateBlink	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnAnimateBlink()$/;"	f	class:MIGLWidget
OnAnimateRock	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnAnimateRock()$/;"	f	class:MIGLWidget
OnAnimateRockandrollparameters	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnAnimateRockandrollparameters()$/;"	f	class:MIGLWidget
OnAnimateRoll	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnAnimateRoll()$/;"	f	class:MIGLWidget
OnAnnotation	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnAnnotation()$/;"	f	class:MIGLWidget
OnAutoCheckpointModel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnAutoCheckpointModel()$/;"	f	class:MIGLWidget
OnBackgroundColor	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnBackgroundColor()$/;"	f	class:MIMainWindow
OnBuildCBRange	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnBuildCBRange()$/;"	f	class:MIGLWidget
OnBuildMainchainRange	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnBuildMainchainRange()$/;"	f	class:MIGLWidget
OnChangeAtomType	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnChangeAtomType()$/;"	f	class:DictEditCanvas
OnChangeBondOrder	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnChangeBondOrder()$/;"	f	class:DictEditCanvas
OnCheckpointModel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnCheckpointModel()$/;"	f	class:MIGLWidget
OnClearGeomAnnotations	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnClearGeomAnnotations()$/;"	f	class:MIGLWidget
OnClearPentamer	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnClearPentamer()$/;"	f	class:MIGLWidget
OnClose	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnClose()$/;"	f	class:MIMainWindow
OnColorTool	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnColorTool()$/;"	f	class:MIMainWindow
OnContourListFile	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnContourListFile()$/;"	f	class:MIGLWidget
OnCustom	apps/MIFit/ui/tools.cpp	/^void Tools::OnCustom()$/;"	f	class:Tools
OnDecreasePersp	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnDecreasePersp()$/;"	f	class:MIGLWidget
OnDefineAtomColors	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnDefineAtomColors()$/;"	f	class:MIMainWindow
OnDefineBValueColors	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnDefineBValueColors()$/;"	f	class:MIMainWindow
OnDeleteAtom	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnDeleteAtom()$/;"	f	class:MIGLWidget
OnDeleteBond	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnDeleteBond()$/;"	f	class:DictEditCanvas
OnDeleteBond	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnDeleteBond(Bond *tokill)$/;"	f	class:DictEditCanvas
OnDeleteSecondaryStructure	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnDeleteSecondaryStructure()$/;"	f	class:MIGLWidget
OnDimNonactiveModels	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnDimNonactiveModels()$/;"	f	class:MIGLWidget
OnEditClearlabels	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnEditClearlabels()$/;"	f	class:MIGLWidget
OnEditCopy	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnEditCopy()$/;"	f	class:MIGLWidget
OnEditCopy	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnEditCopy()$/;"	f	class:MIMainWindow
OnEditDictResidue	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnEditDictResidue()$/;"	f	class:MIMainWindow
OnEditLabels	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnEditLabels()$/;"	f	class:MIGLWidget
OnEditSelectmodel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnEditSelectmodel()$/;"	f	class:MIGLWidget
OnExit	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnExit()$/;"	f	class:MIMainWindow
OnExport	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnExport(const char *optionalFilename)$/;"	f	class:DictEditCanvas
OnExportImage	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnExportImage()$/;"	f	class:MIGLWidget
OnExportImage	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnExportImage()$/;"	f	class:MIMainWindow
OnExportModel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnExportModel()$/;"	f	class:MIGLWidget
OnExportModel	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnExportModel()$/;"	f	class:MIMainWindow
OnFileOpen	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnFileOpen()$/;"	f	class:MIMainWindow
OnFileOpenNew	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnFileOpenNew()$/;"	f	class:MIMainWindow
OnFileSave	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFileSave()$/;"	f	class:MIGLWidget
OnFileSave	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnFileSave()$/;"	f	class:MIMainWindow
OnFileSaveAs	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFileSaveAs()$/;"	f	class:MIGLWidget
OnFileSaveAs	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnFileSaveAs()$/;"	f	class:MIMainWindow
OnFindGeomErrors	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFindGeomErrors()$/;"	f	class:MIGLWidget
OnFindLigandDensity	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFindLigandDensity()$/;"	f	class:MIGLWidget
OnFindPentamer	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFindPentamer()$/;"	f	class:MIGLWidget
OnFitApply	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitApply()$/;"	f	class:MIGLWidget
OnFitAtoms	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitAtoms()$/;"	f	class:MIGLWidget
OnFitCancel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitCancel()$/;"	f	class:MIGLWidget
OnFitCentermode	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitCentermode()$/;"	f	class:MIGLWidget
OnFitCleartorsion	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitCleartorsion()$/;"	f	class:MIGLWidget
OnFitDeleteresidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitDeleteresidue()$/;"	f	class:MIGLWidget
OnFitFitmolecule	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitFitmolecule()$/;"	f	class:MIGLWidget
OnFitInsertresidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitInsertresidue()$/;"	f	class:MIGLWidget
OnFitLsqsuperpose	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitLsqsuperpose()$/;"	f	class:MIGLWidget
OnFitNextConfomer	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitNextConfomer()$/;"	f	class:MIGLWidget
OnFitRange	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitRange()$/;"	f	class:MIGLWidget
OnFitRedo	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitRedo()$/;"	f	class:MIGLWidget
OnFitRenameresidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitRenameresidue()$/;"	f	class:MIGLWidget
OnFitReplaceAndFit	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitReplaceAndFit()$/;"	f	class:MIGLWidget
OnFitReplacewith	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitReplacewith()$/;"	f	class:MIGLWidget
OnFitReset	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitReset()$/;"	f	class:MIGLWidget
OnFitResidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitResidue()$/;"	f	class:MIGLWidget
OnFitResidues	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitResidues()$/;"	f	class:MIGLWidget
OnFitRotate	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitRotate()$/;"	f	class:MIGLWidget
OnFitSetuptorsion	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitSetuptorsion()$/;"	f	class:MIGLWidget
OnFitSingleatom	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitSingleatom()$/;"	f	class:MIGLWidget
OnFitSplitFit	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitSplitFit()$/;"	f	class:MIGLWidget
OnFitSplitTorsion	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitSplitTorsion()$/;"	f	class:MIGLWidget
OnFitSurfaceExtended	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitSurfaceExtended()$/;"	f	class:MIGLWidget
OnFitSurfaceNone	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitSurfaceNone()$/;"	f	class:MIGLWidget
OnFitSurfaceProbe	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitSurfaceProbe()$/;"	f	class:MIGLWidget
OnFitSurfaceVdw	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitSurfaceVdw()$/;"	f	class:MIGLWidget
OnFitTorsion	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitTorsion()$/;"	f	class:MIGLWidget
OnFitTranslate	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitTranslate()$/;"	f	class:MIGLWidget
OnFitUndo	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFitUndo()$/;"	f	class:MIGLWidget
OnFlipPeptide	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFlipPeptide()$/;"	f	class:MIGLWidget
OnFullScreen	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnFullScreen()$/;"	f	class:MIGLWidget
OnGLFormat	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnGLFormat()$/;"	f	class:MIMainWindow
OnGenerateConformers	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnGenerateConformers()$/;"	f	class:DictEditCanvas
OnGeomAddsinglehbond	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnGeomAddsinglehbond()$/;"	f	class:MIGLWidget
OnGeomBond	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnGeomBond()$/;"	f	class:MIGLWidget
OnGeomClearhbonds	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnGeomClearhbonds()$/;"	f	class:MIGLWidget
OnGeomClearneighbours	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnGeomClearneighbours()$/;"	f	class:MIGLWidget
OnGeomHbonds	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnGeomHbonds()$/;"	f	class:MIGLWidget
OnGeomNeighbours	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnGeomNeighbours()$/;"	f	class:MIGLWidget
OnGeomUnbond	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnGeomUnbond()$/;"	f	class:MIGLWidget
OnGeometryAngle	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnGeometryAngle()$/;"	f	class:MIGLWidget
OnGeometryDistance	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnGeometryDistance()$/;"	f	class:MIGLWidget
OnGeometryTorsion	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnGeometryTorsion()$/;"	f	class:MIGLWidget
OnGoToResidueReturnPressed	apps/MIFit/ui/ModelsView.cpp	/^void ModelsView::OnGoToResidueReturnPressed()$/;"	f	class:ModelsView
OnGotoCter	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnGotoCter()$/;"	f	class:MIGLWidget
OnGotoFitalltoscreen	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnGotoFitalltoscreen()$/;"	f	class:MIGLWidget
OnGotoFittoscreen	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnGotoFittoscreen()$/;"	f	class:MIGLWidget
OnGotoGotoxyz	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnGotoGotoxyz()$/;"	f	class:MIGLWidget
OnGotoNter	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnGotoNter()$/;"	f	class:MIGLWidget
OnGotoZoomiin	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnGotoZoomiin()$/;"	f	class:MIGLWidget
OnGotoZoomout	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnGotoZoomout()$/;"	f	class:MIGLWidget
OnHardwareStereo	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnHardwareStereo()$/;"	f	class:MIGLWidget
OnHelp	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnHelp()$/;"	f	class:MIMainWindow
OnHideModel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnHideModel()$/;"	f	class:MIGLWidget
OnHideSidechainAtoms	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnHideSidechainAtoms()$/;"	f	class:MIGLWidget
OnHideTool	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnHideTool()$/;"	f	class:MIMainWindow
OnIncludeAtomInPlane	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnIncludeAtomInPlane()$/;"	f	class:DictEditCanvas
OnIncludeAtomsInPlane	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnIncludeAtomsInPlane()$/;"	f	class:DictEditCanvas
OnIncreasePersp	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnIncreasePersp()$/;"	f	class:MIGLWidget
OnInvertCenter	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnInvertCenter()$/;"	f	class:DictEditCanvas
OnInvertChiralCenter	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnInvertChiralCenter()$/;"	f	class:MIGLWidget
OnItemActivated	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::OnItemActivated(QTreeWidgetItem *item, int)$/;"	f	class:DisplayTree
OnItemActivated	apps/MIFit/ui/JobsView.cpp	/^void JobsTree::OnItemActivated(QTreeWidgetItem*, int)$/;"	f	class:JobsTree
OnItemActivated	apps/MIFit/ui/ModelsView.cpp	/^void AtomsTree::OnItemActivated(QTreeWidgetItem *item, int)$/;"	f	class:AtomsTree
OnItemActivated	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::OnItemActivated(QTreeWidgetItem *item, int)$/;"	f	class:ModelsTree
OnItemActivated	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::OnItemActivated(QTreeWidgetItem *item, int)$/;"	f	class:ResiduesTree
OnItemClicked	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::OnItemClicked(QTreeWidgetItem*, int)$/;"	f	class:DisplayTree
OnItemClicked	apps/MIFit/ui/JobsView.cpp	/^void JobsTree::OnItemClicked(QTreeWidgetItem*, int)$/;"	f	class:JobsTree
OnItemClicked	apps/MIFit/ui/ModelsView.cpp	/^void AtomsTree::OnItemClicked(QTreeWidgetItem *item, int)$/;"	f	class:AtomsTree
OnItemClicked	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::OnItemClicked(QTreeWidgetItem *item, int)$/;"	f	class:ModelsTree
OnItemClicked	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::OnItemClicked(QTreeWidgetItem *item, int)$/;"	f	class:ResiduesTree
OnItemPressed	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::OnItemPressed(QTreeWidgetItem *id, int)$/;"	f	class:DisplayTree
OnItemPressed	apps/MIFit/ui/JobsView.cpp	/^void JobsTree::OnItemPressed(QTreeWidgetItem *id, int)$/;"	f	class:JobsTree
OnKeyDown	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::OnKeyDown(unsigned int nChar, Qt::KeyboardModifiers modifiers)$/;"	f	class:MIGLWidget
OnLButtonDblClk	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnLButtonDblClk()$/;"	f	class:MIGLWidget
OnLabelEveryNth	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnLabelEveryNth()$/;"	f	class:MIGLWidget
OnLoadDictAppend	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnLoadDictAppend()$/;"	f	class:MIMainWindow
OnLoadDictReplace	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnLoadDictReplace()$/;"	f	class:MIMainWindow
OnLoadLigCif	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnLoadLigCif()$/;"	f	class:MIMainWindow
OnLoadLigMol	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnLoadLigMol()$/;"	f	class:MIMainWindow
OnLoadLigPdb	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnLoadLigPdb()$/;"	f	class:MIMainWindow
OnLoadLigSmi	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnLoadLigSmi()$/;"	f	class:MIMainWindow
OnLoadLigand	apps/MIFit/ui/MIMainWindow.cpp	/^std::string MIMainWindow::OnLoadLigand(std::string wildcard, std::string filename, std::string smiles, std::string code)$/;"	f	class:MIMainWindow
OnManageCrystals	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnManageCrystals()$/;"	f	class:MIMainWindow
OnMapAddFree	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnMapAddFree()$/;"	f	class:MIGLWidget
OnMapContour	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnMapContour()$/;"	f	class:MIGLWidget
OnMapContourLevels	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnMapContourLevels()$/;"	f	class:MIGLWidget
OnMapFFT	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnMapFFT()$/;"	f	class:MIGLWidget
OnMapFcChange	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::OnMapFcChange(unsigned int num)$/;"	f	class:PhaseFileLoadDialog
OnMapFoChange	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::OnMapFoChange(unsigned int num)$/;"	f	class:PhaseFileLoadDialog
OnMapFomChange	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::OnMapFomChange(unsigned int num)$/;"	f	class:PhaseFileLoadDialog
OnMapLoadfromfile	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnMapLoadfromfile()$/;"	f	class:MIGLWidget
OnMapLoadfromphsfile	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnMapLoadfromphsfile()$/;"	f	class:MIGLWidget
OnMapPhiChange	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::OnMapPhiChange(unsigned int num)$/;"	f	class:PhaseFileLoadDialog
OnMapReindex	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnMapReindex()$/;"	f	class:MIGLWidget
OnMapSFCalc	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnMapSFCalc()$/;"	f	class:MIGLWidget
OnMapSwitch	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnMapSwitch()$/;"	f	class:MIGLWidget
OnMapTypeChange	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::OnMapTypeChange(unsigned int num)$/;"	f	class:PhaseFileLoadDialog
OnMarkAlpha	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnMarkAlpha()$/;"	f	class:MIGLWidget
OnMarkBeta	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnMarkBeta()$/;"	f	class:MIGLWidget
OnMenuValidate	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnMenuValidate()$/;"	f	class:MIMainWindow
OnMouseMove	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnMouseMove(QPoint point, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers)$/;"	f	class:MIGLWidget
OnMousePress	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnMousePress(QPoint pos, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers)$/;"	f	class:MIGLWidget
OnMouseRelease	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnMouseRelease(QPoint pos, Qt::MouseButtons buttons, Qt::KeyboardModifiers modifiers)$/;"	f	class:MIGLWidget
OnMoveAnnotationAtom	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnMoveAnnotationAtom()$/;"	f	class:MIGLWidget
OnMoveAnnotationCenter	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnMoveAnnotationCenter()$/;"	f	class:MIGLWidget
OnNew	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnNew()$/;"	f	class:MIMainWindow
OnNewDocument	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::OnNewDocument()$/;"	f	class:MIGLWidget
OnNewModel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnNewModel()$/;"	f	class:MIGLWidget
OnNextBatonPosition	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnNextBatonPosition()$/;"	f	class:MIGLWidget
OnNextConformer	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnNextConformer()$/;"	f	class:DictEditCanvas
OnObjectAtomColor	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectAtomColor()$/;"	f	class:MIGLWidget
OnObjectAtomRadius	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectAtomRadius()$/;"	f	class:MIGLWidget
OnObjectAtomsColor	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectAtomsColor()$/;"	f	class:MIGLWidget
OnObjectAtomsRadius	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectAtomsRadius()$/;"	f	class:MIGLWidget
OnObjectBackboneribbon	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectBackboneribbon()$/;"	f	class:MIGLWidget
OnObjectClearribbon	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectClearribbon()$/;"	f	class:MIGLWidget
OnObjectClearstack	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectClearstack()$/;"	f	class:MIGLWidget
OnObjectRadiusisBall	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectRadiusisBall()$/;"	f	class:MIGLWidget
OnObjectRadiusisCpk	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectRadiusisCpk()$/;"	f	class:MIGLWidget
OnObjectRadiusisCylinder	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectRadiusisCylinder()$/;"	f	class:MIGLWidget
OnObjectResidueColor	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectResidueColor()$/;"	f	class:MIGLWidget
OnObjectResidueRadius	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectResidueRadius()$/;"	f	class:MIGLWidget
OnObjectResidueTurnoff	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectResidueTurnoff()$/;"	f	class:MIGLWidget
OnObjectResiduerangeColor	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectResiduerangeColor()$/;"	f	class:MIGLWidget
OnObjectResiduerangeRadius	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectResiduerangeRadius()$/;"	f	class:MIGLWidget
OnObjectResiduerangeTurnoff	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectResiduerangeTurnoff()$/;"	f	class:MIGLWidget
OnObjectResiduesColor	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectResiduesColor()$/;"	f	class:MIGLWidget
OnObjectResiduesRadius	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectResiduesRadius()$/;"	f	class:MIGLWidget
OnObjectResiduesTurnoff	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectResiduesTurnoff()$/;"	f	class:MIGLWidget
OnObjectShowresidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectShowresidue()$/;"	f	class:MIGLWidget
OnObjectShowresiduerange	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectShowresiduerange()$/;"	f	class:MIGLWidget
OnObjectShowresidues	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectShowresidues()$/;"	f	class:MIGLWidget
OnObjectShowsidechain	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectShowsidechain()$/;"	f	class:MIGLWidget
OnObjectShowsidechainrange	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectShowsidechainrange()$/;"	f	class:MIGLWidget
OnObjectShowsidechains	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectShowsidechains()$/;"	f	class:MIGLWidget
OnObjectStackDeletetopitem	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectStackDeletetopitem()$/;"	f	class:MIGLWidget
OnObjectStackExpandtop2allatomsinrange	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectStackExpandtop2allatomsinrange()$/;"	f	class:MIGLWidget
OnObjectStackExpandtop2residues	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectStackExpandtop2residues()$/;"	f	class:MIGLWidget
OnObjectStackExpandtopallatomsinresidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectStackExpandtopallatomsinresidue()$/;"	f	class:MIGLWidget
OnObjectSurfaceAtoms	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectSurfaceAtoms()$/;"	f	class:MIGLWidget
OnObjectSurfaceClearsurface	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectSurfaceClearsurface()$/;"	f	class:MIGLWidget
OnObjectSurfaceSpherearoundatom	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectSurfaceSpherearoundatom()$/;"	f	class:MIGLWidget
OnObjectSurfaceatom	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectSurfaceatom()$/;"	f	class:MIGLWidget
OnObjectSurfaceresidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectSurfaceresidue()$/;"	f	class:MIGLWidget
OnObjectSurfaceresidues	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectSurfaceresidues()$/;"	f	class:MIGLWidget
OnObjectWhenshowncolor	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectWhenshowncolor()$/;"	f	class:MIGLWidget
OnObjectsAllatoms	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnObjectsAllatoms()$/;"	f	class:MIGLWidget
OnOk	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnOk()$/;"	f	class:DictEditCanvas
OnOpenDocument	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::OnOpenDocument(const std::string &path)$/;"	f	class:MIGLWidget
OnPolyAla	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnPolyAla()$/;"	f	class:MIGLWidget
OnPolyAlaChain	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnPolyAlaChain()$/;"	f	class:MIGLWidget
OnPopupMenu	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnPopupMenu(QAction *action)$/;"	f	class:DictEditCanvas
OnPreferences	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnPreferences()$/;"	f	class:MIMainWindow
OnPrevConformer	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnPrevConformer()$/;"	f	class:DictEditCanvas
OnPrint	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnPrint()$/;"	f	class:MIGLWidget
OnPrint	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnPrint()$/;"	f	class:MIMainWindow
OnRamachandranPlotShowAllowed	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRamachandranPlotShowAllowed()$/;"	f	class:MIGLWidget
OnRefiAccept	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRefiAccept()$/;"	f	class:MIGLWidget
OnRefiCancel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRefiCancel()$/;"	f	class:MIGLWidget
OnRefiLigandFit	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRefiLigandFit()$/;"	f	class:MIGLWidget
OnRefiMolecule	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRefiMolecule()$/;"	f	class:MIGLWidget
OnRefiOptions	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRefiOptions()$/;"	f	class:MIGLWidget
OnRefiRange	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRefiRange()$/;"	f	class:MIGLWidget
OnRefiReDo	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRefiReDo()$/;"	f	class:MIGLWidget
OnRefiRegion	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRefiRegion()$/;"	f	class:MIGLWidget
OnRefiReset	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRefiReset()$/;"	f	class:MIGLWidget
OnRefiResidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRefiResidue()$/;"	f	class:MIGLWidget
OnRefiRigidBody	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRefiRigidBody()$/;"	f	class:MIGLWidget
OnRefiUndo	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRefiUndo()$/;"	f	class:MIGLWidget
OnRefine	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnRefine(int iterations)$/;"	f	class:DictEditCanvas
OnRemoveAtom	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnRemoveAtom()$/;"	f	class:DictEditCanvas
OnRemoveAtomFromPlane	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnRemoveAtomFromPlane()$/;"	f	class:DictEditCanvas
OnRemoveAtoms	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnRemoveAtoms()$/;"	f	class:DictEditCanvas
OnRemoveAtomsFromPlane	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnRemoveAtomsFromPlane()$/;"	f	class:DictEditCanvas
OnRemoveChiral	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnRemoveChiral()$/;"	f	class:DictEditCanvas
OnRemoveHydrogens	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnRemoveHydrogens()$/;"	f	class:DictEditCanvas
OnRemovePlane	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnRemovePlane()$/;"	f	class:DictEditCanvas
OnRenameAtom	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnRenameAtom()$/;"	f	class:DictEditCanvas
OnRenderBallandcylinder	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRenderBallandcylinder()$/;"	f	class:MIGLWidget
OnRenderBallsize	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRenderBallsize()$/;"	f	class:MIGLWidget
OnRenderLinesmooth	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRenderLinesmooth()$/;"	f	class:MIGLWidget
OnRenderSpacefilling	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRenderSpacefilling()$/;"	f	class:MIGLWidget
OnRenderSticks	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRenderSticks()$/;"	f	class:MIGLWidget
OnRenderTargetSize	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRenderTargetSize()$/;"	f	class:MIGLWidget
OnRenderingBallandstick	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRenderingBallandstick()$/;"	f	class:MIGLWidget
OnRenderingDepthcuedcolors	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRenderingDepthcuedcolors()$/;"	f	class:MIGLWidget
OnRenderingDepthcuedlinewidth	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRenderingDepthcuedlinewidth()$/;"	f	class:MIGLWidget
OnReplaceAll	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnReplaceAll()$/;"	f	class:MIGLWidget
OnReplaceFirst4	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnReplaceFirst4()$/;"	f	class:MIGLWidget
OnReplaceLast4	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnReplaceLast4()$/;"	f	class:MIGLWidget
OnReplaceMiddle3	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnReplaceMiddle3()$/;"	f	class:MIGLWidget
OnReplaceSequence	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnReplaceSequence()$/;"	f	class:MIGLWidget
OnRevertModel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRevertModel()$/;"	f	class:MIGLWidget
OnRibbonSecondaryStructure	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnRibbonSecondaryStructure()$/;"	f	class:MIGLWidget
OnSaveDict	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnSaveDict()$/;"	f	class:MIMainWindow
OnSaveDocument	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::OnSaveDocument(const std::string &pathname)$/;"	f	class:MIGLWidget
OnSaveModified	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::OnSaveModified()$/;"	f	class:MIGLWidget
OnSaveToCrystals	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::OnSaveToCrystals()$/;"	f	class:ModelsTree
OnSchematicSecondaryStructure	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSchematicSecondaryStructure()$/;"	f	class:MIGLWidget
OnScript	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnScript()$/;"	f	class:MIMainWindow
OnSecondaryStructureOptionsHelix	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSecondaryStructureOptionsHelix()$/;"	f	class:MIGLWidget
OnSecondaryStructureOptionsRandom	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSecondaryStructureOptionsRandom()$/;"	f	class:MIGLWidget
OnSecondaryStructureOptionsSheet	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSecondaryStructureOptionsSheet()$/;"	f	class:MIGLWidget
OnSecondaryStructureOptionsTube	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSecondaryStructureOptionsTube()$/;"	f	class:MIGLWidget
OnSecondaryStructureOptionsTurn	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSecondaryStructureOptionsTurn()$/;"	f	class:MIGLWidget
OnSequenceDeletegap	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSequenceDeletegap()$/;"	f	class:MIGLWidget
OnSequenceDeletelowergap	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSequenceDeletelowergap()$/;"	f	class:MIGLWidget
OnSequenceEnter	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSequenceEnter()$/;"	f	class:MIGLWidget
OnSequenceInsertgap	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSequenceInsertgap()$/;"	f	class:MIGLWidget
OnSequenceInsertlowergap	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSequenceInsertlowergap()$/;"	f	class:MIGLWidget
OnSequencePosition	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSequencePosition()$/;"	f	class:MIGLWidget
OnSequencePositionChain	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSequencePositionChain()$/;"	f	class:MIGLWidget
OnSequenceRead	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSequenceRead()$/;"	f	class:MIGLWidget
OnSequenceSave	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSequenceSave()$/;"	f	class:MIGLWidget
OnSequenceSaveModel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSequenceSaveModel()$/;"	f	class:MIGLWidget
OnSetAngle	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnSetAngle()$/;"	f	class:DictEditCanvas
OnSetBondLength	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnSetBondLength()$/;"	f	class:DictEditCanvas
OnSetBondLength2	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnSetBondLength2(float newideal)$/;"	f	class:DictEditCanvas
OnSetRibbonColors	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSetRibbonColors()$/;"	f	class:MIGLWidget
OnShowAllpickedatomsTurnoff	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnShowAllpickedatomsTurnoff()$/;"	f	class:MIGLWidget
OnShowAllpickedatomsTurnon	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnShowAllpickedatomsTurnon()$/;"	f	class:MIGLWidget
OnShowBackboneAsAtoms	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnShowBackboneAsAtoms()$/;"	f	class:MIGLWidget
OnShowBackboneAsCATrace	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnShowBackboneAsCATrace()$/;"	f	class:MIGLWidget
OnShowColorallatoms	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnShowColorallatoms()$/;"	f	class:MIGLWidget
OnShowHideBackbone	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnShowHideBackbone()$/;"	f	class:MIGLWidget
OnShowHideSymmAtoms	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnShowHideSymmAtoms()$/;"	f	class:MIGLWidget
OnShowHidehydrogens	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnShowHidehydrogens()$/;"	f	class:MIGLWidget
OnShowPickedatomTurnoff	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnShowPickedatomTurnoff()$/;"	f	class:MIGLWidget
OnShowPickedatomTurnon	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnShowPickedatomTurnon()$/;"	f	class:MIGLWidget
OnShowRadiusmodel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnShowRadiusmodel()$/;"	f	class:MIGLWidget
OnShowSaveSymmAtoms	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnShowSaveSymmAtoms()$/;"	f	class:MIGLWidget
OnShowShowwithinsphere	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnShowShowwithinsphere()$/;"	f	class:MIGLWidget
OnShowSidechainAtoms	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnShowSidechainAtoms()$/;"	f	class:MIGLWidget
OnShowSymmAtomsAsAtoms	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnShowSymmAtomsAsAtoms()$/;"	f	class:MIGLWidget
OnShowSymmAtomsAsCATrace	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnShowSymmAtomsAsCATrace()$/;"	f	class:MIGLWidget
OnShowTool	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnShowTool()$/;"	f	class:MIMainWindow
OnShowUndocolorradius	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnShowUndocolorradius()$/;"	f	class:MIGLWidget
OnSideChainTool	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnSideChainTool()$/;"	f	class:MIMainWindow
OnSolidSurfaceCommand	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSolidSurfaceCommand(QAction *action)$/;"	f	class:MIGLWidget
OnSplitterChanged	apps/MIFit/ui/ModelsView.cpp	/^void ModelsView::OnSplitterChanged(int, int)$/;"	f	class:ModelsView
OnStereoToggle	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnStereoToggle()$/;"	f	class:MIGLWidget
OnSurfaceSolvent	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnSurfaceSolvent()$/;"	f	class:MIGLWidget
OnTimer	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::OnTimer()$/;"	f	class:DictEditCanvas
OnToolTip	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnToolTip()$/;"	f	class:MIGLWidget
OnUpdateAddMarkAfter	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateAddMarkAfter(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateAddMarkBefore	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateAddMarkBefore(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateAddWater	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateAddWater(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateAnimateBlink	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateAnimateBlink(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateAnimateRock	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateAnimateRock(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateAnimateRoll	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateAnimateRoll(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateAnnotation	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateAnnotation(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateAutoCheckpointModel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateAutoCheckpointModel(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateCheckpointModel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateCheckpointModel(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateClearPentamer	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateClearPentamer(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateDecreasePersp	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateDecreasePersp(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateDeleteAtom	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateDeleteAtom(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateDimNonactiveModels	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateDimNonactiveModels(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateExportModel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateExportModel(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFindGeomErrors	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFindGeomErrors(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFindLigandDensity	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFindLigandDensity(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFindPentamer	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFindPentamer(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitApply	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitApply(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitAtoms	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitAtoms(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitCancel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitCancel(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitCentermode	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitCentermode(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitCleartorsion	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitCleartorsion(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitDeleteresidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitDeleteresidue(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitFitmolecule	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitFitmolecule(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitInsertresidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitInsertresidue(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitNextConfomer	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitNextConfomer(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitRange	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitRange(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitRedo	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitRedo(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitRenameresidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitRenameresidue(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitReplaceAndFit	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitReplaceAndFit(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitReplacewith	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitReplacewith(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitReset	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitReset(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitResidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitResidue(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitResidues	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitResidues(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitRotate	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitRotate(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitSetuptorsion	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitSetuptorsion(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitSingleatom	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitSingleatom(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitSplitFit	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitSplitFit(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitSplitTorsion	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitSplitTorsion(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitSurfaceExtended	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitSurfaceExtended(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitSurfaceNone	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitSurfaceNone(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitSurfaceProbe	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitSurfaceProbe(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitSurfaceVdw	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitSurfaceVdw(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitTorsion	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitTorsion(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitTranslate	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitTranslate(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFitUndo	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFitUndo(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateFlipPeptide	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFlipPeptide(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateForJobLimit	apps/MIFit/ui/tools.cpp	/^void Tools::OnUpdateForJobLimit()$/;"	f	class:Tools
OnUpdateFullScreen	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateFullScreen(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateGeomAddsinglehbond	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateGeomAddsinglehbond(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateGeomBond	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateGeomBond(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateGeomNeighbours	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateGeomNeighbours(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateGeomUnbond	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateGeomUnbond(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateGeometryAngle	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateGeometryAngle(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateGeometryDistance	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateGeometryDistance(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateGeometryTorsion	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateGeometryTorsion(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateGotoCter	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateGotoCter(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateGotoNter	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateGotoNter(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateHardwareStereo	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateHardwareStereo(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateHardwareStereo	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnUpdateHardwareStereo()$/;"	f	class:MIMainWindow
OnUpdateHideModel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateHideModel(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateInvertChiralCenter	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateInvertChiralCenter(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateLabelEveryNth	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateLabelEveryNth(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateLinethicknessFour	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateLinethicknessFour(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateLinethicknessOne	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateLinethicknessOne(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateLinethicknessThree	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateLinethicknessThree(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateLinethicknessTwo	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateLinethicknessTwo(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateMapContour	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateMapContour(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateMapContourLevels	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateMapContourLevels(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateMapFFT	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateMapFFT(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateMapReindex	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateMapReindex(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateMapSFCalc	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateMapSFCalc(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateMapSwitch	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateMapSwitch(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateMarkAlpha	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateMarkAlpha(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateMarkBeta	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateMarkBeta(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateMoveAnnotationAtom	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateMoveAnnotationAtom(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateMoveAnnotationCenter	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateMoveAnnotationCenter(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectAtomColor	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectAtomColor(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectAtomRadius	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectAtomRadius(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectAtomsColor	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectAtomsColor(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectAtomsRadius	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectAtomsRadius(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectRadiusisBall	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectRadiusisBall(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectRadiusisCpk	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectRadiusisCpk(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectRadiusisCylinder	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectRadiusisCylinder(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectResidueColor	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectResidueColor(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectResidueRadius	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectResidueRadius(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectResidueTurnoff	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectResidueTurnoff(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectResiduerangeColor	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectResiduerangeColor(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectResiduerangeRadius	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectResiduerangeRadius(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectResiduerangeTurnoff	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectResiduerangeTurnoff(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectResiduesColor	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectResiduesColor(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectResiduesRadius	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectResiduesRadius(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectResiduesTurnoff	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectResiduesTurnoff(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectShowresidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectShowresidue(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectShowresiduerange	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectShowresiduerange(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectShowresidues	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectShowresidues(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectShowsidechain	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectShowsidechain(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectShowsidechainrange	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectShowsidechainrange(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectShowsidechains	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectShowsidechains(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectStackExpandtop2allatomsinrange	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectStackExpandtop2allatomsinrange(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectStackExpandtop2residues	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectStackExpandtop2residues(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectStackExpandtopallatomsinresidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectStackExpandtopallatomsinresidue(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectSurfaceAtom	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectSurfaceAtom(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectSurfaceSpherearoundatom	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectSurfaceSpherearoundatom(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectSurfaceatoms	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectSurfaceatoms(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectSurfaceresidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectSurfaceresidue(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectSurfaceresidues	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectSurfaceresidues(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateObjectWhenshowncolor	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateObjectWhenshowncolor(QAction *action)$/;"	f	class:MIGLWidget
OnUpdatePolyAla	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdatePolyAla(QAction *action)$/;"	f	class:MIGLWidget
OnUpdatePolyAlaChain	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdatePolyAlaChain(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRamachandranPlotShowAllowed	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRamachandranPlotShowAllowed(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRefiAccept	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRefiAccept(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRefiCancel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRefiCancel(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRefiLigandFit	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRefiLigandFit(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRefiMolecule	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRefiMolecule(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRefiRange	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRefiRange(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRefiRedo	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRefiRedo(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRefiRegion	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRefiRegion(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRefiReset	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRefiReset(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRefiResidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRefiResidue(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRefiRigidBody	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRefiRigidBody(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRefiUndo	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRefiUndo(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRenderBallandcylinder	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRenderBallandcylinder(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRenderBallsize	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRenderBallsize(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRenderLinesmooth	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRenderLinesmooth(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRenderSpacefilling	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRenderSpacefilling(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRenderSticks	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRenderSticks(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRenderingBallandstick	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRenderingBallandstick(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRenderingDepthcuedcolors	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRenderingDepthcuedcolors(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRenderingDepthcuedlinewidth	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRenderingDepthcuedlinewidth(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateReplaceAll	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateReplaceAll(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateReplaceFirst4	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateReplaceFirst4(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateReplaceLast4	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateReplaceLast4(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateReplaceMiddle3	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateReplaceMiddle3(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateReplaceSequence	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateReplaceSequence(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateRevertModel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateRevertModel(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateSequenceDeletegap	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateSequenceDeletegap(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateSequenceDeletelowergap	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateSequenceDeletelowergap(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateSequenceEnter	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateSequenceEnter(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateSequenceInsertgap	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateSequenceInsertgap(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateSequenceInsertlowergap	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateSequenceInsertlowergap(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateSequencePosition	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateSequencePosition(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateSequencePositionChain	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateSequencePositionChain(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateSequenceRead	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateSequenceRead(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateSequenceSave	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateSequenceSave(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateSequenceSaveModel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateSequenceSaveModel(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateShowAllpickedatomsTurnoff	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateShowAllpickedatomsTurnoff(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateShowAllpickedatomsTurnon	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateShowAllpickedatomsTurnon(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateShowColorallatoms	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateShowColorallatoms(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateShowHidehydrogens	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateShowHidehydrogens(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateShowPickedatomTurnoff	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateShowPickedatomTurnoff(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateShowPickedatomTurnon	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateShowPickedatomTurnon(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateShowRadiusmodel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateShowRadiusmodel(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateShowSaveSymmAtoms	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateShowSaveSymmAtoms(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateShowUndocolorradius	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateShowUndocolorradius(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateStereoToggle	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateStereoToggle(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateStereoToggle	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OnUpdateStereoToggle()$/;"	f	class:MIMainWindow
OnUpdateSurfaceSolvent	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateSurfaceSolvent(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateViewAtomstack	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateViewAtomstack(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateViewChiralCenters	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateViewChiralCenters(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateViewContacts	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateViewContacts(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateViewGnomon	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateViewGnomon(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateViewLabels	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateViewLabels(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateViewOrthonormal	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateViewOrthonormal(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateViewTopview	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateViewTopview(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateViewUndo	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateViewUndo(QAction *action)$/;"	f	class:MIGLWidget
OnUpdateViewUnitCell	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnUpdateViewUnitCell(QAction *action)$/;"	f	class:MIGLWidget
OnVdwDotSurface	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnVdwDotSurface()$/;"	f	class:MIGLWidget
OnViewAtomstack	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnViewAtomstack()$/;"	f	class:MIGLWidget
OnViewChiralCenters	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnViewChiralCenters()$/;"	f	class:MIGLWidget
OnViewClipplanes	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnViewClipplanes()$/;"	f	class:MIGLWidget
OnViewContacts	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnViewContacts()$/;"	f	class:MIGLWidget
OnViewGnomon	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnViewGnomon()$/;"	f	class:MIGLWidget
OnViewLabels	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnViewLabels()$/;"	f	class:MIGLWidget
OnViewLoad	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnViewLoad()$/;"	f	class:MIGLWidget
OnViewOrthonormal	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnViewOrthonormal()$/;"	f	class:MIGLWidget
OnViewRotatey90	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnViewRotatey90()$/;"	f	class:MIGLWidget
OnViewRotateyminus	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnViewRotateyminus()$/;"	f	class:MIGLWidget
OnViewSave	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnViewSave()$/;"	f	class:MIGLWidget
OnViewSlabin	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnViewSlabin()$/;"	f	class:MIGLWidget
OnViewSlabout	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnViewSlabout()$/;"	f	class:MIGLWidget
OnViewTopview	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnViewTopview()$/;"	f	class:MIGLWidget
OnViewUndo	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnViewUndo()$/;"	f	class:MIGLWidget
OnViewUnitCell	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OnViewUnitCell()$/;"	f	class:MIGLWidget
OpenAnyFile	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::OpenAnyFile(const std::string &fname)$/;"	f	class:MIGLWidget
OpenFiles	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::OpenFiles(const std::vector<std::string> &files, bool newWin)$/;"	f	class:MIMainWindow
OpenJobResults	apps/MIFit/jobs/OpenJobResults.h	/^class OpenJobResults$/;"	c
OpenResults	apps/MIFit/ui/JobsView.cpp	/^void JobsTree::OpenResults()$/;"	f	class:JobsTree
Optimize	libs/chemlib/MIMolDictionary.h	/^        const unsigned int Optimize = 3;$/;"	m	namespace:chemlib::Refine_Level
OrigRamaData	apps/MIFit/ui/RamaPlot.cpp	/^OrigRamaData::OrigRamaData()$/;"	f	class:OrigRamaData
OrigRamaData	apps/MIFit/ui/rama.h	/^class OrigRamaData : public RamaDataBase$/;"	c
Origin	libs/chemlib/Box.cpp	/^std::vector<float> Box::Origin()$/;"	f	class:chemlib::Box
Other	apps/MIFit/core/MoleculeType.h	/^        Other$/;"	e	enum:MoleculeType::__anon2
Other	libs/chemlib/Ligand.h	/^            Other$/;"	e	enum:chemlib::Ligand::__anon28
P	libs/chemlib/RefmacType.h	/^    const unsigned int P    = 54;$/;"	m	namespace:RefmacType
P1	libs/chemlib/RefmacType.h	/^    const unsigned int P1   = 55;$/;"	m	namespace:RefmacType
PA	libs/chemlib/RefmacType.h	/^    const unsigned int PA   = 122;$/;"	m	namespace:RefmacType
PARTIALDOUBLEBOND	libs/chemlib/model.h	23;"	d
PATH_MAX	libs/util/util.cpp	/^const int PATH_MAX = MAX_PATH;$/;"	v
PATH_MAX	libs/util/util.cpp	11;"	d	file:
PATH_SEPARATOR	libs/cmtz/ccp4_sysdep.h	200;"	d
PATH_SEPARATOR	libs/cmtz/ccp4_sysdep.h	203;"	d
PB	libs/chemlib/RefmacType.h	/^    const unsigned int PB   = 93;$/;"	m	namespace:RefmacType
PBLACK	apps/MIFit/core/Colors.cpp	/^const int Colors::PBLACK = 0;$/;"	m	class:Colors	file:
PBLACK	apps/MIFit/core/Colors.h	/^    static const int PBLACK;$/;"	m	class:Colors
PBLUE	apps/MIFit/core/Colors.cpp	/^const int Colors::PBLUE = 30;$/;"	m	class:Colors	file:
PBLUE	apps/MIFit/core/Colors.h	/^    static const int PBLUE;$/;"	m	class:Colors
PBROWN	apps/MIFit/core/Colors.cpp	/^const int Colors::PBROWN = 90;$/;"	m	class:Colors	file:
PBROWN	apps/MIFit/core/Colors.h	/^    static const int PBROWN;$/;"	m	class:Colors
PCONTOUR1	apps/MIFit/core/Colors.cpp	/^const int Colors::PCONTOUR1 = 310;$/;"	m	class:Colors	file:
PCONTOUR1	apps/MIFit/core/Colors.h	/^    static const int PCONTOUR1;$/;"	m	class:Colors
PCONTOUR10	apps/MIFit/core/Colors.cpp	/^const int Colors::PCONTOUR10 = 400;$/;"	m	class:Colors	file:
PCONTOUR10	apps/MIFit/core/Colors.h	/^    static const int PCONTOUR10;$/;"	m	class:Colors
PCONTOUR2	apps/MIFit/core/Colors.cpp	/^const int Colors::PCONTOUR2 = 320;$/;"	m	class:Colors	file:
PCONTOUR2	apps/MIFit/core/Colors.h	/^    static const int PCONTOUR2;$/;"	m	class:Colors
PCONTOUR3	apps/MIFit/core/Colors.cpp	/^const int Colors::PCONTOUR3 = 330;$/;"	m	class:Colors	file:
PCONTOUR3	apps/MIFit/core/Colors.h	/^    static const int PCONTOUR3;$/;"	m	class:Colors
PCONTOUR4	apps/MIFit/core/Colors.cpp	/^const int Colors::PCONTOUR4 = 340;$/;"	m	class:Colors	file:
PCONTOUR4	apps/MIFit/core/Colors.h	/^    static const int PCONTOUR4;$/;"	m	class:Colors
PCONTOUR5	apps/MIFit/core/Colors.cpp	/^const int Colors::PCONTOUR5 = 350;$/;"	m	class:Colors	file:
PCONTOUR5	apps/MIFit/core/Colors.h	/^    static const int PCONTOUR5;$/;"	m	class:Colors
PCONTOUR6	apps/MIFit/core/Colors.cpp	/^const int Colors::PCONTOUR6 = 360;$/;"	m	class:Colors	file:
PCONTOUR6	apps/MIFit/core/Colors.h	/^    static const int PCONTOUR6;$/;"	m	class:Colors
PCONTOUR7	apps/MIFit/core/Colors.cpp	/^const int Colors::PCONTOUR7 = 370;$/;"	m	class:Colors	file:
PCONTOUR7	apps/MIFit/core/Colors.h	/^    static const int PCONTOUR7;$/;"	m	class:Colors
PCONTOUR8	apps/MIFit/core/Colors.cpp	/^const int Colors::PCONTOUR8 = 380;$/;"	m	class:Colors	file:
PCONTOUR8	apps/MIFit/core/Colors.h	/^    static const int PCONTOUR8;$/;"	m	class:Colors
PCONTOUR9	apps/MIFit/core/Colors.cpp	/^const int Colors::PCONTOUR9 = 390;$/;"	m	class:Colors	file:
PCONTOUR9	apps/MIFit/core/Colors.h	/^    static const int PCONTOUR9;$/;"	m	class:Colors
PCUSTOM1	apps/MIFit/core/Colors.cpp	/^const int Colors::PCUSTOM1 = 110;$/;"	m	class:Colors	file:
PCUSTOM1	apps/MIFit/core/Colors.h	/^    static const int PCUSTOM1;$/;"	m	class:Colors
PCUSTOM10	apps/MIFit/core/Colors.cpp	/^const int Colors::PCUSTOM10 = 200;$/;"	m	class:Colors	file:
PCUSTOM10	apps/MIFit/core/Colors.h	/^    static const int PCUSTOM10;$/;"	m	class:Colors
PCUSTOM2	apps/MIFit/core/Colors.cpp	/^const int Colors::PCUSTOM2 = 120;$/;"	m	class:Colors	file:
PCUSTOM2	apps/MIFit/core/Colors.h	/^    static const int PCUSTOM2;$/;"	m	class:Colors
PCUSTOM3	apps/MIFit/core/Colors.cpp	/^const int Colors::PCUSTOM3 = 130;$/;"	m	class:Colors	file:
PCUSTOM3	apps/MIFit/core/Colors.h	/^    static const int PCUSTOM3;$/;"	m	class:Colors
PCUSTOM4	apps/MIFit/core/Colors.cpp	/^const int Colors::PCUSTOM4 = 140;$/;"	m	class:Colors	file:
PCUSTOM4	apps/MIFit/core/Colors.h	/^    static const int PCUSTOM4;$/;"	m	class:Colors
PCUSTOM5	apps/MIFit/core/Colors.cpp	/^const int Colors::PCUSTOM5 = 150;$/;"	m	class:Colors	file:
PCUSTOM5	apps/MIFit/core/Colors.h	/^    static const int PCUSTOM5;$/;"	m	class:Colors
PCUSTOM6	apps/MIFit/core/Colors.cpp	/^const int Colors::PCUSTOM6 = 160;$/;"	m	class:Colors	file:
PCUSTOM6	apps/MIFit/core/Colors.h	/^    static const int PCUSTOM6;$/;"	m	class:Colors
PCUSTOM7	apps/MIFit/core/Colors.cpp	/^const int Colors::PCUSTOM7 = 170;$/;"	m	class:Colors	file:
PCUSTOM7	apps/MIFit/core/Colors.h	/^    static const int PCUSTOM7;$/;"	m	class:Colors
PCUSTOM8	apps/MIFit/core/Colors.cpp	/^const int Colors::PCUSTOM8 = 180;$/;"	m	class:Colors	file:
PCUSTOM8	apps/MIFit/core/Colors.h	/^    static const int PCUSTOM8;$/;"	m	class:Colors
PCUSTOM9	apps/MIFit/core/Colors.cpp	/^const int Colors::PCUSTOM9 = 190;$/;"	m	class:Colors	file:
PCUSTOM9	apps/MIFit/core/Colors.h	/^    static const int PCUSTOM9;$/;"	m	class:Colors
PCYAN	apps/MIFit/core/Colors.cpp	/^const int Colors::PCYAN = 40;$/;"	m	class:Colors	file:
PCYAN	apps/MIFit/core/Colors.h	/^    static const int PCYAN;$/;"	m	class:Colors
PD	libs/chemlib/RefmacType.h	/^    const unsigned int PD   = 144;$/;"	m	namespace:RefmacType
PDB	apps/MIFit/core/MoleculeType.h	/^        PDB,$/;"	e	enum:MoleculeType::__anon2
PDB	libs/chemlib/Ligand.h	/^            PDB,$/;"	e	enum:chemlib::Ligand::__anon28
PDB	libs/chemlib/PDB.cpp	/^PDB::PDB()$/;"	f	class:chemlib::PDB
PDB	libs/chemlib/PDB.h	/^    class PDB : public Reader, public Writer$/;"	c	namespace:chemlib
PDEPTH	apps/MIFit/core/Colors.cpp	/^const int Colors::PDEPTH = 10;$/;"	m	class:Colors	file:
PDEPTH	apps/MIFit/core/Colors.h	/^    static const int PDEPTH;$/;"	m	class:Colors
PEAK	libs/map/PEAK.h	/^} PEAK;$/;"	t	typeref:struct:peak
PEPTIDE	apps/MIFit/core/RESIDUE.h	19;"	d
PEPTIDE	libs/chemlib/model.h	81;"	d
PGREEN	apps/MIFit/core/Colors.cpp	/^const int Colors::PGREEN = 50;$/;"	m	class:Colors	file:
PGREEN	apps/MIFit/core/Colors.h	/^    static const int PGREEN;$/;"	m	class:Colors
PG_symbol	libs/map/CMapHeaderBase.h	/^    std::string PG_symbol;$/;"	m	class:CMapHeaderBase
PHASE_FILE_LOAD_DIALOG_H	apps/MIFit/ui/PhaseFileLoadDialog.h	2;"	d
PI	libs/math/mathlib.h	19;"	d
PINK	apps/MIFit/core/Colors.cpp	/^const int Colors::PINK = 7;$/;"	m	class:Colors	file:
PINK	apps/MIFit/core/Colors.h	/^    static const int PINK;$/;"	m	class:Colors
PLANE	libs/chemlib/PLANE.h	/^        PLANE() : atoms(NULL), natoms(0), tolerance(0.005f), res(NULL)$/;"	f	class:chemlib::PLANE
PLANE	libs/chemlib/PLANE.h	/^    class PLANE$/;"	c	namespace:chemlib
PLANEDICT	libs/chemlib/PLANE.h	/^        PLANEDICT()$/;"	f	class:chemlib::PLANEDICT
PLANEDICT	libs/chemlib/PLANE.h	/^    class PLANEDICT$/;"	c	namespace:chemlib
PLANE_TOLERANCE	libs/chemlib/mol_util.h	/^    const float PLANE_TOLERANCE = 0.05F;$/;"	m	namespace:MolFrom3D
PLINE	libs/math/PLINE.h	/^class PLINE$/;"	c
PList	apps/MIFit/ui/MIGLWidget.h	/^    std::vector<MAP_POINT> PList;$/;"	m	class:MIGLWidget
PList	libs/map/EMapBase.h	/^    std::vector<MAP_POINT> PList;$/;"	m	class:EMapBase
PMAGENTA	apps/MIFit/core/Colors.cpp	/^const int Colors::PMAGENTA = 60;$/;"	m	class:Colors	file:
PMAGENTA	apps/MIFit/core/Colors.h	/^    static const int PMAGENTA;$/;"	m	class:Colors
PMAP1	apps/MIFit/core/Colors.cpp	/^const int Colors::PMAP1 = 210;$/;"	m	class:Colors	file:
PMAP1	apps/MIFit/core/Colors.h	/^    static const int PMAP1;$/;"	m	class:Colors
PMAP10	apps/MIFit/core/Colors.cpp	/^const int Colors::PMAP10 = 300;$/;"	m	class:Colors	file:
PMAP10	apps/MIFit/core/Colors.h	/^    static const int PMAP10;$/;"	m	class:Colors
PMAP2	apps/MIFit/core/Colors.cpp	/^const int Colors::PMAP2 = 220;$/;"	m	class:Colors	file:
PMAP2	apps/MIFit/core/Colors.h	/^    static const int PMAP2;$/;"	m	class:Colors
PMAP3	apps/MIFit/core/Colors.cpp	/^const int Colors::PMAP3 = 230;$/;"	m	class:Colors	file:
PMAP3	apps/MIFit/core/Colors.h	/^    static const int PMAP3;$/;"	m	class:Colors
PMAP4	apps/MIFit/core/Colors.cpp	/^const int Colors::PMAP4 = 240;$/;"	m	class:Colors	file:
PMAP4	apps/MIFit/core/Colors.h	/^    static const int PMAP4;$/;"	m	class:Colors
PMAP5	apps/MIFit/core/Colors.cpp	/^const int Colors::PMAP5 = 250;$/;"	m	class:Colors	file:
PMAP5	apps/MIFit/core/Colors.h	/^    static const int PMAP5;$/;"	m	class:Colors
PMAP6	apps/MIFit/core/Colors.cpp	/^const int Colors::PMAP6 = 260;$/;"	m	class:Colors	file:
PMAP6	apps/MIFit/core/Colors.h	/^    static const int PMAP6;$/;"	m	class:Colors
PMAP7	apps/MIFit/core/Colors.cpp	/^const int Colors::PMAP7 = 270;$/;"	m	class:Colors	file:
PMAP7	apps/MIFit/core/Colors.h	/^    static const int PMAP7;$/;"	m	class:Colors
PMAP8	apps/MIFit/core/Colors.cpp	/^const int Colors::PMAP8 = 280;$/;"	m	class:Colors	file:
PMAP8	apps/MIFit/core/Colors.h	/^    static const int PMAP8;$/;"	m	class:Colors
PMAP9	apps/MIFit/core/Colors.cpp	/^const int Colors::PMAP9 = 290;$/;"	m	class:Colors	file:
PMAP9	apps/MIFit/core/Colors.h	/^    static const int PMAP9;$/;"	m	class:Colors
PO	libs/chemlib/RefmacType.h	/^    const unsigned int PO   = 163;$/;"	m	namespace:RefmacType
POLAR	libs/cmtz/ccp4_types.h	/^               } POLAR;                \/* a complex number *\/$/;"	t	typeref:struct:__anon19
POLAR	libs/umtz/library.h	/^} POLAR;                               \/* a complex number *\/$/;"	t	typeref:struct:__anon58
PORANGE	apps/MIFit/core/Colors.cpp	/^const int Colors::PORANGE = 80;$/;"	m	class:Colors	file:
PORANGE	apps/MIFit/core/Colors.h	/^    static const int PORANGE;$/;"	m	class:Colors
PPINK	apps/MIFit/core/Colors.cpp	/^const int Colors::PPINK = 70;$/;"	m	class:Colors	file:
PPINK	apps/MIFit/core/Colors.h	/^    static const int PPINK;$/;"	m	class:Colors
PR	libs/chemlib/RefmacType.h	/^    const unsigned int PR   = 108;$/;"	m	namespace:RefmacType
PRAD	libs/jacgrid/isosurface.cpp	/^static float PRAD;$/;"	v	file:
PRED	apps/MIFit/core/Colors.cpp	/^const int Colors::PRED = 20;$/;"	m	class:Colors	file:
PRED	apps/MIFit/core/Colors.h	/^    static const int PRED;$/;"	m	class:Colors
PREFERENCES_DIALOG_H	apps/MIFit/ui/PreferencesDialog.h	2;"	d
PRESET_DICT	libs/opengl/zlib/zutil.h	72;"	d
PROBE_SURFACE	apps/MIFit/ui/MIGLWidget.cpp	111;"	d	file:
PRODUCT	apps/MIFit/core/Matvec.cpp	1;"	d	file:
PROGRESS	apps/MIFit/ui/Application.h	/^    QProgressDialog *PROGRESS;$/;"	m	class:MIBusyManager
PROG_DIRECTION	apps/MIFit/ui/Application.h	/^    int PROG_DIRECTION;$/;"	m	class:MIBusyManager
PROG_VALUE	apps/MIFit/ui/Application.h	/^    unsigned int PROG_VALUE;$/;"	m	class:MIBusyManager
PS	libs/chemlib/RefmacType.h	/^    const unsigned int PS   = 56;$/;"	m	namespace:RefmacType
PT	libs/chemlib/RefmacType.h	/^    const unsigned int PT   = 145;$/;"	m	namespace:RefmacType
PT_BETWEENTOKENS	libs/chemlib/CifParser.cpp	108;"	d	file:
PT_DOUBLEQUOTE	libs/chemlib/CifParser.cpp	110;"	d	file:
PT_INTOKEN	libs/chemlib/CifParser.cpp	107;"	d	file:
PT_MULTILINE	libs/chemlib/CifParser.cpp	111;"	d	file:
PT_SINGLEQUOTE	libs/chemlib/CifParser.cpp	109;"	d	file:
PWHITE	apps/MIFit/core/Colors.cpp	/^const int Colors::PWHITE = 100;$/;"	m	class:Colors	file:
PWHITE	apps/MIFit/core/Colors.h	/^    static const int PWHITE;$/;"	m	class:Colors
PYELLOW	apps/MIFit/core/Colors.cpp	/^const int Colors::PYELLOW = 10;$/;"	m	class:Colors	file:
PYELLOW	apps/MIFit/core/Colors.h	/^    static const int PYELLOW;$/;"	m	class:Colors
PaletteChanged	apps/MIFit/ui/Application.cpp	/^int PaletteChanged = true;$/;"	v
PaletteColor	apps/MIFit/core/Colors.h	/^    PaletteColor(unsigned char r = 0, unsigned char g = 0, unsigned char b = 0) : red(r), green(g), blue(b)$/;"	f	class:PaletteColor
PaletteColor	apps/MIFit/core/Colors.h	/^class PaletteColor$/;"	c
PaletteIndex	apps/MIFit/core/Colors.h	/^inline int PaletteIndex(int color)$/;"	f
PanelToButtonCtrlMap	apps/MIFit/ui/ModelsView.h	/^    typedef std::map<QWidget*, QPushButton*> PanelToButtonCtrlMap;$/;"	t	class:ModelsView
PanelToLineEditMap	apps/MIFit/ui/ModelsView.h	/^    typedef std::map<QWidget*, QLineEdit*> PanelToLineEditMap;$/;"	t	class:ModelsView
PanelToToolButtonMap	apps/MIFit/ui/ModelsView.h	/^    typedef std::map<QWidget*, QToolButton*> PanelToToolButtonMap;$/;"	t	class:ModelsView
Parse	libs/chemlib/CifData.cpp	/^void CifDataBlock::Parse()$/;"	f	class:CifDataBlock
PartialPlane	libs/conflib/CoordGenerator.cpp	/^void CoordGenerator::PartialPlane(Plane *source, Plane *target)$/;"	f	class:CoordGenerator
PasteItem	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::PasteItem()$/;"	f	class:ResiduesTree
Peek	apps/MIFit/core/Stack.cpp	/^void Stack::Peek(MIAtom* &atom, Residue* &res, Molecule* &m)$/;"	f	class:Stack
PentDir	apps/MIFit/ui/Application.h	/^    std::string PentDir;$/;"	m	class:Application
Pentamer	apps/MIFit/core/MoleculeType.h	/^        Pentamer,$/;"	e	enum:MoleculeType::__anon2
Pentamer	libs/chemlib/Ligand.h	/^            Pentamer,$/;"	e	enum:chemlib::Ligand::__anon28
PentamerFrom	apps/MIFit/ui/MIGLWidget.h	/^    Molecule *PentamerFrom;$/;"	m	class:MIGLWidget
PentamerModel	apps/MIFit/ui/MIGLWidget.h	/^    Molecule *PentamerModel;$/;"	m	class:MIGLWidget
PentamerStart	apps/MIFit/ui/MIGLWidget.h	/^    chemlib::Residue *PentamerStart;$/;"	m	class:MIGLWidget
Peptide	apps/MIFit/ui/surf.h	/^    const unsigned int Peptide = 3;$/;"	m	namespace:MISurfaceSelectionMode
PeriodicGrid	libs/math/PeriodicGrid.h	/^        PeriodicGrid<Type>::PeriodicGrid(Type *lowerBoundary, Type *upperBoundary, Type *spacing)$/;"	f	class:mi::math::PeriodicGrid
PeriodicGrid	libs/math/PeriodicGrid.h	/^        PeriodicGrid<Type>::PeriodicGrid(int *size, Type *spacing, Point3<Type> &origin)$/;"	f	class:mi::math::PeriodicGrid
PeriodicGrid	libs/math/PeriodicGrid.h	/^        class PeriodicGrid : public Grid<Type>$/;"	c	namespace:mi::math
PhaseFileLoadDialog	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^PhaseFileLoadDialog::PhaseFileLoadDialog(QWidget *parent)$/;"	f	class:PhaseFileLoadDialog
PhaseFileLoadDialog	apps/MIFit/ui/PhaseFileLoadDialog.h	/^class PhaseFileLoadDialog : public QDialog, public Ui::PhaseFileLoadDialog$/;"	c
PhaseFileLoadDialog	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    class PhaseFileLoadDialog: public Ui_PhaseFileLoadDialog {};$/;"	c	namespace:Ui
PhicsValid	libs/map/EMapBase.h	/^    bool PhicsValid;$/;"	m	class:EMapBase
Pick	libs/conflib/FlexTorsion.cpp	/^void FlexTorsion::Pick(int index)$/;"	f	class:FlexTorsion
PickedAtom	apps/MIFit/ui/Displaylist.h	/^    chemlib::MIAtom *PickedAtom;$/;"	m	class:Displaylist
PickedMolecule	apps/MIFit/ui/Displaylist.h	/^    Molecule *PickedMolecule;$/;"	m	class:Displaylist
PickedResidue	apps/MIFit/ui/Displaylist.h	/^    chemlib::Residue *PickedResidue;$/;"	m	class:Displaylist
Pivot	libs/chemlib/Matrix.h	/^    void Pivot(Matrix<T> &A, Subscript M, Subscript N)$/;"	f	namespace:TNT
PlaceAtom	libs/conflib/CoordGenerator.cpp	/^void CoordGenerator::PlaceAtom(MIAtom *atom)$/;"	f	class:CoordGenerator
PlaceCA	libs/map/EMapBase.cpp	/^std::vector<MAP_POINT>&EMapBase::PlaceCA(MIAtom *CAprev, MIAtom *CA1)$/;"	f	class:EMapBase
Plane	apps/MIFit/core/Annotation.h	/^        Plane$/;"	e	enum:Annotation::__anon1
Plane	libs/chemlib/Constraint.cpp	/^Plane::Plane()$/;"	f	class:chemlib::Plane
Plane	libs/chemlib/Constraint.cpp	/^Plane::Plane(LigDictionary &dict)$/;"	f	class:chemlib::Plane
Plane	libs/chemlib/Constraint.cpp	/^Plane::Plane(float tol)$/;"	f	class:chemlib::Plane
Plane	libs/chemlib/Constraint.h	/^    class Plane$/;"	c	namespace:chemlib
Plane	libs/opengl/Frustum.cpp	/^Plane::Plane()$/;"	f	class:mi::opengl::Plane
Plane	libs/opengl/Frustum.cpp	/^Plane::Plane(Vector3<float> &v1, Vector3<float> &v2, Vector3<float> &v3)$/;"	f	class:mi::opengl::Plane
Plane	libs/opengl/Frustum.cpp	/^class Plane$/;"	c	namespace:mi::opengl	file:
PlaneAtomKeyIndices	libs/chemlib/CifData.cpp	/^PlaneAtomKeyIndices::PlaneAtomKeyIndices(std::vector<std::string> &names)$/;"	f	class:PlaneAtomKeyIndices
PlaneAtomKeyIndices	libs/chemlib/CifData.h	/^class PlaneAtomKeyIndices$/;"	c
PlaneDict	libs/chemlib/MIMolDictionary.h	/^        std::vector<PLANEDICT> PlaneDict;$/;"	m	class:chemlib::MIMolDictionary
PlaneKeyIndices	libs/chemlib/CifData.cpp	/^PlaneKeyIndices::PlaneKeyIndices(std::vector<std::string> &names)$/;"	f	class:PlaneKeyIndices
PlaneKeyIndices	libs/chemlib/CifData.h	/^class PlaneKeyIndices$/;"	c
PlaneWeight	libs/conflib/AtomRefiner.h	/^        float BondWeight, AngleWeight, PlaneWeight, TorsionWeight;$/;"	m	class:conflib::AtomRefiner
PlaneWeight	libs/conflib/LigRefiner.h	/^        float BondWeight, AngleWeight, PlaneWeight, TorsionWeight, BumpWeight;$/;"	m	class:conflib::LigRefiner
PlaneWeight	libs/molopt/MIMolOpt.h	/^    float BondWeight, AngleWeight, PlaneWeight, MapWeight, TorsionWeight, BumpWeight;$/;"	m	class:MIMolOpt
Planes	libs/chemlib/Constraint.h	/^        std::vector<Plane> Planes;$/;"	m	class:chemlib::ConstraintList
Point	apps/MIFit/ui/graphlib.cpp	511;"	d	file:
Point3	libs/math/Point3.h	/^        Point3<Type>::Point3()$/;"	f	class:mi::math::Point3
Point3	libs/math/Point3.h	/^        Point3<Type>::Point3(Type x, Type y, Type z)$/;"	f	class:mi::math::Point3
Point3	libs/math/Point3.h	/^        Point3<Type>::Point3(const Tuple3<Type> &t1)$/;"	f	class:mi::math::Point3
Point3	libs/math/Point3.h	/^        class Point3 : public Tuple3<Type>$/;"	c	namespace:mi::math
Point4	libs/math/Point4.h	/^        Point4<Type>::Point4()$/;"	f	class:mi::math::Point4
Point4	libs/math/Point4.h	/^        Point4<Type>::Point4(Type x, Type y, Type z, Type w)$/;"	f	class:mi::math::Point4
Point4	libs/math/Point4.h	/^        Point4<Type>::Point4(const Tuple4<Type> &t1)$/;"	f	class:mi::math::Point4
Point4	libs/math/Point4.h	/^        class Point4 : public Tuple4<Type>$/;"	c	namespace:mi::math
Polar	libs/chemlib/MIMolDictionary.h	/^        const unsigned int Polar = 2;$/;"	m	namespace:chemlib::DictionaryHLevel
Pop	apps/MIFit/core/Stack.cpp	/^MIAtom *Stack::Pop()$/;"	f	class:Stack
Pop	apps/MIFit/core/Stack.cpp	/^void Stack::Pop(MIAtom* &atom, Residue* &res)$/;"	f	class:Stack
Pop	apps/MIFit/core/Stack.cpp	/^void Stack::Pop(MIAtom* &atom, Residue* &res, Molecule* &m)$/;"	f	class:Stack
PositionAtom	libs/conflib/CoordGenerator.cpp	/^void PositionAtom(MIAtom *atom, const MIAtom *root, double length, const std::vector<Bond>& \/* bonds *\/)$/;"	f	namespace:conflib
PositionAtom	libs/conflib/CoordGenerator.cpp	/^void PositionAtom(MIAtom *atom,$/;"	f	namespace:conflib
PositionHydrogens	libs/chemlib/atom_util.cpp	/^int PositionHydrogens(const MIAtom *atom, MIAtomList &atoms)$/;"	f	namespace:chemlib
PrePro	apps/MIFit/ui/rama.h	/^    const unsigned int PrePro = 3;$/;"	m	namespace:RamaPlotType
PredictBondOrder	libs/chemlib/CovalentGeom.cpp	/^unsigned char PredictBondOrder(int element1, int element2, float distance)$/;"	f	namespace:chemlib
PredictValenceFrom3D	libs/chemlib/mol_util.cpp	/^int PredictValenceFrom3D(MIAtom &atom)$/;"	f	namespace:chemlib
PreferencesDialog	apps/MIFit/ui/PreferencesDialog.cpp	/^PreferencesDialog::PreferencesDialog(QWidget *parent)$/;"	f	class:PreferencesDialog
PreferencesDialog	apps/MIFit/ui/PreferencesDialog.h	/^class PreferencesDialog : public QDialog, public Ui::PreferencesDialog$/;"	c
PreferencesDialog	apps/MIFit/ui/ui_PreferencesDialog.h	/^    class PreferencesDialog: public Ui_PreferencesDialog {};$/;"	c	namespace:Ui
Print	libs/chemlib/Aromatic.cpp	/^void Aromatic::Print(std::string &s) const$/;"	f	class:chemlib::Aromatic
Print	libs/chemlib/Bond.cpp	/^std::string Bond::Print() const$/;"	f	class:chemlib::Bond
Print	libs/chemlib/RingSystem.cpp	/^std::string RingSystem::Print() const$/;"	f	class:chemlib::RingSystem
PrintAromatics	libs/chemlib/RingSystem.cpp	/^std::string RingSystem::PrintAromatics() const$/;"	f	class:chemlib::RingSystem
PrintNames	libs/chemlib/CifData.cpp	/^void CifLoop::PrintNames(std::string &out)$/;"	f	class:CifLoop
PrintResidueDebugInfo	libs/chemlib/Residue.cpp	/^void PrintResidueDebugInfo(Residue *res1)$/;"	f	namespace:chemlib
Pro	apps/MIFit/ui/rama.h	/^    const unsigned int Pro = 2;$/;"	m	namespace:RamaPlotType
ProbeSurface	apps/MIFit/ui/Displaylist.cpp	/^void Displaylist::ProbeSurface(Residue *reslist, MIAtomList a)$/;"	f	class:Displaylist
ProbeT	libs/jacgrid/surface.cpp	/^ProbeT::ProbeT(unsigned int level)$/;"	f	class:ProbeT
ProbeT	libs/jacgrid/surface.cpp	/^class ProbeT$/;"	c	file:
Process	libs/ligand/LigPostProcessor.cpp	/^void LigPostProcessor::Process()$/;"	f	class:LigPostProcessor
ProcessBracketAtom	libs/chemlib/SmilesReader.cpp	/^void SmilesReader::ProcessBracketAtom()$/;"	f	class:chemlib::SmilesReader
ProcessCharge	libs/chemlib/molfile.cpp	/^int molfile::ProcessCharge(int charge_code)$/;"	f	class:chemlib::molfile
ProcessChiral	libs/chemlib/molfile.cpp	/^void molfile::ProcessChiral(MIAtom *patom, int chiral_code)$/;"	f	class:chemlib::molfile
ProcessComplex	libs/chemlib/SmilesReader.cpp	/^void SmiRingClosures::ProcessComplex(char *key)$/;"	f	class:chemlib::SmiRingClosures
ProcessOrder	libs/chemlib/molfile.cpp	/^unsigned char molfile::ProcessOrder(int order_code)$/;"	f	class:chemlib::molfile
ProcessSimple	libs/chemlib/SmilesReader.cpp	/^void SmiRingClosures::ProcessSimple(char key)$/;"	f	class:chemlib::SmiRingClosures
ProcessStereo	libs/chemlib/molfile.cpp	/^char molfile::ProcessStereo(int stereo_code, int bond_order)$/;"	f	class:chemlib::molfile
ProjectPoint	apps/MIFit/core/Helix.cpp	/^bool Helix::ProjectPoint(double pt[3], double m_dEndA[3], double m_dEndB[3], double ptp[3])$/;"	f	class:Helix
PromptForColumnLabels	apps/MIFlex/miflex.cpp	/^    bool PromptForColumnLabels(unsigned int \/* num_cols *\/,$/;"	f	class:EMap
PromptForCrystal	apps/MIFit/ui/EMap.cpp	/^bool EMap::PromptForCrystal()$/;"	f	class:EMap
PromptForCrystal	libs/map/EMapBase.h	/^    virtual bool PromptForCrystal()$/;"	f	class:EMapBase
PropertyCommand	libs/opengl/interact/PropertyCommand.h	/^            class PropertyCommand$/;"	c	namespace:mi::opengl::interact
Purge	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::Purge(EMap *emap)$/;"	f	class:MIGLWidget
Purge	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::Purge(MIAtom *atom)$/;"	f	class:MIGLWidget
Purge	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::Purge(Molecule *model)$/;"	f	class:MIGLWidget
Purge	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::Purge(Residue *res)$/;"	f	class:MIGLWidget
Purge	libs/chemlib/GeomSaver.cpp	/^void GeomSaver::Purge(MIAtom *atom)$/;"	f	class:chemlib::GeomSaver
Purge	libs/chemlib/GeomSaver.cpp	/^void GeomSaver::Purge(MIMoleculeBase *model)$/;"	f	class:chemlib::GeomSaver
Purge	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::Purge(EMapBase *emap)$/;"	f	class:MIMolOpt
Purge	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::Purge(MIAtom *atom)$/;"	f	class:MIMolOpt
Purge	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::Purge(MIMoleculeBase *node)$/;"	f	class:MIMolOpt
Purge	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::Purge(Residue *res)$/;"	f	class:MIMolOpt
PurgeAllAtoms	apps/MIFit/core/Molecule.cpp	/^void Molecule::PurgeAllAtoms()$/;"	f	class:Molecule
PurgeAllAtoms	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::PurgeAllAtoms()$/;"	f	class:chemlib::MIMoleculeBase
PurgeAtom	apps/MIFit/core/Molecule.cpp	/^void Molecule::PurgeAtom(MIAtom *atom)$/;"	f	class:Molecule
PurgeAtom	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::PurgeAtom(MIAtom *atom)$/;"	f	class:chemlib::MIMoleculeBase
PurgeChain	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::PurgeChain(Residue *chain)$/;"	f	class:MIGLWidget
PurgeReferences	apps/MIFit/core/Molecule.cpp	/^void Molecule::PurgeReferences(MIAtom *atom)$/;"	f	class:Molecule
PurgeReferences	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::PurgeReferences(MIAtom *atom)$/;"	f	class:chemlib::MIMoleculeBase
PurgeReferences	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::PurgeReferences(Residue *oldres)$/;"	f	class:chemlib::MIMoleculeBase
PurgeResidue	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::PurgeResidue(Residue *oldres)$/;"	f	class:chemlib::MIMoleculeBase
PurgeSymmetryAtom	apps/MIFit/core/Molecule.cpp	/^void Molecule::PurgeSymmetryAtom(MIAtom *atom)$/;"	f	class:Molecule
PurgeSymmetryAtom	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::PurgeSymmetryAtom(MIAtom *atom)$/;"	f	class:chemlib::MIMoleculeBase
PurgeSymmetryResidues	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::PurgeSymmetryResidues(Residue *res)$/;"	f	class:chemlib::MIMoleculeBase
Push	apps/MIFit/core/Stack.cpp	/^void Stack::Push(MIAtom *atom, Residue *res, Molecule *m)$/;"	f	class:Stack
PushedName	apps/MIFit/ui/GLRenderer.cpp	/^    PushedName(GLuint name, bool enabled) : enabled(enabled)$/;"	f	class:PushedName
PushedName	apps/MIFit/ui/GLRenderer.cpp	/^class PushedName$/;"	c	file:
PutNearProtein	libs/map/EMapBase.cpp	/^static void PutNearProtein(float fx, float fy, float fz, MINATOM *atoms, int natoms, float *bx, float *by, float *bz, CMapHeaderBase *mh)$/;"	f	file:
PythonEngine	apps/MIFit/python/PythonEngine.cpp	/^PythonEngine::PythonEngine()$/;"	f	class:PythonEngine
PythonEngine	apps/MIFit/python/PythonEngine.h	/^class PythonEngine : public QObject$/;"	c
PythonEngine_h	apps/MIFit/python/PythonEngine.h	2;"	d
QMAKE	Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	apps/MIFit/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	apps/MIFit/core/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	apps/MIFit/jobs/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	apps/MIFit/main/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	apps/MIFit/script/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	apps/MIFit/ui/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	apps/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	libs/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	libs/chemlib/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	libs/conflib/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	libs/jacgrid/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	libs/ligand/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	libs/map/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	libs/math/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	libs/molopt/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	libs/opengl/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	libs/umtz/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE	libs/util/Makefile	/^QMAKE         = \/usr\/bin\/qmake-qt4$/;"	m
QMAKE_TARGET	apps/MIFit/core/Makefile	/^QMAKE_TARGET  = core$/;"	m
QMAKE_TARGET	apps/MIFit/jobs/Makefile	/^QMAKE_TARGET  = jobs$/;"	m
QMAKE_TARGET	apps/MIFit/main/Makefile	/^QMAKE_TARGET  = MIFit$/;"	m
QMAKE_TARGET	apps/MIFit/script/Makefile	/^QMAKE_TARGET  = script$/;"	m
QMAKE_TARGET	apps/MIFit/ui/Makefile	/^QMAKE_TARGET  = ui$/;"	m
QMAKE_TARGET	libs/chemlib/Makefile	/^QMAKE_TARGET  = chemlib$/;"	m
QMAKE_TARGET	libs/conflib/Makefile	/^QMAKE_TARGET  = conflib$/;"	m
QMAKE_TARGET	libs/jacgrid/Makefile	/^QMAKE_TARGET  = jacgrid$/;"	m
QMAKE_TARGET	libs/ligand/Makefile	/^QMAKE_TARGET  = ligand$/;"	m
QMAKE_TARGET	libs/map/Makefile	/^QMAKE_TARGET  = map$/;"	m
QMAKE_TARGET	libs/math/Makefile	/^QMAKE_TARGET  = mimath$/;"	m
QMAKE_TARGET	libs/molopt/Makefile	/^QMAKE_TARGET  = molopt$/;"	m
QMAKE_TARGET	libs/opengl/Makefile	/^QMAKE_TARGET  = miopengl$/;"	m
QMAKE_TARGET	libs/umtz/Makefile	/^QMAKE_TARGET  = umtz$/;"	m
QMAKE_TARGET	libs/util/Makefile	/^QMAKE_TARGET  = miutil$/;"	m
QPROGRESS_MAX	apps/MIFit/ui/Application.cpp	1117;"	d	file:
QUADRATIC	libs/map/fftsub.cpp	422;"	d	file:
QtCore	mifit.py	/^from PyQt4 import QtCore, QtGui, QtNetwork$/;"	i
QtGui	mifit.py	/^from PyQt4 import QtCore, QtGui, QtNetwork$/;"	i
QtNetwork	mifit.py	/^from PyQt4 import QtCore, QtGui, QtNetwork$/;"	i
QuatUtil	libs/opengl/QuatUtil.h	/^        class QuatUtil$/;"	c	namespace:mi::opengl
Quaternion	libs/math/Quaternion.h	/^        Quaternion<Type>::Quaternion()$/;"	f	class:mi::math::Quaternion
Quaternion	libs/math/Quaternion.h	/^        Quaternion<Type>::Quaternion(Type x, Type y, Type z, Type w)$/;"	f	class:mi::math::Quaternion
Quaternion	libs/math/Quaternion.h	/^        Quaternion<Type>::Quaternion(const Tuple4<Type> &source)$/;"	f	class:mi::math::Quaternion
Quaternion	libs/math/Quaternion.h	/^        Quaternion<Type>::Quaternion(const Vector3<Type> &axis, Type angle)$/;"	f	class:mi::math::Quaternion
Quaternion	libs/math/Quaternion.h	/^        Quaternion<Type>::Quaternion(const Vector3<Type> &sourceVector, const Vector3<Type> &targetVector)$/;"	f	class:mi::math::Quaternion
Quaternion	libs/math/Quaternion.h	/^        class Quaternion : public Tuple4<Type>$/;"	c	namespace:mi::math
Quick	libs/chemlib/MIMolDictionary.h	/^        const unsigned int Quick = 1;$/;"	m	namespace:chemlib::Refine_Level
RAD2DEG	libs/math/mathlib.h	16;"	d
RADIAN	libs/cmtz/ccp4_types.h	63;"	d
RADIAN	libs/umtz/library.h	878;"	d
RAMA_DATA_H	apps/MIFit/ui/rama.h	2;"	d
RAND_MAX	libs/map/sfcalc.h	19;"	d
RANLIB	apps/MIFit/core/Makefile	/^RANLIB        = $/;"	m
RANLIB	apps/MIFit/jobs/Makefile	/^RANLIB        = $/;"	m
RANLIB	apps/MIFit/main/Makefile	/^RANLIB        = $/;"	m
RANLIB	apps/MIFit/script/Makefile	/^RANLIB        = $/;"	m
RANLIB	apps/MIFit/ui/Makefile	/^RANLIB        = $/;"	m
RANLIB	libs/chemlib/Makefile	/^RANLIB        = $/;"	m
RANLIB	libs/conflib/Makefile	/^RANLIB        = $/;"	m
RANLIB	libs/jacgrid/Makefile	/^RANLIB        = $/;"	m
RANLIB	libs/ligand/Makefile	/^RANLIB        = $/;"	m
RANLIB	libs/map/Makefile	/^RANLIB        = $/;"	m
RANLIB	libs/math/Makefile	/^RANLIB        = $/;"	m
RANLIB	libs/molopt/Makefile	/^RANLIB        = $/;"	m
RANLIB	libs/opengl/Makefile	/^RANLIB        = $/;"	m
RANLIB	libs/umtz/Makefile	/^RANLIB        = $/;"	m
RANLIB	libs/util/Makefile	/^RANLIB        = $/;"	m
RB	libs/chemlib/RefmacType.h	/^    const unsigned int RB   = 97;$/;"	m	namespace:RefmacType
RCorrelation	libs/map/EMapBase.cpp	/^float EMapBase::RCorrelation(MIAtomList &atoms)$/;"	f	class:EMapBase
RDensity	libs/map/EMapBase.cpp	/^float EMapBase::RDensity(MIAtomList &atoms)$/;"	f	class:EMapBase
RDensity	libs/map/InterpBox.cpp	/^float InterpBox::RDensity(MIAtomList atoms)$/;"	f	class:InterpBox
RE	libs/chemlib/RefmacType.h	/^    const unsigned int RE   = 136;$/;"	m	namespace:RefmacType
READ_OP	libs/cmtz/ccp4_sysdep.h	212;"	d
READ_OP	libs/umtz/library.h	334;"	d
RED	apps/MIFit/core/Colors.cpp	/^const int Colors::RED = 2;$/;"	m	class:Colors	file:
RED	apps/MIFit/core/Colors.h	/^    static const int RED;$/;"	m	class:Colors
REENTRANT_SURFACE	libs/jacgrid/isosurface.cpp	/^static const unsigned int REENTRANT_SURFACE = 1;$/;"	v	file:
REENTRANT_SURFACE	libs/jacgrid/surface.cpp	/^static const unsigned int REENTRANT_SURFACE = 1;$/;"	v	file:
REFIATOM	libs/chemlib/model.h	/^        const unsigned int REFIATOM = ((unsigned int)0x00008000);$/;"	m	namespace:chemlib::AtomType
REFINEMENTOPTIONSDIALOG_H	apps/MIFit/ui/RefinementOptionsDialog.h	2;"	d
REFMAC_DICT_H	libs/chemlib/RefmacAtomTyper.h	2;"	d
REFMAC_TYPE_H	libs/chemlib/RefmacType.h	2;"	d
REGULAR_MAP_SETTINGS	apps/MIFit/ui/MapSettings.h	/^const unsigned int REGULAR_MAP_SETTINGS = 0;$/;"	v
REM_MAX_ITERATIONS	libs/chemlib/CovalentGeom.cpp	814;"	d	file:
REM_TOLERANCE	libs/chemlib/CovalentGeom.cpp	815;"	d	file:
RESCALC_H_	libs/map/rescalc.h	2;"	d
RESIDUE	libs/chemlib/itertest.cxx	/^    RESIDUE() : resnum(0),next_res(0) {}$/;"	f	class:RESIDUE
RESIDUE	libs/chemlib/itertest.cxx	/^class RESIDUE$/;"	c	file:
RESIDUES	apps/MIFit/ui/Xguicryst.h	13;"	d
RFactor	libs/map/EMapBase.h	/^    float RFactor;$/;"	m	class:EMapBase
RH	libs/chemlib/RefmacType.h	/^    const unsigned int RH   = 141;$/;"	m	namespace:RefmacType
RIBBONATOM	libs/chemlib/model.h	/^        const unsigned int RIBBONATOM = ((unsigned int)0x00000400);$/;"	m	namespace:chemlib::AtomType
RIGHT	libs/opengl/Frustum.cpp	/^const int Frustum::RIGHT = 3;$/;"	m	class:mi::opengl::Frustum	file:
RIGHT	libs/opengl/Frustum.h	/^            static const int RIGHT;$/;"	m	class:mi::opengl::Frustum
RINGSYSTEM_H	libs/chemlib/RingSystem.h	2;"	d
RList	libs/map/EMapBase.h	/^    float RList[5][10];$/;"	m	class:EMapBase
RN	libs/chemlib/RefmacType.h	/^    const unsigned int RN   = 174;$/;"	m	namespace:RefmacType
RNMX	libs/molopt/MIMolOpt.cpp	40;"	d	file:
ROTATE	apps/MIFit/ui/MIGLWidget.cpp	115;"	d	file:
ROUND	libs/conflib/ConfFingerprint.cpp	40;"	d	file:
ROUND	libs/conflib/ConfFingerprint.cpp	42;"	d	file:
ROUND	libs/math/mathlib.h	/^inline int ROUND(double a)$/;"	f
ROUND	libs/math/mathlib.h	/^inline int ROUND(float a)$/;"	f
ROUND	libs/math/mathlib.h	/^inline int ROUND(int a)$/;"	f
RPallette	apps/MIFit/core/Colors.cpp	/^unsigned char Colors::RPallette[Colors_NUMBERPALETTE];$/;"	m	class:Colors	file:
RPallette	apps/MIFit/core/Colors.h	/^    static unsigned char RPallette[Colors_NUMBERPALETTE];$/;"	m	class:Colors
RU	libs/chemlib/RefmacType.h	/^    const unsigned int RU   = 138;$/;"	m	namespace:RefmacType
R_fp	libs/map/fftlib.cpp	/^typedef real (*R_fp)(...);$/;"	t	file:
Radius	libs/map/MapSettingsBase.h	/^    float Radius;$/;"	m	class:MapSettingsBase
RamaDataBase	apps/MIFit/ui/rama.h	/^class RamaDataBase$/;"	c
RamaPlotManager	apps/MIFit/ui/MIMainWindow.cpp	/^RamaPlotMgr*MIMainWindow::RamaPlotManager()$/;"	f	class:MIMainWindow
RamaPlotMgr	apps/MIFit/ui/RamaPlot.cpp	/^RamaPlotMgr::RamaPlotMgr(bool allowed)$/;"	f	class:RamaPlotMgr
RamaPlotMgr	apps/MIFit/ui/RamaPlot.h	/^class RamaPlotMgr : public QObject$/;"	c
RamaPlotType	apps/MIFit/ui/rama.h	/^namespace RamaPlotType$/;"	n
Random	libs/math/Random.h	/^            Random()$/;"	f	class:mi::math::Random
Random	libs/math/Random.h	/^        class Random$/;"	c	namespace:mi::math
RandomizeCoords	libs/chemlib/Ligand.cpp	/^void Ligand::RandomizeCoords(std::pair<double, double> xbounds,$/;"	f	class:chemlib::Ligand
ReDraw	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::ReDraw()$/;"	f	class:DictEditCanvas
ReDraw	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::ReDraw()$/;"	f	class:MIGLWidget
ReDrawAll	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::ReDrawAll()$/;"	f	class:MIGLWidget
ReInit	libs/chemlib/Constraint.cpp	/^void Improper::ReInit(const MIAtomList &in_atoms,$/;"	f	class:chemlib::Improper
RePhase	libs/map/sfcalc.cpp	/^float RePhase(std::vector<CREFL> &refl, CMapHeaderBase *mh)$/;"	f
Read	apps/MIFit/core/Cfiles.cpp	/^long CArchive::Read(void *buffer, long nread)$/;"	f	class:CArchive
Read	apps/MIFit/ui/MIMolIO.cpp	/^bool MIMolIO::Read(MIMolInfo &mi, const std::string &fname, int readerIndex) const$/;"	f	class:MIMolIO
Read	libs/chemlib/MIMolIO.cpp	/^bool MIMolIOBase::Read(MIMolInfo &mi, const std::string &filename, int readerIndex) const$/;"	f	class:chemlib::MIMolIOBase
Read	libs/chemlib/PDB.cpp	/^bool PDB::Read(FILE *fp, MIMolInfo &mol)$/;"	f	class:chemlib::PDB
Read	libs/chemlib/SMILES.cpp	/^bool SMILES::Read(FILE *fp, MIMolInfo &mol)$/;"	f	class:chemlib::SMILES
Read	libs/chemlib/SMILES.cpp	/^bool SMILES::Read(const std::string &smiles, MIMolInfo &mol)$/;"	f	class:chemlib::SMILES
Read	libs/chemlib/mmCIF.cpp	/^bool mmCIF::Read(FILE *fp, MIMolInfo &mol)$/;"	f	class:chemlib::mmCIF
Read	libs/chemlib/molfile.cpp	/^bool molfile::Read(FILE *fp, MIMolInfo &mol)$/;"	f	class:chemlib::molfile
Read	libs/map/EMapBase.cpp	/^int EMapBase::Read(const char *file)$/;"	f	class:EMapBase
ReadSequence	apps/MIFit/core/Mlculseq.cpp	/^void Molecule::ReadSequence(std::string path, int \/* type *\/, int \/* skiplines *\/)$/;"	f	class:Molecule
ReadStack	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::ReadStack(const char *pathname, bool append)$/;"	f	class:MIGLWidget
Reader	libs/chemlib/MIMolInfo.h	/^    class Reader$/;"	c	namespace:chemlib
ReaderList	libs/chemlib/MIMolIOBase.h	/^        typedef std::vector<Reader*> ReaderList;$/;"	t	class:chemlib::MIMolIOBase
Rebuild	apps/MIFit/ui/surf.cpp	/^    void Rebuild()$/;"	f	class:SuperSurface
RecalcResolution	libs/map/EMapBase.cpp	/^void EMapBase::RecalcResolution()$/;"	f	class:EMapBase
Redo	libs/molopt/MIMolOpt.cpp	/^bool MIMolOpt::Redo()$/;"	f	class:MIMolOpt
Reduce	libs/jacgrid/surface.cpp	/^void surfaceT::Reduce(float mindist, unsigned int *pruned)$/;"	f	class:surfaceT
ReduceToLine	libs/jacgrid/surface.cpp	/^static void ReduceToLine(surfaceT &surf,$/;"	f	file:
RefiAllTorsions	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::RefiAllTorsions(Residue *reslist)$/;"	f	class:MIMolOpt
RefiAngles	libs/chemlib/MIMolDictionary.h	/^        std::vector<ANGLE> RefiAngles;$/;"	m	class:chemlib::MIMolDictionary
RefiAngles	libs/conflib/LigRefiner.h	/^        std::vector<chemlib::Angle> RefiAngles;$/;"	m	class:conflib::LigRefiner
RefiBonds	libs/chemlib/MIMolDictionary.h	/^        std::vector<Bond> RefiBonds;$/;"	m	class:chemlib::MIMolDictionary
RefiBonds	libs/conflib/LigRefiner.h	/^        std::vector<chemlib::BondLength> RefiBonds;$/;"	m	class:conflib::LigRefiner
RefiBumps	libs/chemlib/MIMolDictionary.h	/^        std::vector<Bond> RefiBumps;$/;"	m	class:chemlib::MIMolDictionary
RefiBumps	libs/conflib/LigRefiner.h	/^        std::vector<chemlib::Bump> RefiBumps;$/;"	m	class:conflib::LigRefiner
RefiChirals	libs/chemlib/MIMolDictionary.h	/^        std::vector<CHIRAL> RefiChirals;$/;"	m	class:chemlib::MIMolDictionary
RefiConstraints	libs/chemlib/MIMolDictionary.h	/^        std::vector<Bond> RefiConstraints;$/;"	m	class:chemlib::MIMolDictionary
RefiHBonds	libs/chemlib/MIMolDictionary.h	/^        bool RefiHBonds;$/;"	m	class:chemlib::MIMolDictionary
RefiPhiPsis	libs/chemlib/MIMolDictionary.h	/^        std::vector<TORSION> RefiPhiPsis;$/;"	m	class:chemlib::MIMolDictionary
RefiPlanes	libs/chemlib/MIMolDictionary.h	/^        std::vector<PLANE> RefiPlanes;$/;"	m	class:chemlib::MIMolDictionary
RefiPlanes	libs/conflib/LigRefiner.h	/^        std::vector<chemlib::Plane> RefiPlanes;$/;"	m	class:conflib::LigRefiner
RefiRes	libs/conflib/LigRefiner.h	/^        std::vector<chemlib::Monomer*> RefiRes;$/;"	m	class:conflib::LigRefiner
RefiRes	libs/molopt/MIMolOpt.h	/^    chemlib::Residue *RefiRes;$/;"	m	class:MIMolOpt
RefiSecStruct	libs/chemlib/MIMolDictionary.h	/^        bool RefiSecStruct;$/;"	m	class:chemlib::MIMolDictionary
RefiTorsions	libs/chemlib/MIMolDictionary.h	/^        std::vector<TORSION> RefiTorsions;$/;"	m	class:chemlib::MIMolDictionary
RefiTorsions	libs/conflib/LigRefiner.h	/^        std::vector<chemlib::Improper> RefiTorsions;$/;"	m	class:conflib::LigRefiner
RefiVerbose	libs/conflib/LigRefiner.h	/^        bool RefiVerbose;$/;"	m	class:conflib::LigRefiner
RefiVerbose	libs/molopt/MIMolOpt.h	/^    bool RefiVerbose;$/;"	m	class:MIMolOpt
Refine	libs/conflib/LigRefiner.cpp	/^double LigRefiner::Refine()$/;"	f	class:LigRefiner
Refine	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::Refine()$/;"	f	class:MIMolOpt
RefineAtom	libs/conflib/AtomRefiner.cpp	/^void AtomRefiner::RefineAtom(MIAtom *atom, MIAtom *root, MIAtom *rnabor)$/;"	f	class:AtomRefiner
Refine_Level	libs/chemlib/MIMolDictionary.h	/^    namespace Refine_Level$/;"	n	namespace:chemlib
RefinementOptionsDialog	apps/MIFit/ui/RefinementOptionsDialog.cpp	/^RefinementOptionsDialog::RefinementOptionsDialog(const Data &data, QWidget *parent)$/;"	f	class:RefinementOptionsDialog
RefinementOptionsDialog	apps/MIFit/ui/RefinementOptionsDialog.h	/^class RefinementOptionsDialog : public QDialog, public Ui::RefinementOptionsDialog$/;"	c
RefinementOptionsDialog	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    class RefinementOptionsDialog: public Ui_RefinementOptionsDialog {};$/;"	c	namespace:Ui
ReflectAtoms	libs/chemlib/transform_util.cpp	/^void ReflectAtoms(vector<MIAtom*> &atoms)$/;"	f	namespace:chemlib
ReflectY	libs/chemlib/transform_util.h	/^    inline void ReflectY(MIAtomList &atoms)$/;"	f	namespace:chemlib
RefmacAtomTyper	libs/chemlib/RefmacAtomTyper.cpp	/^RefmacAtomTyper::RefmacAtomTyper(const Residue &res, const vector<Bond> &bonds)$/;"	f	class:chemlib::RefmacAtomTyper
RefmacAtomTyper	libs/chemlib/RefmacAtomTyper.h	/^    class RefmacAtomTyper : public AtomTyper$/;"	c	namespace:chemlib
RefmacType	libs/chemlib/RefmacType.h	/^namespace RefmacType$/;"	n
Reindex	libs/map/EMapBase.cpp	/^long EMapBase::Reindex(int index_mat[][3])$/;"	f	class:EMapBase
RelativeToCartesian	libs/chemlib/transform_util.cpp	/^void RelativeToCartesian(const MIAtom *ref1,$/;"	f	namespace:chemlib
RelativeViewpoint	libs/opengl/RelativeViewpoint.cpp	/^RelativeViewpoint::RelativeViewpoint(Viewpoint *reference)$/;"	f	class:mi::opengl::RelativeViewpoint
RelativeViewpoint	libs/opengl/RelativeViewpoint.h	/^        class RelativeViewpoint : public Viewpoint$/;"	c	namespace:mi::opengl
RemoveConstraints	libs/chemlib/MIMolDictionary.cpp	/^void MIMolDictionary::RemoveConstraints()$/;"	f	class:chemlib::MIMolDictionary
RemoveFileFromHistory	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::RemoveFileFromHistory(const std::string& \/* pathname *\/)$/;"	f	class:MIGLWidget
RenderMode	apps/MIFit/ui/DictEditCanvas.cpp	/^enum RenderMode {$/;"	g	file:
RenderSphereoid	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::RenderSphereoid(float*, float radius[3], int tess)$/;"	f	class:GLRenderer
RenderStyle	apps/MIFit/core/RenderStyle.cpp	/^RenderStyle::RenderStyle()$/;"	f	class:RenderStyle
RenderStyle	apps/MIFit/core/RenderStyle.h	/^class RenderStyle$/;"	c
Renderable	libs/opengl/Renderable.h	/^        class Renderable$/;"	c	namespace:mi::opengl
ReplaceMainChain	libs/chemlib/MIMoleculeBase.cpp	/^bool MIMoleculeBase::ReplaceMainChain(Residue *where, Residue *with, int nres)$/;"	f	class:chemlib::MIMoleculeBase
ReplaceRes	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::ReplaceRes(Residue *oldres, Residue *dictres)$/;"	f	class:chemlib::MIMoleculeBase
ResActiveModel	libs/molopt/MIMolOpt.h	/^    chemlib::Residue *ResActiveModel;$/;"	m	class:MIMolOpt
ResContainsBond	libs/chemlib/atom_util.h	/^    struct ResContainsBond : public std::binary_function<Bond, const Residue, bool>$/;"	s	namespace:chemlib
ResDict	libs/chemlib/MIMolDictionary.h	/^        Residue *ResDict;$/;"	m	class:chemlib::MIMolDictionary
ResSearch	libs/chemlib/mol_util.cpp	/^ResSearch(const MIAtom *query,$/;"	f	namespace:chemlib
Reset	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::Reset()$/;"	f	class:MIMolOpt
ResetFit	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::ResetFit()$/;"	f	class:MIGLWidget
ResetMenu	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::ResetMenu(bool show_all)$/;"	f	class:ModelsTree
ResetNewFile	apps/MIFit/ui/MIGLWidget.h	/^    void ResetNewFile()$/;"	f	class:MIGLWidget
ResetSearchFlags	libs/chemlib/Ligand.cpp	/^void Ligand::ResetSearchFlags()$/;"	f	class:chemlib::Ligand
ResetUpdate	apps/MIFit/ui/MIGLWidget.h	/^inline void MIGLWidget::ResetUpdate()$/;"	f	class:MIGLWidget
Residue	libs/chemlib/Residue.cpp	/^Residue::Residue()$/;"	f	class:chemlib::Residue
Residue	libs/chemlib/Residue.cpp	/^Residue::Residue(const Monomer &r)$/;"	f	class:chemlib::Residue
Residue	libs/chemlib/Residue.cpp	/^Residue::Residue(const Residue &lhs)$/;"	f	class:chemlib::Residue
Residue	libs/chemlib/Residue.h	/^    class Residue : public Monomer$/;"	c	namespace:chemlib
ResidueBuffer	apps/MIFit/ui/Application.h	/^    chemlib::Residue *ResidueBuffer;$/;"	m	class:Application
ResidueListIterator	libs/chemlib/Residue.cpp	/^ResidueListIterator::ResidueListIterator()$/;"	f	class:chemlib::ResidueListIterator
ResidueListIterator	libs/chemlib/Residue.cpp	/^ResidueListIterator::ResidueListIterator(Residue* residue)$/;"	f	class:chemlib::ResidueListIterator
ResidueListIterator	libs/chemlib/Residue.cpp	/^ResidueListIterator::ResidueListIterator(const ResidueListIterator &iter)$/;"	f	class:chemlib::ResidueListIterator
ResidueListIterator	libs/chemlib/Residue.h	/^    class ResidueListIterator$/;"	c	namespace:chemlib
ResidueOffset	apps/MIFit/ui/AddResidueDialog.h	/^    enum ResidueOffset$/;"	g	class:AddResidueDialog
ResidueOffsetKey	apps/MIFit/ui/AddResidueDialog.cpp	/^    const QString ResidueOffsetKey = "residueOffset";$/;"	m	namespace:__anon14	file:
ResidueToDataMap	apps/MIFit/ui/ModelsView.cpp	/^    typedef std::map<Residue*, TreeData*> ResidueToDataMap;$/;"	t	class:ModelsTree	file:
ResidueToDataMap	apps/MIFit/ui/ModelsView.cpp	/^    typedef std::map<Residue*, TreeData*> ResidueToDataMap;$/;"	t	class:ResiduesTree	file:
ResidueToModelMap	apps/MIFit/ui/ModelsView.cpp	/^    typedef std::map<Residue*, Molecule*> ResidueToModelMap;$/;"	t	class:ModelsTree	file:
ResidueTypeKey	apps/MIFit/ui/AddResidueDialog.cpp	/^    const QString ResidueTypeKey = "residueType";$/;"	m	namespace:__anon14	file:
Residues	apps/MIFit/ui/surf.h	/^    const unsigned int Residues = 2;$/;"	m	namespace:MISurfaceSelectionMode
ResiduesTree	apps/MIFit/ui/ModelsView.cpp	/^ResiduesTree::ResiduesTree(QWidget *parent)$/;"	f	class:ResiduesTree
ResiduesTree	apps/MIFit/ui/ModelsView.cpp	/^class ResiduesTree$/;"	c	file:
Resize	libs/jacgrid/grid.cpp	/^bool gridT::Resize(float InitValue,$/;"	f	class:gridT
Resize	libs/jacgrid/surface.cpp	/^bool surfaceT::Resize(unsigned int verts, unsigned int polys)$/;"	f	class:surfaceT
Resort	apps/MIFit/ui/surf.cpp	/^    void Resort()$/;"	f	class:MISurface
Restore	libs/chemlib/ConfSaver.cpp	/^void ConfSaver::Restore(unsigned int token) const$/;"	f	class:chemlib::ConfSaver
Restore	libs/chemlib/GeomSaver.cpp	/^int GeomSaver::Restore(unsigned int token) const$/;"	f	class:chemlib::GeomSaver
Restore	libs/chemlib/SaveAtom.cpp	/^int SaveAtom::Restore() const$/;"	f	class:chemlib::SaveAtom
RestoreColor	libs/chemlib/GeomSaver.cpp	/^bool GeomSaver::RestoreColor(unsigned int token, unsigned int mask)$/;"	f	class:chemlib::GeomSaver
RestoreColor	libs/chemlib/SaveAtom.cpp	/^void SaveAtom::RestoreColor(unsigned int mask) const$/;"	f	class:chemlib::SaveAtom
RestoreLast	libs/chemlib/ConfSaver.cpp	/^void ConfSaver::RestoreLast() const$/;"	f	class:chemlib::ConfSaver
RestoreLast	libs/chemlib/GeomSaver.cpp	/^unsigned int GeomSaver::RestoreLast(MIMoleculeBase *model)$/;"	f	class:chemlib::GeomSaver
RestrainEnds	libs/chemlib/MIMolDictionary.cpp	/^void MIMolDictionary::RestrainEnds(Residue *RefiRes, int nRefiRes)$/;"	f	class:chemlib::MIMolDictionary
ReverseSortBy2nd	libs/chemlib/Ligand.cpp	/^static bool ReverseSortBy2nd(const std::pair< MIAtom_const_iter, int> &a1,$/;"	f	namespace:chemlib
Revert	libs/chemlib/MIMoleculeBase.cpp	/^bool MIMoleculeBase::Revert(const char *pathname)$/;"	f	class:chemlib::MIMoleculeBase
Rewind	apps/MIFit/core/Cfiles.h	/^    void Rewind()$/;"	f	class:CArchive
Rho	libs/map/EMapBase.cpp	/^float EMapBase::Rho(const mi::math::Vector3<float> &pos)$/;"	f	class:EMapBase
RibbonProfile	apps/MIFit/core/RibbonSegment.cpp	/^bool RibbonSegment::RibbonProfile(double dWidth, double dThick, bool bSquare, int nPoints, int nSteps)$/;"	f	class:RibbonSegment
RibbonSegment	apps/MIFit/core/RibbonSegment.cpp	/^RibbonSegment::RibbonSegment()$/;"	f	class:RibbonSegment
RibbonSegment	apps/MIFit/core/RibbonSegment.h	/^class RibbonSegment$/;"	c
RibbonSpan	apps/MIFit/core/RibbonSpan.cpp	/^RibbonSpan::RibbonSpan()$/;"	f	class:RibbonSpan
RibbonSpan	apps/MIFit/core/RibbonSpan.h	/^class RibbonSpan$/;"	c
RibbonSpan_MP	apps/MIFit/core/RibbonSpan.h	25;"	d
RibbonSpan_MS	apps/MIFit/core/RibbonSpan.h	26;"	d
RichardsonRamaData	apps/MIFit/ui/RamaPlot.cpp	/^RichardsonRamaData::RichardsonRamaData(unsigned int type, bool preferred)$/;"	f	class:RichardsonRamaData
RichardsonRamaData	apps/MIFit/ui/rama.h	/^class RichardsonRamaData : public RamaDataBase$/;"	c
RightFooter	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::RightFooter(const std::string &msg)$/;"	f	class:MIMainWindow
RightMouseDrag	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::RightMouseDrag(QPoint d, float xang, float yang, float zang)$/;"	f	class:MIGLWidget
RightMouseMode	apps/MIFit/ui/MIGLWidget.h	/^    int RightMouseMode;$/;"	m	class:MIGLWidget
RigidOptimize	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::RigidOptimize(MIAtomList &CurrentAtoms, MIMoleculeBase *fitmol, EMapBase *emap)$/;"	f	class:MIMolOpt
RingSystem	libs/chemlib/RingSystem.h	/^    class RingSystem$/;"	c	namespace:chemlib
Rock	apps/MIFit/ui/MIGLWidget.h	/^    int Rock;$/;"	m	class:MIGLWidget
RockAngle	apps/MIFit/ui/MIGLWidget.h	/^    float RockAngle;$/;"	m	class:MIGLWidget
RockIncrement	apps/MIFit/ui/MIGLWidget.h	/^    float RockIncrement;$/;"	m	class:MIGLWidget
RockRange	apps/MIFit/ui/MIGLWidget.h	/^    float RockRange;$/;"	m	class:MIGLWidget
Roll	apps/MIFit/ui/MIGLWidget.h	/^    int Roll;$/;"	m	class:MIGLWidget
RollIncrement	apps/MIFit/ui/MIGLWidget.h	/^    float RollIncrement;$/;"	m	class:MIGLWidget
Rotate	apps/MIFit/core/Molecule.cpp	/^void Molecule::Rotate(float rx, float ry, float rz, float cx, float cy, float cz, ViewPoint *viewpoint,$/;"	f	class:Molecule
RotateAtom	libs/chemlib/transform_util.cpp	/^void RotateAtom(const MIAtom *atom1, const MIAtom *atom2, MIAtom *atom3, float alpha)$/;"	f	namespace:chemlib
RotateAtomVec	libs/molopt/MIMolOpt.cpp	/^static void RotateAtomVec(double rx, double ry, double rz, float cx, float cy, float cz, MIAtomList *atoms)$/;"	f	file:
RotateAtomVec	libs/molopt/MIMolOpt.cpp	/^static void RotateAtomVec(float rx, float ry, float rz, float cx, float cy, float cz, MIAtomList *atoms)$/;"	f	file:
RotateAtoms	libs/chemlib/transform_util.cpp	/^void RotateAtoms(double mat[3][3],$/;"	f	namespace:chemlib
RotateIntoXYPlane	libs/chemlib/transform_util.cpp	/^void RotateIntoXYPlane(MIAtom *ref, MIAtomList &branch)$/;"	f	namespace:chemlib
RotateIntoXYPlane	libs/chemlib/transform_util.cpp	/^void RotateIntoXYPlane(MIAtomList &ref, MIAtomList &branch)$/;"	f	namespace:chemlib
RotateIntoXYPlane	libs/chemlib/transform_util.cpp	/^void RotateIntoXYPlane(double *normal, MIAtom **atoms, int natoms)$/;"	f	namespace:chemlib
RotateIntoXYPlane	libs/chemlib/transform_util.cpp	/^void RotateIntoXYPlane(std::vector<double> &normal, MIAtomList &branch)$/;"	f	namespace:chemlib
RotateToXAxis	libs/chemlib/transform_util.cpp	/^void RotateToXAxis(MIAtom *ref, Ligand *mol)$/;"	f	namespace:chemlib
RotateTorsion	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::RotateTorsion(float alpha)$/;"	f	class:chemlib::MIMoleculeBase
Russtransform	apps/MIFit/ui/DictEditCanvas.cpp	/^void Russtransform(float rt[3][3], float tr[3], float *x, float *y, float *z)$/;"	f
S	libs/chemlib/RefmacType.h	/^    const unsigned int S    = 57;$/;"	m	namespace:RefmacType
S	libs/umtz/library.h	/^    pstr S;$/;"	m	struct:SStrPar
S1	libs/chemlib/RefmacType.h	/^    const unsigned int S1   = 60;$/;"	m	namespace:RefmacType
S2	libs/chemlib/RefmacType.h	/^    const unsigned int S2   = 59;$/;"	m	namespace:RefmacType
S3	libs/chemlib/RefmacType.h	/^    const unsigned int S3   = 58;$/;"	m	namespace:RefmacType
SB	libs/chemlib/RefmacType.h	/^    const unsigned int SB   = 159;$/;"	m	namespace:RefmacType
SC	libs/chemlib/RefmacType.h	/^    const unsigned int SC   = 104;$/;"	m	namespace:RefmacType
SDG_ANNEAL_DIST	libs/conflib/sdg_parms.h	/^        const float SDG_ANNEAL_DIST = (0.9F \/ SDG_NCYCLES);$/;"	m	namespace:conflib::sdg_params
SDG_ANNEAL_VOL	libs/conflib/sdg_parms.h	/^        const float SDG_ANNEAL_VOL = (0.9F \/ SDG_NCYCLES);$/;"	m	namespace:conflib::sdg_params
SDG_DIST_TEMP	libs/conflib/sdg_parms.h	/^        const float SDG_DIST_TEMP = 1.0F;$/;"	m	namespace:conflib::sdg_params
SDG_MIN_VOL_ODDS	libs/conflib/sdg_parms.h	/^        const float SDG_MIN_VOL_ODDS = 0.5;$/;"	m	namespace:conflib::sdg_params
SDG_NCYCLES	libs/conflib/sdg_parms.h	/^        const int SDG_NCYCLES = 50;$/;"	m	namespace:conflib::sdg_params
SDG_NONZERO	libs/conflib/sdg_parms.h	/^        const double SDG_NONZERO = 1E-10;$/;"	m	namespace:conflib::sdg_params
SDG_NSTEP_FACTOR	libs/conflib/sdg_parms.h	/^        const int SDG_NSTEP_FACTOR = 100;$/;"	m	namespace:conflib::sdg_params
SDG_OPENEND_HIGH	libs/conflib/sdg_parms.h	/^        const int SDG_OPENEND_HIGH = 2;$/;"	m	namespace:conflib::sdg_params
SDG_OPENEND_LOW	libs/conflib/sdg_parms.h	/^        const int SDG_OPENEND_LOW = 1;$/;"	m	namespace:conflib::sdg_params
SDG_OPENEND_NONE	libs/conflib/sdg_parms.h	/^        const int SDG_OPENEND_NONE = 0;$/;"	m	namespace:conflib::sdg_params
SDG_PARAMETER_DEFS_H	libs/conflib/sdg_parms.h	2;"	d
SDG_VOL_TEMP	libs/conflib/sdg_parms.h	/^        const float SDG_VOL_TEMP = 1.0F;$/;"	m	namespace:conflib::sdg_params
SE	libs/chemlib/RefmacType.h	/^    const unsigned int SE   = 161;$/;"	m	namespace:RefmacType
SED	apps/MIFit/core/Makefile	/^SED           = sed$/;"	m
SED	apps/MIFit/jobs/Makefile	/^SED           = sed$/;"	m
SED	apps/MIFit/main/Makefile	/^SED           = sed$/;"	m
SED	apps/MIFit/script/Makefile	/^SED           = sed$/;"	m
SED	apps/MIFit/ui/Makefile	/^SED           = sed$/;"	m
SED	libs/chemlib/Makefile	/^SED           = sed$/;"	m
SED	libs/conflib/Makefile	/^SED           = sed$/;"	m
SED	libs/jacgrid/Makefile	/^SED           = sed$/;"	m
SED	libs/ligand/Makefile	/^SED           = sed$/;"	m
SED	libs/map/Makefile	/^SED           = sed$/;"	m
SED	libs/math/Makefile	/^SED           = sed$/;"	m
SED	libs/molopt/Makefile	/^SED           = sed$/;"	m
SED	libs/opengl/Makefile	/^SED           = sed$/;"	m
SED	libs/umtz/Makefile	/^SED           = sed$/;"	m
SED	libs/util/Makefile	/^SED           = sed$/;"	m
SEEK_CUR	libs/cmtz/ccp4_sysdep.h	218;"	d
SEEK_CUR	libs/opengl/zlib/zconf.h	241;"	d
SEEK_CUR	libs/umtz/library.h	344;"	d
SEEK_END	libs/cmtz/ccp4_sysdep.h	219;"	d
SEEK_END	libs/opengl/zlib/zconf.h	242;"	d
SEEK_END	libs/umtz/library.h	345;"	d
SEEK_SET	libs/cmtz/ccp4_sysdep.h	217;"	d
SEEK_SET	libs/opengl/zlib/zconf.h	240;"	d
SEEK_SET	libs/umtz/library.h	343;"	d
SELECT_CRYSTAL_DIALOG_H	apps/MIFit/ui/SelectCrystal.h	2;"	d
SEQTYPES_H	apps/MIFit/core/seqtypes.h	2;"	d
SEQ_FORMAT_MODEL	apps/MIFit/core/seqtypes.h	15;"	d
SEQ_FORMAT_MSF	apps/MIFit/core/seqtypes.h	11;"	d
SEQ_FORMAT_SIMPLE	apps/MIFit/core/seqtypes.h	7;"	d
SEQ_UTIL_H	libs/chemlib/sequence_util.h	2;"	d
SFCALCH	libs/map/sfcalc.h	2;"	d
SFCALC_PRIVATE_H	libs/map/sfcalc_data.h	2;"	d
SFCalc	libs/map/EMapBase.cpp	/^bool EMapBase::SFCalc(Residue *res)$/;"	f	class:EMapBase
SH1	libs/chemlib/RefmacType.h	/^    const unsigned int SH1  = 62;$/;"	m	namespace:RefmacType
SHEET	apps/MIFit/core/Colors.cpp	/^const int Colors::SHEET = 1;$/;"	m	class:Colors	file:
SHEET	apps/MIFit/core/Colors.h	/^    static const int SHEET;$/;"	m	class:Colors
SHELX	libs/chemlib/Ligand.h	/^            SHELX,$/;"	e	enum:chemlib::Ligand::__anon28
SHOW_RENDER_TIME	apps/MIFit/ui/MIGLWidget.cpp	105;"	d	file:
SI	libs/chemlib/RefmacType.h	/^    const unsigned int SI   = 88;$/;"	m	namespace:RefmacType
SI1	libs/chemlib/RefmacType.h	/^    const unsigned int SI1  = 89;$/;"	m	namespace:RefmacType
SIDECHAIN	libs/chemlib/model.h	/^        const unsigned int SIDECHAIN = ((unsigned int)0x00002000);$/;"	m	namespace:chemlib::AtomType
SIGN	libs/cmtz/ccp4_types.h	75;"	d
SIGN	libs/math/mathlib.h	37;"	d
SIGN	libs/umtz/library.h	883;"	d
SINGLEATOM	apps/MIFit/ui/Xguicryst.h	10;"	d
SINGLEBOND	libs/chemlib/model.h	20;"	d
SINGLERESIDUE	apps/MIFit/ui/Xguicryst.h	12;"	d
SIZE1	libs/cmtz/mtzdata.h	38;"	d
SM	libs/chemlib/RefmacType.h	/^    const unsigned int SM   = 110;$/;"	m	namespace:RefmacType
SMALL	apps/MIFit/core/rotate.cpp	16;"	d	file:
SMALL_MEDIUM	libs/opengl/zlib/zconf.h	145;"	d
SMALL_MEDIUM	libs/opengl/zlib/zconf.h	154;"	d
SMILES	libs/chemlib/SMILES.cpp	/^SMILES::SMILES()$/;"	f	class:chemlib::SMILES
SMILES	libs/chemlib/SMILES.h	/^    class SMILES : public Reader$/;"	c	namespace:chemlib
SMILESDIALOG_H	apps/MIFit/ui/SmilesDialog.h	2;"	d
SMILESREADER_H	libs/chemlib/SmilesReader.h	2;"	d
SMOOTHING_STEPS	apps/MIFit/ui/surf.cpp	/^unsigned int SMOOTHING_STEPS = 1;$/;"	v
SN	libs/chemlib/RefmacType.h	/^    const unsigned int SN   = 92;$/;"	m	namespace:RefmacType
SOURCES	apps/MIFit/core/Makefile	/^SOURCES       = Annotation.cpp \\$/;"	m
SOURCES	apps/MIFit/jobs/Makefile	/^SOURCES       = BatchJob.cpp \\$/;"	m
SOURCES	apps/MIFit/main/Makefile	/^SOURCES       = main.cpp $/;"	m
SOURCES	apps/MIFit/script/Makefile	/^SOURCES       = LocalSocketScript.cpp \\$/;"	m
SOURCES	apps/MIFit/ui/Makefile	/^SOURCES       = AddResidueDialog.cpp \\$/;"	m
SOURCES	libs/chemlib/Makefile	/^SOURCES       = Aromatic.cpp \\$/;"	m
SOURCES	libs/conflib/Makefile	/^SOURCES       = AtomRefiner.cpp \\$/;"	m
SOURCES	libs/jacgrid/Makefile	/^SOURCES       = grid.cpp \\$/;"	m
SOURCES	libs/ligand/Makefile	/^SOURCES       = LigDictEntry.cpp \\$/;"	m
SOURCES	libs/map/Makefile	/^SOURCES       = CMapHeaderBase.cpp \\$/;"	m
SOURCES	libs/math/Makefile	/^SOURCES       = crystmat.cpp \\$/;"	m
SOURCES	libs/molopt/Makefile	/^SOURCES       = MIMolOpt.cpp moc\/moc_MIMolOpt.cpp$/;"	m
SOURCES	libs/opengl/Makefile	/^SOURCES       = Arc.cpp \\$/;"	m
SOURCES	libs/umtz/Makefile	/^SOURCES       = mmtzlib.c \\$/;"	m
SOURCES	libs/util/Makefile	/^SOURCES       = FileIo.cpp \\$/;"	m
SQR	libs/cmtz/ccp4_types.h	57;"	d
SQR	libs/umtz/library.h	876;"	d
SQUARE_PLANAR	libs/chemlib/model.h	68;"	d
SR	libs/chemlib/RefmacType.h	/^    const unsigned int SR   = 102;$/;"	m	namespace:RefmacType
SStrPar	libs/umtz/library.h	/^struct SStrPar$/;"	s
ST	libs/chemlib/RefmacType.h	/^    const unsigned int ST   = 61;$/;"	m	namespace:RefmacType
START	libs/opengl/zlib/infcodes.cpp	/^{START,         \/* x: set up for LEN *\/$/;"	e	enum:__anon38	file:
STATIC_TREES	libs/opengl/zlib/zutil.h	64;"	d
STDC	libs/opengl/zlib/zconf.h	71;"	d
STDC	libs/opengl/zlib/zconf.h	75;"	d
STEREO_DASHED	libs/chemlib/model.h	47;"	d
STEREO_DOWN	libs/chemlib/model.h	45;"	d
STEREO_EITHER	libs/chemlib/model.h	49;"	d
STEREO_INFER	libs/chemlib/model.h	48;"	d
STEREO_NONE	libs/chemlib/model.h	43;"	d
STEREO_UP	libs/chemlib/model.h	44;"	d
STEREO_WEDGE	libs/chemlib/model.h	46;"	d
STICKS	apps/MIFit/ui/ViewPointSettings.cpp	/^const int ViewPointSettings::STICKS = 0;$/;"	m	class:ViewPointSettings	file:
STICKS	apps/MIFit/ui/ViewPointSettings.h	/^    static const int STICKS;$/;"	m	class:ViewPointSettings
STORED	libs/opengl/zlib/infutil.h	/^    STORED,     \/* processing stored block *\/$/;"	e	enum:__anon34
STORED_BLOCK	libs/opengl/zlib/zutil.h	63;"	d
STRIP	apps/MIFit/core/Makefile	/^STRIP         = $/;"	m
STRIP	apps/MIFit/jobs/Makefile	/^STRIP         = $/;"	m
STRIP	apps/MIFit/main/Makefile	/^STRIP         = $/;"	m
STRIP	apps/MIFit/script/Makefile	/^STRIP         = $/;"	m
STRIP	apps/MIFit/ui/Makefile	/^STRIP         = $/;"	m
STRIP	libs/chemlib/Makefile	/^STRIP         = $/;"	m
STRIP	libs/conflib/Makefile	/^STRIP         = $/;"	m
STRIP	libs/jacgrid/Makefile	/^STRIP         = $/;"	m
STRIP	libs/ligand/Makefile	/^STRIP         = $/;"	m
STRIP	libs/map/Makefile	/^STRIP         = $/;"	m
STRIP	libs/math/Makefile	/^STRIP         = $/;"	m
STRIP	libs/molopt/Makefile	/^STRIP         = $/;"	m
STRIP	libs/opengl/Makefile	/^STRIP         = $/;"	m
STRIP	libs/umtz/Makefile	/^STRIP         = $/;"	m
STRIP	libs/util/Makefile	/^STRIP         = $/;"	m
SUBSTITUENT_CLASS_H	libs/chemlib/Substituent.h	2;"	d
SUBSTITUENT_UTIL_H	libs/chemlib/substituent_util.h	2;"	d
SUBTARGETS	Makefile	/^SUBTARGETS    =  \\$/;"	m
SUBTARGETS	apps/MIFit/Makefile	/^SUBTARGETS    =  \\$/;"	m
SUBTARGETS	apps/Makefile	/^SUBTARGETS    =  \\$/;"	m
SUBTARGETS	libs/Makefile	/^SUBTARGETS    =  \\$/;"	m
SURFACE_ALPHA	apps/MIFit/ui/surf.cpp	/^float SURFACE_ALPHA = -1.0f;$/;"	v
SURFACE_MAXCOLOR	apps/MIFit/ui/surf.cpp	/^int SURFACE_MAXCOLOR = -1;$/;"	v
SURFACE_MAXVAL	apps/MIFit/ui/surf.cpp	/^float SURFACE_MAXVAL = 0.0f;$/;"	v
SURFACE_MINCOLOR	apps/MIFit/ui/surf.cpp	/^int SURFACE_MINCOLOR = -1;$/;"	v
SURFACE_MINVAL	apps/MIFit/ui/surf.cpp	/^float SURFACE_MINVAL = 0.0f;$/;"	v
SURFACE_QUALITY	apps/MIFit/ui/surf.cpp	/^unsigned int SURFACE_QUALITY = 0;$/;"	v
SURFACE_USEGRADCOLOR	apps/MIFit/ui/surf.cpp	/^bool SURFACE_USEGRADCOLOR = false;$/;"	v
SURFDOT	apps/MIFit/core/SURFDOT.h	/^class SURFDOT$/;"	c
SURF_ACCESSIBLE	libs/jacgrid/jacgrid.h	/^    const unsigned int SURF_ACCESSIBLE = 0;$/;"	m	namespace:JACSurfaceTypes
SURF_CONTOUR	libs/jacgrid/jacgrid.h	/^    const unsigned int SURF_CONTOUR = 3;$/;"	m	namespace:JACSurfaceTypes
SURF_GRID_DIMENSION	libs/jacgrid/surface.cpp	/^static unsigned int SURF_GRID_DIMENSION = 65;$/;"	v	file:
SURF_MOLECULAR	libs/jacgrid/jacgrid.h	/^    const unsigned int SURF_MOLECULAR = 1;$/;"	m	namespace:JACSurfaceTypes
SURF_PROBE_RADIUS	libs/jacgrid/surface.cpp	/^static float SURF_PROBE_RADIUS = 1.4f;$/;"	v	file:
SURF_TYPES_MAX	libs/jacgrid/jacgrid.h	/^    const unsigned int SURF_TYPES_MAX = 3;$/;"	m	namespace:JACSurfaceTypes
SURF_VDW	libs/jacgrid/jacgrid.h	/^    const unsigned int SURF_VDW = 2;$/;"	m	namespace:JACSurfaceTypes
SYMGRP	libs/cmtz/mtzdata.h	/^               } SYMGRP;$/;"	t	typeref:struct:__anon23
SYMLINK	Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	apps/MIFit/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	apps/MIFit/core/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	apps/MIFit/jobs/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	apps/MIFit/main/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	apps/MIFit/script/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	apps/MIFit/ui/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	apps/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	libs/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	libs/chemlib/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	libs/conflib/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	libs/jacgrid/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	libs/ligand/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	libs/map/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	libs/math/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	libs/molopt/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	libs/opengl/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	libs/umtz/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMLINK	libs/util/Makefile	/^SYMLINK       = ln -f -s$/;"	m
SYMMATOM	libs/chemlib/model.h	/^        const unsigned int SYMMATOM = ((unsigned int)0x00080000);$/;"	m	namespace:chemlib::AtomType
SYNONYM	libs/chemlib/MIMolDictionary.cpp	/^class SYNONYM$/;"	c	namespace:chemlib	file:
S_fp	libs/map/fftlib.cpp	/^typedef \/* Subroutine *\/ int (*S_fp)(...);$/;"	t	file:
Save	apps/MIFit/core/Molecule.cpp	/^void Molecule::Save(XMLArchive &ar)$/;"	f	class:Molecule
Save	apps/MIFit/ui/EMap.cpp	/^void EMap::Save(CArchive &ar, int i)$/;"	f	class:EMap
Save	libs/chemlib/ConfSaver.cpp	/^void ConfSaver::Save()$/;"	f	class:chemlib::ConfSaver
Save	libs/chemlib/GeomSaver.cpp	/^unsigned int GeomSaver::Save(Residue *res, int nres, MIMoleculeBase *model)$/;"	f	class:chemlib::GeomSaver
Save	libs/chemlib/GeomSaver.cpp	/^unsigned int GeomSaver::Save(const MIAtomList &atoms, MIMoleculeBase *model)$/;"	f	class:chemlib::GeomSaver
Save	libs/math/LSQMatrix.cpp	/^bool LSQMatrix::Save(const char *pathname)$/;"	f	class:LSQMatrix
SaveAs	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::SaveAs()$/;"	f	class:MIGLWidget
SaveAtom	libs/chemlib/SaveAtom.cpp	/^SaveAtom::SaveAtom()$/;"	f	class:chemlib::SaveAtom
SaveAtom	libs/chemlib/SaveAtom.cpp	/^SaveAtom::SaveAtom(MIAtom *a)$/;"	f	class:chemlib::SaveAtom
SaveAtom	libs/chemlib/SaveAtom.h	/^    class SaveAtom$/;"	c	namespace:chemlib
SaveCCP4Phase	libs/map/EMapBase.cpp	/^long EMapBase::SaveCCP4Phase(const char *pathname)$/;"	f	class:EMapBase
SaveCNSPhase	libs/map/EMapBase.cpp	/^long EMapBase::SaveCNSPhase(FILE*)$/;"	f	class:EMapBase
SaveColors	apps/MIFit/ui/MIGLWidget.h	/^    bool SaveColors;$/;"	m	class:MIGLWidget
SaveCrystal	apps/MIFit/ui/CMapHeader.cpp	/^bool CMapHeader::SaveCrystal(const std::string &crystal)$/;"	f	class:CMapHeader
SaveCrystal	libs/map/CMapHeaderBase.h	/^    virtual bool SaveCrystal(const std::string&)$/;"	f	class:CMapHeaderBase
SaveDictionary	libs/chemlib/MIMolDictionary.cpp	/^bool MIMolDictionary::SaveDictionary(const char *pathname, const char *res_type)$/;"	f	class:chemlib::MIMolDictionary
SaveDocument	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::SaveDocument(const std::string &pathname)$/;"	f	class:MIGLWidget
SaveItem	libs/chemlib/SaveItem.cpp	/^SaveItem::SaveItem()$/;"	f	class:chemlib::SaveItem
SaveItem	libs/chemlib/SaveItem.cpp	/^SaveItem::SaveItem(MIMoleculeBase *node, std::string title)$/;"	f	class:chemlib::SaveItem
SaveItem	libs/chemlib/SaveItem.h	/^    class SaveItem$/;"	c	namespace:chemlib
SaveModel	apps/MIFit/ui/SaveModel.h	/^class SaveModel$/;"	c
SaveModelFile	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::SaveModelFile(Molecule *model, const char *description)$/;"	f	class:MIGLWidget
SaveModels	apps/MIFit/ui/MIGLWidget.h	/^    std::vector<SaveModel> SaveModels;$/;"	m	class:MIGLWidget
SaveMolecule	libs/chemlib/SaveItem.h	/^        MIMoleculeBase *SaveMolecule;$/;"	m	class:chemlib::SaveItem
SavePDB	libs/chemlib/PDB.cpp	/^bool SavePDB(FILE *fp, Residue *res, Bond *Connects, int nConnects, bool mark_end, std::vector<std::string> *head, std::vector<std::string> *tail)$/;"	f	namespace:chemlib
SavePDBFile	libs/chemlib/MIMoleculeBase.cpp	/^bool MIMoleculeBase::SavePDBFile(const char *savepath)$/;"	f	class:chemlib::MIMoleculeBase
SavePDBFileVisible	libs/chemlib/MIMoleculeBase.cpp	/^bool MIMoleculeBase::SavePDBFileVisible(const char *savepath)$/;"	f	class:chemlib::MIMoleculeBase
SavePhases	libs/map/EMapBase.cpp	/^bool EMapBase::SavePhases(const char *pathname, int type)$/;"	f	class:EMapBase
SaveSet	libs/chemlib/SaveItem.h	/^        std::vector<SaveAtom> SaveSet;$/;"	m	class:chemlib::SaveItem
SaveSets	libs/chemlib/ConfSaver.h	/^        std::vector < std::vector < confAtomIter > > SaveSets;$/;"	m	class:chemlib::ConfSaver
SaveSets	libs/chemlib/GeomSaver.h	/^        std::vector<SaveItem> SaveSets;$/;"	m	class:chemlib::GeomSaver
SaveSymmMolecule	apps/MIFit/core/Molecule.cpp	/^int Molecule::SaveSymmMolecule(MIAtom *symatom, FILE *fp)$/;"	f	class:Molecule
SaveToken	libs/molopt/MIMolOpt.h	/^    unsigned int SaveToken;$/;"	m	class:MIMolOpt
SaveWarpPhase	libs/map/EMapBase.cpp	/^long EMapBase::SaveWarpPhase(FILE *fp)$/;"	f	class:EMapBase
SaveXtalViewPhase	libs/map/EMapBase.cpp	/^long EMapBase::SaveXtalViewPhase(FILE *fp)$/;"	f	class:EMapBase
SavemmCIF	libs/map/EMapBase.cpp	/^long EMapBase::SavemmCIF(FILE *fp)$/;"	f	class:EMapBase
Scale	libs/chemlib/Ligand.cpp	/^void Ligand::Scale(double scale_factor)$/;"	f	class:chemlib::Ligand
ScaleMap	libs/map/EMapBase.cpp	/^void EMapBase::ScaleMap(float rms)$/;"	f	class:EMapBase
ScaleSolventPercent	libs/map/EMapBase.cpp	/^bool EMapBase::ScaleSolventPercent(float percentSolvent)$/;"	f	class:EMapBase
ScaleVect	libs/chemlib/math_util.h	/^    inline void ScaleVect(T *v, double scale_factor)$/;"	f	namespace:chemlib
ScaleVect	libs/chemlib/math_util.h	/^    inline void ScaleVect(std::vector<T> &v, double scale_factor)$/;"	f	namespace:chemlib
ScaleVect2D	libs/chemlib/math_util.h	/^    inline void ScaleVect2D(T *v, double scale_factor)$/;"	f	namespace:chemlib
ScanAngle	libs/chemlib/MIMolDictionary.cpp	/^bool ScanAngle(multimap<std::string, ANGLEDICT> &angleMap, const char *line)$/;"	f	namespace:chemlib
ScanBond	libs/chemlib/MIMolDictionary.cpp	/^bool ScanBond(multimap<std::string, BondDICT> &bondMap, const char *line)$/;"	f	namespace:chemlib
ScanSymops	libs/map/CMapHeaderBase.cpp	/^void CMapHeaderBase::ScanSymops()$/;"	f	class:CMapHeaderBase
ScattIndex	libs/map/sfcalc.cpp	/^ScattIndex(const char *aname, const char *restype)$/;"	f
Scene	libs/opengl/Scene.h	/^        class Scene : public Renderable$/;"	c	namespace:mi::opengl
Score	libs/conflib/sdg.cpp	/^double sdgDistance::Score()$/;"	f	class:conflib::sdgDistance
ScoreAtom	libs/conflib/AtomRefiner.cpp	/^float AtomRefiner::ScoreAtom(MIAtom *atom)$/;"	f	class:AtomRefiner
ScoreBumps	libs/conflib/AtomRefiner.cpp	/^float AtomRefiner::ScoreBumps(MIAtom*)$/;"	f	class:AtomRefiner
ScoreChirals	libs/conflib/AtomRefiner.cpp	/^float AtomRefiner::ScoreChirals(MIAtom*)$/;"	f	class:AtomRefiner
ScreenCenter	apps/MIFit/ui/AddResidueDialog.h	/^        ScreenCenter,$/;"	e	enum:AddResidueDialog::ResidueOffset
ScriptCommand	apps/MIFit/ui/MIGLWidget.cpp	/^int MIGLWidget::ScriptCommand(const char *ubuf)$/;"	f	class:MIGLWidget
ScriptCommand	libs/map/EMapBase.cpp	/^bool EMapBase::ScriptCommand(const char *ibuf)$/;"	f	class:EMapBase
SearchBonds	apps/MIFit/ui/DictEditCanvas.cpp	/^Bond*DictEditCanvas::SearchBonds(MIAtom *a1, MIAtom *a2)$/;"	f	class:DictEditCanvas
SearchBonds	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::SearchBonds(const MIAtom *a1, vector<Bond> &edges)$/;"	f	class:DictEditCanvas
SearchChirals	apps/MIFit/ui/DictEditCanvas.cpp	/^CHIRAL*DictEditCanvas::SearchChirals(MIAtom *atom)$/;"	f	class:DictEditCanvas
SearchChirals	libs/chemlib/molfile.cpp	/^const CHIRAL*molfile::SearchChirals(const MIAtom *atom, const vector<CHIRAL> &chirals)$/;"	f	class:chemlib::molfile
SearchMoleculeBonds	apps/MIFit/ui/DictEditCanvas.cpp	/^Bond*DictEditCanvas::SearchMoleculeBonds(MIAtom *a1, MIAtom *a2)$/;"	f	class:DictEditCanvas
SearchPlane	apps/MIFit/ui/DictEditCanvas.cpp	/^PLANE*DictEditCanvas::SearchPlane(MIAtom *a)$/;"	f	class:DictEditCanvas
SearchTorsions	apps/MIFit/ui/DictEditCanvas.cpp	/^TORSION*DictEditCanvas::SearchTorsions(MIAtom *a1, MIAtom *a2)$/;"	f	class:DictEditCanvas
SecStrFromAngles	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::SecStrFromAngles()$/;"	f	class:chemlib::MIMoleculeBase
SecondaryStructure	apps/MIFit/core/SecondaryStructure.cpp	/^SecondaryStructure::SecondaryStructure()$/;"	f	class:SecondaryStructure
SecondaryStructure	apps/MIFit/core/SecondaryStructure.h	/^class SecondaryStructure$/;"	c
Select	apps/MIFit/core/Molecule.cpp	/^void Molecule::Select(int clear, int main, int sides, int nonprotein,$/;"	f	class:Molecule
SelectCrystal	apps/MIFit/ui/SelectCrystal.cpp	/^SelectCrystal::SelectCrystal(const std::string &info, QWidget *parent)$/;"	f	class:SelectCrystal
SelectCrystal	apps/MIFit/ui/SelectCrystal.h	/^class SelectCrystal : public QDialog, public Ui::SelectCrystal$/;"	c
SelectCrystal	apps/MIFit/ui/ui_SelectCrystal.h	/^    class SelectCrystal: public Ui_SelectCrystal {};$/;"	c	namespace:Ui
SelectType	apps/MIFit/ui/MIGLWidget.h	/^    int SelectType;$/;"	m	class:MIGLWidget
SeqLength	apps/MIFit/core/Molecule.h	/^inline unsigned int Molecule::SeqLength()$/;"	f	class:Molecule
SeqMax	apps/MIFit/core/Mlculseq.cpp	/^int Molecule::SeqMax()$/;"	f	class:Molecule
SeqString	apps/MIFit/core/Mlculseq.cpp	/^std::string Molecule::SeqString()$/;"	f	class:Molecule
SequenceIdentities	apps/MIFit/core/Mlculseq.cpp	/^int Molecule::SequenceIdentities()$/;"	f	class:Molecule
Serialize	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::Serialize(XMLArchive &ar)$/;"	f	class:MIGLWidget
Set	libs/conflib/FlexTorsion.cpp	/^void FlexTorsion::Set()$/;"	f	class:FlexTorsion
SetAllAromatic	libs/chemlib/RingSystem.cpp	/^void RingSystem::SetAllAromatic()$/;"	f	class:chemlib::RingSystem
SetAngleWeightI	libs/molopt/MIMolOpt.h	/^    void SetAngleWeightI(int v)$/;"	f	class:MIMolOpt
SetAtomType	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::SetAtomType(const char *t)$/;"	f	class:LSQFitDialog
SetBackgroundColor	apps/MIFit/ui/Application.h	/^    void SetBackgroundColor(PaletteColor c)$/;"	f	class:Application
SetBallSize	apps/MIFit/ui/ViewPointSettings.cpp	/^void ViewPointSettings::SetBallSize(int b)$/;"	f	class:ViewPointSettings
SetBallandCylinder	apps/MIFit/ui/ViewPointSettings.cpp	/^void ViewPointSettings::SetBallandCylinder()$/;"	f	class:ViewPointSettings
SetBallandStick	apps/MIFit/ui/ViewPointSettings.cpp	/^void ViewPointSettings::SetBallandStick()$/;"	f	class:ViewPointSettings
SetBallandStick	apps/MIFit/ui/ViewPointSettings.cpp	/^void ViewPointSettings::SetBallandStick(int s)$/;"	f	class:ViewPointSettings
SetBondWeightI	libs/molopt/MIMolOpt.h	/^    void SetBondWeightI(int v)$/;"	f	class:MIMolOpt
SetBumpWeightI	libs/molopt/MIMolOpt.h	/^    void SetBumpWeightI(int v)$/;"	f	class:MIMolOpt
SetBusy	apps/MIFit/ui/Application.cpp	/^void MIBusyManager::SetBusy(bool busy)$/;"	f	class:MIBusyManager
SetCenter	libs/chemlib/Chiral.cpp	/^void Chiral::SetCenter(MIAtom *atom)$/;"	f	class:chemlib::Chiral
SetChanged	libs/map/EMapBase.h	/^    void SetChanged(bool c)$/;"	f	class:EMapBase
SetChoiceOptions	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^static void SetChoiceOptions(QComboBox *choice,$/;"	f	file:
SetColor	apps/MIFit/core/Helix.cpp	/^void Helix::SetColor(unsigned char red, unsigned char green, unsigned char blue)$/;"	f	class:Helix
SetColor	apps/MIFit/core/RibbonSegment.cpp	/^bool RibbonSegment::SetColor(unsigned char bRed, unsigned char bGreen, unsigned char bBlue)$/;"	f	class:RibbonSegment
SetColor	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::SetColor(unsigned char *bRGBA)$/;"	f	class:GLRenderer
SetColor	apps/MIFit/ui/surf.cpp	/^    bool SetColor(short color)$/;"	f	class:MISurface
SetColor	apps/MIFit/ui/surf.cpp	/^    bool SetColor(short color,$/;"	f	class:MISurface
SetConstrainCA	libs/chemlib/MIMolDictionary.h	/^        void SetConstrainCA(bool v)$/;"	f	class:chemlib::MIMolDictionary
SetConstrainEnds	libs/chemlib/MIMolDictionary.h	/^        void SetConstrainEnds(bool v)$/;"	f	class:chemlib::MIMolDictionary
SetConstraintList	libs/conflib/AtomRefiner.h	/^        void SetConstraintList(chemlib::ConstraintList *cl)$/;"	f	class:conflib::AtomRefiner
SetCoordsChanged	libs/chemlib/MIMoleculeBase.h	/^        void SetCoordsChanged(bool m = true)$/;"	f	class:chemlib::MIMoleculeBase
SetCrystal	libs/map/EMapBase.cpp	/^void EMapBase::SetCrystal(const char *crystal)$/;"	f	class:EMapBase
SetCrystalData	apps/MIFit/ui/Application.cpp	/^void Application::SetCrystalData(bool reset)$/;"	f	class:Application
SetCurrent	apps/MIFit/ui/Displaylist.cpp	/^Molecule*Displaylist::SetCurrent(Molecule *mol)$/;"	f	class:Displaylist
SetCurrentAtoms	libs/map/EMapBase.cpp	/^void EMapBase::SetCurrentAtoms(MIAtomList *current)$/;"	f	class:EMapBase
SetCurrentMap	apps/MIFit/ui/Displaylist.cpp	/^bool Displaylist::SetCurrentMap(EMap *emap)$/;"	f	class:Displaylist
SetCursor	apps/MIFit/ui/Application.cpp	/^void MIBusyManager::SetCursor(int id)$/;"	f	class:MIBusyManager
SetCursor	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::SetCursor(unsigned int id)$/;"	f	class:MIGLWidget
SetCursor	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::SetCursor(int id, QWidget *w)$/;"	f	class:MIMainWindow
SetCylinderSize	apps/MIFit/ui/ViewPointSettings.cpp	/^void ViewPointSettings::SetCylinderSize(int b)$/;"	f	class:ViewPointSettings
SetDictionary	apps/MIFit/ui/Application.cpp	/^bool Application::SetDictionary(const std::string &dict)$/;"	f	class:Application
SetDocumentSaved	apps/MIFit/ui/MIGLWidget.h	/^    void SetDocumentSaved(bool saved)$/;"	f	class:MIGLWidget
SetDouble	libs/chemlib/Bond.h	/^        inline void SetDouble()$/;"	f	class:chemlib::Bond
SetEnv	apps/MIFit/ui/Application.cpp	/^void Application::SetEnv()$/;"	f	class:Application
SetExtended	libs/conflib/CoordGenerator.cpp	/^void CoordGenerator::SetExtended(MIAtom *atom)$/;"	f	class:CoordGenerator
SetFile	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^bool PhaseFileLoadDialog::SetFile(const std::string &fname,$/;"	f	class:PhaseFileLoadDialog
SetFilename	apps/MIFit/ui/MIGLWidget.h	/^    void SetFilename(const std::string &fname)$/;"	f	class:MIGLWidget
SetGammaCorrection	apps/MIFit/ui/Application.h	/^    void SetGammaCorrection(const double gamma)$/;"	f	class:Application
SetId	apps/MIFit/ui/TreeData.h	/^    void SetId(QTreeWidgetItem *id)$/;"	f	class:TreeData
SetIdeal	libs/conflib/FlexTorsion.cpp	/^void FlexTorsion::SetIdeal(int n, const float *angles)$/;"	f	class:FlexTorsion
SetIndex	libs/chemlib/Constraint.cpp	/^void Improper::SetIndex(int impnumber)$/;"	f	class:chemlib::Improper
SetIndex	libs/chemlib/Constraint.cpp	/^void Torsion::SetIndex(int torsnumber)$/;"	f	class:chemlib::Torsion
SetIndex	libs/chemlib/RingSystem.cpp	/^void RingSystem::SetIndex(int index)$/;"	f	class:chemlib::RingSystem
SetInput	libs/chemlib/CifData.cpp	/^void CifDataBlock::SetInput(const char *input)$/;"	f	class:CifDataBlock
SetLabel	apps/MIFit/ui/Application.cpp	/^void MIBusyManager::SetLabel(const char *op)$/;"	f	class:MIBusyManager
SetLineThickness	apps/MIFit/ui/ViewPointSettings.cpp	/^void ViewPointSettings::SetLineThickness(int w)$/;"	f	class:ViewPointSettings
SetMap	libs/molopt/MIMolOpt.h	/^    void SetMap(EMapBase *map)$/;"	f	class:MIMolOpt
SetMapHeader	apps/MIFit/core/Molecule.cpp	/^void Molecule::SetMapHeader(const CMapHeaderBase &mh)$/;"	f	class:Molecule
SetMapLinewidth	libs/map/EMapBase.h	/^    void SetMapLinewidth(float n)$/;"	f	class:EMapBase
SetMapNumber	libs/map/EMapBase.h	/^    void SetMapNumber(int n)$/;"	f	class:EMapBase
SetMapWeightI	libs/molopt/MIMolOpt.h	/^    void SetMapWeightI(int v)$/;"	f	class:MIMolOpt
SetMatrix	libs/math/LSQMatrix.cpp	/^void LSQMatrix::SetMatrix(double m[3][3], double v[3])$/;"	f	class:LSQMatrix
SetMatrix	libs/math/LSQMatrix.cpp	/^void LSQMatrix::SetMatrix(float m[3][3], float v[3])$/;"	f	class:LSQMatrix
SetMaxDistance	apps/MIFit/core/clusterList.h	/^    void SetMaxDistance(float d)$/;"	f	class:ClusterList
SetModel	libs/conflib/LigRefiner.cpp	/^void LigRefiner::SetModel(Ligand *model)$/;"	f	class:LigRefiner
SetModified	apps/MIFit/ui/Displaylist.cpp	/^void Displaylist::SetModified(bool value)$/;"	f	class:Displaylist
SetModified	libs/chemlib/MIMolDictionary.h	/^        void SetModified(bool m = true)$/;"	f	class:chemlib::MIMolDictionary
SetModified	libs/chemlib/MIMoleculeBase.h	/^        void SetModified(bool m = true)$/;"	f	class:chemlib::MIMoleculeBase
SetModified	libs/map/EMapBase.h	/^    void SetModified(bool m = true)$/;"	f	class:EMapBase
SetMolGeometry	libs/chemlib/Dictionary.cpp	/^void LigDictionary::SetMolGeometry()$/;"	f	class:chemlib::LigDictionary
SetMolecule	libs/chemlib/RingSystem.cpp	/^void RingSystem::SetMolecule(Ligand *mol)$/;"	f	class:chemlib::RingSystem
SetMolecule	libs/chemlib/Substituent.h	/^        void SetMolecule(const Ligand *mol)$/;"	f	class:chemlib::Substituent
SetMolimageHome	apps/MIFit/ui/Application.cpp	/^void Application::SetMolimageHome(bool reset)$/;"	f	class:Application
SetNeedsRefine	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::SetNeedsRefine(bool n)$/;"	f	class:DictEditCanvas
SetNewFile	apps/MIFit/ui/MIGLWidget.h	/^    void SetNewFile()$/;"	f	class:MIGLWidget
SetNumberCycles	libs/conflib/AtomRefiner.h	/^        void SetNumberCycles(int n)$/;"	f	class:conflib::AtomRefiner
SetNumberCycles	libs/conflib/LigRefiner.h	/^        void SetNumberCycles(int n)$/;"	f	class:conflib::LigRefiner
SetNumberCycles	libs/molopt/MIMolOpt.h	/^    void SetNumberCycles(int n)$/;"	f	class:MIMolOpt
SetOrder	libs/chemlib/Chiral.cpp	/^void Chiral::SetOrder(int order)$/;"	f	class:chemlib::Chiral
SetOrigin	libs/chemlib/Substituent.h	/^        void SetOrigin(MIAtom *origin)$/;"	f	class:chemlib::Substituent
SetParams	libs/jacgrid/plane.cpp	/^void JACPlane::SetParams(float _unit,$/;"	f	class:JACPlane
SetPartialDouble	libs/chemlib/Bond.h	/^        inline void SetPartialDouble()$/;"	f	class:chemlib::Bond
SetPick	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::SetPick(ANGLE *a)$/;"	f	class:DictEditCanvas
SetPick	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::SetPick(Bond *b)$/;"	f	class:DictEditCanvas
SetPick	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::SetPick(CHIRAL *c)$/;"	f	class:DictEditCanvas
SetPick	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::SetPick(PLANE *p)$/;"	f	class:DictEditCanvas
SetPick	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::SetPick(TORSION *t)$/;"	f	class:DictEditCanvas
SetPicked	apps/MIFit/ui/Displaylist.cpp	/^void Displaylist::SetPicked(Molecule *mol, Residue *res, MIAtom *atom)$/;"	f	class:Displaylist
SetPlaneWeightI	libs/molopt/MIMolOpt.h	/^    void SetPlaneWeightI(int v)$/;"	f	class:MIMolOpt
SetPosition	apps/MIFit/core/Annotation.h	/^    void SetPosition(float x, float y, float z)$/;"	f	class:Annotation
SetProfile	apps/MIFit/core/RibbonSpan.cpp	/^int RibbonSpan::SetProfile(double dx, double dy, int square, int profile_pts,$/;"	f	class:RibbonSpan
SetRefiRes	libs/conflib/LigRefiner.cpp	/^long LigRefiner::SetRefiRes(std::vector<Monomer*>::iterator res1,$/;"	f	class:LigRefiner
SetRefiRes	libs/molopt/MIMolOpt.cpp	/^long MIMolOpt::SetRefiRes(Residue *res1, Residue *res2, MIMoleculeBase *node, EMapBase *emap)$/;"	f	class:MIMolOpt
SetRefiSecStruct	libs/chemlib/MIMolDictionary.h	/^        void SetRefiSecStruct(bool v)$/;"	f	class:chemlib::MIMolDictionary
SetRefineWhileFit	libs/molopt/MIMolOpt.h	/^    void SetRefineWhileFit(bool v)$/;"	f	class:MIMolOpt
SetResidue	libs/chemlib/Constraint.h	/^        void SetResidue(const Monomer *r)$/;"	f	class:chemlib::Improper
SetResidue	libs/chemlib/Constraint.h	/^        void SetResidue(const Monomer *r)$/;"	f	class:chemlib::Plane
SetResidue	libs/chemlib/Constraint.h	/^        void SetResidue(const Monomer *r)$/;"	f	class:chemlib::Torsion
SetRingData	libs/chemlib/CovalentGeom.cpp	/^void CovalentGeometry::SetRingData(Angle &angle)$/;"	f	class:chemlib::CovalentGeometry
SetRingFlags	libs/chemlib/Ligand.cpp	/^void Ligand::SetRingFlags()$/;"	f	class:chemlib::Ligand
SetSecStr	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::SetSecStr(Residue *res1, Residue *res2, char sec_str)$/;"	f	class:chemlib::MIMoleculeBase
SetSeq	apps/MIFit/core/Mlculseq.cpp	/^void Molecule::SetSeq(char \/* aa *\/, int index)$/;"	f	class:Molecule
SetSequence	apps/MIFit/core/Mlculseq.cpp	/^void Molecule::SetSequence(std::string s)$/;"	f	class:Molecule
SetShelxHome	apps/MIFit/ui/Application.cpp	/^void Application::SetShelxHome(bool reset)$/;"	f	class:Application
SetShowAllowed	apps/MIFit/ui/RamaPlot.cpp	/^void RamaPlotMgr::SetShowAllowed(bool state)$/;"	f	class:RamaPlotMgr
SetSigmaAngle	libs/chemlib/MIMolDictionary.h	/^        void SetSigmaAngle(float v)$/;"	f	class:chemlib::MIMolDictionary
SetSigmaBond	libs/chemlib/MIMolDictionary.h	/^        void SetSigmaBond(float v)$/;"	f	class:chemlib::MIMolDictionary
SetSigmaBump	libs/chemlib/MIMolDictionary.h	/^        void SetSigmaBump(float v)$/;"	f	class:chemlib::MIMolDictionary
SetSigmaPlane	libs/chemlib/MIMolDictionary.h	/^        void SetSigmaPlane(float v)$/;"	f	class:chemlib::MIMolDictionary
SetSigmaTorsion	libs/chemlib/MIMolDictionary.h	/^        void SetSigmaTorsion(float v)$/;"	f	class:chemlib::MIMolDictionary
SetSilentMode	apps/MIFit/ui/Application.h	/^    void SetSilentMode(bool t)$/;"	f	class:Application
SetSingle	libs/chemlib/Bond.h	/^        inline void SetSingle()$/;"	f	class:chemlib::Bond
SetSpaceFilling	apps/MIFit/ui/ViewPointSettings.cpp	/^void ViewPointSettings::SetSpaceFilling()$/;"	f	class:ViewPointSettings
SetSticks	apps/MIFit/ui/ViewPointSettings.cpp	/^void ViewPointSettings::SetSticks()$/;"	f	class:ViewPointSettings
SetSymmOps	libs/map/CMapHeaderBase.cpp	/^void CMapHeaderBase::SetSymmOps()$/;"	f	class:CMapHeaderBase
SetTatom	libs/chemlib/MIMoleculeBase.h	/^        void SetTatom(MIAtom *a1, MIAtom *a2)$/;"	f	class:chemlib::MIMoleculeBase
SetText	apps/MIFit/core/Annotation.h	/^    void SetText(const char *t)$/;"	f	class:Annotation
SetTitle	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::SetTitle(const std::string &title)$/;"	f	class:MIGLWidget
SetTolerance	libs/chemlib/Constraint.h	/^        void SetTolerance(float t)$/;"	f	class:chemlib::Plane
SetTorsionWeightI	libs/molopt/MIMolOpt.h	/^    void SetTorsionWeightI(int v)$/;"	f	class:MIMolOpt
SetTriple	libs/chemlib/Bond.h	/^        inline void SetTriple()$/;"	f	class:chemlib::Bond
SetUpTorsion	libs/conflib/FlexTorsion.cpp	/^MIAtom *SetUpTorsion(const Residue *res,$/;"	f	namespace:conflib
SetVerbose	libs/molopt/MIMolOpt.h	/^    void SetVerbose(bool v)$/;"	f	class:MIMolOpt
SetVersion	libs/map/EMapBase.h	/^    void SetVersion(const std::string &version)$/;"	f	class:EMapBase
SetView	apps/MIFit/ui/RamaPlot.h	/^    void SetView(MIGLWidget *v)$/;"	f	class:RamaPlotMgr
SetWaitCursor	apps/MIFit/ui/Application.cpp	/^void MIBusyManager::SetWaitCursor()$/;"	f	class:MIBusyManager
SetXfitMouseMode	apps/MIFit/ui/Application.h	/^    void SetXfitMouseMode(bool m)$/;"	f	class:Application
SetupFit	apps/MIFit/ui/MIGLWidget.cpp	/^unsigned int MIGLWidget::SetupFit(Residue *res1, Residue *res2, Molecule *model, char altloc)$/;"	f	class:MIGLWidget
SetupFit	apps/MIFit/ui/MIGLWidget.cpp	/^unsigned int MIGLWidget::SetupFit(const MIAtomList &atoms, Molecule *model, char altloc)$/;"	f	class:MIGLWidget
SetupTorsion	libs/chemlib/MIMoleculeBase.cpp	/^int MIMoleculeBase::SetupTorsion(MIAtom *a1, MIAtom *a2)$/;"	f	class:chemlib::MIMoleculeBase
SetupTorsion	libs/chemlib/MIMoleculeBase.cpp	/^int MIMoleculeBase::SetupTorsion(MIAtom *a1, MIAtom *a2, MIAtomList *atoms)$/;"	f	class:chemlib::MIMoleculeBase
ShelxHome	apps/MIFit/ui/Application.h	/^    std::string ShelxHome;$/;"	m	class:Application
Show	apps/MIFit/core/Molecule.cpp	/^void Molecule::Show()$/;"	f	class:Molecule
Show	libs/map/EMapBase.h	/^    void Show()$/;"	f	class:EMapBase
ShowAll	apps/MIFit/core/Molecule.cpp	/^void Molecule::ShowAll()$/;"	f	class:Molecule
ShowAngles	apps/MIFit/ui/DictEditCanvas.h	/^    bool ShowAngles;$/;"	m	class:DictEditCanvas
ShowAnnotations	apps/MIFit/core/Molecule.h	/^inline void Molecule::ShowAnnotations()$/;"	f	class:Molecule
ShowBonds	apps/MIFit/ui/DictEditCanvas.h	/^    bool ShowBonds;$/;"	m	class:DictEditCanvas
ShowChirals	apps/MIFit/ui/DictEditCanvas.h	/^    bool ShowChirals;$/;"	m	class:DictEditCanvas
ShowContacts	apps/MIFit/ui/CMolwViewScene.h	/^    bool ShowContacts;$/;"	m	class:CMolwViewScene
ShowContacts	apps/MIFit/ui/MIGLWidget.h	/^    bool ShowContacts;$/;"	m	class:MIGLWidget
ShowDictEditor	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::ShowDictEditor(const char *type)$/;"	f	class:MIMainWindow
ShowDots	apps/MIFit/core/Molecule.h	/^inline void Molecule::ShowDots()$/;"	f	class:Molecule
ShowExtras	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::ShowExtras(unsigned int mapNum, bool show)$/;"	f	class:PhaseFileLoadDialog
ShowGnomon	apps/MIFit/ui/CMolwViewScene.h	/^    bool ShowGnomon;$/;"	m	class:CMolwViewScene
ShowGnomon	apps/MIFit/ui/MIGLWidget.h	/^    bool ShowGnomon;$/;"	m	class:MIGLWidget
ShowHydrogens	apps/MIFit/core/Molecule.cpp	/^void Molecule::ShowHydrogens(bool Show)$/;"	f	class:Molecule
ShowHydrogens	apps/MIFit/ui/DictEditCanvas.h	/^    bool ShowHydrogens;$/;"	m	class:DictEditCanvas
ShowItem	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::ShowItem()$/;"	f	class:DisplayTree
ShowItem	apps/MIFit/ui/ModelsView.cpp	/^void AtomsTree::ShowItem()$/;"	f	class:AtomsTree
ShowItem	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::ShowItem()$/;"	f	class:ModelsTree
ShowItem	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::ShowItem()$/;"	f	class:ResiduesTree
ShowLabels	apps/MIFit/core/Molecule.h	/^inline void Molecule::ShowLabels()$/;"	f	class:Molecule
ShowLabels	apps/MIFit/ui/CMolwViewScene.h	/^    bool ShowLabels;$/;"	m	class:CMolwViewScene
ShowLabels	apps/MIFit/ui/MIGLWidget.h	/^    bool ShowLabels;$/;"	m	class:MIGLWidget
ShowLog	apps/MIFit/jobs/BatchJob.cpp	/^void BatchJob::ShowLog()$/;"	f	class:BatchJob
ShowLog	apps/MIFit/ui/JobsView.cpp	/^void JobsTree::ShowLog()$/;"	f	class:JobsTree
ShowLogFile	apps/MIFit/jobs/BatchJobManager.cpp	/^void BatchJobManager::ShowLogFile(BatchJob *b)$/;"	f	class:BatchJobManager
ShowPlanes	apps/MIFit/ui/DictEditCanvas.h	/^    bool ShowPlanes;$/;"	m	class:DictEditCanvas
ShowProperties	apps/MIFit/ui/JobsView.cpp	/^void JobsTree::ShowProperties()$/;"	f	class:JobsTree
ShowTorsions	apps/MIFit/ui/DictEditCanvas.h	/^    bool ShowTorsions;$/;"	m	class:DictEditCanvas
SigmaA_C	libs/map/fftsub.cpp	/^int SigmaA_C(CREFL *refl, int nrefl, CMapHeaderBase *mhin)$/;"	f
SigmaMap	libs/map/EMapBase.cpp	/^bool EMapBase::SigmaMap()$/;"	f	class:EMapBase
SignedAtomVolume	libs/chemlib/atom_util.cpp	/^double SignedAtomVolume(const MIAtom &a1, const MIAtom &a2, const MIAtom &a3, const MIAtom &a4)$/;"	f	namespace:chemlib
SignedVolume	libs/chemlib/mol_util.h	/^    inline double SignedVolume(MIAtom *center, MIAtom *a1, MIAtom *a2, MIAtom *a3)$/;"	f	namespace:chemlib
SimpleMouseRotator	libs/opengl/interact/SimpleMouseRotator.cpp	/^SimpleMouseRotator::SimpleMouseRotator(Viewpoint *viewpoint, float angle)$/;"	f	class:mi::opengl::interact::SimpleMouseRotator
SimpleMouseRotator	libs/opengl/interact/SimpleMouseRotator.h	/^            class SimpleMouseRotator$/;"	c	namespace:mi::opengl::interact
SingleResidue	apps/MIFit/ui/surf.h	/^    const unsigned int SingleResidue = 1;$/;"	m	namespace:MISurfaceSelectionMode
SingleSquash	libs/chemlib/Substituent.cpp	/^void Substituent::SingleSquash()$/;"	f	class:chemlib::Substituent
Skip_f2c_Undefs	libs/cmtz/ccp4_sysdep.h	179;"	d
Skip_f2c_Undefs	libs/cmtz/ccp4_sysdep.h	183;"	d
Skip_f2c_Undefs	libs/umtz/library.h	308;"	d
Skip_f2c_Undefs	libs/umtz/library.h	312;"	d
SlurpAngles	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SlurpAngles(CifLoop &loop,$/;"	f	class:chemlib::mmCIF
SlurpAtoms	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SlurpAtoms(CifLoop &loop, Residue *res)$/;"	f	class:chemlib::mmCIF
SlurpAtoms	libs/chemlib/molfile.cpp	/^bool molfile::SlurpAtoms(FILE *fp, Residue *res, int natoms)$/;"	f	class:chemlib::molfile
SlurpBonds	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SlurpBonds(CifLoop &loop, map<std::string, MIAtom*> &atom_map, vector<Bond> &bonds)$/;"	f	class:chemlib::mmCIF
SlurpBonds	libs/chemlib/molfile.cpp	/^bool molfile::SlurpBonds(FILE *fp, vector<Bond> &bonds, const Residue *res, int nbonds)$/;"	f	class:chemlib::molfile
SlurpChiralAtoms	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SlurpChiralAtoms(CifLoop &loop, map<std::string, CHIRALDICT> &chiral_map)$/;"	f	class:chemlib::mmCIF
SlurpChirals	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SlurpChirals(CifLoop &loop, map<std::string, CHIRALDICT> &chiral_map)$/;"	f	class:chemlib::mmCIF
SlurpHeader	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SlurpHeader(CifLoop &loop, Residue *res)$/;"	f	class:chemlib::mmCIF
SlurpNames	libs/chemlib/CifParser.cpp	/^void CifTokenizer::SlurpNames(std::vector<std::string> &names)$/;"	f	class:CifTokenizer
SlurpPlaneAtoms	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SlurpPlaneAtoms(CifLoop &loop,$/;"	f	class:chemlib::mmCIF
SlurpPlanes	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SlurpPlanes(CifLoop &loop,$/;"	f	class:chemlib::mmCIF
SlurpProperties	libs/chemlib/molfile.cpp	/^bool molfile::SlurpProperties(FILE *fp, Residue *res)$/;"	f	class:chemlib::molfile
SlurpTorsionValues	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SlurpTorsionValues(CifLoop &loop,$/;"	f	class:chemlib::mmCIF
SlurpTorsions	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SlurpTorsions(CifLoop &loop, map<std::string, TORSDICT> &torsion_map)$/;"	f	class:chemlib::mmCIF
SlurpValues	libs/chemlib/CifParser.cpp	/^void CifTokenizer::SlurpValues(std::string &input)$/;"	f	class:CifTokenizer
SmallBox	apps/MIFit/ui/graphlib.cpp	524;"	d	file:
SmallCircle	apps/MIFit/ui/graphlib.cpp	527;"	d	file:
SmallCross	apps/MIFit/ui/graphlib.cpp	521;"	d	file:
SmallestAliphaticRing	libs/chemlib/RingSystem.cpp	/^int RingSystem::SmallestAliphaticRing(const MIAtom *atom1,$/;"	f	class:chemlib::RingSystem
SmallestRing	libs/chemlib/Aromatic.cpp	/^int Aromatic::SmallestRing(const Bond *bond) const$/;"	f	class:chemlib::Aromatic
SmallestRing	libs/chemlib/Aromatic.cpp	/^int Aromatic::SmallestRing(const MIAtom *atom) const$/;"	f	class:chemlib::Aromatic
SmallestRing	libs/chemlib/Aromatic.cpp	/^int Aromatic::SmallestRing(const MIAtom *atom1,$/;"	f	class:chemlib::Aromatic
SmallestRing	libs/chemlib/RingSystem.cpp	/^int RingSystem::SmallestRing(const Bond *bond)$/;"	f	class:chemlib::RingSystem
SmallestRing	libs/chemlib/RingSystem.cpp	/^int RingSystem::SmallestRing(const MIAtom *atom)$/;"	f	class:chemlib::RingSystem
SmallestRing	libs/chemlib/RingSystem.cpp	/^int RingSystem::SmallestRing(const MIAtom *atom1,$/;"	f	class:chemlib::RingSystem
SmiRingClosures	libs/chemlib/SmilesReader.cpp	/^SmiRingClosures::SmiRingClosures()$/;"	f	class:chemlib::SmiRingClosures
SmiRingClosures	libs/chemlib/SmilesReader.h	/^    class SmiRingClosures$/;"	c	namespace:chemlib
Smiles	libs/chemlib/Ligand.h	/^            Smiles,$/;"	e	enum:chemlib::Ligand::__anon28
SmilesDbCommand	apps/MIFit/ui/Application.h	/^    std::string SmilesDbCommand;$/;"	m	class:Application
SmilesDialog	apps/MIFit/ui/SmilesDialog.cpp	/^SmilesDialog::SmilesDialog(QWidget *parent)$/;"	f	class:SmilesDialog
SmilesDialog	apps/MIFit/ui/SmilesDialog.h	/^class SmilesDialog : public QDialog, public Ui::SmilesDialog$/;"	c
SmilesDialog	apps/MIFit/ui/ui_SmilesDialog.h	/^    class SmilesDialog: public Ui_SmilesDialog {};$/;"	c	namespace:Ui
SmilesReader	libs/chemlib/SmilesReader.cpp	/^SmilesReader::SmilesReader(const char *smistr, Ligand *lig)$/;"	f	class:chemlib::SmilesReader
SmilesReader	libs/chemlib/SmilesReader.cpp	/^SmilesReader::SmilesReader(const char *smistr, Ligand *lig, Residue &res, std::vector<Bond> &bonds)$/;"	f	class:chemlib::SmilesReader
SmilesReader	libs/chemlib/SmilesReader.h	/^    class SmilesReader$/;"	c	namespace:chemlib
SmilesToLig	libs/chemlib/SmilesReader.cpp	/^bool SmilesToLig(const std::string &smiles,$/;"	f	namespace:chemlib
SmilesToMol	libs/chemlib/SmilesReader.cpp	/^Residue *SmilesToMol(const std::string &smiles,$/;"	f	namespace:chemlib
SmoothMap	libs/map/EMapBase.cpp	/^bool EMapBase::SmoothMap(float radius)$/;"	f	class:EMapBase
SolidSurfaceMenuId	apps/MIFit/ui/MIGLWidget.cpp	/^    enum SolidSurfaceMenuId$/;"	g	namespace:__anon10	file:
SolventSurface	apps/MIFit/core/Molecule.cpp	/^long Molecule::SolventSurface(ViewPoint*, float dotsper)$/;"	f	class:Molecule
SortChains	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::SortChains()$/;"	f	class:ModelsTree
SortChains	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::SortChains()$/;"	f	class:chemlib::MIMoleculeBase
SortSubsCounterClockwise	libs/chemlib/substituent_util.cpp	/^void SortSubsCounterClockwise(std::vector<Substituent> &subs)$/;"	f	namespace:chemlib
Sphere	libs/opengl/Sphere.cpp	/^Sphere::Sphere(float radius, int slices, int stacks)$/;"	f	class:mi::opengl::Sphere
Sphere	libs/opengl/Sphere.h	/^        class Sphere$/;"	c	namespace:mi::opengl
SplineOrder	libs/map/fftsub.cpp	/^static int SplineOrder;$/;"	v	file:
SplitAtoms	libs/chemlib/MIMoleculeBase.cpp	/^size_t MIMoleculeBase::SplitAtoms(MIAtomList &atoms, bool torsion_only)$/;"	f	class:chemlib::MIMoleculeBase
SplitPath	apps/MIFit/ui/MIGLWidget.cpp	/^static void SplitPath(const std::string &origPath,$/;"	f	file:
SplitPath	apps/MIFit/ui/MIMainWindow.cpp	/^static void SplitPath(const std::string &origPath,$/;"	f	file:
SquaredAtomDist	libs/chemlib/mol_util.h	/^    inline double SquaredAtomDist(const MIAtom &a, const MIAtom &b)$/;"	f	namespace:chemlib
SquaredVectLength	libs/chemlib/math_util.h	/^    inline double SquaredVectLength(const T *v)$/;"	f	namespace:chemlib
SquaredVectLength	libs/chemlib/math_util.h	/^    inline double SquaredVectLength(const std::vector<T> &v)$/;"	f	namespace:chemlib
Squash	libs/chemlib/Substituent.cpp	/^void Substituent::Squash()$/;"	f	class:chemlib::Substituent
SquirtAngles	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SquirtAngles(FILE *fp, std::string &resname,$/;"	f	class:chemlib::mmCIF
SquirtAtoms	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SquirtAtoms(FILE *fp, map<MIAtom*, int> &atom_map,$/;"	f	class:chemlib::mmCIF
SquirtAtoms	libs/chemlib/molfile.cpp	/^bool molfile::SquirtAtoms(FILE *fp, const Residue &res, const vector<Bond> &bonds,$/;"	f	class:chemlib::molfile
SquirtBonds	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SquirtBonds(FILE *fp, std::string &resname,$/;"	f	class:chemlib::mmCIF
SquirtBonds	libs/chemlib/molfile.cpp	/^bool molfile::SquirtBonds(FILE *fp, const Residue &res, const vector<Bond> &bonds)$/;"	f	class:chemlib::molfile
SquirtChirality	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SquirtChirality(FILE *fp, std::string &resname,$/;"	f	class:chemlib::mmCIF
SquirtPlanes	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SquirtPlanes(FILE *fp, std::string &resname,$/;"	f	class:chemlib::mmCIF
SquirtTorsions	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SquirtTorsions(FILE *fp, std::string &resname, map<MIAtom*, int> &atom_map, vector<TORSION> &torsions)$/;"	f	class:chemlib::mmCIF
SquirtTree	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SquirtTree(FILE *fp, std::string &resname,$/;"	f	class:chemlib::mmCIF
SquirtTreeAtom	libs/chemlib/mmCIF.cpp	/^bool mmCIF::SquirtTreeAtom(FILE *fp, std::string &resname, MIAtom *patom,$/;"	f	class:chemlib::mmCIF
SquirtTreeFindNext	libs/chemlib/mmCIF.cpp	/^void mmCIF::SquirtTreeFindNext(MIAtom *prev, MIAtom *curr, MIAtom **next,$/;"	f	class:chemlib::mmCIF
Stack	apps/MIFit/core/Stack.cpp	/^Stack::Stack()$/;"	f	class:Stack
Stack	apps/MIFit/core/Stack.h	/^class Stack : public QObject$/;"	c
StackExpandTop2Range	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::StackExpandTop2Range()$/;"	f	class:MIGLWidget
StackItem	apps/MIFit/core/Stack.h	/^} StackItem;$/;"	t	typeref:struct:__anon3
StartJob	apps/MIFit/jobs/BatchJob.cpp	/^bool BatchJob::StartJob()$/;"	f	class:BatchJob
StartOfModel	apps/MIFit/ui/AddResidueDialog.h	/^        StartOfModel,$/;"	e	enum:AddResidueDialog::ModelLocation
StartWaitCursor	apps/MIFit/ui/Application.cpp	/^void MIBusyManager::StartWaitCursor()$/;"	f	class:MIBusyManager
StdevAngles	libs/molopt/MIMolOpt.cpp	/^float MIMolOpt::StdevAngles()$/;"	f	class:MIMolOpt
StdevBonds	libs/molopt/MIMolOpt.cpp	/^float MIMolOpt::StdevBonds()$/;"	f	class:MIMolOpt
StdevPlanes	libs/molopt/MIMolOpt.cpp	/^float MIMolOpt::StdevPlanes()$/;"	f	class:MIMolOpt
StdevTorsions	libs/molopt/MIMolOpt.cpp	/^float MIMolOpt::StdevTorsions()$/;"	f	class:MIMolOpt
StereoView	libs/opengl/StereoView.cpp	/^StereoView::StereoView(Frustum *frustum, Camera *camera)$/;"	f	class:mi::opengl::StereoView
StereoView	libs/opengl/StereoView.h	/^        class StereoView$/;"	c	namespace:mi::opengl
Sticks	apps/MIFit/ui/DictEditCanvas.cpp	/^    Sticks,$/;"	e	enum:RenderMode	file:
StopWaitCursor	apps/MIFit/ui/Application.cpp	/^void MIBusyManager::StopWaitCursor()$/;"	f	class:MIBusyManager
Str_Desc	libs/umtz/library.h	/^struct Str_Desc$/;"	s
Str_length	libs/umtz/library.h	/^    int Str_length;$/;"	m	struct:Str_Desc
Str_pointer	libs/umtz/library.h	/^    char *Str_pointer;$/;"	m	struct:Str_Desc
String	apps/MIFit/ui/GenericDataDialog.h	/^        String,$/;"	e	enum:GenericDataDialog::FieldType
String	apps/MIFit/ui/graphlib.cpp	509;"	d	file:
StringForMapType	libs/map/EMapBase.cpp	/^const char *StringForMapType(unsigned int maptype)$/;"	f
StringIo	libs/util/StringIo.cpp	/^StringIo::StringIo()$/;"	f	class:StringIo
StringIo	libs/util/StringIo.cpp	/^StringIo::StringIo(const StringIo &stringIo)$/;"	f	class:StringIo
StringIo	libs/util/StringIo.cpp	/^StringIo::StringIo(const char *data)$/;"	f	class:StringIo
StringIo	libs/util/StringIo.h	/^class StringIo : public io$/;"	c
StringIoData	libs/util/StringIo.h	/^    struct StringIoData$/;"	s	class:StringIo
StringPair	apps/MIFit/ui/GLFormatDialog.cpp	/^typedef QPair<QString, QString> StringPair;$/;"	t	namespace:__anon8	file:
Structure_annotation	apps/MIFit/core/Annotation.h	/^        Structure_annotation,$/;"	e	enum:Annotation::__anon1
SubTriangle	libs/jacgrid/surface.cpp	/^void ProbeT::SubTriangle(float *a, float *b, float *c, unsigned int level)$/;"	f	class:ProbeT
Subdivide	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::Subdivide(int level, bool bWireFrame, float fnorm, float radius[3],$/;"	f	class:GLRenderer
Subscript	libs/chemlib/Matrix.h	/^    typedef int Subscript;$/;"	t	namespace:TNT
Substituent	libs/chemlib/Substituent.h	/^    class Substituent$/;"	c	namespace:chemlib
SubtractPartial	libs/map/sfcalc.cpp	/^int SubtractPartial(CREFL refl[], int nrefl, CMapHeaderBase *mh)$/;"	f
SumBondVectors	libs/chemlib/atom_util.h	/^    SumBondVectors(double *v, const MIAtom *atom)$/;"	f	namespace:chemlib
SumDistances	libs/conflib/FlexTorsion.cpp	/^int SumDistances(const AtomGraph &graph, AtomGraphIndex *distances, AtomGraphIndex source)$/;"	f	namespace:conflib
SumRootVectors	libs/conflib/CoordGenerator.cpp	/^void CoordGenerator::SumRootVectors()$/;"	f	class:CoordGenerator
SuperSurface	apps/MIFit/ui/surf.cpp	/^class SuperSurface$/;"	c	file:
SuperSurfaces	apps/MIFit/ui/surf.cpp	/^static std::map<void*, SuperSurface> SuperSurfaces;$/;"	v	file:
SurfResult	apps/MIFit/core/SURFDOT.cpp	/^int SurfResult = 1;$/;"	v
Surface	apps/MIFit/core/Molecule.cpp	/^long Molecule::Surface(MIAtom *atom, bool ignore_hidden, bool send_signal)$/;"	f	class:Molecule
SurfaceAroundAtom	apps/MIFit/core/Molecule.cpp	/^long Molecule::SurfaceAroundAtom(MIAtom *atom, float dotsper, float radius)$/;"	f	class:Molecule
SurfaceAtom	apps/MIFit/core/Molecule.cpp	/^long Molecule::SurfaceAtom(MIAtom *atom, float dotsper, bool ignore_hidden)$/;"	f	class:Molecule
SurfaceCenter	apps/MIFit/core/Molecule.cpp	/^long Molecule::SurfaceCenter(ViewPoint *viewpoint, float dotsper, float boxsize, bool ignore_hidden)$/;"	f	class:Molecule
SurfaceCurrent	apps/MIFit/ui/Displaylist.cpp	/^long Displaylist::SurfaceCurrent(MIAtomList atoms, float radius_mult)$/;"	f	class:Displaylist
SurfaceCurrent	apps/MIFit/ui/MIGLWidget.h	/^    int SurfaceCurrent;$/;"	m	class:MIGLWidget
SurfaceDots	apps/MIFit/core/Molecule.h	/^    typedef std::vector<SURFDOT> SurfaceDots;$/;"	t	class:Molecule
SurfaceResidue	apps/MIFit/core/Molecule.cpp	/^long Molecule::SurfaceResidue(Residue *res, float dotsper, bool ignore_hidden)$/;"	f	class:Molecule
SurfaceResidues	apps/MIFit/core/Molecule.cpp	/^long Molecule::SurfaceResidues(float dotsper, bool ignore_hidden)$/;"	f	class:Molecule
SurfaceSphere	apps/MIFit/core/SurfaceSphere.cpp	/^SurfaceSphere::SurfaceSphere()$/;"	f	class:SurfaceSphere
SurfaceSphere	apps/MIFit/core/SurfaceSphere.h	/^class SurfaceSphere$/;"	c
SwapColumns	libs/chemlib/Matrix.h	/^        void SwapColumns(Subscript N1, Subscript N2)$/;"	f	class:TNT::Matrix
SwapRows	libs/chemlib/Matrix.h	/^        void SwapRows(Subscript M1, Subscript M2)$/;"	f	class:TNT::Matrix
SymInfoString	libs/map/CMapHeaderBase.h	/^    std::string SymInfoString;$/;"	m	class:CMapHeaderBase
SymmLink	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::SymmLink()$/;"	f	class:chemlib::MIMoleculeBase
SymmResidue	apps/MIFit/core/RESIDUE.cpp	/^Residue *SymmResidue(const Residue *Model, CMapHeaderBase *mh, float center[3], float r, int color)$/;"	f
SymmResidues	libs/chemlib/MIMoleculeBase.h	/^        Residue *SymmResidues;$/;"	m	class:chemlib::MIMoleculeBase
SymopsString	libs/map/CMapHeaderBase.h	/^    std::vector<std::string>SymopsString;$/;"	m	class:CMapHeaderBase
Synonym	libs/chemlib/MIMolDictionary.cpp	/^static std::vector<SYNONYM> Synonym;$/;"	m	namespace:chemlib	file:
TA	libs/chemlib/RefmacType.h	/^    const unsigned int TA   = 130;$/;"	m	namespace:RefmacType
TABLE	libs/opengl/zlib/infutil.h	/^    TABLE,      \/* get table lengths *\/$/;"	e	enum:__anon34
TAR	apps/MIFit/core/Makefile	/^TAR           = tar -cf$/;"	m
TAR	apps/MIFit/jobs/Makefile	/^TAR           = tar -cf$/;"	m
TAR	apps/MIFit/main/Makefile	/^TAR           = tar -cf$/;"	m
TAR	apps/MIFit/script/Makefile	/^TAR           = tar -cf$/;"	m
TAR	apps/MIFit/ui/Makefile	/^TAR           = tar -cf$/;"	m
TAR	libs/chemlib/Makefile	/^TAR           = tar -cf$/;"	m
TAR	libs/conflib/Makefile	/^TAR           = tar -cf$/;"	m
TAR	libs/jacgrid/Makefile	/^TAR           = tar -cf$/;"	m
TAR	libs/ligand/Makefile	/^TAR           = tar -cf$/;"	m
TAR	libs/map/Makefile	/^TAR           = tar -cf$/;"	m
TAR	libs/math/Makefile	/^TAR           = tar -cf$/;"	m
TAR	libs/molopt/Makefile	/^TAR           = tar -cf$/;"	m
TAR	libs/opengl/Makefile	/^TAR           = tar -cf$/;"	m
TAR	libs/umtz/Makefile	/^TAR           = tar -cf$/;"	m
TAR	libs/util/Makefile	/^TAR           = tar -cf$/;"	m
TARGET	apps/MIFit/core/Makefile	/^TARGET        = libcore.a$/;"	m
TARGET	apps/MIFit/jobs/Makefile	/^TARGET        = libjobs.a$/;"	m
TARGET	apps/MIFit/main/Makefile	/^TARGET        = ..\/..\/..\/..\/mifit-mifit\/MIFit$/;"	m
TARGET	apps/MIFit/script/Makefile	/^TARGET        = libscript.a$/;"	m
TARGET	apps/MIFit/ui/Makefile	/^TARGET        = libui.a$/;"	m
TARGET	libs/chemlib/Makefile	/^TARGET        = libchemlib.a$/;"	m
TARGET	libs/conflib/Makefile	/^TARGET        = libconflib.a$/;"	m
TARGET	libs/jacgrid/Makefile	/^TARGET        = libjacgrid.a$/;"	m
TARGET	libs/ligand/Makefile	/^TARGET        = libligand.a$/;"	m
TARGET	libs/map/Makefile	/^TARGET        = libmap.a$/;"	m
TARGET	libs/math/Makefile	/^TARGET        = libmimath.a$/;"	m
TARGET	libs/molopt/Makefile	/^TARGET        = libmolopt.a$/;"	m
TARGET	libs/opengl/Makefile	/^TARGET        = libmiopengl.a$/;"	m
TARGET	libs/umtz/Makefile	/^TARGET        = libumtz.a$/;"	m
TARGET	libs/util/Makefile	/^TARGET        = libmiutil.a$/;"	m
TB	libs/chemlib/RefmacType.h	/^    const unsigned int TB   = 113;$/;"	m	namespace:RefmacType
TBegin	libs/chemlib/MIMolDictionary.h	/^        std::vector<TORSDICT>::const_iterator TBegin() const$/;"	f	class:chemlib::MIMolDictionary
TC	libs/chemlib/RefmacType.h	/^    const unsigned int TC   = 135;$/;"	m	namespace:RefmacType
TD.md 	libs/umtz/html/doxygen.css	/^TD.md { background-color: #f2f2ff }$/;"	s
TE	libs/chemlib/RefmacType.h	/^    const unsigned int TE   = 162;$/;"	m	namespace:RefmacType
TETRAHEDRAL	libs/chemlib/model.h	67;"	d
TEXTURE_SIZE	libs/opengl/Text.cpp	/^    const int TEXTURE_SIZE = 256;$/;"	m	namespace:__anon45	file:
TEnd	libs/chemlib/MIMolDictionary.h	/^        std::vector<TORSDICT>::const_iterator TEnd() const$/;"	f	class:chemlib::MIMolDictionary
TH	libs/chemlib/RefmacType.h	/^    const unsigned int TH   = 121;$/;"	m	namespace:RefmacType
TI	libs/chemlib/RefmacType.h	/^    const unsigned int TI   = 125;$/;"	m	namespace:RefmacType
TINY	libs/chemlib/transform_util.cpp	25;"	d	file:
TITLE_ROOM	apps/MIFit/ui/graphlib.cpp	17;"	d	file:
TL	libs/chemlib/RefmacType.h	/^    const unsigned int TL   = 156;$/;"	m	namespace:RefmacType
TM	libs/chemlib/RefmacType.h	/^    const unsigned int TM   = 117;$/;"	m	namespace:RefmacType
TNT	libs/chemlib/Matrix.h	/^namespace TNT$/;"	n
TNT_CMAT_H	libs/chemlib/Matrix.h	2;"	d
TOP	libs/opengl/Frustum.cpp	/^const int Frustum::TOP = 0;$/;"	m	class:mi::opengl::Frustum	file:
TOP	libs/opengl/Frustum.h	/^            static const int TOP;$/;"	m	class:mi::opengl::Frustum
TORSDICT	libs/chemlib/TORSION.h	/^        TORSDICT()$/;"	f	class:chemlib::TORSDICT
TORSDICT	libs/chemlib/TORSION.h	/^    class TORSDICT$/;"	c	namespace:chemlib
TORSION	libs/chemlib/TORSION.h	/^        TORSION() : atom1(0), atom2(0), atom3(0), atom4(0), nideal(0), tolerance(0.0f),$/;"	f	class:chemlib::TORSION
TORSION	libs/chemlib/TORSION.h	/^    class TORSION$/;"	c	namespace:chemlib
TORSIONATOM	libs/chemlib/model.h	/^        const unsigned int TORSIONATOM = ((unsigned int)0x00000200);$/;"	m	namespace:chemlib::AtomType
TORSION_WRITE_PROMPT	libs/chemlib/mmCIF.cpp	/^MITorsionWritePrompt *TORSION_WRITE_PROMPT = NULL;$/;"	m	namespace:chemlib	file:
TRANSFORM_UTIL_H	libs/chemlib/transform_util.h	2;"	d
TRANSLATE	apps/MIFit/ui/MIGLWidget.cpp	116;"	d	file:
TRIGONAL_BIPYRAMIDAL	libs/chemlib/model.h	69;"	d
TRIGONAL_PLANAR	libs/chemlib/model.h	66;"	d
TRIPLEBOND	libs/chemlib/model.h	22;"	d
TRUE	libs/cmtz/ccp4_types.h	44;"	d
TRUE	libs/umtz/library.h	863;"	d
TRY_FREE	libs/opengl/zlib/zutil.h	218;"	d
TURN	apps/MIFit/core/Colors.cpp	/^const int Colors::TURN = 3;$/;"	m	class:Colors	file:
TURN	apps/MIFit/core/Colors.h	/^    static const int TURN;$/;"	m	class:Colors
TYPE	libs/opengl/zlib/infutil.h	/^    TYPE,       \/* get type bits (3, including end bit) *\/$/;"	e	enum:__anon34
TYPEMASK	libs/chemlib/model.h	/^        const unsigned int TYPEMASK = ((unsigned int)0x000000FF);$/;"	m	namespace:chemlib::AtomType
TargetFeedback	libs/opengl/interact/TargetFeedback.cpp	/^TargetFeedback::TargetFeedback(float *color)$/;"	f	class:mi::opengl::interact::TargetFeedback
TargetFeedback	libs/opengl/interact/TargetFeedback.h	/^            class TargetFeedback$/;"	c	namespace:mi::opengl::interact
Tatom1	libs/chemlib/MIMoleculeBase.h	/^        MIAtom *Tatom1;$/;"	m	class:chemlib::MIMoleculeBase
Tatom2	libs/chemlib/MIMoleculeBase.h	/^        MIAtom *Tatom2;$/;"	m	class:chemlib::MIMoleculeBase
TetraAngleRemainder	libs/chemlib/CovalentGeom.cpp	/^float TetraAngleRemainder(std::vector<Angle> &fixed)$/;"	f	namespace:chemlib
Text	libs/opengl/Text.cpp	/^Text::Text(const QFont &f) : d(new TextPrivate(f))$/;"	f	class:mi::opengl::Text
Text	libs/opengl/Text.h	/^class Text$/;"	c	namespace:mi::opengl
TextPrivate	libs/opengl/Text.cpp	/^TextPrivate::TextPrivate(const QFont &f)$/;"	f	class:mi::opengl::TextPrivate
TextPrivate	libs/opengl/Text.cpp	/^struct TextPrivate$/;"	s	namespace:mi::opengl	file:
Theight	apps/MIFit/ui/graphlib.cpp	/^int Theight(QFont &font)$/;"	f
Thorough	libs/chemlib/MIMolDictionary.h	/^        const unsigned int Thorough = 2;$/;"	m	namespace:chemlib::Refine_Level
ThreeFoTwoFc	libs/map/maptypes.h	/^    const unsigned int ThreeFoTwoFc = 6;$/;"	m	namespace:MIMapType
TildeExpand	apps/MIFit/ui/Application.cpp	/^const char *TildeExpand(const char *filename)$/;"	f
TimerOn	apps/MIFit/ui/MIGLWidget.h	/^    int TimerOn;$/;"	m	class:MIGLWidget
Title	libs/chemlib/SaveItem.h	/^        std::string Title;$/;"	m	class:chemlib::SaveItem
ToANGLE	libs/chemlib/Constraint.cpp	/^ANGLE Angle::ToANGLE(const MIAtomList &new_atoms,$/;"	f	class:chemlib::Angle
ToBond	libs/chemlib/Constraint.cpp	/^Bond BondLength::ToBond(const MIAtomList &new_atoms,$/;"	f	class:chemlib::BondLength
ToCHIRAL	libs/chemlib/Chiral.cpp	/^CHIRAL Chiral::ToCHIRAL(const MIAtomList &new_atoms,$/;"	f	class:chemlib::Chiral
ToPLANE	libs/chemlib/Constraint.cpp	/^PLANE Plane::ToPLANE(const MIAtomList &new_atoms,$/;"	f	class:chemlib::Plane
ToTORSION	libs/chemlib/Constraint.cpp	/^TORSION Improper::ToTORSION(const MIAtomList &new_atoms,$/;"	f	class:chemlib::Improper
ToTORSION	libs/chemlib/Constraint.cpp	/^TORSION Torsion::ToTORSION(const MIAtomList &new_atoms,$/;"	f	class:chemlib::Torsion
ToggleHydrogens	apps/MIFit/core/Molecule.h	/^inline void Molecule::ToggleHydrogens()$/;"	f	class:Molecule
ToolTipInterval	apps/MIFit/ui/MIGLWidget.h	/^    long ToolTipInterval;$/;"	m	class:MIGLWidget
Tools	apps/MIFit/ui/tools.cpp	/^Tools::Tools()$/;"	f	class:Tools
Tools	apps/MIFit/ui/tools.h	/^class Tools : public QObject$/;"	c
TopView	apps/MIFit/ui/MIGLWidget.h	/^    bool TopView;$/;"	m	class:MIGLWidget
TorsDict	libs/chemlib/MIMolDictionary.h	/^        std::vector<TORSDICT> TorsDict;$/;"	m	class:chemlib::MIMolDictionary
TorsNames	libs/chemlib/MIMolDictionary.h	/^        std::set<std::string> TorsNames;$/;"	m	class:chemlib::MIMolDictionary
Torsion	libs/chemlib/Constraint.h	/^    class Torsion$/;"	c	namespace:chemlib
TorsionArrow	apps/MIFit/ui/MIGLWidget.h	/^    std::vector<PLINE> TorsionArrow;$/;"	m	class:MIGLWidget
TorsionKeyIndices	libs/chemlib/CifData.cpp	/^TorsionKeyIndices::TorsionKeyIndices(const std::vector<std::string> &names)$/;"	f	class:TorsionKeyIndices
TorsionKeyIndices	libs/chemlib/CifData.h	/^class TorsionKeyIndices$/;"	c
TorsionMatch	libs/molopt/MIMolOpt.h	/^struct TorsionMatch : public std::binary_function<chemlib::TORSION, chemlib::TORSDICT, bool>$/;"	s
TorsionOptimize	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::TorsionOptimize(MIAtomList &CurrentAtoms, MIMoleculeBase *fitmol,$/;"	f	class:MIMolOpt
TorsionValueKeyIndices	libs/chemlib/CifData.cpp	/^TorsionValueKeyIndices::TorsionValueKeyIndices(std::vector<std::string> &names)$/;"	f	class:TorsionValueKeyIndices
TorsionValueKeyIndices	libs/chemlib/CifData.h	/^class TorsionValueKeyIndices$/;"	c
TorsionWeight	libs/conflib/AtomRefiner.h	/^        float BondWeight, AngleWeight, PlaneWeight, TorsionWeight;$/;"	m	class:conflib::AtomRefiner
TorsionWeight	libs/conflib/LigRefiner.h	/^        float BondWeight, AngleWeight, PlaneWeight, TorsionWeight, BumpWeight;$/;"	m	class:conflib::LigRefiner
TorsionWeight	libs/molopt/MIMolOpt.h	/^    float BondWeight, AngleWeight, PlaneWeight, MapWeight, TorsionWeight, BumpWeight;$/;"	m	class:MIMolOpt
Torsioning	apps/MIFit/ui/MIGLWidget.h	/^    int Torsioning;$/;"	m	class:MIGLWidget
Torsions	libs/chemlib/Constraint.h	/^        std::vector<Torsion> Torsions;$/;"	m	class:chemlib::ConstraintList
Trace	libs/opengl/zlib/zutil.h	195;"	d
Trace	libs/opengl/zlib/zutil.h	202;"	d
Tracec	libs/opengl/zlib/zutil.h	198;"	d
Tracec	libs/opengl/zlib/zutil.h	205;"	d
Tracecv	libs/opengl/zlib/zutil.h	199;"	d
Tracecv	libs/opengl/zlib/zutil.h	206;"	d
Tracev	libs/opengl/zlib/zutil.h	196;"	d
Tracev	libs/opengl/zlib/zutil.h	203;"	d
Tracevv	libs/opengl/zlib/zutil.h	197;"	d
Tracevv	libs/opengl/zlib/zutil.h	204;"	d
Transform	libs/jacgrid/plane.cpp	/^void JACPlane::Transform(float *v, float i, float j) const$/;"	f	class:JACPlane
TransformAtoms3D	libs/chemlib/transform_util.h	/^    inline void TransformAtoms3D(const double *mat, MIAtomList &atoms)$/;"	f	namespace:chemlib
Translate	apps/MIFit/core/Molecule.cpp	/^void Molecule::Translate(float x, float y, float z, MIAtomList *atoms)$/;"	f	class:Molecule
Translate	apps/MIFit/core/Molecule.cpp	/^void Molecule::Translate(float x, float y, float z, MIAtomList *atoms, SurfaceDots *dots)$/;"	f	class:Molecule
Translate	libs/chemlib/Ligand.cpp	/^void Ligand::Translate(double xstep, double ystep, double zstep)$/;"	f	class:chemlib::Ligand
Translate	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::Translate(float x, float y, float z, MIAtomList *atoms)$/;"	f	class:chemlib::MIMoleculeBase
TranslateAtomVec	libs/molopt/MIMolOpt.cpp	/^static void TranslateAtomVec(double x, double y, double z, MIAtomList *atoms)$/;"	f	file:
TranslateAtomVec	libs/molopt/MIMolOpt.cpp	/^static void TranslateAtomVec(float x, float y, float z, MIAtomList *atoms)$/;"	f	file:
TranslateAtoms3D	libs/chemlib/transform_util.h	/^    inline void TranslateAtoms3D(const double *v, MIAtomList &atoms)$/;"	f	namespace:chemlib
TranslateAtomsToCenter	apps/MIFit/core/Molecule.cpp	/^void Molecule::TranslateAtomsToCenter(MIAtomList &atoms, ViewPoint *viewpoint)$/;"	f	class:Molecule
TranslateAtomsToCenter	apps/MIFlex/miflex.cpp	/^static void TranslateAtomsToCenter(MIMoleculeBase *mol, std::vector<MIAtom*> &atoms,$/;"	f	file:
TranslateFragment	libs/chemlib/Ligand.cpp	/^void Ligand::TranslateFragment(MIAtom *source, MIAtom *target, double *v)$/;"	f	class:chemlib::Ligand
TranslateResidueToCenter	apps/MIFit/core/Molecule.cpp	/^void Molecule::TranslateResidueToCenter(Residue *res, ViewPoint *viewpoint)$/;"	f	class:Molecule
TranslateToOrigin	libs/chemlib/transform_util.cpp	/^void TranslateToOrigin(MIAtom *ref, Ligand *mol)$/;"	f	namespace:chemlib
TranslationFeedback	libs/opengl/interact/TranslationFeedback.cpp	/^TranslationFeedback::TranslationFeedback(float *color)$/;"	f	class:mi::opengl::interact::TranslationFeedback
TranslationFeedback	libs/opengl/interact/TranslationFeedback.h	/^            class TranslationFeedback$/;"	c	namespace:mi::opengl::interact
TraverseString	libs/chemlib/SmilesReader.cpp	/^void SmilesReader::TraverseString()$/;"	f	class:chemlib::SmilesReader
TreeData	apps/MIFit/ui/TreeData.h	/^    TreeData() : item(NULL), atom(NULL), residue(NULL), chain(NULL), mapHeader(NULL), map(NULL), model(NULL),$/;"	f	class:TreeData
TreeData	apps/MIFit/ui/TreeData.h	/^class TreeData$/;"	c
TriangleAngle	libs/chemlib/math_util.h	/^    inline double TriangleAngle(T a, T b, T c)$/;"	f	namespace:chemlib
TriangleRender	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::TriangleRender(bool bWireFrame, float n1[3], float n2[3], float n3[3],$/;"	f	class:GLRenderer
TrigAngleRemainder	libs/chemlib/CovalentGeom.cpp	/^float TrigAngleRemainder(std::vector<Angle> &fixed)$/;"	f	namespace:chemlib
TrimBonds	libs/chemlib/mol_util.cpp	/^void TrimBonds(std::vector<Bond> &trimmed_bonds,$/;"	f	namespace:chemlib
Tuple	libs/math/Tuple.h	/^        class Tuple$/;"	c	namespace:mi::math
Tuple3	libs/math/Tuple3.h	/^        Tuple3<Type>::Tuple3()$/;"	f	class:mi::math::Tuple3
Tuple3	libs/math/Tuple3.h	/^        Tuple3<Type>::Tuple3(Type x, Type y, Type z)$/;"	f	class:mi::math::Tuple3
Tuple3	libs/math/Tuple3.h	/^        template<class Type> class Tuple3$/;"	c	namespace:mi::math
Tuple4	libs/math/Tuple4.h	/^        Tuple4<Type>::Tuple4()$/;"	f	class:mi::math::Tuple4
Tuple4	libs/math/Tuple4.h	/^        Tuple4<Type>::Tuple4(Type x, Type y, Type z, Type w)$/;"	f	class:mi::math::Tuple4
Tuple4	libs/math/Tuple4.h	/^        template<class Type> class Tuple4$/;"	c	namespace:mi::math
Tweak	libs/conflib/sdg.cpp	/^void sdgDistance::Tweak(float pace)$/;"	f	class:conflib::sdgDistance
Tweak	libs/conflib/sdg.cpp	/^void sdgVolume::Tweak(float pace)$/;"	f	class:conflib::sdgVolume
Twidth	apps/MIFit/ui/graphlib.cpp	/^int Twidth(QFont &font, const std::string &c)$/;"	f
TwoFoFc	libs/map/maptypes.h	/^    const unsigned int TwoFoFc = 2;$/;"	m	namespace:MIMapType
TwoFoFcSigmaA	libs/map/maptypes.h	/^    const unsigned int TwoFoFcSigmaA = 8;$/;"	m	namespace:MIMapType
TypeArsenic	libs/chemlib/RefmacAtomTyper.cpp	/^char*RefmacAtomTyper::TypeArsenic(const MIAtom *atom) const$/;"	f	class:chemlib::RefmacAtomTyper
TypeCarbon	libs/chemlib/RefmacAtomTyper.cpp	/^char*RefmacAtomTyper::TypeCarbon(const MIAtom *atom) const$/;"	f	class:chemlib::RefmacAtomTyper
TypeGermanium	libs/chemlib/RefmacAtomTyper.cpp	/^char*RefmacAtomTyper::TypeGermanium(const MIAtom *atom) const$/;"	f	class:chemlib::RefmacAtomTyper
TypeHydrogen	libs/chemlib/RefmacAtomTyper.cpp	/^char*RefmacAtomTyper::TypeHydrogen(const MIAtom *atom) const$/;"	f	class:chemlib::RefmacAtomTyper
TypeNitrogen	libs/chemlib/RefmacAtomTyper.cpp	/^char*RefmacAtomTyper::TypeNitrogen(const MIAtom *atom) const$/;"	f	class:chemlib::RefmacAtomTyper
TypeOther	libs/chemlib/RefmacAtomTyper.cpp	/^char*RefmacAtomTyper::TypeOther(const MIAtom *atom) const$/;"	f	class:chemlib::RefmacAtomTyper
TypeOxygen	libs/chemlib/RefmacAtomTyper.cpp	/^char*RefmacAtomTyper::TypeOxygen(const MIAtom *atom) const$/;"	f	class:chemlib::RefmacAtomTyper
TypePhosphorus	libs/chemlib/RefmacAtomTyper.cpp	/^char*RefmacAtomTyper::TypePhosphorus(const MIAtom *atom) const$/;"	f	class:chemlib::RefmacAtomTyper
TypeSilicon	libs/chemlib/RefmacAtomTyper.cpp	/^char*RefmacAtomTyper::TypeSilicon(const MIAtom *atom) const$/;"	f	class:chemlib::RefmacAtomTyper
TypeSulfur	libs/chemlib/RefmacAtomTyper.cpp	/^char*RefmacAtomTyper::TypeSulfur(const MIAtom *atom) const$/;"	f	class:chemlib::RefmacAtomTyper
U	libs/chemlib/MIAtom.cpp	/^float MIAtom::U(size_t index) const$/;"	f	class:chemlib::MIAtom
U	libs/chemlib/MIAtom.cpp	/^float MIAtom::U(size_t index, float value)$/;"	f	class:chemlib::MIAtom
U	libs/chemlib/RefmacType.h	/^    const unsigned int U    = 123;$/;"	m	namespace:RefmacType
UI_ADDRESIDUEDIALOG_H	apps/MIFit/ui/ui_AddResidueDialog.h	10;"	d
UI_ATOMCOLORS_H	apps/MIFit/ui/ui_AtomColors.h	10;"	d
UI_BVALUECOLORS_H	apps/MIFit/ui/ui_BValueColors.h	10;"	d
UI_CONTOUROPTIONSWIDGET_H	apps/MIFit/ui/ui_ContourOptionsWidget.h	10;"	d
UI_CUSTOMJOBDIALOG_H	apps/MIFit/ui/ui_CustomJobDialog.h	10;"	d
UI_CUSTOMJOBPREFERENCES_H	apps/MIFit/ui/ui_CustomJobPreferences.h	10;"	d
UI_DICTEDITORFORM_H	apps/MIFit/ui/ui_dicteditorform.h	10;"	d
UI_ENVIRONMENTPREFERENCES_H	apps/MIFit/ui/ui_EnvironmentPreferences.h	10;"	d
UI_GENERALPREFERENCES_H	apps/MIFit/ui/ui_GeneralPreferences.h	10;"	d
UI_GLFORMATDIALOG_H	apps/MIFit/ui/ui_GLFormatDialog.h	10;"	d
UI_GLFORMATEDIT_H	apps/MIFit/ui/ui_GLFormatEdit.h	10;"	d
UI_LSQFITDIALOG_H	apps/MIFit/ui/ui_LSQFitDialog.h	10;"	d
UI_MANAGECRYSTALS_H	apps/MIFit/ui/ui_ManageCrystals.h	10;"	d
UI_PHASEFILELOADDIALOG_H	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	10;"	d
UI_PREFERENCESDIALOG_H	apps/MIFit/ui/ui_PreferencesDialog.h	10;"	d
UI_REFINEMENTOPTIONSDIALOG_H	apps/MIFit/ui/ui_RefinementOptionsDialog.h	10;"	d
UI_SELECTCRYSTAL_H	apps/MIFit/ui/ui_SelectCrystal.h	10;"	d
UI_SMILESDIALOG_H	apps/MIFit/ui/ui_SmilesDialog.h	10;"	d
UInt	apps/MIFit/ui/GenericDataDialog.h	/^        UInt,$/;"	e	enum:GenericDataDialog::FieldType
UNALIGNED_OK	libs/opengl/zlib/zconf.h	67;"	d
UNGRAB	libs/opengl/zlib/inffast.cpp	22;"	d	file:
UNMARKED_POINT	libs/jacgrid/surface.cpp	/^static const float UNMARKED_POINT = -9999.0;$/;"	v	file:
UPDATE	libs/opengl/zlib/infutil.h	74;"	d
UPDBITS	libs/opengl/zlib/infutil.h	71;"	d
UPDIN	libs/opengl/zlib/infutil.h	72;"	d
UPDOUT	libs/opengl/zlib/infutil.h	73;"	d
UPPER_MASK	libs/math/MersenneTwister.h	/^            const unsigned int UPPER_MASK;$/;"	m	class:mi::math::MersenneTwister
URL	apps/MIFit/core/Annotation.h	/^        URL,$/;"	e	enum:Annotation::__anon1
USESIN	libs/map/fftsub.cpp	430;"	d	file:
UTIL_H	libs/chemlib/util.h	2;"	d
U_	libs/chemlib/MIAtom.h	/^        float *U_;$/;"	m	class:chemlib::MIAtom
U_fp	libs/map/fftlib.cpp	/^typedef int \/* Unknown procedure type *\/ (*U_fp)(...);$/;"	t	file:
Ui	apps/MIFit/ui/AddResidueDialog.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/CustomJobPreferences.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/DictEditCanvas.h	/^namespace Ui$/;"	n
Ui	apps/MIFit/ui/GLFormatDialog.h	/^namespace Ui$/;"	n
Ui	apps/MIFit/ui/GLFormatEdit.h	/^namespace Ui$/;"	n
Ui	apps/MIFit/ui/ui_AddResidueDialog.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/ui_AtomColors.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/ui_BValueColors.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/ui_CustomJobDialog.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/ui_CustomJobPreferences.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/ui_GLFormatDialog.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/ui_GLFormatEdit.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/ui_GeneralPreferences.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/ui_LSQFitDialog.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/ui_ManageCrystals.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/ui_PreferencesDialog.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/ui_SelectCrystal.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/ui_SmilesDialog.h	/^namespace Ui {$/;"	n
Ui	apps/MIFit/ui/ui_dicteditorform.h	/^namespace Ui {$/;"	n
Ui_AddResidueDialog	apps/MIFit/ui/ui_AddResidueDialog.h	/^class Ui_AddResidueDialog$/;"	c
Ui_AtomColors	apps/MIFit/ui/ui_AtomColors.h	/^class Ui_AtomColors$/;"	c
Ui_BValueColors	apps/MIFit/ui/ui_BValueColors.h	/^class Ui_BValueColors$/;"	c
Ui_ContourOptionsWidget	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^class Ui_ContourOptionsWidget$/;"	c
Ui_CustomJobDialog	apps/MIFit/ui/ui_CustomJobDialog.h	/^class Ui_CustomJobDialog$/;"	c
Ui_CustomJobPreferences	apps/MIFit/ui/ui_CustomJobPreferences.h	/^class Ui_CustomJobPreferences$/;"	c
Ui_DictEditorForm	apps/MIFit/ui/ui_dicteditorform.h	/^class Ui_DictEditorForm$/;"	c
Ui_EnvironmentPreferences	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^class Ui_EnvironmentPreferences$/;"	c
Ui_GLFormatDialog	apps/MIFit/ui/ui_GLFormatDialog.h	/^class Ui_GLFormatDialog$/;"	c
Ui_GLFormatEdit	apps/MIFit/ui/ui_GLFormatEdit.h	/^class Ui_GLFormatEdit$/;"	c
Ui_GeneralPreferences	apps/MIFit/ui/ui_GeneralPreferences.h	/^class Ui_GeneralPreferences$/;"	c
Ui_LSQFitDialog	apps/MIFit/ui/ui_LSQFitDialog.h	/^class Ui_LSQFitDialog$/;"	c
Ui_ManageCrystals	apps/MIFit/ui/ui_ManageCrystals.h	/^class Ui_ManageCrystals$/;"	c
Ui_PhaseFileLoadDialog	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^class Ui_PhaseFileLoadDialog$/;"	c
Ui_PreferencesDialog	apps/MIFit/ui/ui_PreferencesDialog.h	/^class Ui_PreferencesDialog$/;"	c
Ui_RefinementOptionsDialog	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^class Ui_RefinementOptionsDialog$/;"	c
Ui_SelectCrystal	apps/MIFit/ui/ui_SelectCrystal.h	/^class Ui_SelectCrystal$/;"	c
Ui_SmilesDialog	apps/MIFit/ui/ui_SmilesDialog.h	/^class Ui_SmilesDialog$/;"	c
UnDo	apps/MIFit/core/Molecule.cpp	/^void Molecule::UnDo()$/;"	f	class:Molecule
UnDo	apps/MIFit/core/ViewPoint.cpp	/^void ViewPoint::UnDo()$/;"	f	class:ViewPoint
UnDoable	apps/MIFit/core/Molecule.h	/^inline bool Molecule::UnDoable(Molecule *node)$/;"	f	class:Molecule
UnDoable	apps/MIFit/core/ViewPoint.cpp	/^bool ViewPoint::UnDoable() const$/;"	f	class:ViewPoint
Undo	libs/molopt/MIMolOpt.cpp	/^bool MIMolOpt::Undo()$/;"	f	class:MIMolOpt
UndoList	apps/MIFit/core/ViewPoint.h	/^    std::vector<ViewSave> UndoList;$/;"	m	class:ViewPoint
Unknown	apps/MIFit/core/Annotation.h	/^        Unknown,$/;"	e	enum:Annotation::__anon1
Unknown	libs/chemlib/MIMolDictionary.h	/^        const unsigned int Unknown = 0;$/;"	m	namespace:chemlib::DictionaryHLevel
Unroll	libs/chemlib/Ligand.cpp	/^void Ligand::Unroll()$/;"	f	class:chemlib::Ligand
UnrollAtom	libs/chemlib/Ligand.cpp	/^void Ligand::UnrollAtom(MIAtom *origin, MIAtom *ref)$/;"	f	class:chemlib::Ligand
UnspecDoubleBond	libs/chemlib/Dictionary.cpp	/^void LigDictionary::UnspecDoubleBond(Bond *bond)$/;"	f	class:chemlib::LigDictionary
UnusedValences	libs/chemlib/mol_util.cpp	/^int UnusedValences(const MIAtom &atom,$/;"	f	namespace:chemlib
Update	apps/MIFit/ui/MIGLWidget.h	/^    int Update; \/\/ picture needs updating$/;"	m	class:MIGLWidget
Update	apps/MIFit/ui/RamaPlot.cpp	/^void RamaPlotMgr::Update(MIMoleculeBase *mol,$/;"	f	class:RamaPlotMgr
Update	apps/MIFit/ui/RamaPlot.cpp	/^void RamaPlotMgr::Update(Residue *focusres, unsigned int select_type)$/;"	f	class:RamaPlotMgr
UpdateAtoms	libs/chemlib/Bond.cpp	/^bool Bond::UpdateAtoms(const MIAtomList &old_atoms,$/;"	f	class:chemlib::Bond
UpdateButtons	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::UpdateButtons()$/;"	f	class:DictEditCanvas
UpdateChirals	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::UpdateChirals()$/;"	f	class:DictEditCanvas
UpdateContacts	apps/MIFit/ui/Displaylist.cpp	/^void Displaylist::UpdateContacts()$/;"	f	class:Displaylist
UpdateCurrent	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::UpdateCurrent()$/;"	f	class:MIGLWidget
UpdateFirstShell	libs/chemlib/Substituent.cpp	/^void Substituent::UpdateFirstShell()$/;"	f	class:chemlib::Substituent
UpdateFlags	libs/chemlib/Substituent.cpp	/^void Substituent::UpdateFlags()$/;"	f	class:chemlib::Substituent
UpdateGeom	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::UpdateGeom()$/;"	f	class:DictEditCanvas
UpdateResolution	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::UpdateResolution()$/;"	f	class:PhaseFileLoadDialog
UseColumnLabels	libs/map/EMapBase.cpp	/^void EMapBase::UseColumnLabels(const std::string &fostr, const std::string &fcstr,$/;"	f	class:EMapBase
UseNCR	libs/map/EMapBase.h	/^    bool UseNCR;$/;"	m	class:EMapBase
V	libs/chemlib/RefmacType.h	/^    const unsigned int V    = 128;$/;"	m	namespace:RefmacType
VALENCE_LOOKUP_H	libs/chemlib/valence.h	2;"	d
VDW_SURFACE	apps/MIFit/ui/MIGLWidget.cpp	109;"	d	file:
VIEWPOINTIO_H	apps/MIFit/core/ViewPointIO.h	2;"	d
VIEWPOINTSETTINGS_H	apps/MIFit/ui/ViewPointSettings.h	2;"	d
VMS	libs/cmtz/ccp4_sysdep.h	69;"	d
VMS	libs/umtz/library.h	182;"	d
VOID	libs/map/fftlib.cpp	126;"	d	file:
VSNPRINTF_NEG_TRUNC_CODE	libs/util/util.cpp	15;"	d	file:
ValenceType	libs/chemlib/valence.h	/^    namespace ValenceType$/;"	n	namespace:chemlib
ValidateSmiles	libs/chemlib/SmilesReader.cpp	/^bool ValidateSmiles(const std::string &smi, std::string &smi_err)$/;"	f	namespace:chemlib
Vardesc	libs/map/fftlib.cpp	/^struct Vardesc      \/* for Namelist *\/$/;"	s	file:
Vardesc	libs/map/fftlib.cpp	/^typedef struct Vardesc Vardesc;$/;"	t	typeref:struct:Vardesc	file:
VectLength	libs/chemlib/math_util.h	/^    inline double VectLength(const T *v)$/;"	f	namespace:chemlib
VectLength	libs/chemlib/math_util.h	/^    inline double VectLength(const std::vector<T> &v)$/;"	f	namespace:chemlib
VectLength2D	libs/chemlib/math_util.h	/^    inline double VectLength2D(const T *v)$/;"	f	namespace:chemlib
Vector3	libs/math/Vector3.h	/^        Vector3<Type>::Vector3()$/;"	f	class:mi::math::Vector3
Vector3	libs/math/Vector3.h	/^        Vector3<Type>::Vector3(Type x, Type y, Type z)$/;"	f	class:mi::math::Vector3
Vector3	libs/math/Vector3.h	/^        Vector3<Type>::Vector3(const Tuple3<Type> &source)$/;"	f	class:mi::math::Vector3
Vector3	libs/math/Vector3.h	/^        class Vector3 : public Tuple3<Type>$/;"	c	namespace:mi::math
Vector4	libs/math/Vector4.h	/^        Vector4<Type>::Vector4()$/;"	f	class:mi::math::Vector4
Vector4	libs/math/Vector4.h	/^        Vector4<Type>::Vector4(Type x, Type y, Type z, Type w)$/;"	f	class:mi::math::Vector4
Vector4	libs/math/Vector4.h	/^        Vector4<Type>::Vector4(const Tuple4<Type> &source)$/;"	f	class:mi::math::Vector4
Vector4	libs/math/Vector4.h	/^        class Vector4 : public Tuple4<Type>$/;"	c	namespace:mi::math
VertexSender	libs/jacgrid/jacgrid.h	/^class VertexSender$/;"	c
ViewController	apps/MIFit/ui/MIGLWidget.h	/^    ViewController() : QObject()$/;"	f	class:ViewController
ViewController	apps/MIFit/ui/MIGLWidget.h	/^class ViewController : public QObject$/;"	c
ViewPoint	apps/MIFit/core/ViewPoint.cpp	/^ViewPoint::ViewPoint()$/;"	f	class:ViewPoint
ViewPoint	apps/MIFit/core/ViewPoint.h	/^class ViewPoint$/;"	c
ViewPointAnimation	apps/MIFit/ui/MIGLWidget.cpp	/^    ViewPointAnimation::ViewPointAnimation(ViewPoint *viewpoint, MIGLWidget *parent)$/;"	f	class:__anon10::ViewPointAnimation
ViewPointAnimation	apps/MIFit/ui/MIGLWidget.cpp	/^    class ViewPointAnimation : public QAbstractAnimation$/;"	c	namespace:__anon10	file:
ViewPointIO	apps/MIFit/core/ViewPointIO.h	/^class ViewPointIO$/;"	c
ViewPointSettings	apps/MIFit/ui/ViewPointSettings.cpp	/^ViewPointSettings::ViewPointSettings()$/;"	f	class:ViewPointSettings
ViewPointSettings	apps/MIFit/ui/ViewPointSettings.h	/^class ViewPointSettings$/;"	c
ViewSave	apps/MIFit/core/ViewPoint.h	/^class ViewSave$/;"	c
ViewSyncedPanel	apps/MIFit/ui/ViewSyncedPanel.cpp	/^ViewSyncedPanel::ViewSyncedPanel(QWidget *parent)$/;"	f	class:ViewSyncedPanel
ViewSyncedPanel	apps/MIFit/ui/ViewSyncedPanel.h	/^class ViewSyncedPanel : public QWidget$/;"	c
ViewToPanelMap	apps/MIFit/ui/ViewSyncedPanel.h	/^    typedef std::map<MIGLWidget*, QWidget*> ViewToPanelMap;$/;"	t	class:ViewSyncedPanel
Viewpoint	libs/opengl/Viewpoint.cpp	/^Viewpoint::Viewpoint()$/;"	f	class:mi::opengl::Viewpoint
Viewpoint	libs/opengl/Viewpoint.h	/^        class Viewpoint$/;"	c	namespace:mi::opengl
Viewport	libs/opengl/Viewport.cpp	/^Viewport::Viewport()$/;"	f	class:mi::opengl::Viewport
Viewport	libs/opengl/Viewport.h	/^        class Viewport$/;"	c	namespace:mi::opengl
ViewportRelativeViewpoint	libs/opengl/ViewportRelativeViewpoint.cpp	/^ViewportRelativeViewpoint::ViewportRelativeViewpoint(Viewpoint *reference)$/;"	f	class:mi::opengl::ViewportRelativeViewpoint
ViewportRelativeViewpoint	libs/opengl/ViewportRelativeViewpoint.h	/^        class ViewportRelativeViewpoint : public RelativeViewpoint$/;"	c	namespace:mi::opengl
Visible	apps/MIFit/core/Molecule.h	/^inline int Molecule::Visible()$/;"	f	class:Molecule
Visible	libs/map/EMapBase.h	/^    bool Visible()$/;"	f	class:EMapBase
VisibleBounds	apps/MIFit/core/Molecule.cpp	/^bool Molecule::VisibleBounds(mi::opengl::Viewpoint *camera, float &axmin, float &axmax,$/;"	f	class:Molecule
Void	libs/math/LSQMatrix.h	/^inline void LSQMatrix::Void()$/;"	f	class:LSQMatrix
VolAtomGradNorm	libs/chemlib/atom_util.h	/^    inline double VolAtomGradNorm(MIAtom &a1, MIAtom &a2, MIAtom &a3, MIAtom &a4)$/;"	f	namespace:chemlib
Volume	libs/map/rescalc.cpp	/^float Volume(float A, float B, float C, float ALPHA, float BETA, float GAMMA)$/;"	f
VuSize	apps/MIFit/ui/Displaylist.h	/^inline size_t Displaylist::VuSize()$/;"	f	class:Displaylist
Vus	apps/MIFit/ui/Displaylist.h	/^    std::vector<PLINE> Vus;$/;"	m	class:Displaylist
W	libs/chemlib/RefmacType.h	/^    const unsigned int W    = 133;$/;"	m	namespace:RefmacType
WASH	libs/opengl/zlib/infcodes.cpp	/^ WASH,          \/* o: got eob, possibly still output waiting *\/$/;"	e	enum:__anon38	file:
WAVAIL	libs/opengl/zlib/infutil.h	83;"	d
WHITE	apps/MIFit/core/Colors.cpp	/^const int Colors::WHITE = 10;$/;"	m	class:Colors	file:
WHITE	apps/MIFit/core/Colors.h	/^    static const int WHITE;$/;"	m	class:Colors
WIN32	libs/opengl/zlib/zconf.h	48;"	d
WRAP	libs/opengl/zlib/infutil.h	85;"	d
WRITE_OP	libs/cmtz/ccp4_sysdep.h	213;"	d
WRITE_OP	libs/umtz/library.h	335;"	d
Wait	apps/MIFit/ui/MIGLWidget.cpp	/^static bool Wait = false;$/;"	v	file:
WaitCursor	apps/MIFit/ui/WaitCursor.cpp	/^WaitCursor::WaitCursor(const char *op)$/;"	f	class:WaitCursor
WaitCursor	apps/MIFit/ui/WaitCursor.h	/^class WaitCursor$/;"	c
Warp_phase	libs/map/EMapBase.h	/^        Warp_phase,$/;"	e	enum:EMapBase::__anon47
WhenShownColor	apps/MIFit/ui/MIGLWidget.h	/^    int WhenShownColor;$/;"	m	class:MIGLWidget
WhenShownColorMethod	apps/MIFit/ui/MIGLWidget.h	/^    int WhenShownColorMethod;$/;"	m	class:MIGLWidget
WhenShownRadius	apps/MIFit/ui/MIGLWidget.h	/^    int WhenShownRadius;$/;"	m	class:MIGLWidget
Write	apps/MIFit/core/Cfiles.cpp	/^void CArchive::Write(const void *InBuf, long nInBuf)$/;"	f	class:CArchive
Write	apps/MIFit/core/Cfiles.cpp	/^void CArchive::Write(std::string &f)$/;"	f	class:CArchive
Write	apps/MIFit/ui/Application.cpp	/^void Application::Write()$/;"	f	class:Application
Write	apps/MIFit/ui/MIMolIO.cpp	/^bool MIMolIO::Write(MIMolInfo &mi, const std::string &fname, int writerIndex) const$/;"	f	class:MIMolIO
Write	libs/chemlib/MIMolIO.cpp	/^bool MIMolIOBase::Write(MIMolInfo &mi, const std::string &filename, int writerIndex) const$/;"	f	class:chemlib::MIMolIOBase
Write	libs/chemlib/PDB.cpp	/^bool PDB::Write(FILE *fp, MIMolInfo &mol)$/;"	f	class:chemlib::PDB
Write	libs/chemlib/mmCIF.cpp	/^bool mmCIF::Write(FILE *fp, MIMolInfo &mol)$/;"	f	class:chemlib::mmCIF
Write	libs/chemlib/molfile.cpp	/^bool molfile::Write(FILE *fp, MIMolInfo &mol)$/;"	f	class:chemlib::molfile
WriteAnnotation	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::WriteAnnotation(Annotation *ann)$/;"	f	class:XMLArchive
WriteAtomTypes	apps/MIFit/ui/Application.cpp	/^void Application::WriteAtomTypes()$/;"	f	class:Application
WriteBValues	apps/MIFit/ui/Application.cpp	/^void Application::WriteBValues()$/;"	f	class:Application
WriteBond	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::WriteBond(Bond &hbond)$/;"	f	class:XMLArchive
WriteColor	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::WriteColor(PaletteColor &c)$/;"	f	class:XMLArchive
WriteConnect	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::WriteConnect(Bond &bond)$/;"	f	class:XMLArchive
WriteDot	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::WriteDot(SURFDOT &dot)$/;"	f	class:XMLArchive
WriteField	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::WriteField(const MIAtom *a)$/;"	f	class:XMLArchive
WriteField	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::WriteField(const Residue &res)$/;"	f	class:XMLArchive
WriteField	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::WriteField(const char *tag)$/;"	f	class:XMLArchive
WriteField	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::WriteField(const char *tag, const char *value)$/;"	f	class:XMLArchive
WriteField	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::WriteField(const char *tag, float value)$/;"	f	class:XMLArchive
WriteField	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::WriteField(const char *tag, int value)$/;"	f	class:XMLArchive
WriteHBond	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::WriteHBond(Bond &hbond)$/;"	f	class:XMLArchive
WriteLabel	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::WriteLabel(const ATOMLABEL &label)$/;"	f	class:XMLArchive
WriteMapHeader	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::WriteMapHeader(CMapHeaderBase &mh)$/;"	f	class:XMLArchive
WritePalette	apps/MIFit/ui/Application.cpp	/^void Application::WritePalette()$/;"	f	class:Application
WriteProfiles	apps/MIFit/ui/Application.cpp	/^void Application::WriteProfiles()$/;"	f	class:Application
WriteSecStr	apps/MIFit/ui/Application.cpp	/^void Application::WriteSecStr()$/;"	f	class:Application
WriteSequence	apps/MIFit/core/Mlculseq.cpp	/^int Molecule::WriteSequence(std::string path, int type)$/;"	f	class:Molecule
WriteStack	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::WriteStack(CArchive &ar)$/;"	f	class:MIGLWidget
WriteSymmCenter	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::WriteSymmCenter(float center[3])$/;"	f	class:XMLArchive
WriteTorsions	libs/chemlib/mmCIF.cpp	/^void mmCIF::WriteTorsions(bool val)$/;"	f	class:chemlib::mmCIF
WriteXML	apps/MIFit/core/Annotation.cpp	/^void Annotation::WriteXML(XMLArchive *ar)$/;"	f	class:Annotation
Writer	libs/chemlib/MIMolInfo.h	/^    class Writer$/;"	c	namespace:chemlib
WriterList	libs/chemlib/MIMolIOBase.h	/^        typedef std::vector<Writer*> WriterList;$/;"	t	class:chemlib::MIMolIOBase
X	apps/MIFit/core/Molecule.cpp	25;"	d	file:
X	apps/MIFit/core/Pdbsubs.cpp	6;"	d	file:
X	apps/MIFit/core/RESIDUE.cpp	19;"	d	file:
X	apps/MIFit/core/RESIDUE.cpp	610;"	d	file:
X	apps/MIFit/core/pdbmatch.cpp	8;"	d	file:
X	apps/MIFit/ui/GLRenderer.cpp	18;"	d	file:
X	apps/MIFit/ui/MIGLWidget.cpp	2980;"	d	file:
X	apps/MIFit/ui/MIGLWidget.cpp	3098;"	d	file:
X	apps/MIFit/ui/rama.h	/^    float X(unsigned int line, unsigned int seg) const$/;"	f	class:OrigRamaData
X	apps/MIFit/ui/rama.h	/^    float X(unsigned int line, unsigned int seg) const$/;"	f	class:RichardsonRamaData
X	libs/chemlib/transform_util.cpp	20;"	d	file:
X	libs/map/sfcalc.cpp	19;"	d	file:
X	libs/map/wxWweave.cpp	9;"	d	file:
X	libs/molopt/MIMolOpt.cpp	20;"	d	file:
X	libs/molopt/MIMolOpt.cpp	2318;"	d	file:
X	libs/molopt/MIMolOpt.cpp	2346;"	d	file:
X	libs/opengl/Axis.h	/^            static const mi::math::Vector3<float> X;$/;"	m	class:mi::opengl::Axis
XAxisRotate	libs/chemlib/transform_util.cpp	/^void XAxisRotate(double theta, MIAtomList &domain)$/;"	f	namespace:chemlib
XDIM	libs/jacgrid/isosurface.cpp	/^static unsigned int XDIM, YDIM, ZDIM, XDIMYDIM;$/;"	v	file:
XDIMYDIM	libs/jacgrid/isosurface.cpp	/^static unsigned int XDIM, YDIM, ZDIM, XDIMYDIM;$/;"	v	file:
XE	libs/chemlib/RefmacType.h	/^    const unsigned int XE   = 173;$/;"	m	namespace:RefmacType
XFitDict	apps/MIFit/ui/Application.h	/^    std::string XFitDict;$/;"	m	class:Application
XFitDictSetting	apps/MIFit/ui/Application.h	/^    std::string XFitDictSetting;$/;"	m	class:Application
XML	apps/MIFit/core/MoleculeType.h	/^        XML,$/;"	e	enum:MoleculeType::__anon2
XML	libs/chemlib/Ligand.h	/^            XML,$/;"	e	enum:chemlib::Ligand::__anon28
XMLArchive	apps/MIFit/core/xmlarchive.cpp	/^XMLArchive::XMLArchive(const char *pathname, int m)$/;"	f	class:XMLArchive
XMLArchive	apps/MIFit/core/xmlarchive.h	/^class XMLArchive : public CArchive$/;"	c
XMLFILES_H	apps/MIFit/core/xmlarchive.h	2;"	d
XtalView_fin	libs/map/EMapBase.h	/^        XtalView_fin,$/;"	e	enum:EMapBase::__anon47
XtalView_map	libs/map/EMapBase.h	/^        XtalView_map,$/;"	e	enum:EMapBase::__anon47
XtalView_phase	libs/map/EMapBase.h	/^        XtalView_phase,$/;"	e	enum:EMapBase::__anon47
Xvalue	libs/math/LSQMatrix.cpp	/^float LSQMatrix::Xvalue(float tx, float ty, float tz)$/;"	f	class:LSQMatrix
Y	apps/MIFit/core/Molecule.cpp	26;"	d	file:
Y	apps/MIFit/core/Pdbsubs.cpp	7;"	d	file:
Y	apps/MIFit/core/RESIDUE.cpp	20;"	d	file:
Y	apps/MIFit/core/RESIDUE.cpp	611;"	d	file:
Y	apps/MIFit/core/pdbmatch.cpp	9;"	d	file:
Y	apps/MIFit/ui/GLRenderer.cpp	19;"	d	file:
Y	apps/MIFit/ui/MIGLWidget.cpp	2981;"	d	file:
Y	apps/MIFit/ui/MIGLWidget.cpp	3099;"	d	file:
Y	apps/MIFit/ui/rama.h	/^    float Y(unsigned int line, unsigned int seg) const$/;"	f	class:OrigRamaData
Y	apps/MIFit/ui/rama.h	/^    float Y(unsigned int line, unsigned int seg) const$/;"	f	class:RichardsonRamaData
Y	libs/chemlib/RefmacType.h	/^    const unsigned int Y    = 105;$/;"	m	namespace:RefmacType
Y	libs/chemlib/transform_util.cpp	21;"	d	file:
Y	libs/map/sfcalc.cpp	20;"	d	file:
Y	libs/map/wxWweave.cpp	10;"	d	file:
Y	libs/molopt/MIMolOpt.cpp	21;"	d	file:
Y	libs/molopt/MIMolOpt.cpp	2319;"	d	file:
Y	libs/molopt/MIMolOpt.cpp	2345;"	d	file:
Y	libs/opengl/Axis.h	/^            static const mi::math::Vector3<float> Y;$/;"	m	class:mi::opengl::Axis
YB	libs/chemlib/RefmacType.h	/^    const unsigned int YB   = 118;$/;"	m	namespace:RefmacType
YDIM	libs/jacgrid/isosurface.cpp	/^static unsigned int XDIM, YDIM, ZDIM, XDIMYDIM;$/;"	v	file:
YELLOW	apps/MIFit/core/Colors.cpp	/^const int Colors::YELLOW = 1;$/;"	m	class:Colors	file:
YELLOW	apps/MIFit/core/Colors.h	/^    static const int YELLOW;$/;"	m	class:Colors
Yvalue	libs/math/LSQMatrix.cpp	/^float LSQMatrix::Yvalue(float tx, float ty, float tz)$/;"	f	class:LSQMatrix
Z	apps/MIFit/core/Molecule.cpp	27;"	d	file:
Z	apps/MIFit/core/Pdbsubs.cpp	8;"	d	file:
Z	apps/MIFit/core/RESIDUE.cpp	21;"	d	file:
Z	apps/MIFit/core/RESIDUE.cpp	612;"	d	file:
Z	apps/MIFit/core/pdbmatch.cpp	10;"	d	file:
Z	apps/MIFit/ui/GLRenderer.cpp	20;"	d	file:
Z	apps/MIFit/ui/MIGLWidget.cpp	2982;"	d	file:
Z	apps/MIFit/ui/MIGLWidget.cpp	3100;"	d	file:
Z	libs/chemlib/transform_util.cpp	22;"	d	file:
Z	libs/map/sfcalc.cpp	21;"	d	file:
Z	libs/map/wxWweave.cpp	11;"	d	file:
Z	libs/molopt/MIMolOpt.cpp	22;"	d	file:
Z	libs/molopt/MIMolOpt.cpp	2320;"	d	file:
Z	libs/molopt/MIMolOpt.cpp	2344;"	d	file:
Z	libs/opengl/Axis.h	/^            static const mi::math::Vector3<float> Z;$/;"	m	class:mi::opengl::Axis
ZALLOC	libs/opengl/zlib/zutil.h	215;"	d
ZAxisRotate	libs/chemlib/Substituent.cpp	/^void Substituent::ZAxisRotate(double theta)$/;"	f	class:chemlib::Substituent
ZByName	libs/chemlib/atom_util.cpp	/^float ZByName(const char *name)$/;"	f	namespace:chemlib
ZDIM	libs/jacgrid/isosurface.cpp	/^static unsigned int XDIM, YDIM, ZDIM, XDIMYDIM;$/;"	v	file:
ZEXPORT	libs/opengl/zlib/zconf.h	166;"	d
ZEXPORT	libs/opengl/zlib/zconf.h	176;"	d
ZEXPORT	libs/opengl/zlib/zconf.h	180;"	d
ZEXPORT	libs/opengl/zlib/zconf.h	196;"	d
ZEXPORTRVA	libs/opengl/zlib/zconf.h	177;"	d
ZEXPORTVA	libs/opengl/zlib/zconf.h	168;"	d
ZEXPORTVA	libs/opengl/zlib/zconf.h	170;"	d
ZEXPORTVA	libs/opengl/zlib/zconf.h	181;"	d
ZEXPORTVA	libs/opengl/zlib/zconf.h	199;"	d
ZEXTERN	libs/opengl/zlib/zconf.h	189;"	d
ZEXTERN	libs/opengl/zlib/zconf.h	191;"	d
ZEXTERN	libs/opengl/zlib/zconf.h	202;"	d
ZFREE	libs/opengl/zlib/zutil.h	217;"	d
ZLIB_VERSION	libs/opengl/zlib/zlib.h	36;"	d
ZN	libs/chemlib/RefmacType.h	/^    const unsigned int ZN   = 149;$/;"	m	namespace:RefmacType
ZR	libs/chemlib/RefmacType.h	/^    const unsigned int ZR   = 126;$/;"	m	namespace:RefmacType
Z_ASCII	libs/opengl/zlib/zlib.h	154;"	d
Z_BEST_COMPRESSION	libs/opengl/zlib/zlib.h	144;"	d
Z_BEST_SPEED	libs/opengl/zlib/zlib.h	143;"	d
Z_BINARY	libs/opengl/zlib/zlib.h	153;"	d
Z_BUF_ERROR	libs/opengl/zlib/zlib.h	136;"	d
Z_DATA_ERROR	libs/opengl/zlib/zlib.h	134;"	d
Z_DEFAULT_COMPRESSION	libs/opengl/zlib/zlib.h	145;"	d
Z_DEFAULT_STRATEGY	libs/opengl/zlib/zlib.h	150;"	d
Z_DEFLATED	libs/opengl/zlib/zlib.h	158;"	d
Z_ERRNO	libs/opengl/zlib/zlib.h	132;"	d
Z_FILTERED	libs/opengl/zlib/zlib.h	148;"	d
Z_FINISH	libs/opengl/zlib/zlib.h	126;"	d
Z_FULL_FLUSH	libs/opengl/zlib/zlib.h	125;"	d
Z_HUFFMAN_ONLY	libs/opengl/zlib/zlib.h	149;"	d
Z_MEM_ERROR	libs/opengl/zlib/zlib.h	135;"	d
Z_NEED_DICT	libs/opengl/zlib/zlib.h	131;"	d
Z_NO_COMPRESSION	libs/opengl/zlib/zlib.h	142;"	d
Z_NO_FLUSH	libs/opengl/zlib/zlib.h	122;"	d
Z_NULL	libs/opengl/zlib/zlib.h	161;"	d
Z_OK	libs/opengl/zlib/zlib.h	129;"	d
Z_PARTIAL_FLUSH	libs/opengl/zlib/zlib.h	123;"	d
Z_STREAM_END	libs/opengl/zlib/zlib.h	130;"	d
Z_STREAM_ERROR	libs/opengl/zlib/zlib.h	133;"	d
Z_SYNC_FLUSH	libs/opengl/zlib/zlib.h	124;"	d
Z_UNKNOWN	libs/opengl/zlib/zlib.h	155;"	d
Z_VERSION_ERROR	libs/opengl/zlib/zlib.h	137;"	d
Z_f	libs/map/fftlib.cpp	/^typedef VOID Z_f;   \/* double complex function *\/$/;"	t	file:
Z_fp	libs/map/fftlib.cpp	/^typedef \/* Double Complex *\/ VOID (*Z_fp)(...);$/;"	t	file:
ZeroModel	libs/map/InterpBox.cpp	/^void InterpBox::ZeroModel(Residue *res)$/;"	f	class:InterpBox
Zvalue	libs/math/LSQMatrix.cpp	/^float LSQMatrix::Zvalue(float tx, float ty, float tz)$/;"	f	class:LSQMatrix
_CFileStruct	libs/cmtz/library_file.h	/^struct _CFileStruct {$/;"	s
_GUARD_FILE_ERR	libs/cmtz/ccp4_file_err.h	20;"	d
_INFUTIL_H	libs/opengl/zlib/infutil.h	12;"	d
_MVS	apps/MIFlex/miflex.cpp	12;"	d	file:
_MVS	apps/MIFlex/miflex.cpp	15;"	d	file:
_MVS	libs/map/EMapBase.cpp	27;"	d	file:
_MVS	libs/map/EMapBase.cpp	30;"	d	file:
_POSIX_SOURCE	libs/cmtz/ccp4_sysdep.h	127;"	d
_POSIX_SOURCE	libs/umtz/library.h	238;"	d
_XOPEN_SOURCE	libs/cmtz/ccp4_sysdep.h	132;"	d
_ZCONF_H	libs/opengl/zlib/zconf.h	9;"	d
_ZLIB_H	libs/opengl/zlib/zlib.h	32;"	d
_Z_UTIL_H	libs/opengl/zlib/zutil.h	14;"	d
__32BIT__	libs/opengl/zlib/zconf.h	52;"	d
__AtomColors_H__	apps/MIFit/ui/AtomColors.h	2;"	d
__CCP4_ARRAY_INC	libs/cmtz/ccp4_array.h	69;"	d
__CCP4_BITS	libs/cmtz/ccp4_sysdep.h	28;"	d
__CCP4_ERROR_GUARD	libs/cmtz/ccp4_errno.h	25;"	d
__CCP4_LIB_FILE	libs/cmtz/library_file.h	26;"	d
__CCP4_Parser__	libs/cmtz/ccp4_parser.h	106;"	d
__CCP4_SPG__	libs/cmtz/ccp4_spg.h	32;"	d
__CCP4_TYPES	libs/cmtz/ccp4_types.h	20;"	d
__CCP4_UNITCELL	libs/cmtz/ccp4_unitcell.h	26;"	d
__CCP4_UTILS	libs/cmtz/ccp4_utils.h	26;"	d
__CCP4_VARS__	libs/cmtz/ccp4_vars.h	27;"	d
__CCP4_VECMAT	libs/cmtz/cvecmat.h	20;"	d
__CMTZData__	libs/cmtz/mtzdata.h	31;"	d
__CMTZLib__	libs/cmtz/cmtzlib.h	105;"	d
__DictEditDialog_H__	apps/MIFit/ui/DictEditDialog.h	2;"	d
__LSQFitDialog_H__	apps/MIFit/ui/LSQFitDialog.h	2;"	d
_a1	libs/conflib/FlexTorsion.h	/^        chemlib::MIAtom *_a1;$/;"	m	class:conflib::FlexTorsion
_a1	libs/conflib/sdg.h	/^        chemlib::MIAtom &_a1;$/;"	m	class:conflib::sdgDistance
_a1	libs/conflib/sdg.h	/^        chemlib::MIAtom &_a1;$/;"	m	class:conflib::sdgVolume
_a2	libs/conflib/FlexTorsion.h	/^        chemlib::MIAtom *_a2;$/;"	m	class:conflib::FlexTorsion
_a2	libs/conflib/sdg.h	/^        chemlib::MIAtom &_a2;$/;"	m	class:conflib::sdgDistance
_a2	libs/conflib/sdg.h	/^        chemlib::MIAtom &_a2;$/;"	m	class:conflib::sdgVolume
_a3	libs/conflib/FlexTorsion.h	/^        chemlib::MIAtom *_a3;$/;"	m	class:conflib::FlexTorsion
_a3	libs/conflib/sdg.h	/^        chemlib::MIAtom &_a3;$/;"	m	class:conflib::sdgVolume
_a4	libs/conflib/FlexTorsion.h	/^        chemlib::MIAtom *_a4;$/;"	m	class:conflib::FlexTorsion
_angles	libs/chemlib/Constraint.h	/^        std::vector<double> _angles;                \/\/The allowable dihedral angle(s) (in degrees)$/;"	m	class:chemlib::Improper
_aromatics	libs/chemlib/RingSystem.h	/^        std::vector<Aromatic> _aromatics;           \/\/Aromatic systems--see Aromatic class$/;"	m	class:chemlib::RingSystem
_atom	libs/chemlib/SmilesReader.h	/^        MIAtom _atom;$/;"	m	class:chemlib::SmilesReader
_atom_changed	apps/MIFit/ui/RamaPlot.h	/^    bool _atom_changed;$/;"	m	class:RamaPlotMgr
_atom_count	apps/MIFit/ui/surf.cpp	/^    unsigned int _atom_count;$/;"	m	class:MISurface	file:
_atoms	libs/chemlib/Aromatic.h	/^        MIAtomList _atoms;                    \/\/Ptrs to atoms contained in the aromatic sys$/;"	m	class:chemlib::Aromatic
_atoms	libs/chemlib/RingSystem.h	/^        MIAtomList _atoms;                \/\/Ptrs to atoms contained in the ringsys$/;"	m	class:chemlib::RingSystem
_atoms	libs/chemlib/SmilesReader.h	/^        MIAtomList _atoms;$/;"	m	class:chemlib::SmilesReader
_atoms	libs/chemlib/Substituent.h	/^        MIAtomList _atoms;$/;"	m	class:chemlib::Substituent
_atoms	libs/conflib/sdg.h	/^        const std::vector<chemlib::MIAtom*> &_atoms;$/;"	m	class:conflib::sdgEngine
_atoms1	libs/jacgrid/atom.h	/^    const JACAtomsBase &_atoms1;$/;"	m	class:JACAtomsMerge
_atoms2	libs/jacgrid/atom.h	/^    const JACAtomsBase &_atoms2;$/;"	m	class:JACAtomsMerge
_b	apps/MIFit/ui/graphlib.h	/^    unsigned char _r, _g, _b;$/;"	m	class:GraphColor
_bfactor	libs/jacgrid/atom.h	/^    const float *_bfactor;$/;"	m	class:JACAtomsXYZROTE
_block	libs/chemlib/CifData.h	/^    std::string _block;$/;"	m	class:CifDataBlock
_bond	libs/chemlib/CovalentGeom.h	/^        Bond *_bond;                                        \/\/Used when assigning a bond length$/;"	m	class:chemlib::CovalentGeometry
_bond	libs/conflib/FlexTorsion.h	/^        std::vector<chemlib::Bond>::const_iterator _bond;$/;"	m	class:conflib::FlexTorsion
_bond_order	libs/chemlib/SmilesReader.h	/^        unsigned char _bond_order; \/\/Current bond order (see Xguicryst.h)$/;"	m	class:chemlib::SmilesReader
_bond_stereo	libs/chemlib/SmilesReader.h	/^        char _bond_stereo; \/\/Current bond stereo flags$/;"	m	class:chemlib::SmilesReader
_bonds	libs/chemlib/Aromatic.h	/^        std::vector<Bond*> _bonds;                  \/\/Ptrs to bonds contained in the aromatic sys$/;"	m	class:chemlib::Aromatic
_bonds	libs/chemlib/RingSystem.h	/^        std::vector<Bond*> _bonds;                  \/\/Ptrs to bonds contained in the ringsys$/;"	m	class:chemlib::RingSystem
_bumps	libs/conflib/ConfIterator.h	/^        std::vector<chemlib::Bond> _bumps;$/;"	m	class:conflib::ConfEnumerator
_bumps	libs/conflib/ConfIterator.h	/^        std::vector<chemlib::Bond> _bumps;$/;"	m	class:conflib::ConfSampler
_button	apps/MIFit/ui/MIBrowsePair.h	/^    QPushButton *_button;$/;"	m	class:MIBrowsePair
_carbon_init	libs/cmtz/library_utils.c	/^void _carbon_init(int argc, char **argv) {}$/;"	f
_category	libs/chemlib/CifData.h	/^    std::string _category;              \/\/e.g. "chem_comp", "chem_comp_atom", "chem_comp_bond"$/;"	m	class:CifLoop
_cells	apps/MIFit/ui/PhaseFileLoadDialog.h	/^    std::vector<std::string> _cells;$/;"	m	class:PhaseFileLoadDialog
_center	libs/chemlib/Chiral.h	/^        MIAtom *_center;                \/\/Pointer to the central atom$/;"	m	class:chemlib::Chiral
_center	libs/conflib/sdg.h	/^        chemlib::MIAtom &_center;$/;"	m	class:conflib::sdgVolume
_cl	libs/chemlib/CovalentGeom.h	/^        ConstraintList _cl;$/;"	m	class:chemlib::CovalentGeometry
_color	apps/MIFit/ui/surf.cpp	/^    std::vector<short> _color;$/;"	m	class:MISurface	file:
_color_property	apps/MIFit/ui/surf.cpp	/^    std::vector<float> _color_property;$/;"	m	class:MISurface	file:
_conn_table	libs/chemlib/Aromatic.h	/^        TNT::Matrix<bool> _conn_table;              \/\/Table of connectivity between the atoms$/;"	m	class:chemlib::Aromatic
_conn_table	libs/chemlib/RingSystem.h	/^        TNT::Matrix<bool> _conn_table;              \/\/Table of connectivity between the atoms$/;"	m	class:chemlib::RingSystem
_count	libs/jacgrid/atom.h	/^    unsigned int _count;$/;"	m	class:JACAtomsXYZR
_cur_pos	libs/chemlib/CifParser.h	/^    size_t _cur_pos;$/;"	m	class:CifTokenizer
_cur_pos	libs/chemlib/SmilesReader.h	/^        char *_cur_pos; \/\/Current position in string;$/;"	m	class:chemlib::SmilesReader
_cur_pos	libs/chemlib/molfile.h	/^        size_t _cur_pos;$/;"	m	class:chemlib::MolPropertyLine
_current	libs/conflib/CoordGenerator.h	/^        chemlib::ConstraintList _current;$/;"	m	class:conflib::CoordGenerator
_currentStyle	apps/MIFit/ui/ContourOptionsWidget.h	/^    int _currentStyle;$/;"	m	class:ContourOptionsWidget
_customJobIndex	apps/MIFit/jobs/BatchJobManager.h	/^    uint _customJobIndex;$/;"	m	class:BatchJobManager
_data	libs/chemlib/CifParser.h	/^    std::string _data;                              \/\/ Line of input starting the block (e.g. "data_2SA")$/;"	m	class:CifParser
_deftDir	apps/MIFit/ui/MIDialog.h	/^    std::string _deftDir, _deftFile, _filter;$/;"	m	class:MIFileDialog
_deftFile	apps/MIFit/ui/MIDialog.h	/^    std::string _deftDir, _deftFile, _filter;$/;"	m	class:MIFileDialog
_details	libs/umtz/html/mmtzlib_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	libs/umtz/html/structmmtz__column__.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	libs/umtz/html/structmmtz__crystal__.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	libs/umtz/html/structmmtz__dataset__.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	libs/umtz/html/structumtz__bat.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	libs/umtz/html/structumtz__bat__.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	libs/umtz/html/structumtz__hdr.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	libs/umtz/html/structumtz__hdr__.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	libs/umtz/html/structumtz__list.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	libs/umtz/html/structumtz__list__.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	libs/umtz/html/structumtzfile.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	libs/umtz/html/structumtzfile__.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	libs/umtz/html/umtzlib_8h.html	/^<hr><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_dict_include	libs/chemlib/Constraint.h	/^        bool _dict_include;                     \/\/False for imps used only in smiles2pdb, not in dict$/;"	m	class:chemlib::Improper
_dihedral_index	libs/conflib/FlexTorsion.h	/^        std::vector<float>::iterator _dihedral_index;$/;"	m	class:conflib::FlexTorsion
_dihedrals	libs/conflib/FlexTorsion.h	/^        std::vector<float> _dihedrals;$/;"	m	class:conflib::FlexTorsion
_direction	libs/chemlib/Substituent.h	/^        std::vector<double> _direction;$/;"	m	class:chemlib::Substituent
_distanceCodes	libs/conflib/ConfFingerprint.h	/^        std::vector<int> _distanceCodes;$/;"	m	class:conflib::ConfFingerprint
_distances	libs/conflib/sdg.h	/^        std::vector<sdgDistance> &_distances;$/;"	m	class:conflib::sdgEngine
_element	libs/jacgrid/atom.h	/^    const unsigned short *_element;$/;"	m	class:JACAtomsXYZROTE
_fcstr	libs/map/EMapBase.h	/^    std::string _fostr, _fcstr, _fomstr, _phistr, _sigfstr, _freeRstr;$/;"	m	class:EMapBase
_file	libs/chemlib/CifParser.h	/^    FILE *_file;$/;"	m	class:CifParser
_file_close	libs/cmtz/library_file.c	/^static int _file_close (CCP4File *cfile)$/;"	f	file:
_file_free	libs/cmtz/library_file.c	/^static void _file_free(CCP4File *cfile)$/;"	f	file:
_file_init	libs/cmtz/library_file.c	/^static CCP4File *_file_init()$/;"	f	file:
_file_open_mode	libs/cmtz/library_file.c	/^static void _file_open_mode(CCP4File * cfile, const int flag)$/;"	f	file:
_filename	apps/MIFit/ui/MIGLWidget.h	/^    std::string _filename;$/;"	m	class:MIGLWidget
_filename	apps/MIFit/ui/PhaseFileLoadDialog.h	/^    std::string _filename;$/;"	m	class:PhaseFileLoadDialog
_filter	apps/MIFit/ui/MIBrowsePair.h	/^    QString _filter;$/;"	m	class:MIBrowsePair
_filter	apps/MIFit/ui/MIDialog.h	/^    std::string _deftDir, _deftFile, _filter;$/;"	m	class:MIFileDialog
_first_shell_atoms	libs/chemlib/Substituent.h	/^        MIAtomList _first_shell_atoms;$/;"	m	class:chemlib::Substituent
_flex_atoms	libs/conflib/FlexTorsion.h	/^        std::vector<chemlib::MIAtom*> _flex_atoms;$/;"	m	class:conflib::FlexTorsion
_flexors	libs/conflib/ConfIterator.h	/^        std::vector<FlexTorsion> _flexors;$/;"	m	class:conflib::ConfEnumerator
_flexors	libs/conflib/ConfIterator.h	/^        std::vector<FlexTorsion> _flexors;$/;"	m	class:conflib::ConfSampler
_focusres	apps/MIFit/ui/RamaPlot.h	/^    chemlib::Residue *_focusres;$/;"	m	class:RamaPlotMgr
_fomstr	libs/map/EMapBase.h	/^    std::string _fostr, _fcstr, _fomstr, _phistr, _sigfstr, _freeRstr;$/;"	m	class:EMapBase
_fostr	libs/map/EMapBase.h	/^    std::string _fostr, _fcstr, _fomstr, _phistr, _sigfstr, _freeRstr;$/;"	m	class:EMapBase
_frame	apps/MIFit/ui/DictEditDialog.h	/^    QFrame *_frame;$/;"	m	class:DictEditDialog
_freeRstr	libs/map/EMapBase.h	/^    std::string _fostr, _fcstr, _fomstr, _phistr, _sigfstr, _freeRstr;$/;"	m	class:EMapBase
_fused	libs/chemlib/RingSystem.h	/^        bool _fused;                                \/\/Flag for whether this is a "simple" ring$/;"	m	class:chemlib::RingSystem
_g	apps/MIFit/ui/graphlib.h	/^    unsigned char _r, _g, _b;$/;"	m	class:GraphColor
_gw	apps/MIFit/ui/RamaPlot.h	/^    GraphWindow *_gw;$/;"	m	class:RamaPlotMgr
_halloc	libs/opengl/zlib/zutil.cpp	177;"	d	file:
_hardwareStereoAction	apps/MIFit/ui/MIMainWindow.h	/^    QAction *_hardwareStereoAction;$/;"	m	class:MIMainWindow
_hash	apps/MIFit/ui/surf.cpp	/^    float _hash;$/;"	m	class:MISurface	file:
_hfree	libs/opengl/zlib/zutil.cpp	178;"	d	file:
_imageList	apps/MIFit/ui/MIQTreeWidget.h	/^    std::vector<QIcon> _imageList;$/;"	m	class:MIQTreeWidget
_impnumber	libs/chemlib/Constraint.h	/^        int _impnumber;$/;"	m	class:chemlib::Improper
_init	libs/conflib/ConfIterator.h	/^        bool _init;$/;"	m	class:conflib::ConfEnumerator
_init_resmax	apps/MIFit/ui/PhaseFileLoadDialog.h	/^    float _init_resmin, _init_resmax;$/;"	m	class:PhaseFileLoadDialog
_init_resmin	apps/MIFit/ui/PhaseFileLoadDialog.h	/^    float _init_resmin, _init_resmax;$/;"	m	class:PhaseFileLoadDialog
_inited	apps/MIFit/ui/RamaPlot.h	/^    bool _inited;$/;"	m	class:RamaPlotMgr
_insertAction	apps/MIFit/ui/ModelsView.cpp	/^    QAction *_insertAction;$/;"	m	class:ResiduesTree	file:
_instance	apps/MIFit/ui/Application.cpp	/^MIBusyManager*MIBusyManager::_instance = 0;$/;"	m	class:MIBusyManager	file:
_instance	apps/MIFit/ui/Application.h	/^    static MIBusyManager *_instance;$/;"	m	class:MIBusyManager
_instance	apps/MIFit/ui/MIMainWindow.cpp	/^MIMainWindow*MIMainWindow::_instance = NULL;$/;"	m	class:MIMainWindow	file:
_instance	apps/MIFit/ui/MIMainWindow.h	/^    static MIMainWindow *_instance;$/;"	m	class:MIMainWindow
_instance	apps/MIFit/ui/RamaPlot.cpp	/^RamaPlotMgr*RamaPlotMgr::_instance = NULL;$/;"	m	class:RamaPlotMgr	file:
_instance	apps/MIFit/ui/RamaPlot.h	/^    static RamaPlotMgr *_instance;$/;"	m	class:RamaPlotMgr
_isDir	apps/MIFit/ui/MIBrowsePair.h	/^    bool _isDir;$/;"	m	class:MIBrowsePair
_isOpenEnd	libs/conflib/sdg.h	/^        bool _isOpenEnd;            \/\/For distances with no upper limit$/;"	m	class:conflib::sdgDistance
_isParsed	libs/chemlib/CifData.h	/^    bool _isParsed;$/;"	m	class:CifDataBlock
_isRange	libs/conflib/sdg.h	/^        bool _isRange;$/;"	m	class:conflib::sdgDistance
_isRange	libs/conflib/sdg.h	/^        bool _isRange;$/;"	m	class:conflib::sdgVolume
_iscyclic	libs/chemlib/Substituent.h	/^        bool _iscyclic;$/;"	m	class:chemlib::Substituent
_issimple	libs/chemlib/Substituent.h	/^        bool _issimple;$/;"	m	class:chemlib::Substituent
_item_sizes	libs/cmtz/library_file.c	/^static int _item_sizes[] = {$/;"	v	file:
_items	libs/chemlib/CifData.h	/^    std::map<std::string, std::string> _items;      \/\/Name-Value pairs defined outside of loops$/;"	m	class:CifDataBlock
_jobMenu	apps/MIFit/ui/MIMainWindow.h	/^    QMenu *_jobMenu;$/;"	m	class:MIMainWindow
_last_close_id	apps/MIFit/ui/graphlib.h	/^    int _last_close_id;$/;"	m	class:GraphWindow
_last_mouseover_id	apps/MIFit/ui/RamaPlot.h	/^    int _last_mouseover_id;$/;"	m	class:RamaPlotMgr
_layout	apps/MIFit/ui/DictEditDialog.h	/^    QGridLayout *_layout;$/;"	m	class:DictEditDialog
_length	libs/chemlib/CifParser.h	/^    size_t _length;$/;"	m	class:CifTokenizer
_length	libs/chemlib/molfile.h	/^        size_t _length;$/;"	m	class:chemlib::MolPropertyLine
_lig	libs/chemlib/CovalentGeom.h	/^        Ligand *_lig;$/;"	m	class:chemlib::CovalentGeometry
_lig	libs/chemlib/RingSystem.h	/^        Ligand *_lig;                               \/\/Ptr to parent molecule$/;"	m	class:chemlib::RingSystem
_lig	libs/chemlib/SmilesReader.h	/^        Ligand *_lig; \/\/Class for writing Ligand into$/;"	m	class:chemlib::SmilesReader
_lig	libs/chemlib/Substituent.h	/^        const Ligand *_lig;$/;"	m	class:chemlib::Substituent
_lig	libs/conflib/CoordGenerator.h	/^        chemlib::Ligand *_lig;$/;"	m	class:conflib::CoordGenerator
_line	libs/chemlib/molfile.h	/^        std::string _line;$/;"	m	class:chemlib::MolPropertyLine
_lineEdit	apps/MIFit/ui/MIBrowsePair.h	/^    QLineEdit *_lineEdit;$/;"	m	class:MIBrowsePair
_line_count	apps/MIFit/ui/rama.h	/^    unsigned int _line_count;$/;"	m	class:OrigRamaData
_line_count	apps/MIFit/ui/rama.h	/^    unsigned int _line_count;$/;"	m	class:RichardsonRamaData
_loops	libs/chemlib/CifData.h	/^    std::vector<CifLoop> _loops;                \/\/Loop data$/;"	m	class:CifDataBlock
_lower	libs/conflib/sdg.h	/^        double _lower;$/;"	m	class:conflib::sdgDistance
_lower	libs/conflib/sdg.h	/^        double _lower;$/;"	m	class:conflib::sdgVolume
_mapMax	apps/MIFit/ui/ContourOptionsWidget.h	/^    float _mapMax;$/;"	m	class:ContourOptionsWidget
_mapMin	apps/MIFit/ui/ContourOptionsWidget.h	/^    float _mapMin;$/;"	m	class:ContourOptionsWidget
_master	libs/conflib/CoordGenerator.h	/^        chemlib::ConstraintList _master;$/;"	m	class:conflib::CoordGenerator
_menu	apps/MIFit/ui/ModelsView.cpp	/^    QMenu *_menu;$/;"	m	class:AtomsTree	file:
_menu	apps/MIFit/ui/ModelsView.cpp	/^    QMenu *_menu;$/;"	m	class:ModelsTree	file:
_menu	apps/MIFit/ui/ModelsView.cpp	/^    QMenu *_menu;$/;"	m	class:ResiduesTree	file:
_menuBar	apps/MIFit/ui/DictEditDialog.h	/^    QMenuBar *_menuBar;$/;"	m	class:DictEditDialog
_mode	apps/MIFit/ui/MIDialog.h	/^    unsigned int _mode;$/;"	m	class:MIFileDialog
_modelname	apps/MIFit/ui/RamaPlot.h	/^    std::string _modelname;$/;"	m	class:RamaPlotMgr
_models	apps/MIFit/ui/PhaseFileLoadDialog.h	/^    std::vector<std::string> _models;$/;"	m	class:PhaseFileLoadDialog
_modified	apps/MIFit/ui/MIGLWidget.h	/^    bool _modified;$/;"	m	class:MIGLWidget
_mol	apps/MIFit/ui/RamaPlot.h	/^    chemlib::MIMoleculeBase *_mol;$/;"	m	class:RamaPlotMgr
_nCycles	libs/conflib/AtomRefiner.h	/^        int _nCycles;$/;"	m	class:conflib::AtomRefiner
_nCycles	libs/conflib/CoordGenerator.h	/^        int _nCycles;               \/\/Number of Cycles to refine atoms$/;"	m	class:conflib::CoordGenerator
_nDist	libs/conflib/sdg.h	/^        int _nDist;$/;"	m	class:conflib::sdgEngine
_nSteps	libs/conflib/sdg.h	/^        int _nSteps;            \/\/Steps per cycle (proportional to # of atoms)$/;"	m	class:conflib::sdgEngine
_nTheory	libs/conflib/ConfIterator.h	/^        int _nTheory;$/;"	m	class:conflib::ConfEnumerator
_nTry	libs/conflib/ConfIterator.h	/^        int _nTry;$/;"	m	class:conflib::ConfEnumerator
_nTwists	libs/conflib/AtomRefiner.h	/^        int _nTwists;$/;"	m	class:conflib::AtomRefiner
_nVol	libs/conflib/sdg.h	/^        int _nVol;              \/\/Vector sizes included for efficiency$/;"	m	class:conflib::sdgEngine
_name	apps/MIFit/ui/MIDialog.h	/^    std::string _name;$/;"	m	class:MIFileDialog
_names	libs/chemlib/CifData.h	/^    std::vector<std::string> _names;            \/\/array of all the keywords, e.g. "chem_comp_atom.atom_id"$/;"	m	class:CifLoop
_natoms	libs/chemlib/ConfSaver.h	/^        int _natoms;$/;"	m	class:chemlib::ConfSaver
_natoms	libs/chemlib/SmilesReader.h	/^        int _natoms; \/\/Total number of atoms in the Ligand$/;"	m	class:chemlib::SmilesReader
_newbond	libs/conflib/CoordGenerator.h	/^        float _newbond[3];          \/\/Unit vector for the next bond to be added$/;"	m	class:conflib::CoordGenerator
_nplaced	libs/conflib/CoordGenerator.h	/^        int _nplaced;               \/\/Number of atoms placed thus far$/;"	m	class:conflib::CoordGenerator
_o2v	apps/MIFit/ui/surf.cpp	/^    std::map<unsigned int, std::set<unsigned int> >_o2v; \/\/ owner to vertex map$/;"	m	class:MISurface	file:
_objcInit	libs/cmtz/library_utils.c	/^void _objcInit(void) {}$/;"	f
_occupancy	libs/jacgrid/atom.h	/^    const float *_occupancy;$/;"	m	class:JACAtomsXYZROTE
_okButton	apps/MIFit/ui/CustomJobDialog.h	/^    QPushButton *_okButton;$/;"	m	class:CustomJobDialog
_openEnd	libs/conflib/sdg.h	/^        int _openEnd;$/;"	m	class:conflib::sdgVolume
_open_half_bonds	libs/chemlib/SmilesReader.h	/^        bool _open_half_bonds[100]; \/\/Table to track current ring closures$/;"	m	class:chemlib::SmiRingClosures
_order	libs/chemlib/Chiral.h	/^        int _order;                 \/\/Integer representing the order of the substituents$/;"	m	class:chemlib::Chiral
_origin	libs/chemlib/Substituent.h	/^        MIAtom *_origin;$/;"	m	class:chemlib::Substituent
_parent	apps/MIFit/ui/MIGLWidget.cpp	/^    MIGLWidget *_parent;$/;"	m	class:MyMIMolOptCheckPoint	file:
_pasteAction	apps/MIFit/ui/ModelsView.cpp	/^    QAction *_pasteAction;$/;"	m	class:ResiduesTree	file:
_phistr	libs/map/EMapBase.h	/^    std::string _fostr, _fcstr, _fomstr, _phistr, _sigfstr, _freeRstr;$/;"	m	class:EMapBase
_preferencesMode	apps/MIFit/ui/ContourOptionsWidget.h	/^    bool _preferencesMode;$/;"	m	class:ContourOptionsWidget
_prints	libs/conflib/ConfIterator.h	/^        std::vector<ConfFingerprint> _prints;   \/\/Tracks which conformations have been generated already$/;"	m	class:conflib::ConfSampler
_prints	libs/conflib/ConfIterator.h	/^        std::vector<ConfFingerprint> _prints;$/;"	m	class:conflib::ConfEnumerator
_prop_based_color	apps/MIFit/ui/surf.cpp	/^    std::vector<float> _prop_based_color; \/\/ 4 * size of _color$/;"	m	class:MISurface	file:
_qparent	apps/MIFit/ui/MIDialog.h	/^    QWidget *_qparent;$/;"	m	class:MIFileDialog
_r	apps/MIFit/ui/graphlib.h	/^    unsigned char _r, _g, _b;$/;"	m	class:GraphColor
_read	libs/cmtz/library_file.h	/^  int (*_read) (CCP4File *, uint8 *, size_t);$/;"	m	struct:CCP4::_CFileStruct
_read_mode	libs/cmtz/library_file.c	/^static int (*_read_mode[])(CCP4File *, uint8 *, size_t) = {$/;"	v	file:
_reader	libs/chemlib/SmilesReader.h	/^        SmilesReader *_reader;$/;"	m	class:chemlib::SmiRingClosures
_res	libs/chemlib/ConfSaver.h	/^        Residue *_res;$/;"	m	class:chemlib::ConfSaver
_res	libs/chemlib/Constraint.h	/^        const Monomer *_res;$/;"	m	class:chemlib::Improper
_res	libs/chemlib/Constraint.h	/^        const Monomer *_res;$/;"	m	class:chemlib::Plane
_res	libs/chemlib/Constraint.h	/^        const Monomer *_res;$/;"	m	class:chemlib::Torsion
_res	libs/chemlib/CovalentGeom.h	/^        const Monomer *_res;$/;"	m	class:chemlib::CovalentGeometry
_res	libs/chemlib/Dictionary.h	/^        const Monomer *_res;$/;"	m	class:chemlib::LigDictionary
_res	libs/chemlib/SmilesReader.h	/^        Monomer *_res;$/;"	m	class:chemlib::SmilesReader
_res	libs/chemlib/itertest.cxx	/^    RESIDUE *_res;$/;"	m	class:MIMoleculeBase	file:
_res	libs/conflib/ConfIterator.h	/^        chemlib::Residue *_res;$/;"	m	class:conflib::ConfEnumerator
_res	libs/conflib/ConfIterator.h	/^        chemlib::Residue *_res;$/;"	m	class:conflib::ConfSampler
_res	libs/conflib/CoordGenerator.h	/^        chemlib::Monomer *_res;$/;"	m	class:conflib::CoordGenerator
_res_tmp_map	apps/MIFit/ui/PhaseFileLoadDialog.h	/^    EMap *_res_tmp_map;$/;"	m	class:PhaseFileLoadDialog
_residue	libs/chemlib/DictResidue.h	/^        Residue *_residue; \/\/ reference only, not owned by this class$/;"	m	class:chemlib::DictResidue
_residue	libs/chemlib/Residue.h	/^        Residue *_residue;$/;"	m	class:chemlib::ResidueListIterator
_ring_closer	libs/chemlib/SmilesReader.h	/^        SmiRingClosures _ring_closer;$/;"	m	class:chemlib::SmilesReader
_ringnum	libs/chemlib/SmilesReader.h	/^        int _ringnum; \/\/Number of the current half-bond (0-9 for single-digit,10-99 for long)$/;"	m	class:chemlib::SmiRingClosures
_rnabor	libs/conflib/CoordGenerator.h	/^        chemlib::MIAtom *_rnabor;           \/\/A placed nabor of the root atom$/;"	m	class:conflib::CoordGenerator
_root	libs/conflib/CoordGenerator.h	/^        chemlib::MIAtom *_root;                 \/\/Current atom will be attached to this atom$/;"	m	class:conflib::CoordGenerator
_roots	libs/chemlib/SmilesReader.h	/^        std::stack <MIAtom*> _roots; \/\/MIAtom stack to keep track of last atom read$/;"	m	class:chemlib::SmilesReader
_rsnumber	libs/chemlib/RingSystem.h	/^        int _rsnumber;                              \/\/Index of this ringsys in the molecule$/;"	m	class:chemlib::RingSystem
_rvect	libs/conflib/CoordGenerator.h	/^        double _rvect[3];           \/\/Bond vector from _rnabor to _root$/;"	m	class:conflib::CoordGenerator
_scriptSocket	apps/MIFit/ui/MIMainWindow.h	/^    LocalSocketScript* _scriptSocket;$/;"	m	class:MIMainWindow
_seg_count	apps/MIFit/ui/rama.h	/^    unsigned int *_seg_count;$/;"	m	class:RichardsonRamaData
_seg_count	apps/MIFit/ui/rama.h	/^    unsigned int _seg_count[3];$/;"	m	class:OrigRamaData
_sel_mask	libs/jacgrid/atom.h	/^    unsigned int _sel_mask;$/;"	m	class:JACAtomsXYZR
_selected	libs/jacgrid/atom.h	/^    const unsigned int *_selected;$/;"	m	class:JACAtomsXYZR
_short_half_bonds	libs/chemlib/SmilesReader.h	/^        int _short_half_bonds[100]; \/\/Indices of the halfbond in the bonds vector in the mol obj$/;"	m	class:chemlib::SmiRingClosures
_showFom	apps/MIFit/ui/PhaseFileLoadDialog.h	/^    bool _showFom;$/;"	m	class:PhaseFileLoadDialog
_sigfstr	libs/map/EMapBase.h	/^    std::string _fostr, _fcstr, _fomstr, _phistr, _sigfstr, _freeRstr;$/;"	m	class:EMapBase
_sigmaangle	libs/chemlib/CovalentGeom.h	/^        float _sigmaangle;$/;"	m	class:chemlib::CovalentGeometry
_sigmabond	libs/chemlib/CovalentGeom.h	/^        float _sigmabond;$/;"	m	class:chemlib::CovalentGeometry
_sigmabump	libs/chemlib/CovalentGeom.h	/^        float _sigmabump;$/;"	m	class:chemlib::CovalentGeometry
_sigmaplane	libs/chemlib/Dictionary.h	/^        float _sigmaplane;$/;"	m	class:chemlib::LigDictionary
_size	libs/jacgrid/grid.h	/^    unsigned int _size;$/;"	m	class:gridT
_slot	apps/MIFit/ui/CurrentMIGLWidgetAction.h	/^    const char *_slot;$/;"	m	class:CurrentMIGLWidgetAction
_smistr	libs/chemlib/SmilesReader.h	/^        char *_smistr; \/\/Input SMILES string$/;"	m	class:chemlib::SmilesReader
_squirt_torsions	libs/chemlib/mmCIF.h	/^        int _squirt_torsions; \/\/ 0 = false, 1 = true, 2 = ask user$/;"	m	class:chemlib::mmCIF
_start	libs/chemlib/CifParser.h	/^    bool _start;                                \/\/ Flag for when we're in the header$/;"	m	class:CifParser
_stereoToggleAction	apps/MIFit/ui/MIMainWindow.h	/^    QAction *_stereoToggleAction;$/;"	m	class:MIMainWindow
_str	libs/chemlib/CifParser.h	/^    std::string _str;$/;"	m	class:CifTokenizer
_styleSettings	apps/MIFit/ui/ContourOptionsWidget.h	/^    MapSettingsBase _styleSettings[NUM_DEFINED_STYLES];$/;"	m	class:ContourOptionsWidget
_subs	libs/chemlib/Chiral.h	/^        MIAtomList _subs;     \/\/Pointer to the (spatially-ordered) substituent atoms$/;"	m	class:chemlib::Chiral
_theta	libs/chemlib/Substituent.h	/^        double _theta;$/;"	m	class:chemlib::Substituent
_title	apps/MIFit/ui/MIGLWidget.h	/^    std::string _title;$/;"	m	class:MIGLWidget
_tol_set	libs/chemlib/Constraint.h	/^        bool _tol_set;$/;"	m	class:chemlib::Plane
_tolerance	libs/chemlib/Constraint.h	/^        float _tolerance;$/;"	m	class:chemlib::Plane
_torsnumber	libs/chemlib/Constraint.h	/^        int _torsnumber;$/;"	m	class:chemlib::Torsion
_type	apps/MIFit/ui/rama.h	/^    unsigned int _type;$/;"	m	class:RichardsonRamaData
_updateSlot	apps/MIFit/ui/CurrentMIGLWidgetAction.h	/^    const char *_updateSlot;$/;"	m	class:CurrentMIGLWidgetAction
_upper	libs/conflib/sdg.h	/^        double _upper;$/;"	m	class:conflib::sdgDistance
_upper	libs/conflib/sdg.h	/^        double _upper;$/;"	m	class:conflib::sdgVolume
_valid	apps/MIFit/ui/surf.cpp	/^    bool _valid;$/;"	m	class:MISurface	file:
_valid	libs/jacgrid/grid.h	/^    bool _valid;$/;"	m	class:gridT
_values	libs/chemlib/CifData.h	/^    std::string _values;                \/\/The concatenation of all the values$/;"	m	class:CifLoop
_view	apps/MIFit/ui/RamaPlot.h	/^    MIGLWidget *_view;$/;"	m	class:RamaPlotMgr
_viewpoint	apps/MIFit/ui/MIGLWidget.cpp	/^    ViewPoint *_viewpoint;$/;"	m	class:MyMIMolOptCheckPoint	file:
_vol_odds	libs/conflib/sdg.h	/^        double _vol_odds;       \/\/The chance, for each step, of tweaking a volume constraint (set in constructor)$/;"	m	class:conflib::sdgEngine
_volumes	libs/conflib/sdg.h	/^        std::vector<sdgVolume> &_volumes;$/;"	m	class:conflib::sdgEngine
_working	apps/MIFit/ui/ModelsView.cpp	/^    bool _working;$/;"	m	class:AtomsTree	file:
_working	apps/MIFit/ui/ModelsView.cpp	/^    bool _working;$/;"	m	class:ModelsTree	file:
_working	apps/MIFit/ui/ModelsView.cpp	/^    bool _working;$/;"	m	class:ResiduesTree	file:
_write	libs/cmtz/library_file.h	/^  int (*_write) (CCP4File *, const uint8 *, size_t);$/;"	m	struct:CCP4::_CFileStruct
_write_mode	libs/cmtz/library_file.c	/^static int (*_write_mode[])(CCP4File *, const uint8 *, size_t) = {$/;"	v	file:
_x	apps/MIFit/ui/rama.h	/^    float **_x, **_y;$/;"	m	class:OrigRamaData
_x	apps/MIFit/ui/rama.h	/^    float **_x, **_y;$/;"	m	class:RichardsonRamaData
_xyzGen	libs/conflib/AtomRefiner.h	/^        CoordGenerator *_xyzGen;$/;"	m	class:conflib::AtomRefiner
_xyzr	libs/jacgrid/atom.h	/^    const float *_xyzr;$/;"	m	class:JACAtomsXYZR
_y	apps/MIFit/ui/rama.h	/^    float **_x, **_y;$/;"	m	class:OrigRamaData
_y	apps/MIFit/ui/rama.h	/^    float **_x, **_y;$/;"	m	class:RichardsonRamaData
a	libs/map/CMapHeaderBase.h	/^    float a, b, c, alpha, beta, gamma;$/;"	m	class:CMapHeaderBase
a	libs/map/fftsub.cpp	/^static float a, b, c, alpha, beta, gama, rmin, rmax, vol;$/;"	v	file:
a0	libs/umtz/html/mmtzlib_8h.html	/^<a name="a0" doxytag="mmtzlib.h::mmtzfile"><\/a><p>$/;"	a
a0	libs/umtz/html/umtzlib_8h.html	/^<a name="a0" doxytag="umtzlib.h::MTZRECLEN"><\/a><p>$/;"	a
a1	libs/map/sfcalc_data.h	/^double *a1, *a2, *a3, *a4,$/;"	v
a1	libs/umtz/html/mmtzlib_8h.html	/^<a name="a1" doxytag="mmtzlib.h::mmtz_column"><\/a><p>$/;"	a
a1	libs/umtz/html/umtzlib_8h.html	/^<a name="a1" doxytag="umtzlib.h::MTZBATCHR"><\/a><p>$/;"	a
a10	libs/umtz/html/mmtzlib_8h.html	/^<a name="a10" doxytag="mmtzlib.h::mmtz_get_num_symops"><\/a><p>$/;"	a
a10	libs/umtz/html/umtzlib_8h.html	/^<a name="a10" doxytag="umtzlib.h::umtz_open"><\/a><p>$/;"	a
a11	libs/umtz/html/mmtzlib_8h.html	/^<a name="a11" doxytag="mmtzlib.h::mmtz_get_symop"><\/a><p>$/;"	a
a11	libs/umtz/html/umtzlib_8h.html	/^<a name="a11" doxytag="umtzlib.h::umtz_close"><\/a><p>$/;"	a
a12	libs/umtz/html/mmtzlib_8h.html	/^<a name="a12" doxytag="mmtzlib.h::mmtz_get_cell"><\/a><p>$/;"	a
a12	libs/umtz/html/umtzlib_8h.html	/^<a name="a12" doxytag="umtzlib.h::umtz_num_cols"><\/a><p>$/;"	a
a13	libs/umtz/html/mmtzlib_8h.html	/^<a name="a13" doxytag="mmtzlib.h::mmtz_get_setxtl"><\/a><p>$/;"	a
a13	libs/umtz/html/umtzlib_8h.html	/^<a name="a13" doxytag="umtzlib.h::umtz_num_rows"><\/a><p>$/;"	a
a14	libs/umtz/html/mmtzlib_8h.html	/^<a name="a14" doxytag="mmtzlib.h::mmtz_get_column"><\/a><p>$/;"	a
a14	libs/umtz/html/umtzlib_8h.html	/^<a name="a14" doxytag="umtzlib.h::umtz_num_head"><\/a><p>$/;"	a
a15	libs/umtz/html/mmtzlib_8h.html	/^<a name="a15" doxytag="mmtzlib.h::mmtz_add_column"><\/a><p>$/;"	a
a15	libs/umtz/html/umtzlib_8h.html	/^<a name="a15" doxytag="umtzlib.h::umtz_num_hist"><\/a><p>$/;"	a
a16	libs/umtz/html/mmtzlib_8h.html	/^<a name="a16" doxytag="mmtzlib.h::mmtz_init_headers"><\/a><p>$/;"	a
a16	libs/umtz/html/umtzlib_8h.html	/^<a name="a16" doxytag="umtzlib.h::umtz_mnf"><\/a><p>$/;"	a
a17	libs/umtz/html/mmtzlib_8h.html	/^<a name="a17" doxytag="mmtzlib.h::mmtz_add_sort_header"><\/a><p>$/;"	a
a17	libs/umtz/html/umtzlib_8h.html	/^<a name="a17" doxytag="umtzlib.h::umtz_ismnf"><\/a><p>$/;"	a
a18	libs/umtz/html/mmtzlib_8h.html	/^<a name="a18" doxytag="mmtzlib.h::mmtz_add_syminf_header"><\/a><p>$/;"	a
a18	libs/umtz/html/umtzlib_8h.html	/^<a name="a18" doxytag="umtzlib.h::umtz_first_head"><\/a><p>$/;"	a
a19	libs/umtz/html/mmtzlib_8h.html	/^<a name="a19" doxytag="mmtzlib.h::mmtz_add_symop_header"><\/a><p>$/;"	a
a19	libs/umtz/html/umtzlib_8h.html	/^<a name="a19" doxytag="umtzlib.h::umtz_first_hist"><\/a><p>$/;"	a
a2	libs/map/sfcalc_data.h	/^double *a1, *a2, *a3, *a4,$/;"	v
a2	libs/umtz/html/mmtzlib_8h.html	/^<a name="a2" doxytag="mmtzlib.h::mmtz_dataset"><\/a><p>$/;"	a
a2	libs/umtz/html/umtzlib_8h.html	/^<a name="a2" doxytag="umtzlib.h::MTZBATINT"><\/a><p>$/;"	a
a20	libs/umtz/html/mmtzlib_8h.html	/^<a name="a20" doxytag="mmtzlib.h::mmtz_get_row"><\/a><p>$/;"	a
a20	libs/umtz/html/umtzlib_8h.html	/^<a name="a20" doxytag="umtzlib.h::umtz_first_bats"><\/a><p>$/;"	a
a21	libs/umtz/html/mmtzlib_8h.html	/^<a name="a21" doxytag="mmtzlib.h::mmtz_add_row"><\/a><p>$/;"	a
a21	libs/umtz/html/umtzlib_8h.html	/^<a name="a21" doxytag="umtzlib.h::umtz_last_head"><\/a><p>$/;"	a
a22	libs/umtz/html/mmtzlib_8h.html	/^<a name="a22" doxytag="mmtzlib.h::mmtz_seek_row"><\/a><p>$/;"	a
a22	libs/umtz/html/umtzlib_8h.html	/^<a name="a22" doxytag="umtzlib.h::umtz_last_hist"><\/a><p>$/;"	a
a23	libs/umtz/html/umtzlib_8h.html	/^<a name="a23" doxytag="umtzlib.h::umtz_last_bats"><\/a><p>$/;"	a
a24	libs/umtz/html/umtzlib_8h.html	/^<a name="a24" doxytag="umtzlib.h::umtz_keymatch"><\/a><p>$/;"	a
a25	libs/umtz/html/umtzlib_8h.html	/^<a name="a25" doxytag="umtzlib.h::umtz_add_head"><\/a><p>$/;"	a
a26	libs/umtz/html/umtzlib_8h.html	/^<a name="a26" doxytag="umtzlib.h::umtz_add_hist"><\/a><p>$/;"	a
a27	libs/umtz/html/umtzlib_8h.html	/^<a name="a27" doxytag="umtzlib.h::umtz_add_bats"><\/a><p>$/;"	a
a28	libs/umtz/html/umtzlib_8h.html	/^<a name="a28" doxytag="umtzlib.h::umtz_seek_row"><\/a><p>$/;"	a
a29	libs/umtz/html/umtzlib_8h.html	/^<a name="a29" doxytag="umtzlib.h::umtz_get_row"><\/a><p>$/;"	a
a3	libs/map/sfcalc_data.h	/^double *a1, *a2, *a3, *a4,$/;"	v
a3	libs/umtz/html/mmtzlib_8h.html	/^<a name="a3" doxytag="mmtzlib.h::mmtz_crystal"><\/a><p>$/;"	a
a3	libs/umtz/html/umtzlib_8h.html	/^<a name="a3" doxytag="umtzlib.h::MTZBATFLT"><\/a><p>$/;"	a
a30	libs/umtz/html/umtzlib_8h.html	/^<a name="a30" doxytag="umtzlib.h::umtz_add_row"><\/a><p>$/;"	a
a31	libs/umtz/html/umtzlib_8h.html	/^<a name="a31" doxytag="umtzlib.h::umtz_get_cell"><\/a><p>$/;"	a
a32	libs/umtz/html/umtzlib_8h.html	/^<a name="a32" doxytag="umtzlib.h::umtz_cell_metric"><\/a><p>$/;"	a
a33	libs/umtz/html/umtzlib_8h.html	/^<a name="a33" doxytag="umtzlib.h::umtz_num_head_type"><\/a><p>$/;"	a
a34	libs/umtz/html/umtzlib_8h.html	/^<a name="a34" doxytag="umtzlib.h::umtz_make_rec"><\/a><p>$/;"	a
a35	libs/umtz/html/umtzlib_8h.html	/^<a name="a35" doxytag="umtzlib.h::umtz_copy_pad"><\/a><p>$/;"	a
a36	libs/umtz/html/umtzlib_8h.html	/^<a name="a36" doxytag="umtzlib.h::umtz_rewrite_headers_ranges"><\/a><p>$/;"	a
a37	libs/umtz/html/umtzlib_8h.html	/^<a name="a37" doxytag="umtzlib.h::umtz_rewrite_headers_legacy"><\/a><p>$/;"	a
a4	libs/map/sfcalc_data.h	/^double *a1, *a2, *a3, *a4,$/;"	v
a4	libs/umtz/html/mmtzlib_8h.html	/^<a name="a4" doxytag="mmtzlib.h::mmtz_open"><\/a><p>$/;"	a
a4	libs/umtz/html/umtzlib_8h.html	/^<a name="a4" doxytag="umtzlib.h::MTZBATLEN"><\/a><p>$/;"	a
a5	libs/umtz/html/mmtzlib_8h.html	/^<a name="a5" doxytag="mmtzlib.h::mmtz_close"><\/a><p>$/;"	a
a5	libs/umtz/html/umtzlib_8h.html	/^<a name="a5" doxytag="umtzlib.h::MTZDATAOFF"><\/a><p>$/;"	a
a6	libs/umtz/html/mmtzlib_8h.html	/^<a name="a6" doxytag="mmtzlib.h::mmtz_copy_headers"><\/a><p>$/;"	a
a6	libs/umtz/html/umtzlib_8h.html	/^<a name="a6" doxytag="umtzlib.h::umtz_hdr"><\/a><p>$/;"	a
a7	libs/umtz/html/mmtzlib_8h.html	/^<a name="a7" doxytag="mmtzlib.h::mmtz_num_rows"><\/a><p>$/;"	a
a7	libs/umtz/html/umtzlib_8h.html	/^<a name="a7" doxytag="umtzlib.h::umtz_bat"><\/a><p>$/;"	a
a8	libs/umtz/html/mmtzlib_8h.html	/^<a name="a8" doxytag="mmtzlib.h::mmtz_num_cols"><\/a><p>$/;"	a
a8	libs/umtz/html/umtzlib_8h.html	/^<a name="a8" doxytag="umtzlib.h::umtz_list"><\/a><p>$/;"	a
a9	libs/umtz/html/mmtzlib_8h.html	/^<a name="a9" doxytag="mmtzlib.h::mmtz_num_datasets"><\/a><p>$/;"	a
a9	libs/umtz/html/umtzlib_8h.html	/^<a name="a9" doxytag="umtzlib.h::umtzfile"><\/a><p>$/;"	a
abs	libs/map/fftlib.cpp	159;"	d	file:
abs	libs/math/Tuple4.h	10;"	d
absolute	libs/math/Matrix3.h	/^        void Matrix3<Type>::absolute()$/;"	f	class:mi::math::Matrix3
absolute	libs/math/Matrix4.h	/^        void Matrix4<Type>::absolute()$/;"	f	class:mi::math::Matrix4
absolute	libs/math/Tuple3.h	/^        void Tuple3<Type>::absolute()$/;"	f	class:mi::math::Tuple3
absolute	libs/math/Tuple3.h	/^        void Tuple3<Type>::absolute(const Tuple3<Type> &t1)$/;"	f	class:mi::math::Tuple3
absolute	libs/math/Tuple3.h	10;"	d
absolute	libs/math/Tuple4.h	/^        void Tuple4<Type>::absolute()$/;"	f	class:mi::math::Tuple4
absolute	libs/math/Tuple4.h	/^        void Tuple4<Type>::absolute(const Tuple4<Type> &t1)$/;"	f	class:mi::math::Tuple4
absolute	libs/math/Tuple4.h	9;"	d
absolute	libs/math/mathlib.h	39;"	d
acalc	libs/map/CREFL.h	/^    float acalc;$/;"	m	class:CREFL
accept	apps/MIFit/ui/DictEditDialog.cpp	/^void DictEditDialog::accept()$/;"	f	class:DictEditDialog
accept	apps/MIFit/ui/GenericDataDialog.cpp	/^void GenericDataDialog::accept()$/;"	f	class:GenericDataDialog
acceptFitAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *acceptFitAction;$/;"	m	class:MIGLWidget
acceptRefine	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::acceptRefine()$/;"	f	class:MIGLWidget
acceptRefineAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *acceptRefineAction;$/;"	m	class:MIGLWidget
acceptRefineAction	apps/MIFit/ui/MIMainWindow.h	/^    QAction *acceptRefineAction;$/;"	m	class:MIMainWindow
accessible_calc_cell_verts	libs/jacgrid/isosurface.cpp	/^static void accessible_calc_cell_verts(unsigned int index, unsigned int x1, unsigned int y1, unsigned int z1)$/;"	f	file:
accum	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QCheckBox *accum;$/;"	m	class:Ui_GLFormatEdit
accumSize	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QSpinBox *accumSize;$/;"	m	class:Ui_GLFormatEdit
acosf	libs/cmtz/library_utils.c	/^float acosf(float x) {$/;"	f
actions	apps/MIFit/ui/tools.h	/^    QList<QAction*> actions;$/;"	m	class:Tools
active	libs/cmtz/mtzdata.h	/^                 int active;           \/**< whether column in active list *\/$/;"	m	struct:__anon20
add	libs/math/Matrix3.h	/^        void Matrix3<Type>::add(Type scalar)$/;"	f	class:mi::math::Matrix3
add	libs/math/Matrix3.h	/^        void Matrix3<Type>::add(Type scalar, const Matrix3<Type> &m1)$/;"	f	class:mi::math::Matrix3
add	libs/math/Matrix3.h	/^        void Matrix3<Type>::add(const Matrix3<Type> &m1)$/;"	f	class:mi::math::Matrix3
add	libs/math/Matrix3.h	/^        void Matrix3<Type>::add(const Matrix3<Type> &m1, const Matrix3<Type> &m2)$/;"	f	class:mi::math::Matrix3
add	libs/math/Matrix4.h	/^        void Matrix4<Type>::add(Type scalar)$/;"	f	class:mi::math::Matrix4
add	libs/math/Matrix4.h	/^        void Matrix4<Type>::add(Type scalar, const Matrix4<Type> &m1)$/;"	f	class:mi::math::Matrix4
add	libs/math/Matrix4.h	/^        void Matrix4<Type>::add(const Matrix4<Type> &m1)$/;"	f	class:mi::math::Matrix4
add	libs/math/Matrix4.h	/^        void Matrix4<Type>::add(const Matrix4<Type> &m1, const Matrix4<Type> &m2)$/;"	f	class:mi::math::Matrix4
add	libs/math/Tuple3.h	/^        void Tuple3<Type>::add(const Tuple3<Type> &t1)$/;"	f	class:mi::math::Tuple3
add	libs/math/Tuple3.h	/^        void Tuple3<Type>::add(const Tuple3<Type> &t1, const Tuple3<Type> &t2)$/;"	f	class:mi::math::Tuple3
add	libs/math/Tuple4.h	/^        void Tuple4<Type>::add(const Tuple4<Type> &t1)$/;"	f	class:mi::math::Tuple4
add	libs/math/Tuple4.h	/^        void Tuple4<Type>::add(const Tuple4<Type> &t1, const Tuple4<Type> &t2)$/;"	f	class:mi::math::Tuple4
addAcenter	libs/map/CMapHeaderBase.cpp	/^int CMapHeaderBase::addAcenter(int n, float symop[3][4][MISymmop::MAXSYMMOPS])$/;"	f	class:CMapHeaderBase
addAnnotation	apps/MIFit/core/Molecule.cpp	/^void Molecule::addAnnotation(Annotation *annotation)$/;"	f	class:Molecule
addAnnotation	apps/MIFit/core/Molecule.cpp	/^void Molecule::addAnnotation(const std::string &s, float x, float y, float z, int id)$/;"	f	class:Molecule
addAnnotation	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::addAnnotation(Molecule *model, Annotation *annotation)$/;"	f	class:DisplayTree
addAnnotations	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::addAnnotations(Molecule *model)$/;"	f	class:DisplayTree
addAtom	libs/chemlib/Monomer.h	/^        void addAtom(MIAtom *atom)$/;"	f	class:chemlib::Monomer
addAtomLabel	apps/MIFit/core/Molecule.cpp	/^void Molecule::addAtomLabel(ATOMLABEL *label)$/;"	f	class:Molecule
addAtomLabel	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::addAtomLabel(Molecule *model, ATOMLABEL *label)$/;"	f	class:DisplayTree
addAtomLabels	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::addAtomLabels(Molecule *model)$/;"	f	class:DisplayTree
addBcenter	libs/map/CMapHeaderBase.cpp	/^int CMapHeaderBase::addBcenter(int n, float symop[3][4][MISymmop::MAXSYMMOPS])$/;"	f	class:CMapHeaderBase
addBond	apps/MIFit/ui/BondRenderer.cpp	/^void BondRenderer::addBond(const QVector3D &pos1, const QVector4D &color1, const QVector3D &pos2, const QVector4D &color2)$/;"	f	class:BondRenderer
addBondnumber	libs/chemlib/MIAtom.h	/^        void addBondnumber(int bondNumber)$/;"	f	class:chemlib::MIAtom
addBoolField	apps/MIFit/ui/GenericDataDialog.cpp	/^void GenericDataDialog::addBoolField(const QString &label, bool value)$/;"	f	class:GenericDataDialog
addButton	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QPushButton *addButton;$/;"	m	class:Ui_LSQFitDialog
addCcenter	libs/map/CMapHeaderBase.cpp	/^int CMapHeaderBase::addCcenter(int n, float symop[3][4][MISymmop::MAXSYMMOPS])$/;"	f	class:CMapHeaderBase
addChains	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::addChains(Molecule *model)$/;"	f	class:ModelsTree
addChiralAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *addChiralAction;$/;"	m	class:DictEditCanvas
addColorField	apps/MIFit/ui/GenericDataDialog.cpp	/^void GenericDataDialog::addColorField(const QString &label, const QColor &color)$/;"	f	class:GenericDataDialog
addColorIndexField	apps/MIFit/ui/GenericDataDialog.cpp	/^void GenericDataDialog::addColorIndexField(const QString &label, int colorIndex)$/;"	f	class:GenericDataDialog
addComboField	apps/MIFit/ui/GenericDataDialog.cpp	/^void GenericDataDialog::addComboField(const QString &label, const QStringList &choices, int index)$/;"	f	class:GenericDataDialog
addDelta	libs/chemlib/MIAtom.h	/^        void addDelta(float dx, float dy, float dz)$/;"	f	class:chemlib::MIAtom
addDoubleField	apps/MIFit/ui/GenericDataDialog.cpp	/^void GenericDataDialog::addDoubleField(const QString &label, double value)$/;"	f	class:GenericDataDialog
addFcenter	libs/map/CMapHeaderBase.cpp	/^int CMapHeaderBase::addFcenter(int n, float symop[3][4][MISymmop::MAXSYMMOPS])$/;"	f	class:CMapHeaderBase
addFreeRAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *addFreeRAction_;$/;"	m	class:ModelsTree	file:
addIcenter	libs/map/CMapHeaderBase.cpp	/^int CMapHeaderBase::addIcenter(int n, float symop[3][4][MISymmop::MAXSYMMOPS])$/;"	f	class:CMapHeaderBase
addIntField	apps/MIFit/ui/GenericDataDialog.cpp	/^void GenericDataDialog::addIntField(const QString &label, int value)$/;"	f	class:GenericDataDialog
addJob	apps/MIFit/script/MIFitScriptObject.cpp	/^void MIFitScriptObject::addJob(const QString &menuName, const QString &jobName, const QString &executable, const QStringList &arguments, const QString &workingDirectory)$/;"	f	class:MIFitScriptObject
addJob	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::addJob(const QString &menuName, const QString &jobName, const QString &executable, const QStringList &arguments, const QString &workingDirectory)$/;"	f	class:MIMainWindow
addJob	mifit.py	/^def addJob(menuName, jobName, executable, arguments, workingDirectory):$/;"	f
addJobToTree	apps/MIFit/ui/JobsView.cpp	/^void JobsView::addJobToTree(BatchJob *job)$/;"	f	class:JobsView
addMap	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::addMap(EMap *map)$/;"	f	class:ModelsTree
addMapCrystal	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::addMapCrystal(EMap *map)$/;"	f	class:ModelsTree
addMaps	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::addMaps(Displaylist *displaylist)$/;"	f	class:ModelsTree
addModel	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::addModel(Molecule *model)$/;"	f	class:DisplayTree
addModel	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::addModel(Molecule *model)$/;"	f	class:ModelsTree
addModelCrystal	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::addModelCrystal(Molecule *model)$/;"	f	class:ModelsTree
addModels	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::addModels(Displaylist *displaylist)$/;"	f	class:DisplayTree
addModels	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::addModels(Displaylist *displaylist)$/;"	f	class:ModelsTree
addNabor	libs/chemlib/MIAtom.h	/^        void addNabor(MIAtom *atom)$/;"	f	class:chemlib::MIAtom
addPlaneAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *addPlaneAction;$/;"	m	class:DictEditCanvas
addPlaneAtomAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *addPlaneAtomAction;$/;"	m	class:DictEditCanvas
addPlaneAtomsAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *addPlaneAtomsAction;$/;"	m	class:DictEditCanvas
addPrefAngle	libs/chemlib/Residue.h	/^        void addPrefAngle(const ANGLE &a)$/;"	f	class:chemlib::Residue
addPrefBond	libs/chemlib/Residue.h	/^        void addPrefBond(const Bond &b)$/;"	f	class:chemlib::Residue
addRcenter	libs/map/CMapHeaderBase.cpp	/^int CMapHeaderBase::addRcenter(int n, float symop[3][4][MISymmop::MAXSYMMOPS])$/;"	f	class:CMapHeaderBase
addRecentFileActions	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::addRecentFileActions(QMenu *fileMenu)$/;"	f	class:MIMainWindow
addResidueWithPrompt	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::addResidueWithPrompt()$/;"	f	class:MIGLWidget
addStringField	apps/MIFit/ui/GenericDataDialog.cpp	/^void GenericDataDialog::addStringField(const QString &label, const QString &value)$/;"	f	class:GenericDataDialog
addSurface	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::addSurface(Molecule *model)$/;"	f	class:DisplayTree
addToolMenuButton	apps/MIFit/ui/MIMainWindow.cpp	/^    void addToolMenuButton(QToolBar *toolBar, QMenu *menu, QIcon icon)$/;"	f	namespace:__anon5
addType	libs/chemlib/MIAtom.h	/^        void addType(unsigned int type)$/;"	f	class:chemlib::MIAtom
addTypePushButton	apps/MIFit/ui/ui_AtomColors.h	/^    QPushButton *addTypePushButton;$/;"	m	class:Ui_AtomColors
addUIntField	apps/MIFit/ui/GenericDataDialog.cpp	/^void GenericDataDialog::addUIntField(const QString &label, unsigned int value)$/;"	f	class:GenericDataDialog
addWeight	libs/chemlib/MIAtom.h	/^        void addWeight(float w)$/;"	f	class:chemlib::MIAtom
add_linkage_type	libs/chemlib/Monomer.h	/^        void add_linkage_type(unsigned short i)$/;"	f	class:chemlib::Monomer
addcenter	libs/map/CMapHeaderBase.cpp	/^int CMapHeaderBase::addcenter(int n, float symop[3][4][MISymmop::MAXSYMMOPS])$/;"	f	class:CMapHeaderBase
addinversion	libs/map/CMapHeaderBase.cpp	/^int CMapHeaderBase::addinversion(int n, float symop[3][4][MISymmop::MAXSYMMOPS])$/;"	f	class:CMapHeaderBase
addr	libs/jacgrid/isosurface.cpp	7;"	d	file:
addr	libs/jacgrid/surface.cpp	473;"	d	file:
addr	libs/map/fftlib.cpp	/^    char *addr;$/;"	m	struct:Vardesc	file:
address	libs/map/fftlib.cpp	/^typedef char*address;$/;"	t	file:
addrho	libs/map/EMapBase.cpp	/^static void addrho(MIAtom *atom, micomplex *cmap, int nx, int ny, int nz, CMapHeaderBase *mh, Residue *res, float shake_coords = 0.0)$/;"	f	file:
adler	libs/opengl/zlib/zlib.h	/^    uLong adler;        \/* adler32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s
adler32	libs/opengl/zlib/adler32.cpp	/^uLong ZEXPORT adler32(uLong adler, const Bytef *buf, uInt len)$/;"	f
adler32	libs/opengl/zlib/zconf.h	32;"	d
aend	apps/MIFit/core/pdbmatch.cpp	/^    int astart, aend;$/;"	m	class:hit	file:
aerr	libs/map/fftlib.cpp	/^    flag aerr;$/;"	m	struct:__anon55	file:
afterSelected	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QRadioButton *afterSelected;$/;"	m	class:Ui_AddResidueDialog
al	libs/map/fftlib.cpp	1446;"	d	file:
al	libs/map/fftlib.cpp	1787;"	d	file:
alambd	libs/cmtz/mtzdata.h	/^		 float alambd;         \/**< wavelength (A) *\/$/;"	m	struct:bathead
alignVectors	libs/opengl/QuatUtil.cpp	/^Quaternion<float> QuatUtil::alignVectors(const Vector3<float> &source, const Vector3<float> &target)$/;"	f	class:mi::opengl::QuatUtil
alist	libs/map/fftlib.cpp	/^} alist;$/;"	t	typeref:struct:__anon55	file:
alloc_func	libs/opengl/zlib/zlib.h	/^typedef voidpf (*alloc_func) OF ((voidpf opaque, uInt items, uInt size));$/;"	t
allocateTexture	libs/opengl/Text.cpp	/^void TextPrivate::allocateTexture()$/;"	f	class:mi::opengl::TextPrivate
alpha	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QCheckBox *alpha;$/;"	m	class:Ui_GLFormatEdit
alpha	libs/map/CMapHeaderBase.h	/^    float a, b, c, alpha, beta, gamma;$/;"	m	class:CMapHeaderBase
alpha	libs/map/fftsub.cpp	/^static float a, b, c, alpha, beta, gama, rmin, rmax, vol;$/;"	v	file:
alphaHelix	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QRadioButton *alphaHelix;$/;"	m	class:Ui_AddResidueDialog
alphaSize	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QSpinBox *alphaSize;$/;"	m	class:Ui_GLFormatEdit
alreadybonded	libs/chemlib/MIMoleculeBase.cpp	/^bool MIMoleculeBase::alreadybonded(MIAtom *a1, MIAtom *a2)$/;"	f	class:chemlib::MIMoleculeBase
alt_seq	apps/MIFit/core/Molecule.h	/^    std::string alt_seq;$/;"	m	class:Molecule
altloc	libs/chemlib/MIAtom.h	/^        char altloc() const$/;"	f	class:chemlib::MIAtom
altloc_	libs/chemlib/MIAtom.h	/^        char altloc_; \/\/ identifies split residues (alternate location). column 17$/;"	m	class:chemlib::MIAtom
amag	libs/jacgrid/linalg.h	/^inline float amag(const float *x)$/;"	f
ambientColor	libs/opengl/Light.h	/^            float *ambientColor;$/;"	m	class:mi::opengl::Light
amnf	libs/cmtz/mtzdata.h	/^typedef union { char amnf[4]; $/;"	m	union:__anon24
amountToDimNonactiveModels	apps/MIFit/ui/GLRenderer.h	/^    float amountToDimNonactiveModels;$/;"	m	class:GLRenderer
amountToDimNonactiveModels	apps/MIFit/ui/ViewPointSettings.h	/^    float amountToDimNonactiveModels;$/;"	m	class:ViewPointSettings
analyze_menu	apps/MIFit/ui/MIMainWindow.h	/^    QMenu *analyze_menu;$/;"	m	class:MIMainWindow
aname1	libs/chemlib/MIMolDictionary.cpp	/^    char aname1[MAXATOMNAME];$/;"	m	class:chemlib::ANGLEDICT	file:
aname1	libs/chemlib/MIMolDictionary.cpp	/^    char aname1[MAXATOMNAME];$/;"	m	class:chemlib::BondDICT	file:
aname1	libs/chemlib/MIMolDictionary.cpp	/^    char aname1[MAXATOMNAME];$/;"	m	class:chemlib::SYNONYM	file:
aname2	libs/chemlib/MIMolDictionary.cpp	/^    char aname2[MAXATOMNAME];$/;"	m	class:chemlib::ANGLEDICT	file:
aname2	libs/chemlib/MIMolDictionary.cpp	/^    char aname2[MAXATOMNAME];$/;"	m	class:chemlib::BondDICT	file:
aname2	libs/chemlib/MIMolDictionary.cpp	/^    char aname2[MAXATOMNAME];$/;"	m	class:chemlib::SYNONYM	file:
aname3	libs/chemlib/MIMolDictionary.cpp	/^    char aname3[MAXATOMNAME];$/;"	m	class:chemlib::ANGLEDICT	file:
angle	libs/math/Vector3.h	/^        Type Vector3<Type>::angle(const Vector3<Type> &v1) const$/;"	f	class:mi::math::Vector3
angle	libs/math/Vector4.h	/^        Type Vector4<Type>::angle(const Vector4<Type> &v1)$/;"	f	class:mi::math::Vector4
angle	libs/opengl/Circle.h	/^            float angle;$/;"	m	class:mi::opengl::Circle
angle	libs/opengl/interact/SimpleMouseRotator.h	/^                float angle;$/;"	m	class:mi::opengl::interact::SimpleMouseRotator
anglePickNameMap	apps/MIFit/ui/GLRenderer.h	/^    std::map<GLuint, chemlib::ANGLE*> anglePickNameMap;$/;"	m	class:GLRenderer
anglePickingRenderable	apps/MIFit/ui/DictEditCanvas.h	/^    DictEditAnglePickingRenderable *anglePickingRenderable;$/;"	m	class:DictEditCanvas
angleRenderable	apps/MIFit/ui/DictEditAnglePickingRenderable.h	/^    DictEditAngleRenderable *angleRenderable;$/;"	m	class:DictEditAnglePickingRenderable
angleSlider	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QSlider *angleSlider;$/;"	m	class:Ui_RefinementOptionsDialog
angleSpinBox	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QDoubleSpinBox *angleSpinBox;$/;"	m	class:Ui_RefinementOptionsDialog
angleWeight	apps/MIFit/ui/RefinementOptionsDialog.h	/^        int angleWeight;$/;"	m	struct:RefinementOptionsDialog::Data
angles	apps/MIFit/ui/DictEditAnglePickingRenderable.h	/^    std::vector<chemlib::ANGLE> &angles;$/;"	m	class:DictEditAngleRenderable
angles	libs/chemlib/DictResidue.h	/^        std::vector<ANGLE> angles;$/;"	m	class:chemlib::DictResidue
angles	libs/chemlib/MIMolInfo.h	/^        std::vector<ANGLE> angles;       \/\/ mmCIF only$/;"	m	class:chemlib::MIMolInfo
angles	libs/ligand/LigDictEntry.h	/^    std::vector<chemlib::ANGLE> angles;$/;"	m	class:LigDictEntry
ann	apps/MIFit/ui/MoleculeXmlHandler.h	/^    Annotation *ann;$/;"	m	class:MoleculeXmlHandler
ann_typenames	apps/MIFit/core/Annotation.cpp	/^char ann_typenames[][25] =$/;"	v
annotation	apps/MIFit/ui/TreeData.h	/^    Annotation *annotation;$/;"	m	class:TreeData
annotationAdded	apps/MIFit/core/moc/moc_Molecule.cpp	/^void Molecule::annotationAdded(Molecule * _t1, Annotation * _t2)$/;"	f	class:Molecule
annotationAdded	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::annotationAdded(Molecule *model, Annotation *annotation)$/;"	f	class:DisplayTree
annotationAdded	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::annotationAdded(Molecule*, Annotation *annotation)$/;"	f	class:MIGLWidget
annotationChanged	apps/MIFit/core/moc/moc_Annotation.cpp	/^void Annotation::annotationChanged(Annotation * _t1)$/;"	f	class:Annotation
annotationChanged	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::annotationChanged(Annotation *annotation)$/;"	f	class:DisplayTree
annotationChanged	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::annotationChanged(Annotation*)$/;"	f	class:MIGLWidget
annotationDeleted	apps/MIFit/core/moc/moc_Molecule.cpp	/^void Molecule::annotationDeleted(Molecule * _t1)$/;"	f	class:Molecule
annotationDeleted	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::annotationDeleted(Molecule*)$/;"	f	class:MIGLWidget
annotationList	apps/MIFit/ui/TreeData.h	/^    Molecule *annotationList;$/;"	m	class:TreeData
annotationListItem	apps/MIFit/ui/DisplayView.cpp	/^    QTreeWidgetItem *annotationListItem;$/;"	m	class:DisplayTree	file:
annotationModel	apps/MIFit/ui/TreeData.h	/^    Molecule *annotationModel;$/;"	m	class:TreeData
annotationPickNameMap	apps/MIFit/ui/GLRenderer.h	/^    std::map<GLuint, Annotation*> annotationPickNameMap;$/;"	m	class:GLRenderer
annotationPickingRenderable	apps/MIFit/ui/DictEditCanvas.h	/^    DictEditAnnotationPickingRenderable *annotationPickingRenderable;$/;"	m	class:DictEditCanvas
annotationPickingRenderable	apps/MIFit/ui/MIGLWidget.h	/^    CMolwViewAnnotationPickingRenderable *annotationPickingRenderable;$/;"	m	class:MIGLWidget
annotationRenderable	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.h	/^    CMolwViewAnnotationRenderable *annotationRenderable;$/;"	m	class:CMolwViewAnnotationPickingRenderable
annotationRenderable	apps/MIFit/ui/DictEditAnnotationPickingRenderable.h	/^    DictEditAnnotationRenderable *annotationRenderable;$/;"	m	class:DictEditAnnotationPickingRenderable
annotationToBeDeleted	apps/MIFit/core/moc/moc_Molecule.cpp	/^void Molecule::annotationToBeDeleted(Molecule * _t1, Annotation * _t2)$/;"	f	class:Molecule
annotationToBeDeleted	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::annotationToBeDeleted(Molecule*, Annotation *annotation)$/;"	f	class:DisplayTree
annotationToData	apps/MIFit/ui/DisplayView.cpp	/^    AnnotationToDataMap annotationToData;$/;"	m	class:DisplayTree	file:
annotations	apps/MIFit/core/Molecule.h	/^    AnnotationList annotations;$/;"	m	class:Molecule
annots_visible	apps/MIFit/core/Molecule.h	/^    int annots_visible;$/;"	m	class:Molecule
antialiasLines	apps/MIFit/ui/GLRenderer.h	/^    bool antialiasLines;$/;"	m	class:GLRenderer
any_over	libs/map/wxWweave.cpp	/^static inline bool any_over(int i1, int i2, int i3, int level)$/;"	f	file:
any_under	libs/map/wxWweave.cpp	/^static inline bool any_under(int i1, int i2, int i3, int level)$/;"	f	file:
apart	libs/map/CREFL.h	/^    float apart;$/;"	m	class:CREFL
append	libs/cmtz/library_file.h	/^  unsigned int append : 1;$/;"	m	struct:CCP4::_CFileStruct
appendItem	apps/MIFit/ui/MIQTreeWidget.cpp	/^QTreeWidgetItem*MIQTreeWidget::appendItem(QTreeWidgetItem *parent,$/;"	f	class:MIQTreeWidget
applyBoundaryConditions	libs/math/PeriodicGrid.h	/^        void PeriodicGrid<Type>::applyBoundaryConditions(Point3<Type> &point)$/;"	f	class:mi::math::PeriodicGrid
applyBoundaryConditions	libs/math/PeriodicGrid.h	/^        void PeriodicGrid<Type>::applyBoundaryConditions(int &index0, int &index1, int &index2)$/;"	f	class:mi::math::PeriodicGrid
applyBoundaryConditions	libs/math/PeriodicGrid.h	/^        void PeriodicGrid<Type>::applyBoundaryConditions(int *index)$/;"	f	class:mi::math::PeriodicGrid
applyButton	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QPushButton *applyButton;$/;"	m	class:Ui_LSQFitDialog
applyButton	apps/MIFit/ui/ui_ManageCrystals.h	/^    QPushButton *applyButton;$/;"	m	class:Ui_ManageCrystals
applyProjection	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::applyProjection(float scale)$/;"	f	class:GLRenderer
applyRotation	libs/opengl/interact/MouseArcBall.cpp	/^void MouseArcBall::applyRotation()$/;"	f	class:mi::opengl::interact::MouseArcBall
applyRotation	libs/opengl/interact/MouseArcBallOrbitor.cpp	/^void MouseArcBallOrbitor::applyRotation()$/;"	f	class:mi::opengl::interact::MouseArcBallOrbitor
applyToChain	apps/MIFit/ui/LSQFitDialog.h	/^        bool applyToChain;$/;"	m	struct:LSQFitDialog::Data
apply_gmask	libs/jacgrid/surface.cpp	/^static inline int apply_gmask(gridT &grid, int owner,$/;"	f	file:
applyderivatives	libs/conflib/LigRefiner.cpp	/^int LigRefiner::applyderivatives()$/;"	f	class:LigRefiner
applyderivatives	libs/molopt/MIMolOpt.cpp	/^int MIMolOpt::applyderivatives()$/;"	f	class:MIMolOpt
appname	apps/MIFit/ui/Application.h	/^    std::string appname;$/;"	m	class:Application
arc	libs/opengl/interact/ArcBallFeedback.h	/^                mi::opengl::Arc *arc;$/;"	m	class:mi::opengl::interact::ArcBallFeedback
arcBallFeedback	apps/MIFit/ui/DictEditScene.h	/^    mi::opengl::interact::ArcBallFeedback *arcBallFeedback;$/;"	m	class:DictEditScene
arcColor	libs/opengl/interact/ArcBallFeedback.h	/^                mi::math::Point3<float> arcColor;$/;"	m	class:mi::opengl::interact::ArcBallFeedback
area	libs/jacgrid/surface.cpp	/^    float       *area;         \/* surface area of probe point *\/$/;"	m	class:ProbeT	file:
arguments	apps/MIFit/jobs/BatchJobManager.cpp	/^    QStringList arguments;$/;"	m	struct:CustomJob	file:
arguments	apps/MIFit/ui/CustomJobDialog.cpp	/^QString CustomJobDialog::arguments() const$/;"	f	class:CustomJobDialog
argumentsLineEdit	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QLineEdit *argumentsLineEdit;$/;"	m	class:Ui_CustomJobDialog
arguments_	apps/MIFit/jobs/BatchJob.h	/^    QStringList arguments_;$/;"	m	class:BatchJob
aromatic	libs/chemlib/TORSION.h	/^        int aromatic;$/;"	m	class:chemlib::TORSION
arrow	libs/map/sfcalc.cpp	/^int arrow(LINE *vu, float dx, float dy, float dz, float ox, float oy, float oz, int color)$/;"	f
arrow2	apps/MIFit/ui/MIGLWidget.cpp	/^int arrow2(vector<LINE> &avu, float dx, float dy, float dz, float ox, float oy, float oz, int color)$/;"	f
arrow2	apps/MIFit/ui/MIGLWidget.cpp	/^static int arrow2(vector<PLINE> &avu, float dx, float dy, float dz, float ox, float oy, float oz, int color)$/;"	f	file:
arrowFlat_data	apps/MIFit/core/RibbonSpan.cpp	/^static double arrowFlat_data[6][3] =   {{2.0, 0.5, 0.0},$/;"	v	file:
as	apps/MIFit/core/eigen.cpp	35;"	d	file:
asinf	libs/cmtz/library_utils.c	/^float asinf(float x) {       $/;"	f
asplib	apps/MIFit/ui/asplib.h	/^class asplib$/;"	c
astart	apps/MIFit/core/pdbmatch.cpp	/^    int astart, aend;$/;"	m	class:hit	file:
astatic	libs/map/CREFL.h	/^    float astatic;$/;"	m	class:CREFL
asu_descr	libs/cmtz/ccp4_spg.h	/^  char asu_descr[80];     \/* asu description from file *\/$/;"	m	struct:CSym::ccp4_spacegroup_
asufn	libs/cmtz/ccp4_spg.h	/^  int (*asufn)(const int, const int, const int); \/* pointer to ASU function *\/$/;"	m	struct:CSym::ccp4_spacegroup_
atanf	libs/cmtz/library_utils.c	/^float atanf(float x) {       $/;"	f
atom	apps/MIFit/core/ATOMLABEL.cpp	/^const MIAtom*ATOMLABEL::atom() const$/;"	f	class:ATOMLABEL
atom	apps/MIFit/core/Stack.h	/^    chemlib::MIAtom *atom;$/;"	m	struct:__anon3
atom	apps/MIFit/ui/MoleculeXmlHandler.h	/^    chemlib::MIAtom *atom;$/;"	m	class:MoleculeXmlHandler
atom	apps/MIFit/ui/TreeData.h	/^    chemlib::MIAtom *atom;$/;"	m	class:TreeData
atom	libs/chemlib/Monomer.h	/^        MIAtom *atom(size_t index) const$/;"	f	class:chemlib::Monomer
atom1	libs/chemlib/ANGLE.h	/^        MIAtom *atom1;$/;"	m	class:chemlib::ANGLE
atom1	libs/chemlib/Bond.h	/^        MIAtom *atom1;$/;"	m	class:chemlib::Bond
atom1	libs/chemlib/CHIRALDICT.h	/^        MIAtom *atom1;$/;"	m	class:chemlib::CHIRAL
atom1	libs/chemlib/Constraint.h	/^        MIAtom *atom1;$/;"	m	class:chemlib::Angle
atom1	libs/chemlib/Constraint.h	/^        MIAtom *atom1;$/;"	m	class:chemlib::BondLength
atom1	libs/chemlib/Constraint.h	/^        MIAtom *atom1;$/;"	m	class:chemlib::Bump
atom1	libs/chemlib/TORSION.h	/^        MIAtom *atom1;$/;"	m	class:chemlib::TORSION
atom2	libs/chemlib/ANGLE.h	/^        MIAtom *atom2;$/;"	m	class:chemlib::ANGLE
atom2	libs/chemlib/Bond.h	/^        MIAtom *atom2;$/;"	m	class:chemlib::Bond
atom2	libs/chemlib/CHIRALDICT.h	/^        MIAtom *atom2;$/;"	m	class:chemlib::CHIRAL
atom2	libs/chemlib/Constraint.h	/^        MIAtom *atom2;$/;"	m	class:chemlib::Angle
atom2	libs/chemlib/Constraint.h	/^        MIAtom *atom2;$/;"	m	class:chemlib::BondLength
atom2	libs/chemlib/Constraint.h	/^        MIAtom *atom2;$/;"	m	class:chemlib::Bump
atom2	libs/chemlib/TORSION.h	/^        MIAtom *atom2;$/;"	m	class:chemlib::TORSION
atom3	libs/chemlib/ANGLE.h	/^        MIAtom *atom3;$/;"	m	class:chemlib::ANGLE
atom3	libs/chemlib/CHIRALDICT.h	/^        MIAtom *atom3;$/;"	m	class:chemlib::CHIRAL
atom3	libs/chemlib/Constraint.h	/^        MIAtom *atom3;$/;"	m	class:chemlib::Angle
atom3	libs/chemlib/TORSION.h	/^        MIAtom *atom3;$/;"	m	class:chemlib::TORSION
atom4	libs/chemlib/TORSION.h	/^        MIAtom *atom4;$/;"	m	class:chemlib::TORSION
atomBall	apps/MIFit/core/RenderStyle.h	/^    bool atomBall;$/;"	m	class:RenderStyle
atomByName	libs/chemlib/Monomer.cpp	/^const MIAtom*Monomer::atomByName(const std::string &name) const$/;"	f	class:chemlib::Monomer
atomChanged	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::atomChanged(MIMoleculeBase*, MIAtomList&)$/;"	f	class:MIGLWidget
atomChanged	apps/MIFit/ui/ModelsView.cpp	/^void AtomsTree::atomChanged(MIMoleculeBase*, MIAtomList &atoms)$/;"	f	class:AtomsTree
atomChanged	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::atomChanged(MIMoleculeBase *model, MIAtomList &atoms)$/;"	f	class:ModelsTree
atomChanged	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::atomChanged(MIMoleculeBase *model, MIAtomList &atoms)$/;"	f	class:ResiduesTree
atomChanged	apps/MIFit/ui/RamaPlot.cpp	/^void RamaPlotMgr::atomChanged(chemlib::MIMoleculeBase*, MIAtomList&)$/;"	f	class:RamaPlotMgr
atomChanged	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^void chemlib::MIMoleculeBase::atomChanged(chemlib::MIMoleculeBase * _t1, chemlib::MIAtomList & _t2)$/;"	f	class:chemlib::MIMoleculeBase
atomColors	apps/MIFit/ui/AtomColors.h	/^    std::vector<std::string> atomColors;$/;"	m	class:AtomColors
atomCount	libs/chemlib/Monomer.h	/^        int atomCount() const$/;"	f	class:chemlib::Monomer
atomLabel	apps/MIFit/ui/TreeData.h	/^    ATOMLABEL *atomLabel;$/;"	m	class:TreeData
atomLabelAdded	apps/MIFit/core/moc/moc_Molecule.cpp	/^void Molecule::atomLabelAdded(Molecule * _t1, ATOMLABEL * _t2)$/;"	f	class:Molecule
atomLabelAdded	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::atomLabelAdded(Molecule *model, ATOMLABEL *label)$/;"	f	class:DisplayTree
atomLabelChanged	apps/MIFit/core/moc/moc_Molecule.cpp	/^void Molecule::atomLabelChanged(Molecule * _t1, ATOMLABEL * _t2)$/;"	f	class:Molecule
atomLabelChanged	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::atomLabelChanged(Molecule*, ATOMLABEL *label)$/;"	f	class:DisplayTree
atomLabelChanged	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::atomLabelChanged(Molecule*, ATOMLABEL*)$/;"	f	class:MIGLWidget
atomLabelDeleted	apps/MIFit/core/moc/moc_Molecule.cpp	/^void Molecule::atomLabelDeleted(Molecule * _t1)$/;"	f	class:Molecule
atomLabelList	apps/MIFit/ui/TreeData.h	/^    Molecule *atomLabelList;$/;"	m	class:TreeData
atomLabelListItem	apps/MIFit/ui/DisplayView.cpp	/^    QTreeWidgetItem *atomLabelListItem;$/;"	m	class:DisplayTree	file:
atomLabelModel	apps/MIFit/ui/TreeData.h	/^    Molecule *atomLabelModel;$/;"	m	class:TreeData
atomLabelToBeDeleted	apps/MIFit/core/moc/moc_Molecule.cpp	/^void Molecule::atomLabelToBeDeleted(Molecule * _t1, Molecule::AtomLabelList _t2)$/;"	f	class:Molecule
atomLabelToBeDeleted	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::atomLabelToBeDeleted(Molecule*, Molecule::AtomLabelList labels)$/;"	f	class:DisplayTree
atomLabelToData	apps/MIFit/ui/DisplayView.cpp	/^    AtomLabelToDataMap atomLabelToData;$/;"	m	class:DisplayTree	file:
atomLabels	apps/MIFit/core/Molecule.h	/^    AtomLabelList atomLabels;$/;"	m	class:Molecule
atomNames	apps/MIFit/ui/AtomColors.h	/^    std::vector<std::string> atomNames;$/;"	m	class:AtomColors
atomPickNameMap	apps/MIFit/ui/GLRenderer.h	/^    std::map<GLuint, chemlib::MIAtom*> atomPickNameMap;$/;"	m	class:GLRenderer
atomPickingRenderable	apps/MIFit/ui/DictEditCanvas.h	/^    DictEditAtomPickingRenderable *atomPickingRenderable;$/;"	m	class:DictEditCanvas
atomPickingRenderable	apps/MIFit/ui/MIGLWidget.h	/^    CMolwViewAtomPickingRenderable *atomPickingRenderable;$/;"	m	class:MIGLWidget
atomRenderable	apps/MIFit/ui/CMolwViewAtomPickingRenderable.h	/^    CMolwViewAtomRenderable *atomRenderable;$/;"	m	class:CMolwViewAtomPickingRenderable
atomRenderable	apps/MIFit/ui/DictEditAtomPickingRenderable.h	/^    DictEditAtomRenderable *atomRenderable;$/;"	m	class:DictEditAtomPickingRenderable
atomStack	apps/MIFit/ui/CMolwViewScene.h	/^    Stack *atomStack;$/;"	m	class:CMolwViewScene
atomStack	apps/MIFit/ui/DictEditScene.h	/^    Stack *atomStack;$/;"	m	class:DictEditScene
atomToData	apps/MIFit/ui/ModelsView.cpp	/^    AtomToDataMap atomToData;$/;"	m	class:AtomsTree	file:
atomTypeText	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QLineEdit *atomTypeText;$/;"	m	class:Ui_LSQFitDialog
atom_	apps/MIFit/core/ATOMLABEL.h	/^    const chemlib::MIAtom *atom_;$/;"	m	class:ATOMLABEL
atom_default	libs/chemlib/Residue.cpp	/^chemlib::MIAtom *atom_default(const chemlib::Residue *res)$/;"	f	namespace:chemlib
atom_from_name	libs/chemlib/mol_util.cpp	/^MIAtom *atom_from_name(const char *name, const Monomer &residue)$/;"	f	namespace:chemlib
atom_has_density	libs/map/EMapBase.cpp	/^atom_has_density(MIAtom *a \/*, RESIDUE *res*\/)$/;"	f	file:
atom_store	libs/chemlib/ConfSaver.h	/^        std::list<SaveAtom> atom_store;$/;"	m	class:chemlib::ConfSaver
atomcolors	apps/MIFit/core/Colors.cpp	/^std::vector<std::string> Colors::atomcolors;$/;"	m	class:Colors	file:
atomcolors	apps/MIFit/core/Colors.h	/^    static std::vector<std::string> atomcolors;$/;"	m	class:Colors
atomicnumber	libs/chemlib/MIAtom.h	/^        short atomicnumber() const$/;"	f	class:chemlib::MIAtom
atomicnumber_	libs/chemlib/MIAtom.h	/^        short atomicnumber_;$/;"	m	class:chemlib::MIAtom
atomnames	apps/MIFit/core/Colors.cpp	/^std::vector<std::string> Colors::atomnames;$/;"	m	class:Colors	file:
atomnames	apps/MIFit/core/Colors.h	/^    static std::vector<std::string> atomnames;$/;"	m	class:Colors
atomnumber	libs/chemlib/MIAtom.h	/^        int atomnumber() const$/;"	f	class:chemlib::MIAtom
atomnumber_	libs/chemlib/MIAtom.h	/^        int atomnumber_;$/;"	m	class:chemlib::MIAtom
atoms	apps/MIFit/core/clusterList.h	/^    std::vector<chemlib::MIAtom*> atoms;$/;"	m	class:Cluster
atoms	apps/MIFit/ui/MoleculeXmlHandler.h	/^    std::vector<chemlib::MIAtom*> atoms;$/;"	m	class:MoleculeXmlHandler
atoms	libs/chemlib/Constraint.h	/^        MIAtomList atoms;$/;"	m	class:chemlib::Improper
atoms	libs/chemlib/Constraint.h	/^        MIAtomList atoms;$/;"	m	class:chemlib::Plane
atoms	libs/chemlib/Constraint.h	/^        MIAtomList atoms;$/;"	m	class:chemlib::Torsion
atoms	libs/chemlib/Monomer.h	/^        const MIAtomList&atoms() const$/;"	f	class:chemlib::Monomer
atoms	libs/chemlib/PLANE.h	/^        MIAtom **atoms;$/;"	m	class:chemlib::PLANE
atoms	libs/jacgrid/isosurface.cpp	/^static const JACAtomsBase *atoms;$/;"	v	file:
atoms	libs/map/InterpBox.h	/^    chemlib::MIAtom **atoms;$/;"	m	class:InterpBox
atomsDeleted	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::atomsDeleted(MIMoleculeBase*)$/;"	f	class:MIGLWidget
atomsDeleted	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^void chemlib::MIMoleculeBase::atomsDeleted(chemlib::MIMoleculeBase * _t1)$/;"	f	class:chemlib::MIMoleculeBase
atomsToBeDeleted	apps/MIFit/core/Stack.cpp	/^void Stack::atomsToBeDeleted(MIMoleculeBase*, const MIAtomList &atoms)$/;"	f	class:Stack
atomsToBeDeleted	apps/MIFit/ui/Displaylist.cpp	/^void Displaylist::atomsToBeDeleted(MIMoleculeBase*, const MIAtomList &atoms)$/;"	f	class:Displaylist
atomsToBeDeleted	apps/MIFit/ui/ModelsView.cpp	/^void AtomsTree::atomsToBeDeleted(MIMoleculeBase*, const MIAtomList &atoms)$/;"	f	class:AtomsTree
atomsToBeDeleted	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^void chemlib::MIMoleculeBase::atomsToBeDeleted(chemlib::MIMoleculeBase * _t1, const chemlib::MIAtomList & _t2)$/;"	f	class:chemlib::MIMoleculeBase
atomsToBeDeleted	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::atomsToBeDeleted(MIMoleculeBase* \/* mol *\/, const MIAtomList &atoms)$/;"	f	class:MIMolOpt
atomsTree	apps/MIFit/ui/ModelsView.cpp	/^    AtomsTree *atomsTree;$/;"	m	class:ModelsTree	file:
atomsTree	apps/MIFit/ui/ModelsView.cpp	/^    AtomsTree *atomsTree;$/;"	m	class:ModelsViewPanel	file:
atomsTree	apps/MIFit/ui/ModelsView.cpp	/^    AtomsTree *atomsTree;$/;"	m	class:ResiduesTree	file:
atoms_	libs/chemlib/Monomer.h	/^        MIAtomList atoms_;$/;"	m	class:chemlib::Monomer
atomsurf	apps/MIFit/core/SURFDOT.cpp	/^atomsurf(MIAtom *a, float ra, MIAtom **b, long nb, SURFDOT **dots,$/;"	f
atomsurfradius	apps/MIFit/core/SURFDOT.cpp	/^atomsurfradius(MIAtom *a, float r, SURFDOT **dots,$/;"	f
atomtype	apps/MIFit/ui/LSQFitDialog.h	/^    std::string atomtype;$/;"	m	class:MATCH
atomvector	apps/MIFit/core/pdbmatch.cpp	/^int atomvector(const MIAtom *atom1, const MIAtom *atom2)$/;"	f
attach	libs/util/FileIo.cpp	/^void FileIo::attach(FILE *fp)$/;"	f	class:FileIo
attach	libs/util/StringIo.cpp	/^void StringIo::attach(FILE* \/* fp *\/)$/;"	f	class:StringIo
atypelen	libs/map/sfcalc_data.h	/^int *atypelen;$/;"	v
atyper	libs/chemlib/mmCIF.h	/^        RefmacAtomTyper *atyper;$/;"	m	class:chemlib::mmCIF
atypes	libs/map/sfcalc_data.h	/^char **atypes;$/;"	v
aunit	libs/map/fftlib.cpp	/^    ftnint aunit;$/;"	m	struct:__anon55	file:
author	apps/MIFit/core/Molecule.h	/^    std::string author;$/;"	m	class:Molecule
autoOpenCheckBox	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QCheckBox *autoOpenCheckBox;$/;"	m	class:Ui_GeneralPreferences
avail_in	libs/opengl/zlib/zlib.h	/^    uInt avail_in;      \/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s
avail_out	libs/opengl/zlib/zlib.h	/^    uInt avail_out;     \/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s
avgrho	libs/map/EMapBase.cpp	/^float EMapBase::avgrho(float fx, float fy, float fz)$/;"	f	class:EMapBase
awhole	libs/map/CREFL.h	/^    float awhole;$/;"	m	class:CREFL
axes	apps/MIFit/ui/CMolwViewScene.h	/^    std::map<void*, mi::opengl::Axes*> axes;$/;"	m	class:CMolwViewScene
axes	libs/opengl/interact/MouseTranslator.h	/^                Axis *axes;$/;"	m	class:mi::opengl::interact::MouseTranslator
b	libs/map/CMapHeaderBase.h	/^    float a, b, c, alpha, beta, gamma;$/;"	m	class:CMapHeaderBase
b	libs/map/fftsub.cpp	/^static float a, b, c, alpha, beta, gama, rmin, rmax, vol;$/;"	v	file:
b0	apps/MIFit/core/RibbonSpan.cpp	17;"	d	file:
b1	apps/MIFit/core/RibbonSpan.cpp	18;"	d	file:
b1	libs/map/sfcalc_data.h	/^*b1, *b2, *b3, *b4, *co;$/;"	v
b2	libs/map/sfcalc_data.h	/^*b1, *b2, *b3, *b4, *co;$/;"	v
b3	apps/MIFit/core/RibbonSpan.cpp	19;"	d	file:
b3	libs/map/sfcalc_data.h	/^*b1, *b2, *b3, *b4, *co;$/;"	v
b4	apps/MIFit/core/RibbonSpan.cpp	20;"	d	file:
b4	libs/map/sfcalc_data.h	/^*b1, *b2, *b3, *b4, *co;$/;"	v
b6	apps/MIFit/core/RibbonSpan.cpp	21;"	d	file:
backClip	apps/MIFit/core/ViewPoint.cpp	/^qreal ViewPoint::backClip() const$/;"	f	class:ViewPoint
backClip	apps/MIFit/core/ViewPoint.h	/^    qreal backClip;$/;"	m	class:ViewSave
backClip_	apps/MIFit/core/ViewPoint.h	/^    qreal backClip_;$/;"	m	class:ViewPoint
backgroundColor	apps/MIFit/ui/Application.cpp	/^void Application::backgroundColor()$/;"	f	class:Application
ball	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle *RenderStyle::ball = NULL;$/;"	m	class:RenderStyle	file:
ball	apps/MIFit/core/RenderStyle.h	/^    static const RenderStyle *ball;$/;"	m	class:RenderStyle
ball	libs/opengl/interact/ArcBallFeedback.h	/^                mi::opengl::Circle *ball;$/;"	m	class:mi::opengl::interact::ArcBallFeedback
ballAndLine	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle *RenderStyle::ballAndLine = NULL;$/;"	m	class:RenderStyle	file:
ballAndLine	apps/MIFit/core/RenderStyle.h	/^    static const RenderStyle *ballAndLine;$/;"	m	class:RenderStyle
ballAndStick	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle *RenderStyle::ballAndStick = NULL;$/;"	m	class:RenderStyle	file:
ballAndStick	apps/MIFit/core/RenderStyle.h	/^    static const RenderStyle *ballAndStick;$/;"	m	class:RenderStyle
ballColor	libs/opengl/interact/ArcBallFeedback.h	/^                mi::math::Point3<float> ballColor;$/;"	m	class:mi::opengl::interact::ArcBallFeedback
ballPercent	apps/MIFit/core/RenderStyle.h	/^    float ballPercent;$/;"	m	class:RenderStyle
ballandstick	apps/MIFit/ui/ViewPointSettings.h	/^    int ballandstick;$/;"	m	class:ViewPointSettings
ballsize	apps/MIFit/ui/ViewPointSettings.h	/^    int ballsize;$/;"	m	class:ViewPointSettings
base	libs/opengl/zlib/inftrees.h	/^    uInt base;          \/* literal, length base, distance base,$/;"	m	struct:inflate_huft_s
batch	libs/cmtz/mtzdata.h	/^		 MTZBAT *batch;        \/**< first batch header *\/$/;"	m	struct:__anon25
batchJobManager	apps/MIFit/ui/JobsView.cpp	/^    BatchJobManager *batchJobManager;$/;"	m	class:JobsTree	file:
batches	libs/umtz/umtzlib.h	/^    umtz_list batches;$/;"	m	struct:umtzfile_
bathead	libs/cmtz/mtzdata.h	/^typedef struct bathead { int num;              \/**< batch number *\/$/;"	s
batonatom	apps/MIFit/ui/MIGLWidget.h	/^    chemlib::MIAtom *batonatom;$/;"	m	class:MIGLWidget
batonposition	apps/MIFit/ui/MIGLWidget.h	/^    int batonposition;$/;"	m	class:MIGLWidget
bb	libs/opengl/zlib/infutil.h	/^            uInt bb;            \/* bit length tree depth *\/$/;"	m	struct:inflate_blocks_state::__anon35::__anon36
bbfac	libs/cmtz/mtzdata.h	/^		 float bbfac;          \/**< batch temperature factor *\/$/;"	m	struct:bathead
bcalc	libs/map/CREFL.h	/^    float bcalc;$/;"	m	class:CREFL
beforeSelected	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QRadioButton *beforeSelected;$/;"	m	class:Ui_AddResidueDialog
begin	apps/MIFit/ui/Displaylist.h	/^inline std::list<Molecule*>::iterator Displaylist::begin()$/;"	f	class:Displaylist
beginDragAction	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::beginDragAction()$/;"	f	class:DictEditCanvas
beginPicking	libs/opengl/Frustum.cpp	/^void Frustum::beginPicking(int x, int y)$/;"	f	class:mi::opengl::Frustum
beginPosition	libs/opengl/interact/TranslationFeedback.h	/^                mi::math::Vector3<float> beginPosition;$/;"	m	class:mi::opengl::interact::TranslationFeedback
beginRotate	libs/opengl/interact/MouseArcBall.cpp	/^void MouseArcBall::beginRotate(int x, int y)$/;"	f	class:mi::opengl::interact::MouseArcBall
beginRotate	libs/opengl/interact/SimpleMouseRotator.cpp	/^void SimpleMouseRotator::beginRotate(int x, int y)$/;"	f	class:mi::opengl::interact::SimpleMouseRotator
beginTranslate	libs/opengl/interact/MouseTranslator.cpp	/^void MouseTranslator::beginTranslate(int x, int y)$/;"	f	class:mi::opengl::interact::MouseTranslator
beginZoom	libs/opengl/interact/MouseZoomer.cpp	/^void MouseZoomer::beginZoom(int x, int y)$/;"	f	class:mi::opengl::interact::MouseZoomer
bestFit	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QRadioButton *bestFit;$/;"	m	class:Ui_AddResidueDialog
beta	libs/map/CMapHeaderBase.h	/^    float a, b, c, alpha, beta, gamma;$/;"	m	class:CMapHeaderBase
beta	libs/map/fftsub.cpp	/^static float a, b, c, alpha, beta, gama, rmin, rmax, vol;$/;"	v	file:
betaSheet	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QRadioButton *betaSheet;$/;"	m	class:Ui_AddResidueDialog
bigFont	apps/MIFit/ui/graphlib.h	/^    QFont bigFont;$/;"	m	class:GraphWindow
binary	libs/cmtz/library_file.h	/^  unsigned int binary : 1;$/;"	m	struct:CCP4::_CFileStruct
bisect	libs/opengl/Arc.cpp	/^void Arc::bisect(Vector3<float> &v0, Vector3<float> &v1, int level)$/;"	f	class:mi::opengl::Arc
bitb	libs/opengl/zlib/infutil.h	/^    uLong bitb;         \/* bit buffer *\/$/;"	m	struct:inflate_blocks_state
bitk	libs/opengl/zlib/infutil.h	/^    uInt bitk;          \/* bits in bit buffer *\/$/;"	m	struct:inflate_blocks_state
bits	libs/opengl/zlib/infblock.cpp	17;"	d	file:
bits	libs/opengl/zlib/infcodes.cpp	15;"	d	file:
bits	libs/opengl/zlib/inffast.cpp	18;"	d	file:
bits	libs/opengl/zlib/inftrees.cpp	26;"	d	file:
bl	libs/map/fftlib.cpp	1447;"	d	file:
bl	libs/map/fftlib.cpp	1786;"	d	file:
blens	libs/opengl/zlib/infutil.h	/^            uIntf *blens;       \/* bit lengths of codes *\/$/;"	m	struct:inflate_blocks_state::__anon35::__anon36
blobDistanceLabel	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *blobDistanceLabel;$/;"	m	class:Ui_ContourOptionsWidget
blobDistanceSpinBox	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QDoubleSpinBox *blobDistanceSpinBox;$/;"	m	class:Ui_ContourOptionsWidget
blobMethodRadioButton	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QRadioButton *blobMethodRadioButton;$/;"	m	class:Ui_ContourOptionsWidget
blocks	libs/opengl/zlib/inflate.cpp	/^    *blocks;            \/* current inflate_blocks state *\/$/;"	m	struct:internal_state	file:
blue	apps/MIFit/core/ATOMLABEL.cpp	/^unsigned char ATOMLABEL::blue() const$/;"	f	class:ATOMLABEL
blue	apps/MIFit/core/ATOMLABEL.cpp	/^void ATOMLABEL::blue(unsigned char value)$/;"	f	class:ATOMLABEL
blue	apps/MIFit/core/Colors.h	/^    unsigned char blue;$/;"	m	class:PaletteColor
blue_	apps/MIFit/core/ATOMLABEL.h	/^    unsigned char blue_;$/;"	m	class:ATOMLABEL
bond	apps/MIFit/ui/MoleculeXmlHandler.h	/^    chemlib::Bond bond;$/;"	m	class:MoleculeXmlHandler
bondCylinder	apps/MIFit/core/RenderStyle.h	/^    bool bondCylinder;$/;"	m	class:RenderStyle
bondLine	apps/MIFit/core/RenderStyle.h	/^    bool bondLine;$/;"	m	class:RenderStyle
bondLineWidth	apps/MIFit/core/RenderStyle.h	/^    float bondLineWidth;$/;"	m	class:RenderStyle
bondOrder	libs/chemlib/Bond.h	/^        unsigned char bondOrder;$/;"	m	class:chemlib::Bond
bondPickNameMap	apps/MIFit/ui/GLRenderer.h	/^    std::map<GLuint, chemlib::Bond*> bondPickNameMap;$/;"	m	class:GLRenderer
bondPickingRenderable	apps/MIFit/ui/DictEditCanvas.h	/^    DictEditBondPickingRenderable *bondPickingRenderable;$/;"	m	class:DictEditCanvas
bondPickingRenderable	apps/MIFit/ui/MIGLWidget.h	/^    CMolwViewBondPickingRenderable *bondPickingRenderable;$/;"	m	class:MIGLWidget
bondRenderable	apps/MIFit/ui/CMolwViewBondPickingRenderable.h	/^    CMolwViewBondRenderable *bondRenderable;$/;"	m	class:CMolwViewBondPickingRenderable
bondRenderable	apps/MIFit/ui/DictEditBondPickingRenderable.h	/^    DictEditBondRenderable *bondRenderable;$/;"	m	class:DictEditBondPickingRenderable
bondSlider	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QSlider *bondSlider;$/;"	m	class:Ui_RefinementOptionsDialog
bondSpinBox	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QDoubleSpinBox *bondSpinBox;$/;"	m	class:Ui_RefinementOptionsDialog
bondWeight	apps/MIFit/ui/RefinementOptionsDialog.h	/^        int bondWeight;$/;"	m	struct:RefinementOptionsDialog::Data
bond_dist	libs/molopt/MIMolOpt.cpp	/^float bond_dist(MIAtom *atom1, MIAtom *atom2)$/;"	f
bond_radius	libs/molopt/MIMolOpt.cpp	/^float bond_radius(MIAtom *atom)$/;"	f
bondnumbers	libs/chemlib/MIAtom.h	/^        const std::vector<int>&bondnumbers() const$/;"	f	class:chemlib::MIAtom
bondnumbers_	libs/chemlib/MIAtom.h	/^        std::vector<int> bondnumbers_;$/;"	m	class:chemlib::MIAtom
bonds	apps/MIFit/ui/DictEditBondPickingRenderable.h	/^    std::vector<chemlib::Bond> &bonds;$/;"	m	class:DictEditBondRenderable
bonds	apps/MIFit/ui/GLOverviewCanvas.h	/^    std::vector<chemlib::Bond> bonds;$/;"	m	class:GLOverviewCanvas
bonds	libs/chemlib/DictResidue.h	/^        std::vector<Bond> bonds;$/;"	m	class:chemlib::DictResidue
bonds	libs/chemlib/Ligand.h	/^        std::vector<Bond> bonds; \/\/ array of bonds$/;"	m	class:chemlib::Ligand
bonds	libs/chemlib/MIMolInfo.h	/^        std::vector<Bond> bonds;$/;"	m	class:chemlib::MIMolInfo
bonds	libs/chemlib/MIMoleculeBase.h	/^        std::vector<Bond> bonds;$/;"	m	class:chemlib::MIMoleculeBase
bonds	libs/ligand/LigDictEntry.h	/^    std::vector<chemlib::Bond> bonds;$/;"	m	class:LigDictEntry
bondsdirty	apps/MIFit/ui/DictEditCanvas.h	/^    bool bondsdirty;$/;"	m	class:DictEditCanvas
border	libs/opengl/zlib/infblock.cpp	/^local const uInt border[] =   \/* Order of the bit length code lengths *\/$/;"	v
bottompoint	libs/opengl/Object3d.h	/^            float bottompoint;$/;"	m	class:mi::opengl::Object3d
boundingRect	apps/MIFit/ui/DictEditCanvas.cpp	/^    virtual QRectF boundingRect() const$/;"	f	class:DictEditMainItem
boundingRect	apps/MIFit/ui/MIGLWidget.cpp	/^    virtual QRectF boundingRect() const$/;"	f	class:MainItem
bounds	libs/chemlib/Box.h	/^        float bounds[3][2];             \/\/Rows are X, Y, Z; Columns are min and max$/;"	m	class:chemlib::Box
boxMethodRadioButton	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QRadioButton *boxMethodRadioButton;$/;"	m	class:Ui_ContourOptionsWidget
bpart	libs/map/CREFL.h	/^    float bpart;$/;"	m	class:CREFL
breakOnDiscontinuityCheckBox	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QCheckBox *breakOnDiscontinuityCheckBox;$/;"	m	class:Ui_GeneralPreferences
breakOnNonPeptideCheckBox	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QCheckBox *breakOnNonPeptideCheckBox;$/;"	m	class:Ui_GeneralPreferences
browseButton	apps/MIFit/ui/ui_SmilesDialog.h	/^    QPushButton *browseButton;$/;"	m	class:Ui_SmilesDialog
bs	libs/map/fftlib.cpp	1454;"	d	file:
bs	libs/map/fftlib.cpp	1781;"	d	file:
bscale	libs/cmtz/mtzdata.h	/^		 float bscale;         \/**< batch scale *\/$/;"	m	struct:bathead
bstatic	libs/map/CREFL.h	/^    float bstatic;$/;"	m	class:CREFL
buf	libs/map/fftsub.cpp	/^static char buf[2000];$/;"	v	file:
buff	libs/cmtz/library_file.h	/^  char buff[8];$/;"	m	struct:CCP4::_CFileStruct
bufferSize	libs/opengl/Arc.h	/^            int bufferSize;$/;"	m	class:mi::opengl::Arc
bufferSize_	libs/util/FileIo.h	/^    size_t bufferSize_;$/;"	m	class:FileIo
buffered	libs/cmtz/library_file.h	/^  unsigned int buffered : 1;$/;"	m	struct:CCP4::_CFileStruct
build	apps/MIFit/core/SurfaceSphere.cpp	/^void SurfaceSphere::build(float rad, float spac)$/;"	f	class:SurfaceSphere
build_grid_mask	libs/jacgrid/surface.cpp	/^static int build_grid_mask(gridT &grid)$/;"	f	file:
build_map	libs/chemlib/MIMolDictionary.cpp	/^void MIMolDictionary::build_map()$/;"	f	class:chemlib::MIMolDictionary
buildmat	libs/math/crystmat.cpp	/^void buildmat(float xdegrees, float ydegrees, float zdegrees, float mat[3][3])$/;"	f
buildmatz	libs/math/crystmat.cpp	/^void buildmatz(float z, float mat[3][3])$/;"	f
buildrho	libs/map/EMapBase.cpp	/^static micomplex *buildrho(Residue *reslist, CMapHeaderBase *mh)$/;"	f	file:
bumpSlider	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QSlider *bumpSlider;$/;"	m	class:Ui_RefinementOptionsDialog
bumpSpinBox	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QDoubleSpinBox *bumpSpinBox;$/;"	m	class:Ui_RefinementOptionsDialog
bumpWeight	apps/MIFit/ui/RefinementOptionsDialog.h	/^        int bumpWeight;$/;"	m	struct:RefinementOptionsDialog::Data
buttonBox	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_AddResidueDialog
buttonBox	apps/MIFit/ui/ui_AtomColors.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_AtomColors
buttonBox	apps/MIFit/ui/ui_BValueColors.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_BValueColors
buttonBox	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_CustomJobDialog
buttonBox	apps/MIFit/ui/ui_GLFormatDialog.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_GLFormatDialog
buttonBox	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_GLFormatEdit
buttonBox	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_PhaseFileLoadDialog
buttonBox	apps/MIFit/ui/ui_PreferencesDialog.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_PreferencesDialog
buttonBox	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_RefinementOptionsDialog
buttonBox	apps/MIFit/ui/ui_SelectCrystal.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_SelectCrystal
buttonBox	apps/MIFit/ui/ui_SmilesDialog.h	/^    QDialogButtonBox *buttonBox;$/;"	m	class:Ui_SmilesDialog
buttonClicked	apps/MIFit/ui/GLFormatEdit.cpp	/^void GLFormatEdit::buttonClicked(QAbstractButton *button)$/;"	f	class:GLFormatEdit
buttonClicked	apps/MIFit/ui/MIBrowsePair.cpp	/^void MIBrowsePair::buttonClicked()$/;"	f	class:MIBrowsePair
buttonCtrlToLineEdit	apps/MIFit/ui/ModelsView.cpp	/^ModelsView::ButtonCtrlToLineEditMap ModelsView::buttonCtrlToLineEdit;$/;"	m	class:ModelsView	file:
buttonCtrlToLineEdit	apps/MIFit/ui/ModelsView.h	/^    static ButtonCtrlToLineEditMap buttonCtrlToLineEdit;$/;"	m	class:ModelsView
buttonCtrlToModelsTree	apps/MIFit/ui/ModelsView.cpp	/^ModelsView::ButtonCtrlToModelsTreeMap ModelsView::buttonCtrlToModelsTree;$/;"	m	class:ModelsView	file:
buttonCtrlToModelsTree	apps/MIFit/ui/ModelsView.h	/^    static ButtonCtrlToModelsTreeMap buttonCtrlToModelsTree;$/;"	m	class:ModelsView
buttonPage	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QWidget *buttonPage;$/;"	m	class:Ui_CustomJobDialog
bvaluecolor	apps/MIFit/core/ColorUtil.cpp	/^short bvaluecolor(float bvalue)$/;"	f
bvaluecolor	apps/MIFit/core/ColorUtil.cpp	/^short bvaluecolor(int b)$/;"	f
bwhole	libs/map/CREFL.h	/^    float bwhole;$/;"	m	class:CREFL
c	libs/cmtz/ccp4_types.h	/^    uint8 c[4];$/;"	m	union:float_uint_uchar
c	libs/map/CMapHeaderBase.h	/^    float a, b, c, alpha, beta, gamma;$/;"	m	class:CMapHeaderBase
c	libs/map/fftlib.cpp	/^    micomplex c;$/;"	m	union:Multitype	file:
c	libs/map/fftsub.cpp	/^static float a, b, c, alpha, beta, gama, rmin, rmax, vol;$/;"	v	file:
c	libs/umtz/library.h	/^    uint8 c[4];$/;"	m	union:float_uint_uchar
c45	apps/MIFit/core/RibbonSpan.cpp	9;"	d	file:
c45	apps/MIFit/ui/GLRenderer.cpp	1424;"	d	file:
c_mul	libs/map/fftsub.cpp	16;"	d	file:
calcButton	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QPushButton *calcButton;$/;"	m	class:Ui_LSQFitDialog
calcStereoParameters	libs/opengl/StereoView.cpp	/^void StereoView::calcStereoParameters(float *cameraOffset, float *frustumAsymmetry)$/;"	f	class:mi::opengl::StereoView
calc_indent	apps/MIFit/core/xmlarchive.cpp	/^void XMLArchive::calc_indent()$/;"	f	class:XMLArchive
calc_index_and_temps	libs/jacgrid/isosurface.cpp	/^static void calc_index_and_temps(const float *data,$/;"	f	file:
calc_normal	libs/jacgrid/surface.cpp	/^static void calc_normal(float *p1, float *p2, float *p3, float *n)$/;"	f	file:
camera	apps/MIFit/ui/CMolwViewScene.h	/^    mi::opengl::Camera *camera;$/;"	m	class:CMolwViewScene
camera	apps/MIFit/ui/DictEditCanvas.h	/^    mi::opengl::Camera *camera;$/;"	m	class:DictEditCanvas
camera	apps/MIFit/ui/DictEditScene.h	/^    mi::opengl::Camera *camera;$/;"	m	class:DictEditScene
camera	apps/MIFit/ui/GLOverviewCanvas.h	/^    mi::opengl::Camera *camera;$/;"	m	class:GLOverviewCanvas
camera	apps/MIFit/ui/GLRenderer.h	/^    mi::opengl::Camera *camera;$/;"	m	class:GLRenderer
camera	apps/MIFit/ui/MIGLWidget.h	/^    mi::opengl::Camera *camera;$/;"	m	class:MIGLWidget
camera	libs/opengl/StereoView.h	/^            Camera *camera;$/;"	m	class:mi::opengl::StereoView
cameraMouseOrbitor	apps/MIFit/ui/DictEditCanvas.h	/^    mi::opengl::interact::MouseArcBallOrbitor *cameraMouseOrbitor;$/;"	m	class:DictEditCanvas
cameraMouseOrbitor	apps/MIFit/ui/DictEditScene.h	/^    mi::opengl::interact::MouseArcBallOrbitor *cameraMouseOrbitor;$/;"	m	class:DictEditScene
cameraMouseTranslator	apps/MIFit/ui/DictEditCanvas.h	/^    mi::opengl::interact::MouseTranslator *cameraMouseTranslator;$/;"	m	class:DictEditCanvas
cameraOffset	apps/MIFit/ui/GLOverviewCanvas.h	/^    mi::math::Vector3<float> cameraOffset;$/;"	m	class:GLOverviewCanvas
cancelButton	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QPushButton *cancelButton;$/;"	m	class:Ui_LSQFitDialog
cancelFitAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *cancelFitAction;$/;"	m	class:MIGLWidget
cancelFitting	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::cancelFitting()$/;"	f	class:MIGLWidget
cancelRefine	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::cancelRefine()$/;"	f	class:MIGLWidget
cancelRefineAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *cancelRefineAction;$/;"	m	class:MIGLWidget
canvas	apps/MIFit/ui/DictEditDialog.h	/^    DictEditCanvas *canvas;$/;"	m	class:DictEditDialog
canvas_menu	apps/MIFit/ui/MIMainWindow.h	/^    QMenu *canvas_menu;$/;"	m	class:MIMainWindow
capacity	libs/cmtz/ccp4_array.h	/^  int size, capacity;$/;"	m	struct:ccp4array_base_
capacity	libs/umtz/umtzlib.h	/^    int size, capacity;$/;"	m	struct:umtz_list_
cascadeAct	apps/MIFit/ui/MIMainWindow.h	/^    QAction *cascadeAct;$/;"	m	class:MIMainWindow
ccp4_3matmul	libs/cmtz/cvecmat.c	/^void ccp4_3matmul(double c[3][3], const double a[3][3], const double b[3][3])$/;"	f
ccp4_4matmul	libs/cmtz/cvecmat.c	/^void ccp4_4matmul( float c[4][4], const float  a[4][4], const float b[4][4])$/;"	f
ccp4_byteptr	libs/cmtz/ccp4_array.h	/^typedef char *ccp4_byteptr;$/;"	t
ccp4_constptr	libs/cmtz/ccp4_array.h	/^typedef const void *ccp4_constptr;$/;"	t
ccp4_dcross	libs/cmtz/cvecmat.c	/^void ccp4_dcross(const double a[3], const double b[3], double c[3])$/;"	f
ccp4_erfc	libs/cmtz/library_utils.c	/^double ccp4_erfc( double x )$/;"	f
ccp4_errlist	libs/cmtz/library_err.c	/^static const struct error_system ccp4_errlist[] = {$/;"	v	typeref:struct:error_system	file:
ccp4_errno	libs/cmtz/library_err.c	/^int ccp4_errno = 0;$/;"	v
ccp4_error	libs/cmtz/library_err.c	/^void ccp4_error (const char *msg)$/;"	f
ccp4_fatal	libs/cmtz/library_err.c	/^void ccp4_fatal (const char *message)$/;"	f
ccp4_file_byte	libs/cmtz/library_file.c	/^int ccp4_file_byte(CCP4File *cfile)$/;"	f
ccp4_file_clearerr	libs/cmtz/library_file.c	/^void ccp4_file_clearerr(CCP4File *cfile)$/;"	f
ccp4_file_close	libs/cmtz/library_file.c	/^int ccp4_file_close (CCP4File *cfile)$/;"	f
ccp4_file_error	libs/cmtz/library_file.c	/^int ccp4_file_error(CCP4File *cfile)$/;"	f
ccp4_file_fatal	libs/cmtz/library_file.c	/^void ccp4_file_fatal (CCP4File *cfile, char *message)$/;"	f
ccp4_file_feof	libs/cmtz/library_file.c	/^int ccp4_file_feof(CCP4File *cfile)$/;"	f
ccp4_file_flush	libs/cmtz/library_file.c	/^void ccp4_file_flush(CCP4File *cfile)$/;"	f
ccp4_file_is_append	libs/cmtz/library_file.c	/^int ccp4_file_is_append(const CCP4File *cfile)$/;"	f
ccp4_file_is_buffered	libs/cmtz/library_file.c	/^int ccp4_file_is_buffered(const CCP4File *cfile)$/;"	f
ccp4_file_is_read	libs/cmtz/library_file.c	/^int ccp4_file_is_read(const CCP4File *cfile)$/;"	f
ccp4_file_is_scratch	libs/cmtz/library_file.c	/^int ccp4_file_is_scratch(const CCP4File *cfile)$/;"	f
ccp4_file_is_write	libs/cmtz/library_file.c	/^int ccp4_file_is_write(const CCP4File *cfile)$/;"	f
ccp4_file_itemsize	libs/cmtz/library_file.c	/^int ccp4_file_itemsize(const CCP4File *cfile)$/;"	f
ccp4_file_length	libs/cmtz/library_file.c	/^long ccp4_file_length (CCP4File *cfile)$/;"	f
ccp4_file_mode	libs/cmtz/library_file.c	/^int ccp4_file_mode (const CCP4File *cfile)$/;"	f
ccp4_file_name	libs/cmtz/library_file.c	/^const char *ccp4_file_name( CCP4File *cfile)$/;"	f
ccp4_file_open	libs/cmtz/library_file.c	/^CCP4File *ccp4_file_open (const char *filename, const int flag)$/;"	f
ccp4_file_open_fd	libs/cmtz/library_file.c	/^CCP4File *ccp4_file_open_fd (const int fd, const int flag)$/;"	f
ccp4_file_open_file	libs/cmtz/library_file.c	/^CCP4File *ccp4_file_open_file (const FILE *file, const int flag)$/;"	f
ccp4_file_print	libs/cmtz/library_file.c	/^char *ccp4_file_print(CCP4File *cfile, char *msg_start, char *msg_end)$/;"	f
ccp4_file_rarch	libs/cmtz/library_file.c	/^int ccp4_file_rarch (CCP4File *cfile)$/;"	f
ccp4_file_raw_read	libs/cmtz/library_file.c	/^int ccp4_file_raw_read(CCP4File *cfile, char *buffer, size_t n_items)$/;"	f
ccp4_file_raw_seek	libs/cmtz/library_file.c	/^int ccp4_file_raw_seek(CCP4File *cfile, long offset, int whence)$/;"	f
ccp4_file_raw_setstamp	libs/cmtz/library_file.c	/^int ccp4_file_raw_setstamp(CCP4File *cfile, const size_t offset)$/;"	f
ccp4_file_raw_write	libs/cmtz/library_file.c	/^int ccp4_file_raw_write(CCP4File *cfile, const char *buffer, size_t n_items)$/;"	f
ccp4_file_read	libs/cmtz/library_file.c	/^int ccp4_file_read (CCP4File *cfile, uint8 *buffer, size_t nitems)$/;"	f
ccp4_file_readchar	libs/cmtz/library_file.c	/^int ccp4_file_readchar (CCP4File *cfile, uint8 *buffer, size_t nitems)$/;"	f
ccp4_file_readcomp	libs/cmtz/library_file.c	/^int ccp4_file_readcomp (CCP4File *cfile, uint8 *buffer, size_t nitems)$/;"	f
ccp4_file_readfloat	libs/cmtz/library_file.c	/^int ccp4_file_readfloat (CCP4File *cfile, uint8 *buffer, size_t nitems)$/;"	f
ccp4_file_readint	libs/cmtz/library_file.c	/^int ccp4_file_readint (CCP4File *cfile, uint8 *buffer, size_t nitems)$/;"	f
ccp4_file_readshort	libs/cmtz/library_file.c	/^int ccp4_file_readshort (CCP4File *cfile, uint8 *buffer, size_t nitems)$/;"	f
ccp4_file_readshortcomp	libs/cmtz/library_file.c	/^int ccp4_file_readshortcomp (CCP4File *cfile, uint8 *buffer, size_t nitems)$/;"	f
ccp4_file_rewind	libs/cmtz/library_file.c	/^void ccp4_file_rewind (CCP4File *cfile)$/;"	f
ccp4_file_seek	libs/cmtz/library_file.c	/^int ccp4_file_seek (CCP4File *cfile, long offset, int whence)$/;"	f
ccp4_file_setbyte	libs/cmtz/library_file.c	/^int ccp4_file_setbyte(CCP4File *cfile, const int byte_order)$/;"	f
ccp4_file_setmode	libs/cmtz/library_file.c	/^int ccp4_file_setmode (CCP4File *cfile, const int mode)$/;"	f
ccp4_file_setstamp	libs/cmtz/library_file.c	/^int ccp4_file_setstamp(CCP4File *cfile, const size_t offset)$/;"	f
ccp4_file_status	libs/cmtz/library_file.c	/^int ccp4_file_status(const CCP4File *cfile)$/;"	f
ccp4_file_tell	libs/cmtz/library_file.c	/^long ccp4_file_tell (CCP4File *cfile)$/;"	f
ccp4_file_warch	libs/cmtz/library_file.c	/^int ccp4_file_warch (CCP4File *cfile)$/;"	f
ccp4_file_write	libs/cmtz/library_file.c	/^int ccp4_file_write (CCP4File *cfile, const uint8 *buffer, size_t nitems)$/;"	f
ccp4_file_writechar	libs/cmtz/library_file.c	/^int ccp4_file_writechar (CCP4File *cfile, const uint8 *buffer, size_t nitems)$/;"	f
ccp4_file_writecomp	libs/cmtz/library_file.c	/^int ccp4_file_writecomp (CCP4File *cfile, const uint8 *buffer, size_t nitems)$/;"	f
ccp4_file_writefloat	libs/cmtz/library_file.c	/^int ccp4_file_writefloat (CCP4File *cfile, const uint8 *buffer, size_t nitems)$/;"	f
ccp4_file_writeint	libs/cmtz/library_file.c	/^int ccp4_file_writeint (CCP4File *cfile, const uint8 *buffer, size_t nitems)$/;"	f
ccp4_file_writeshort	libs/cmtz/library_file.c	/^int ccp4_file_writeshort (CCP4File *cfile, const uint8 *buffer, size_t nitems)$/;"	f
ccp4_file_writeshortcomp	libs/cmtz/library_file.c	/^int ccp4_file_writeshortcomp (CCP4File *cfile, const uint8 *buffer, size_t nitems)$/;"	f
ccp4_flength	libs/umtz/library.c	/^size_t ccp4_flength (char *s, int len)$/;"	f
ccp4_ismnf	libs/cmtz/cmtzlib.c	/^int ccp4_ismnf(const MTZ *mtz, const float datum) {$/;"	f
ccp4_isnan	libs/umtz/library.c	/^int ccp4_isnan (union float_uint_uchar *realnum)$/;"	f
ccp4_keymatch	libs/cmtz/ccp4_parser.c	/^int ccp4_keymatch(const char *keyin1, const char *keyin2)$/;"	f
ccp4_lhprt	libs/cmtz/cmtzlib.c	/^int ccp4_lhprt(const MTZ *mtz, int iprint) {$/;"	f
ccp4_lhprt_adv	libs/cmtz/cmtzlib.c	/^int ccp4_lhprt_adv(const MTZ *mtz, int iprint) {$/;"	f
ccp4_liberr_verbosity	libs/cmtz/library_err.c	/^int ccp4_liberr_verbosity(int iverb) {$/;"	f
ccp4_lrassn	libs/cmtz/cmtzlib.c	/^MTZCOL **ccp4_lrassn(const MTZ *mtz, const char labels[][31], const int nlabels, $/;"	f
ccp4_lrbat	libs/cmtz/cmtzlib.c	/^int ccp4_lrbat(MTZBAT *batch, float *buf, char *charbuf, int iprint)$/;"	f
ccp4_lrbats	libs/cmtz/cmtzlib.c	/^int ccp4_lrbats(const MTZ *mtz, int *nbatx, int batchx[]) {$/;"	f
ccp4_lrcell	libs/cmtz/cmtzlib.c	/^int ccp4_lrcell(const MTZXTAL *xtl, float cell[]) {$/;"	f
ccp4_lrhist	libs/cmtz/cmtzlib.c	/^int ccp4_lrhist(const MTZ *mtz, char history[][MTZRECORDLENGTH], int nlines) {$/;"	f
ccp4_lridx	libs/cmtz/cmtzlib.c	/^int ccp4_lridx(const MTZ *mtz, const MTZSET *set, char crystal_name[64], $/;"	f
ccp4_lrreff	libs/cmtz/cmtzlib.c	/^int ccp4_lrreff(const MTZ *mtz, float *resol, float adata[], int logmss[],$/;"	f
ccp4_lrrefl	libs/cmtz/cmtzlib.c	/^int ccp4_lrrefl(const MTZ *mtz, float *resol, float adata[], int logmss[], int iref) {$/;"	f
ccp4_lrsort	libs/cmtz/cmtzlib.c	/^int ccp4_lrsort(const MTZ *mtz, int isort[5]) {$/;"	f
ccp4_lrsymi	libs/cmtz/cmtzlib.c	/^int ccp4_lrsymi(const MTZ *mtz, int *nsympx, char *ltypex, int *nspgrx, $/;"	f
ccp4_lrsymm	libs/cmtz/cmtzlib.c	/^int ccp4_lrsymm(const MTZ *mtz, int *nsymx, float rsymx[192][4][4]) {$/;"	f
ccp4_lrtitl	libs/cmtz/cmtzlib.c	/^int ccp4_lrtitl(const MTZ *mtz, char *title) {$/;"	f
ccp4_lwassn	libs/cmtz/cmtzlib.c	/^MTZCOL **ccp4_lwassn(MTZ *mtz, const char labels[][31], const int nlabels, $/;"	f
ccp4_lwbat	libs/cmtz/cmtzlib.c	/^int ccp4_lwbat(MTZ *mtz, MTZBAT *batch, const int batno, const float *buf, const char *charbuf)$/;"	f
ccp4_lwbsetid	libs/cmtz/cmtzlib.c	/^int ccp4_lwbsetid(MTZ *mtz, MTZBAT *batch, const char xname[], const char dname[])$/;"	f
ccp4_lwidx	libs/cmtz/cmtzlib.c	/^int ccp4_lwidx(MTZ *mtz, const char crystal_name[],  const char dataset_name[],$/;"	f
ccp4_lwrefl	libs/cmtz/cmtzlib.c	/^int ccp4_lwrefl(MTZ *mtz, const float adata[], MTZCOL *lookup[], $/;"	f
ccp4_lwsymm	libs/cmtz/cmtzlib.c	/^int ccp4_lwsymm(MTZ *mtz, int nsymx, int nsympx, float rsymx[192][4][4], $/;"	f
ccp4_lwtitl	libs/cmtz/cmtzlib.c	/^int ccp4_lwtitl(MTZ *mtz, const char *ftitle, int flag) {$/;"	f
ccp4_nan	libs/cmtz/library_utils.c	/^union float_uint_uchar ccp4_nan ()$/;"	f
ccp4_nan	libs/umtz/library.c	/^union float_uint_uchar ccp4_nan ()$/;"	f
ccp4_parse	libs/cmtz/ccp4_parser.c	/^int ccp4_parse(const char *line, CCP4PARSERARRAY *parser)$/;"	f
ccp4_parse_comments	libs/cmtz/ccp4_parser.c	/^int ccp4_parse_comments(CCP4PARSERARRAY *parsePtr, const char *comment_chars)$/;"	f
ccp4_parse_delimiters	libs/cmtz/ccp4_parser.c	/^int ccp4_parse_delimiters(CCP4PARSERARRAY *parsePtr,$/;"	f
ccp4_parse_end	libs/cmtz/ccp4_parser.c	/^int ccp4_parse_end(CCP4PARSERARRAY *parsePtr)$/;"	f
ccp4_parse_init_token	libs/cmtz/ccp4_parser.c	/^int ccp4_parse_init_token(const CCP4PARSERARRAY *parsePtr, const int itok)$/;"	f
ccp4_parse_maxmin	libs/cmtz/ccp4_parser.c	/^int ccp4_parse_maxmin(CCP4PARSERARRAY *parsePtr, const double max_exponent,$/;"	f
ccp4_parse_reset	libs/cmtz/ccp4_parser.c	/^int ccp4_parse_reset(CCP4PARSERARRAY *parsePtr)$/;"	f
ccp4_parse_start	libs/cmtz/ccp4_parser.c	/^CCP4PARSERARRAY* ccp4_parse_start(const int maxtokens)$/;"	f
ccp4_parser	libs/cmtz/ccp4_parser.c	/^int ccp4_parser(char *line, const int nchars, CCP4PARSERARRAY *parser,$/;"	f
ccp4_pow_ii	libs/cmtz/cvecmat.c	/^float ccp4_pow_ii(const float base, const int power) {$/;"	f
ccp4_ptr	libs/cmtz/ccp4_array.h	/^typedef void *ccp4_ptr;$/;"	t
ccp4_qback	libs/umtz/library.c	/^long ccp4_qback (int iunit, int lrecl)$/;"	f
ccp4_qclose	libs/umtz/library.c	/^int ccp4_qclose (int iunit)$/;"	f
ccp4_qinq	libs/umtz/library.c	/^long ccp4_qinq (int iunit, char *filnam)$/;"	f
ccp4_qlocate	libs/umtz/library.c	/^long ccp4_qlocate (int iunit)$/;"	f
ccp4_qmode	libs/umtz/library.c	/^int ccp4_qmode (int iunit, int mode)$/;"	f
ccp4_qopen	libs/umtz/library.c	/^int ccp4_qopen (const char *filename, int istat)$/;"	f
ccp4_qrarch	libs/umtz/library.c	/^int ccp4_qrarch (int iunit, int ipos)$/;"	f
ccp4_qread	libs/umtz/library.c	/^int ccp4_qread (int iunit, uint8 *buffer, int nitems)$/;"	f
ccp4_qreadc	libs/umtz/library.c	/^int ccp4_qreadc (int iunit, char *buffer, size_t nchars)$/;"	f
ccp4_qrewind	libs/umtz/library.c	/^void ccp4_qrewind (int iunit)$/;"	f
ccp4_qseek	libs/umtz/library.c	/^long ccp4_qseek (int iunit, int irec, int iel, int lrecl)$/;"	f
ccp4_qskip	libs/umtz/library.c	/^long ccp4_qskip (int iunit, int lrecl)$/;"	f
ccp4_qwarch	libs/umtz/library.c	/^void ccp4_qwarch (int iunit, int ipos)$/;"	f
ccp4_qwritc	libs/umtz/library.c	/^int ccp4_qwritc (int iunit, char *buffer, size_t nchars)$/;"	f
ccp4_qwrite	libs/umtz/library.c	/^int ccp4_qwrite (int iunit, uint8 *buffer, int nitems)$/;"	f
ccp4_signal	libs/cmtz/library_err.c	/^void ccp4_signal(const int code, const char * const msg, $/;"	f
ccp4_spacegroup_	libs/cmtz/ccp4_spg.h	/^typedef struct ccp4_spacegroup_$/;"	s
ccp4_strerror	libs/cmtz/library_err.c	/^const char *ccp4_strerror(int error)$/;"	f
ccp4_symop	libs/cmtz/ccp4_parser.h	/^typedef CSym::ccp4_symop ccp4_symop;$/;"	t
ccp4_symop	libs/cmtz/ccp4_spg.h	/^} ccp4_symop;$/;"	t	typeref:struct:CSym::ccp4_symop_
ccp4_symop_	libs/cmtz/ccp4_spg.h	/^typedef struct ccp4_symop_$/;"	s
ccp4_system_nerr	libs/cmtz/library_err.c	/^static const int ccp4_system_nerr = CCP4_COUNT(ccp4_errlist);$/;"	v	file:
ccp4_ustenv	libs/umtz/library.c	/^int ccp4_ustenv (char *str)$/;"	f
ccp4_utils_basename	libs/cmtz/library_utils.c	/^char *ccp4_utils_basename(const char *filename)$/;"	f
ccp4_utils_bml	libs/cmtz/library_utils.c	/^void ccp4_utils_bml (int ncols, union float_uint_uchar cols[])$/;"	f
ccp4_utils_calloc	libs/cmtz/library_utils.c	/^void *ccp4_utils_calloc(size_t nelem , size_t elsize)$/;"	f
ccp4_utils_chmod	libs/cmtz/library_utils.c	/^int ccp4_utils_chmod (const char *path, const char *cmode)$/;"	f
ccp4_utils_date	libs/cmtz/library_utils.c	/^char *ccp4_utils_date(char *date)$/;"	f
ccp4_utils_etime	libs/cmtz/library_utils.c	/^float ccp4_utils_etime (float tarray[2])$/;"	f
ccp4_utils_extension	libs/cmtz/library_utils.c	/^char *ccp4_utils_extension(const char *filename)$/;"	f
ccp4_utils_flength	libs/cmtz/library_utils.c	/^size_t ccp4_utils_flength (char *s, int len)$/;"	f
ccp4_utils_hgetlimits	libs/cmtz/library_utils.c	/^void ccp4_utils_hgetlimits (int *IValueNotDet, float *ValueNotDet)$/;"	f
ccp4_utils_idate	libs/cmtz/library_utils.c	/^void ccp4_utils_idate (int iarray[3])$/;"	f
ccp4_utils_isnan	libs/cmtz/library_utils.c	/^int ccp4_utils_isnan (const union float_uint_uchar *realnum)$/;"	f
ccp4_utils_itime	libs/cmtz/library_utils.c	/^void ccp4_utils_itime (int iarray[3])$/;"	f
ccp4_utils_joinfilenames	libs/cmtz/library_utils.c	/^char *ccp4_utils_joinfilenames(char *dir, char *file)$/;"	f
ccp4_utils_malloc	libs/cmtz/library_utils.c	/^void *ccp4_utils_malloc(size_t size)$/;"	f
ccp4_utils_mkdir	libs/cmtz/library_utils.c	/^int ccp4_utils_mkdir (const char *path, const char *cmode)$/;"	f
ccp4_utils_noinpbuf	libs/cmtz/library_utils.c	/^int ccp4_utils_noinpbuf(void)$/;"	f
ccp4_utils_outbuf	libs/cmtz/library_utils.c	/^int ccp4_utils_outbuf(void)$/;"	f
ccp4_utils_pathname	libs/cmtz/library_utils.c	/^char *ccp4_utils_pathname(const char *filename)$/;"	f
ccp4_utils_print	libs/cmtz/library_utils.c	/^void ccp4_utils_print (const char *message)$/;"	f
ccp4_utils_realloc	libs/cmtz/library_utils.c	/^void *ccp4_utils_realloc(void *ptr, size_t size)$/;"	f
ccp4_utils_setenv	libs/cmtz/library_utils.c	/^int ccp4_utils_setenv (char *str)$/;"	f
ccp4_utils_time	libs/cmtz/library_utils.c	/^char *ccp4_utils_time(char *time)$/;"	f
ccp4_utils_translate_mode_float	libs/cmtz/library_utils.c	/^int ccp4_utils_translate_mode_float(float *out, const void *buffer, int dim, int mode)$/;"	f
ccp4_utils_username	libs/cmtz/library_utils.c	/^char *ccp4_utils_username(void)$/;"	f
ccp4_utils_wrg	libs/cmtz/library_utils.c	/^void ccp4_utils_wrg (int ncols, union float_uint_uchar cols[], float wminmax[])$/;"	f
ccp4array_append	libs/cmtz/ccp4_array.h	132;"	d
ccp4array_append_	libs/cmtz/ccp4_array.c	/^void ccp4array_append_(ccp4_ptr *p, ccp4_constptr data, const size_t reclen)$/;"	f
ccp4array_append_list	libs/cmtz/ccp4_array.h	150;"	d
ccp4array_append_list_	libs/cmtz/ccp4_array.c	/^void ccp4array_append_list_(ccp4_ptr *p, ccp4_constptr data, const int n, const size_t reclen)$/;"	f
ccp4array_append_n	libs/cmtz/ccp4_array.h	141;"	d
ccp4array_append_n_	libs/cmtz/ccp4_array.c	/^void ccp4array_append_n_(ccp4_ptr *p, ccp4_constptr data, const int n, const size_t reclen)$/;"	f
ccp4array_base	libs/cmtz/ccp4_array.h	/^} ccp4array_base;$/;"	t	typeref:struct:ccp4array_base_
ccp4array_base_	libs/cmtz/ccp4_array.h	/^typedef struct ccp4array_base_ {$/;"	s
ccp4array_delete	libs/cmtz/ccp4_array.h	174;"	d
ccp4array_delete_	libs/cmtz/ccp4_array.c	/^void ccp4array_delete_(ccp4_ptr *p, const int i, const size_t reclen)$/;"	f
ccp4array_delete_last	libs/cmtz/ccp4_array.h	180;"	d
ccp4array_delete_last_	libs/cmtz/ccp4_array.c	/^void ccp4array_delete_last_(ccp4_ptr *p, const size_t reclen)$/;"	f
ccp4array_delete_ordered	libs/cmtz/ccp4_array.h	167;"	d
ccp4array_delete_ordered_	libs/cmtz/ccp4_array.c	/^void ccp4array_delete_ordered_(ccp4_ptr *p, const int i, const size_t reclen)$/;"	f
ccp4array_free	libs/cmtz/ccp4_array.h	192;"	d
ccp4array_free_	libs/cmtz/ccp4_array.c	/^void ccp4array_free_(ccp4_ptr *p)$/;"	f
ccp4array_insert	libs/cmtz/ccp4_array.h	159;"	d
ccp4array_insert_	libs/cmtz/ccp4_array.c	/^void ccp4array_insert_(ccp4_ptr *p, const int i, ccp4_constptr data, const size_t reclen)$/;"	f
ccp4array_new	libs/cmtz/ccp4_array.h	96;"	d
ccp4array_new_	libs/cmtz/ccp4_array.c	/^ccp4_ptr ccp4array_new_(ccp4_ptr *p)$/;"	f
ccp4array_new_size	libs/cmtz/ccp4_array.h	104;"	d
ccp4array_new_size_	libs/cmtz/ccp4_array.c	/^ccp4_ptr ccp4array_new_size_(ccp4_ptr *p, const int size, const size_t reclen)$/;"	f
ccp4array_reserve	libs/cmtz/ccp4_array.h	124;"	d
ccp4array_reserve_	libs/cmtz/ccp4_array.c	/^void ccp4array_reserve_(ccp4_ptr *p, const int size, const size_t reclen)$/;"	f
ccp4array_resize	libs/cmtz/ccp4_array.h	114;"	d
ccp4array_resize_	libs/cmtz/ccp4_array.c	/^void ccp4array_resize_(ccp4_ptr *p, const int size, const size_t reclen)$/;"	f
ccp4array_size	libs/cmtz/ccp4_array.h	186;"	d
ccp4array_size_	libs/cmtz/ccp4_array.c	/^int ccp4array_size_(ccp4_constptr *p)$/;"	f
ccp4uc_calc_cell_volume	libs/cmtz/ccp4_unitcell.c	/^double ccp4uc_calc_cell_volume(const double cell[6])$/;"	f
ccp4uc_calc_rcell	libs/cmtz/ccp4_unitcell.c	/^double ccp4uc_calc_rcell(const double cell[6], double rcell[6])$/;"	f
ccp4uc_cells_differ	libs/cmtz/ccp4_unitcell.c	/^int ccp4uc_cells_differ(const double cell1[6], const double cell2[6], const double tolerance)$/;"	f
ccp4uc_frac_orth_mat	libs/cmtz/ccp4_unitcell.c	/^double ccp4uc_frac_orth_mat(const double cell[6], const int ncode, $/;"	f
ccp4uc_frac_to_orth	libs/cmtz/ccp4_unitcell.c	/^void ccp4uc_frac_to_orth(const double ro[3][3], const double xf[3], double xo[3])$/;"	f
ccp4uc_fracu_to_orthu	libs/cmtz/ccp4_unitcell.c	/^void ccp4uc_fracu_to_orthu(const double ro[3][3], const double uf[6], double uo[6])$/;"	f
ccp4uc_is_hexagonal	libs/cmtz/ccp4_unitcell.c	/^int ccp4uc_is_hexagonal(const float cell[6], const float tolerance) {$/;"	f
ccp4uc_is_rhombohedral	libs/cmtz/ccp4_unitcell.c	/^int ccp4uc_is_rhombohedral(const float cell[6], const float tolerance) {$/;"	f
ccp4uc_orth_to_frac	libs/cmtz/ccp4_unitcell.c	/^void ccp4uc_orth_to_frac(const double rf[3][3], const double xo[3], double xf[3])$/;"	f
ccp4uc_orthu_to_fracu	libs/cmtz/ccp4_unitcell.c	/^void ccp4uc_orthu_to_fracu(const double rf[3][3], const double uo[6], double uf[6])$/;"	f
cdata	apps/MIFit/core/RibbonSpan.cpp	/^static double cdata[8][3] =    {{1.5, 0.5, 0.0},$/;"	v	file:
cdata	libs/umtz/umtzlib.h	/^    char cdata[3*MTZRECLEN];$/;"	m	struct:umtz_bat_
cell	libs/cmtz/mtzdata.h	/^		 float cell[6];        \/**< Crystal cell *\/$/;"	m	struct:__anon22
cell	libs/cmtz/mtzdata.h	/^                 float cell[6];        \/**< cell dimensions *\/$/;"	m	struct:bathead
cell	libs/umtz/mmtzlib.h	/^    float cell[6];$/;"	m	struct:mmtz_crystal_
cellParamsChanged	apps/MIFit/ui/SelectCrystal.cpp	/^void SelectCrystal::cellParamsChanged(const QString &unitCell, const QString &spaceGroup)$/;"	f	class:SelectCrystal
cell_table	libs/jacgrid/cell_table.h	/^static CELL_ENTRY cell_table[256]$/;"	v
cell_table	libs/jacgrid/plane.cpp	/^static CellTableT cell_table[16] =$/;"	v	file:
center	apps/MIFit/core/ViewPoint.cpp	/^const mi::math::Vector3<float> &ViewPoint::center() const$/;"	f	class:ViewPoint
center	apps/MIFit/core/ViewPoint.h	/^    mi::math::Vector3<float> center;$/;"	m	class:ViewSave
center	apps/MIFit/ui/GLOverviewCanvas.h	/^    mi::math::Vector3<float> center;$/;"	m	class:GLOverviewCanvas
center	libs/chemlib/CHIRALDICT.h	/^        MIAtom *center;$/;"	m	class:chemlib::CHIRAL
center	libs/chemlib/CHIRALDICT.h	/^        char center[MAXATOMNAME];$/;"	m	class:chemlib::CHIRALDICT
center	libs/jacgrid/grid.h	/^    float center[3];      \/* coords of center of grid *\/$/;"	m	class:gridT
center	libs/opengl/interact/MouseArcBall.h	/^                mi::math::Point3<float> center;$/;"	m	class:mi::opengl::interact::MouseArcBall
centerEnd	apps/MIFit/ui/MIGLWidget.cpp	/^        Vector3<float> centerEnd;$/;"	m	class:__anon10::ViewPointAnimation	file:
centerObject	libs/opengl/Object3d.cpp	/^void Object3d::centerObject()$/;"	f	class:mi::opengl::Object3d
centerStart	apps/MIFit/ui/MIGLWidget.cpp	/^        Vector3<float> centerStart;$/;"	m	class:__anon10::ViewPointAnimation	file:
centerVector	apps/MIFit/ui/MIGLWidget.cpp	/^        Vector3<float> centerVector;$/;"	m	class:__anon10::ViewPointAnimation	file:
center_	apps/MIFit/core/ViewPoint.h	/^    mi::math::Vector3<float> center_;$/;"	m	class:ViewPoint
centrics	libs/cmtz/ccp4_spg.h	/^  int centrics[12];       \/* symop which generates centric zone, 0 if none *\/$/;"	m	struct:CSym::ccp4_spacegroup_
cerr	libs/map/fftlib.cpp	/^    flag cerr;$/;"	m	struct:__anon54	file:
cexp	libs/map/fftsub.cpp	/^void cexp(fcomplex *a, float b)$/;"	f
cfile_errlist	libs/cmtz/library_err.c	/^static const char *const cfile_errlist[] =$/;"	v	file:
cgen_errlist	libs/cmtz/library_err.c	/^static const char *const cgen_errlist[] =$/;"	v	file:
chain	apps/MIFit/ui/TreeData.h	/^    chemlib::Residue *chain;$/;"	m	class:TreeData
chainId	apps/MIFit/ui/AddResidueDialog.cpp	/^char AddResidueDialog::chainId() const$/;"	f	class:AddResidueDialog
chainId	apps/MIFit/ui/LSQFitDialog.h	/^        std::string chainId;$/;"	m	struct:LSQFitDialog::Data
chainId	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QLineEdit *chainId;$/;"	m	class:Ui_AddResidueDialog
chainIdLabel	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QLabel *chainIdLabel;$/;"	m	class:Ui_AddResidueDialog
chainOnlyCheckBox	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QCheckBox *chainOnlyCheckBox;$/;"	m	class:Ui_LSQFitDialog
chainToModel	apps/MIFit/ui/ModelsView.cpp	/^    ResidueToModelMap chainToModel;$/;"	m	class:ModelsTree	file:
chain_id	libs/chemlib/Monomer.h	/^        unsigned short chain_id() const$/;"	f	class:chemlib::Monomer
chain_id_	libs/chemlib/Monomer.h	/^        unsigned short chain_id_;$/;"	m	class:chemlib::Monomer
chainsChoice	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QComboBox *chainsChoice;$/;"	m	class:Ui_LSQFitDialog
chainstring	apps/MIFit/core/RESIDUE.cpp	/^const string chainstring(const Residue *res)$/;"	f
changeAtomTypeAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *changeAtomTypeAction;$/;"	m	class:DictEditCanvas
changeBondOrderAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *changeBondOrderAction;$/;"	m	class:DictEditCanvas
changeDefault	apps/MIFit/ui/GLFormatDialog.cpp	/^void GLFormatDialog::changeDefault()$/;"	f	class:GLFormatDialog
changeDefault	apps/MIFit/ui/ui_GLFormatDialog.h	/^    QPushButton *changeDefault;$/;"	m	class:Ui_GLFormatDialog
changeNameButton	apps/MIFit/ui/ui_dicteditorform.h	/^    QPushButton *changeNameButton;$/;"	m	class:Ui_DictEditorForm
changeSlab	apps/MIFit/core/ViewPoint.cpp	/^void ViewPoint::changeSlab(float delta)$/;"	f	class:ViewPoint
changed	libs/map/EMapBase.h	/^    bool changed;$/;"	m	class:EMapBase
char_struct	libs/umtz/library.h	712;"	d
char_struct	libs/umtz/library.h	735;"	d
char_struct	libs/umtz/library.h	758;"	d
char_struct	libs/umtz/library.h	783;"	d
char_struct	libs/umtz/library.h	810;"	d
char_struct	libs/umtz/library.h	836;"	d
characters	apps/MIFit/ui/MoleculeXmlHandler.cpp	/^bool MoleculeXmlHandler::characters( const QString &chars)$/;"	f	class:MoleculeXmlHandler
characters	libs/opengl/Text.cpp	/^    QHash<ushort, CharData> characters;$/;"	m	struct:mi::opengl::TextPrivate	file:
charf	libs/opengl/zlib/zconf.h	/^typedef char FAR charf;$/;"	t
charf	libs/opengl/zlib/zconf.h	39;"	d
charge	apps/MIFit/core/RESIDUE.cpp	/^static char charge[] = {' ', ' ', '-', '-', ' ',$/;"	v	file:
charge	libs/chemlib/MIAtom.h	/^        float charge() const$/;"	f	class:chemlib::MIAtom
charge_	libs/chemlib/MIAtom.h	/^        float charge_;$/;"	m	class:chemlib::MIAtom
chargetype	apps/MIFit/core/RESIDUE.cpp	/^char chargetype(char t)$/;"	f
charmatch	libs/cmtz/ccp4_parser.c	/^int charmatch(const char character, const char *charlist)$/;"	f
chb	libs/cmtz/ccp4_spg.h	/^  float chb[3][3];        \/* change of basis matrix from file *\/$/;"	m	struct:CSym::ccp4_spacegroup_
check	libs/opengl/zlib/inflate.cpp	/^        } check;        \/* if CHECK, check values to compare *\/$/;"	m	union:internal_state::__anon43	typeref:struct:internal_state::__anon43::__anon44	file:
check	libs/opengl/zlib/infutil.h	/^    uLong check;        \/* check on output *\/$/;"	m	struct:inflate_blocks_state
checkPyQtPath	apps/MIFit/jobs/BatchJobManager.cpp	/^    QString checkPyQtPath(QString dir)$/;"	f	namespace:__anon17
checkfn	libs/opengl/zlib/infutil.h	/^    check_func checkfn; \/* check function *\/$/;"	m	struct:inflate_blocks_state
checkmappath	apps/MIFit/ui/MIGLWidget.cpp	/^static bool checkmappath(char *file)$/;"	f	file:
checkpointDirectory	apps/MIFit/ui/Application.h	/^    std::string checkpointDirectory;$/;"	m	class:Application
checkpointDirectoryButton	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QPushButton *checkpointDirectoryButton;$/;"	m	class:Ui_EnvironmentPreferences
checkpointDirectoryLineEdit	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QLineEdit *checkpointDirectoryLineEdit;$/;"	m	class:Ui_EnvironmentPreferences
chemlib	apps/MIFit/core/ATOMLABEL.h	/^namespace chemlib$/;"	n
chemlib	apps/MIFit/core/Helix.h	/^namespace chemlib$/;"	n
chemlib	apps/MIFit/core/RibbonSegment.h	/^namespace chemlib$/;"	n
chemlib	apps/MIFit/core/SecondaryStructure.h	/^namespace chemlib$/;"	n
chemlib	apps/MIFit/ui/CMolwViewAtomPickingRenderable.h	/^namespace chemlib$/;"	n
chemlib	apps/MIFit/ui/CMolwViewBondPickingRenderable.h	/^namespace chemlib$/;"	n
chemlib	apps/MIFit/ui/GLOverviewCanvas.h	/^namespace chemlib$/;"	n
chemlib	apps/MIFit/ui/MIMainWindow.h	/^namespace chemlib$/;"	n
chemlib	apps/MIFit/ui/RamaPlot.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/ANGLE.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/Aromatic.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/Aromatic.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/AtomTyper.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/AtomTyper.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/Bond.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/Bond.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/Box.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/Box.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/CHIRALDICT.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/Chiral.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/Chiral.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/ConfSaver.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/ConfSaver.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/Constraint.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/Constraint.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/CovalentGeom.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/CovalentGeom.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/DictResidue.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/Dictionary.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/Dictionary.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/FirstToken.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/FirstToken.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/GeomSaver.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/GeomSaver.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/Ligand.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/Ligand.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/LigandPerceiver.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/LigandPerceiver.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/MIAtom.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/MIAtom.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/MIAtom_fwd.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/MIMolDictionary.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/MIMolDictionary.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/MIMolIO.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/MIMolIOBase.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/MIMolInfo.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/MIMoleculeBase.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/MIMoleculeBase.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/MIMoleculeBase_fwd.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/Monomer.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/Monomer.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/PDB.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/PDB.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/PLANE.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/RefmacAtomTyper.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/RefmacAtomTyper.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/Residue.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/Residue.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/Residue_fwd.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/RingSystem.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/RingSystem.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/SMILES.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/SMILES.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/SaveAtom.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/SaveAtom.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/SaveItem.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/SaveItem.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/SmilesReader.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/SmilesReader.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/Substituent.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/Substituent.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/TORSION.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/atom_util.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/atom_util.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/chemlib.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/math_util.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/mmCIF.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/mmCIF.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/model.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/mol_util.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/mol_util.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/mol_util_private.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/molfile.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/molfile.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/sequence_util.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/substituent_util.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/substituent_util.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/transform_util.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/transform_util.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/util.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/util.h	/^namespace chemlib$/;"	n
chemlib	libs/chemlib/valence.cpp	/^namespace chemlib$/;"	n	file:
chemlib	libs/chemlib/valence.h	/^namespace chemlib$/;"	n
chemlib	libs/conflib/ConfFingerprint.h	/^namespace chemlib$/;"	n
chemlib	libs/conflib/FlexTorsion.h	/^namespace chemlib$/;"	n
chemlib	libs/conflib/bumps.h	/^namespace chemlib$/;"	n
chemlib	libs/map/EMapBase.h	/^namespace chemlib$/;"	n
chemlib	libs/map/InterpBox.h	/^namespace chemlib$/;"	n
chemlib	libs/map/sfcalc.h	/^namespace chemlib$/;"	n
chemlib_MIAtom_fwd_h	libs/chemlib/MIAtom_fwd.h	2;"	d
chemlib_MIMoleculeBase_fwd_h	libs/chemlib/MIMoleculeBase_fwd.h	2;"	d
chemlib_Residue_fwd_h	libs/chemlib/Residue_fwd.h	2;"	d
childActivated	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::childActivated(QMdiSubWindow *w)$/;"	f	class:MIMainWindow
chiralClassToString	libs/chemlib/MIAtom.cpp	/^std::string chemlib::MIAtom::chiralClassToString(int chiralClass)$/;"	f	class:chemlib::chemlib::MIAtom
chiral_class	libs/chemlib/MIAtom.h	/^        int chiral_class() const$/;"	f	class:chemlib::MIAtom
chiral_class	libs/chemlib/MIAtom.h	/^        void chiral_class(int value)$/;"	f	class:chemlib::MIAtom
chiral_class_	libs/chemlib/MIAtom.h	/^        int chiral_class_;$/;"	m	class:chemlib::MIAtom
chiral_order	libs/chemlib/MIAtom.h	/^        int chiral_order() const$/;"	f	class:chemlib::MIAtom
chiral_order	libs/chemlib/MIAtom.h	/^        void chiral_order(int value)$/;"	f	class:chemlib::MIAtom
chiral_order_	libs/chemlib/MIAtom.h	/^        int chiral_order_;$/;"	m	class:chemlib::MIAtom
chirals	libs/chemlib/Dictionary.h	/^        std::vector<Chiral> chirals;$/;"	m	class:chemlib::LigDictionary
chirals	libs/chemlib/MIMolInfo.h	/^        std::vector<CHIRAL> chirals; \/\/ mmCIF only$/;"	m	class:chemlib::MIMolInfo
chirals	libs/ligand/LigDictEntry.h	/^    std::vector<chemlib::CHIRALDICT> chirals;$/;"	m	class:LigDictEntry
chiralsdict	libs/chemlib/MIMolInfo.h	/^        std::vector<CHIRALDICT> chiralsdict; \/\/ mmCIF only$/;"	m	class:chemlib::MIMolInfo
ciend	libs/map/fftlib.cpp	/^    flag ciend;$/;"	m	struct:__anon51	file:
cierr	libs/map/fftlib.cpp	/^    flag cierr;$/;"	m	struct:__anon51	file:
cifmt	libs/map/fftlib.cpp	/^    char *cifmt;$/;"	m	struct:__anon51	file:
cilist	libs/map/fftlib.cpp	/^} cilist;$/;"	t	typeref:struct:__anon51	file:
circleStackAtoms	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::circleStackAtoms(Stack *stack)$/;"	f	class:GLRenderer
cirec	libs/map/fftlib.cpp	/^    ftnint cirec;$/;"	m	struct:__anon51	file:
ciunit	libs/map/fftlib.cpp	/^    ftnint ciunit;$/;"	m	struct:__anon51	file:
cix	libs/map/EMapBase.cpp	/^static int cix, ciy, ciz;$/;"	v	file:
ciy	libs/map/EMapBase.cpp	/^static int cix, ciy, ciz;$/;"	v	file:
ciz	libs/map/EMapBase.cpp	/^static int cix, ciy, ciz;$/;"	v	file:
cl	libs/map/fftlib.cpp	1449;"	d	file:
cl	libs/map/fftlib.cpp	1785;"	d	file:
cleanup	libs/opengl/Object3d.cpp	/^void Object3d::cleanup()$/;"	f	class:mi::opengl::Object3d
clear	apps/MIFit/core/Stack.cpp	/^void Stack::clear()$/;"	f	class:Stack
clearAnnotations	apps/MIFit/core/Molecule.cpp	/^void Molecule::clearAnnotations()$/;"	f	class:Molecule
clearAtomLabels	apps/MIFit/core/Molecule.cpp	/^void Molecule::clearAtomLabels()$/;"	f	class:Molecule
clearAtoms	libs/chemlib/Monomer.h	/^        void clearAtoms()$/;"	f	class:chemlib::Monomer
clearDetails	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::clearDetails()$/;"	f	class:ManageCrystals
clearFitTorsion	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::clearFitTorsion()$/;"	f	class:MIGLWidget
clearGeomAnnotations	apps/MIFit/core/Molecule.cpp	/^void Molecule::clearGeomAnnotations()$/;"	f	class:Molecule
clearLabelsAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *clearLabelsAction;$/;"	m	class:MIGLWidget
clearMessage	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::clearMessage()$/;"	f	class:MIGLWidget
clearModifiedAngles	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::clearModifiedAngles()$/;"	f	class:DictEditCanvas
clearPentamer	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::clearPentamer()$/;"	f	class:MIGLWidget
clearPickNames	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::clearPickNames()$/;"	f	class:GLRenderer
clearPoints	apps/MIFit/core/SurfaceSphere.cpp	/^void SurfaceSphere::clearPoints()$/;"	f	class:SurfaceSphere
clearPrefAngles	libs/chemlib/Residue.h	/^        void clearPrefAngles()$/;"	f	class:chemlib::Residue
clearPrefBonds	libs/chemlib/Residue.h	/^        void clearPrefBonds()$/;"	f	class:chemlib::Residue
clearRefineTarget	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::clearRefineTarget()$/;"	f	class:MIMolOpt
clearStack	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::clearStack()$/;"	f	class:MIGLWidget
clearSymmAtoms	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::clearSymmAtoms()$/;"	f	class:MIGLWidget
clearVertices	libs/opengl/Arc.cpp	/^void Arc::clearVertices()$/;"	f	class:mi::opengl::Arc
clear_residue_from_atom_cache	libs/chemlib/mol_util.cpp	/^void clear_residue_from_atom_cache(const Monomer *res)$/;"	f	namespace:chemlib
clearspheres	apps/MIFit/core/SURFDOT.cpp	/^void clearspheres()$/;"	f
cllist	libs/map/fftlib.cpp	/^} cllist;$/;"	t	typeref:struct:__anon54	file:
close	libs/util/FileIo.cpp	/^void FileIo::close()$/;"	f	class:FileIo
close	libs/util/StringIo.cpp	/^void StringIo::close()$/;"	f	class:StringIo
closeAct	apps/MIFit/ui/MIMainWindow.h	/^    QAction *closeAct;$/;"	m	class:MIMainWindow
closeAction	apps/MIFit/ui/MIMainWindow.h	/^    QAction *closeAction;$/;"	m	class:MIMainWindow
closeAllAct	apps/MIFit/ui/MIMainWindow.h	/^    QAction *closeAllAct;$/;"	m	class:MIMainWindow
closeButton	apps/MIFit/ui/ui_ManageCrystals.h	/^    QPushButton *closeButton;$/;"	m	class:Ui_ManageCrystals
closeEvent	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::closeEvent(QCloseEvent *event)$/;"	f	class:MIGLWidget
closeEvent	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::closeEvent(QCloseEvent *event)$/;"	f	class:MIMainWindow
clusters	apps/MIFit/core/clusterList.h	/^    std::vector<Cluster> clusters;$/;"	m	class:ClusterList
cmap_errlist	libs/cmtz/library_err.c	/^static const char *const cmap_errlist[] =$/;"	v	file:
cmat	apps/MIFit/core/RibbonSpan.cpp	/^static double cmat[4][4] = {{-b1,  b3, -b3, b1},$/;"	v	file:
cmdchoice	apps/MIFit/ui/MIGLWidget.cpp	7969;"	d	file:
cmdslider	apps/MIFit/ui/MIGLWidget.cpp	7971;"	d	file:
cmdtoggle	apps/MIFit/ui/MIGLWidget.cpp	7962;"	d	file:
cmdtoggle2	apps/MIFit/ui/MIGLWidget.cpp	7963;"	d	file:
cmdtoggle3	apps/MIFit/ui/MIGLWidget.cpp	7964;"	d	file:
cmdtoggle4	apps/MIFit/ui/MIGLWidget.cpp	7966;"	d	file:
cmplft_	libs/map/fftlib.cpp	/^int cmplft_(real *x, real *y, integer *n, integer *d)$/;"	f
cmtz_errlist	libs/cmtz/library_err.c	/^static const char *const cmtz_errlist[] =$/;"	v	file:
cmul	libs/map/fftsub.cpp	17;"	d	file:
co	libs/map/sfcalc_data.h	/^*b1, *b2, *b3, *b4, *co;$/;"	v
code	apps/MIFit/ui/SmilesDialog.h	/^        std::string code;$/;"	m	struct:SmilesDialog::Data
code	libs/opengl/zlib/infcodes.cpp	/^        } code;         \/* if LEN or DIST, where in tree *\/$/;"	m	union:inflate_codes_state::__anon39	typeref:struct:inflate_codes_state::__anon39::__anon40	file:
codes	libs/opengl/zlib/infutil.h	/^            *codes;$/;"	m	struct:inflate_blocks_state::__anon35::__anon37
coef	libs/map/CREFL.h	/^    float coef;$/;"	m	class:CREFL
col	apps/MIFit/ui/MIColorPickerDlg.h	/^    QColor col;$/;"	m	class:MIColorToolButton
col	libs/cmtz/mtzdata.h	/^		 MTZCOL **col;         \/**< columns *\/$/;"	m	struct:__anon21
collision_score	libs/molopt/MIMolOpt.cpp	/^float collision_score(MIAtomList &atoms, MIAtomList nabors)$/;"	f
collision_score_simple	libs/molopt/MIMolOpt.cpp	/^float collision_score_simple(MIAtomList &atoms, MIAtomList nabors)$/;"	f
color	apps/MIFit/core/CONTACT.h	/^    short color;$/;"	m	class:CONTACT
color	apps/MIFit/core/SURFDOT.h	/^    short color;$/;"	m	class:SURFDOT
color	apps/MIFit/ui/MIColorPickerDlg.h	/^    QColor color() const$/;"	f	class:MIColorToolButton
color	apps/MIFit/ui/MIColorPickerDlg.h	/^    int color() const$/;"	f	class:MIColorPickerDlg
color	apps/MIFit/ui/graphlib.h	/^    GraphColor color;$/;"	m	class:CURVELABEL
color	apps/MIFit/ui/graphlib.h	/^    GraphColor color;$/;"	m	class:GR_POINT
color	libs/chemlib/MIAtom.h	/^        short color() const$/;"	f	class:chemlib::MIAtom
color	libs/chemlib/SaveAtom.h	/^        int color;$/;"	m	class:chemlib::SaveAtom
color	libs/math/APOINT.h	/^    short color;$/;"	m	class:APOINT
color	libs/math/LINE.h	/^    short color;$/;"	m	class:LINE
color	libs/opengl/interact/TargetFeedback.h	/^                mi::math::Point3<float> color;$/;"	m	class:mi::opengl::interact::TargetFeedback
color	libs/opengl/interact/TranslationFeedback.h	/^                mi::math::Point3<float> color;$/;"	m	class:mi::opengl::interact::TranslationFeedback
color2	libs/math/LINE.h	/^    short color2;$/;"	m	class:LINE
colorAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *colorAction_;$/;"	m	class:ModelsTree	file:
colorButtonPressed	apps/MIFit/ui/BValueColors.cpp	/^void BValueColors::colorButtonPressed(QToolButton *control)$/;"	f	class:BValueColors
colorButtonPressed	apps/MIFit/ui/ContourOptionsWidget.cpp	/^void ContourOptionsWidget::colorButtonPressed()$/;"	f	class:ContourOptionsWidget
colorButtonPressed	apps/MIFit/ui/GenericDataDialog.cpp	/^void GenericDataDialog::colorButtonPressed()$/;"	f	class:GenericDataDialog
colorButton_0	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QToolButton *colorButton_0;$/;"	m	class:Ui_ContourOptionsWidget
colorButton_1	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QToolButton *colorButton_1;$/;"	m	class:Ui_ContourOptionsWidget
colorButton_2	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QToolButton *colorButton_2;$/;"	m	class:Ui_ContourOptionsWidget
colorButton_3	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QToolButton *colorButton_3;$/;"	m	class:Ui_ContourOptionsWidget
colorButton_4	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QToolButton *colorButton_4;$/;"	m	class:Ui_ContourOptionsWidget
colorDialog	apps/MIFit/ui/ModelsView.cpp	/^bool ModelsTree::colorDialog(int &color, int &colorMethod)$/;"	f	class:ModelsTree
colorIndex	apps/MIFit/ui/GenericDataDialog.cpp	/^    int colorIndex;$/;"	m	class:__anon15::ColorIndexButton	file:
colorIndexButtonPressed	apps/MIFit/ui/GenericDataDialog.cpp	/^void GenericDataDialog::colorIndexButtonPressed()$/;"	f	class:GenericDataDialog
colorLabel_1	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *colorLabel_1;$/;"	m	class:Ui_BValueColors
colorLabel_10	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *colorLabel_10;$/;"	m	class:Ui_BValueColors
colorLabel_2	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *colorLabel_2;$/;"	m	class:Ui_BValueColors
colorLabel_3	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *colorLabel_3;$/;"	m	class:Ui_BValueColors
colorLabel_4	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *colorLabel_4;$/;"	m	class:Ui_BValueColors
colorLabel_5	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *colorLabel_5;$/;"	m	class:Ui_BValueColors
colorLabel_6	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *colorLabel_6;$/;"	m	class:Ui_BValueColors
colorLabel_7	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *colorLabel_7;$/;"	m	class:Ui_BValueColors
colorLabel_8	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *colorLabel_8;$/;"	m	class:Ui_BValueColors
colorLabel_9	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *colorLabel_9;$/;"	m	class:Ui_BValueColors
colorPicked	apps/MIFit/ui/MIColorPickerDlg.cpp	/^void MIColorPickerDlg::colorPicked(int i)$/;"	f	class:MIColorPickerDlg
colorToolButton	apps/MIFit/ui/ui_AtomColors.h	/^    QToolButton *colorToolButton;$/;"	m	class:Ui_AtomColors
colorToolButton1	apps/MIFit/ui/ui_BValueColors.h	/^    QToolButton *colorToolButton1;$/;"	m	class:Ui_BValueColors
colorToolButton10	apps/MIFit/ui/ui_BValueColors.h	/^    QToolButton *colorToolButton10;$/;"	m	class:Ui_BValueColors
colorToolButton2	apps/MIFit/ui/ui_BValueColors.h	/^    QToolButton *colorToolButton2;$/;"	m	class:Ui_BValueColors
colorToolButton3	apps/MIFit/ui/ui_BValueColors.h	/^    QToolButton *colorToolButton3;$/;"	m	class:Ui_BValueColors
colorToolButton4	apps/MIFit/ui/ui_BValueColors.h	/^    QToolButton *colorToolButton4;$/;"	m	class:Ui_BValueColors
colorToolButton5	apps/MIFit/ui/ui_BValueColors.h	/^    QToolButton *colorToolButton5;$/;"	m	class:Ui_BValueColors
colorToolButton6	apps/MIFit/ui/ui_BValueColors.h	/^    QToolButton *colorToolButton6;$/;"	m	class:Ui_BValueColors
colorToolButton7	apps/MIFit/ui/ui_BValueColors.h	/^    QToolButton *colorToolButton7;$/;"	m	class:Ui_BValueColors
colorToolButton8	apps/MIFit/ui/ui_BValueColors.h	/^    QToolButton *colorToolButton8;$/;"	m	class:Ui_BValueColors
colorToolButton9	apps/MIFit/ui/ui_BValueColors.h	/^    QToolButton *colorToolButton9;$/;"	m	class:Ui_BValueColors
color_	libs/chemlib/MIAtom.h	/^        short color_;$/;"	m	class:chemlib::MIAtom
color_by_charge	apps/MIFit/core/Molecule.cpp	/^static int color_by_charge(const char *name)$/;"	f	file:
color_by_name	apps/MIFit/core/ColorUtil.cpp	/^short color_by_name(const char *name)$/;"	f
color_by_name	apps/MIFit/core/ColorUtil.cpp	/^short color_by_name(const char *name, char altloc)$/;"	f
color_by_phobic	apps/MIFit/core/Molecule.cpp	/^static int color_by_phobic(const char *name)$/;"	f	file:
color_by_shapely	apps/MIFit/core/Molecule.cpp	/^static int color_by_shapely(const char *name)$/;"	f	file:
color_menu	apps/MIFit/ui/MIMainWindow.h	/^    QMenu *color_menu;$/;"	m	class:MIMainWindow
colornames	apps/MIFit/core/Colors.cpp	/^char Colors::colornames[Colors_NUMBERCOLORS][8] =$/;"	m	class:Colors	file:
colornames	apps/MIFit/core/Colors.h	/^    static char colornames[Colors_NUMBERCOLORS][8];$/;"	m	class:Colors
colors	apps/MIFit/core/Colors.h	/^    std::vector<PaletteColor> colors;$/;"	m	class:MIPalette
colors	apps/MIFit/ui/BValueColors.h	/^    std::map<QToolButton*, int> colors;$/;"	m	class:BValueColors
colors	apps/MIFit/ui/BondRenderer.h	/^    QVector<QVector4D> colors;$/;"	m	class:BondRenderer
colors	apps/MIFit/ui/ContourOptionsWidget.h	/^    std::map<QWidget*, int> colors;$/;"	m	class:ContourOptionsWidget
cols	apps/MIFit/ui/RamaPlot.h	/^    GraphColor cols[4];$/;"	m	class:RamaPlotMgr
column	apps/MIFit/core/pdbmatch.cpp	245;"	d	file:
column	apps/MIFit/core/pdbmatch.cpp	320;"	d	file:
column	apps/MIFit/core/pdbmatch.cpp	327;"	d	file:
column	libs/chemlib/PDB.cpp	109;"	d	file:
command	apps/MIFit/python/PythonEngine.cpp	/^void PythonEngine::command(const QString &text)$/;"	f	class:PythonEngine
commandLineEdit	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QLineEdit *commandLineEdit;$/;"	m	class:Ui_CustomJobDialog
commandPushButton	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QPushButton *commandPushButton;$/;"	m	class:Ui_CustomJobDialog
commandStart	apps/MIFit/python/Console.h	/^    int commandStart;$/;"	m	class:Console
comment	libs/cmtz/ccp4_parser.h	/^  char   *comment;        \/* List of comment characters *\/$/;"	m	struct:CCP4::__anon27
compare	apps/MIFit/ui/surf.cpp	/^static int compare(const void *e1, const void *e2)$/;"	f	file:
compound	libs/chemlib/MIMoleculeBase.h	/^        std::string compound;$/;"	m	class:chemlib::MIMoleculeBase
compress	libs/opengl/zlib/zconf.h	29;"	d
compress2	libs/opengl/zlib/zconf.h	30;"	d
computeBounds	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::computeBounds(std::list<Molecule*> &molecules)$/;"	f	class:GLRenderer
concurrentJobLimit	apps/MIFit/ui/Application.h	/^    int concurrentJobLimit;$/;"	m	class:Application
concurrentJobsSpinBox	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QSpinBox *concurrentJobsSpinBox;$/;"	m	class:Ui_GeneralPreferences
conf	apps/MIFit/ui/DictEditCanvas.h	/^    int conf;$/;"	m	class:DictEditCanvas
confAtomIter	libs/chemlib/ConfSaver.h	/^    typedef  std::list<SaveAtom>::iterator confAtomIter;$/;"	t	namespace:chemlib
confCountLabel	apps/MIFit/ui/ui_dicteditorform.h	/^    QLabel *confCountLabel;$/;"	m	class:Ui_DictEditorForm
conflib	libs/conflib/AtomRefiner.h	/^namespace conflib$/;"	n
conflib	libs/conflib/ConfFingerprint.h	/^namespace conflib$/;"	n
conflib	libs/conflib/ConfIterator.cpp	/^namespace conflib$/;"	n	file:
conflib	libs/conflib/ConfIterator.h	/^namespace conflib$/;"	n
conflib	libs/conflib/CoordGenerator.cpp	/^namespace conflib$/;"	n	file:
conflib	libs/conflib/CoordGenerator.h	/^namespace conflib$/;"	n
conflib	libs/conflib/FlexTorsion.cpp	/^namespace conflib$/;"	n	file:
conflib	libs/conflib/FlexTorsion.h	/^namespace conflib$/;"	n
conflib	libs/conflib/LigRefiner.h	/^namespace conflib$/;"	n
conflib	libs/conflib/bumps.cpp	/^namespace conflib$/;"	n	file:
conflib	libs/conflib/bumps.h	/^namespace conflib$/;"	n
conflib	libs/conflib/confgen.cpp	/^namespace conflib$/;"	n	file:
conflib	libs/conflib/confgen.h	/^namespace conflib$/;"	n
conflib	libs/conflib/sdg.cpp	/^namespace conflib$/;"	n	file:
conflib	libs/conflib/sdg.h	/^namespace conflib$/;"	n
conflib	libs/conflib/sdg_parms.h	/^namespace conflib$/;"	n
confomer	libs/chemlib/Monomer.h	/^        unsigned short confomer() const$/;"	f	class:chemlib::Monomer
confomer_	libs/chemlib/Monomer.h	/^        unsigned short confomer_;$/;"	m	class:chemlib::Monomer
conformerSpinbox	apps/MIFit/ui/ui_dicteditorform.h	/^    QSpinBox *conformerSpinbox;$/;"	m	class:Ui_DictEditorForm
confs	apps/MIFit/ui/DictEditCanvas.h	/^    chemlib::GeomSaver confs;$/;"	m	class:DictEditCanvas
conjugate	libs/math/Quaternion.h	/^        void Quaternion<Type>::conjugate()$/;"	f	class:mi::math::Quaternion
conjugate	libs/math/Quaternion.h	/^        void Quaternion<Type>::conjugate(const Quaternion<Type> &q1)$/;"	f	class:mi::math::Quaternion
connectToMap	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::connectToMap(EMapBase *emap)$/;"	f	class:MIGLWidget
connectToModel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::connectToModel(Molecule *model)$/;"	f	class:MIGLWidget
connects	libs/chemlib/Ligand.h	/^        std::vector<Bond> connects;$/;"	m	class:chemlib::Ligand
connects	libs/chemlib/MIMoleculeBase.h	/^        std::vector<Bond> connects;$/;"	m	class:chemlib::MIMoleculeBase
cons	libs/conflib/AtomRefiner.h	/^        chemlib::ConstraintList *cons;$/;"	m	class:conflib::AtomRefiner
const	libs/opengl/zlib/zconf.h	81;"	d
const_iterator	libs/chemlib/Matrix.h	/^        typedef const T*const_iterator;$/;"	t	class:TNT::Matrix
const_reference	libs/chemlib/Matrix.h	/^        typedef const T&const_reference;$/;"	t	class:TNT::Matrix
constrainCA	apps/MIFit/ui/RefinementOptionsDialog.h	/^        bool constrainCA;$/;"	m	struct:RefinementOptionsDialog::Data
constrainEnds	apps/MIFit/ui/RefinementOptionsDialog.h	/^        bool constrainEnds;$/;"	m	struct:RefinementOptionsDialog::Data
constrain_CA	libs/chemlib/MIMolDictionary.h	/^        bool constrain_CA;$/;"	m	class:chemlib::MIMolDictionary
constrain_Ends	libs/chemlib/MIMolDictionary.h	/^        bool constrain_Ends;$/;"	m	class:chemlib::MIMolDictionary
construct_c_matrix	libs/chemlib/Chiral.cpp	/^void construct_c_matrix(const Ligand &lig, TNT::Matrix<double> &m)$/;"	f	namespace:chemlib
construct_c_matrix	libs/chemlib/Chiral.cpp	/^void construct_c_matrix(const Monomer &res, TNT::Matrix<double> &m)$/;"	f	namespace:chemlib
construct_c_matrix	libs/chemlib/Chiral.cpp	/^void construct_c_matrix(const Residue &res,$/;"	f	namespace:chemlib
construct_g_matrix	libs/chemlib/Chiral.cpp	/^void construct_g_matrix(const Monomer &res,$/;"	f	namespace:chemlib
construct_g_matrix	libs/chemlib/Chiral.cpp	/^void construct_g_matrix(const Residue &res,$/;"	f	namespace:chemlib
containerWidget	apps/MIFit/ui/MIGLWidget.h	/^    QWidget *containerWidget;$/;"	m	class:MIGLWidget
contains	apps/MIFit/core/Stack.cpp	/^bool Stack::contains(Residue *res)$/;"	f	class:Stack
contextActionTriggered	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::contextActionTriggered(QAction *action)$/;"	f	class:ModelsTree
contextMenuEvent	apps/MIFit/ui/ModelsView.cpp	/^void AtomsTree::contextMenuEvent(QContextMenuEvent *event)$/;"	f	class:AtomsTree
contextMenuEvent	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::contextMenuEvent(QContextMenuEvent *event)$/;"	f	class:ModelsTree
contextMenuEvent	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::contextMenuEvent(QContextMenuEvent *event)$/;"	f	class:ResiduesTree
contourAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *contourAction_;$/;"	m	class:ModelsTree	file:
contourNumberLabel_0	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *contourNumberLabel_0;$/;"	m	class:Ui_ContourOptionsWidget
contourNumberLabel_1	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *contourNumberLabel_1;$/;"	m	class:Ui_ContourOptionsWidget
contourNumberLabel_2	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *contourNumberLabel_2;$/;"	m	class:Ui_ContourOptionsWidget
contourNumberLabel_3	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *contourNumberLabel_3;$/;"	m	class:Ui_ContourOptionsWidget
contourNumberLabel_4	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *contourNumberLabel_4;$/;"	m	class:Ui_ContourOptionsWidget
contourOptions	apps/MIFit/ui/PreferencesDialog.h	/^    ContourOptionsWidget *contourOptions;$/;"	m	class:PreferencesDialog
contourOptionsAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *contourOptionsAction_;$/;"	m	class:ModelsTree	file:
contourSlider_0	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QSlider *contourSlider_0;$/;"	m	class:Ui_ContourOptionsWidget
contourSlider_1	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QSlider *contourSlider_1;$/;"	m	class:Ui_ContourOptionsWidget
contourSlider_2	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QSlider *contourSlider_2;$/;"	m	class:Ui_ContourOptionsWidget
contourSlider_3	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QSlider *contourSlider_3;$/;"	m	class:Ui_ContourOptionsWidget
contourSlider_4	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QSlider *contourSlider_4;$/;"	m	class:Ui_ContourOptionsWidget
contourSpinBox_0	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QSpinBox *contourSpinBox_0;$/;"	m	class:Ui_ContourOptionsWidget
contourSpinBox_1	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QSpinBox *contourSpinBox_1;$/;"	m	class:Ui_ContourOptionsWidget
contourSpinBox_2	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QSpinBox *contourSpinBox_2;$/;"	m	class:Ui_ContourOptionsWidget
contourSpinBox_3	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QSpinBox *contourSpinBox_3;$/;"	m	class:Ui_ContourOptionsWidget
contourSpinBox_4	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QSpinBox *contourSpinBox_4;$/;"	m	class:Ui_ContourOptionsWidget
contour_calc_cell_verts	libs/jacgrid/isosurface.cpp	/^static void contour_calc_cell_verts(unsigned int index, unsigned int x1, unsigned int y1, unsigned int z1)$/;"	f	file:
contour_end	apps/MIFit/ui/RamaPlot.h	/^    unsigned int contour_end;$/;"	m	class:RamaPlotMgr
controlAspectX	libs/opengl/interact/MouseArcBall.h	/^                float controlAspectX;$/;"	m	class:mi::opengl::interact::MouseArcBall
controlAspectY	libs/opengl/interact/MouseArcBall.h	/^                float controlAspectY;$/;"	m	class:mi::opengl::interact::MouseArcBall
controlSizeX	libs/opengl/interact/MouseArcBall.h	/^                int controlSizeX;$/;"	m	class:mi::opengl::interact::MouseArcBall
controlSizeY	libs/opengl/interact/MouseArcBall.h	/^                int controlSizeY;$/;"	m	class:mi::opengl::interact::MouseArcBall
controlsPage	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QWidget *controlsPage;$/;"	m	class:Ui_CustomJobDialog
contur_sec	libs/map/wxWweave.cpp	/^EMapBase::contur_sec(int planedirection, int xmin, int xmax, int ymin, int ymax,$/;"	f	class:EMapBase
convexF2ieeeF	libs/cmtz/library_file.c	/^static void convexF2ieeeF(union float_uint_uchar *buffer, const unsigned int size)$/;"	f	file:
convexF2ieeeF	libs/umtz/library.c	/^static void convexF2ieeeF(union float_uint_uchar buffer[], int size)$/;"	f	file:
coords_changed	libs/chemlib/MIMoleculeBase.h	/^        bool coords_changed;$/;"	m	class:chemlib::MIMoleculeBase
copy	libs/chemlib/Matrix.h	/^        void copy(const T *v)$/;"	f	class:TNT::Matrix
copy	libs/opengl/zlib/infcodes.cpp	/^        } copy;         \/* if EXT or COPY, where and how much *\/$/;"	m	union:inflate_codes_state::__anon39	typeref:struct:inflate_codes_state::__anon39::__anon41	file:
copyAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *copyAction_;$/;"	m	class:ModelsTree	file:
copyBondOrders	libs/chemlib/Bond.cpp	/^void Bond::copyBondOrders(const std::vector<Bond> &fromBonds, std::vector<Bond> &toBonds)$/;"	f	class:chemlib::Bond
copyCanvasAction	apps/MIFit/ui/MIMainWindow.h	/^    QAction *copyCanvasAction;$/;"	m	class:MIMainWindow
copyChemicalData	libs/chemlib/MIAtom.cpp	/^void MIAtom::copyChemicalData(const MIAtom &source)$/;"	f	class:chemlib::MIAtom
copyCrystalButton	apps/MIFit/ui/ui_ManageCrystals.h	/^    QPushButton *copyCrystalButton;$/;"	m	class:Ui_ManageCrystals
copyPosition	libs/chemlib/MIAtom.cpp	/^void MIAtom::copyPosition(const MIAtom &from)$/;"	f	class:chemlib::MIAtom
copyShallow	libs/chemlib/MIAtom.cpp	/^void MIAtom::copyShallow(const MIAtom &atom)$/;"	f	class:chemlib::MIAtom
copy_pos	libs/molopt/MIMolOpt.cpp	/^void copy_pos(int dim, float *a, float *b)$/;"	f
copy_trial	libs/molopt/MIMolOpt.cpp	/^void copy_trial(trial *t1, trial *t2, unsigned int td)$/;"	f
copya	apps/MIFit/core/pdbmatch.cpp	/^static void copya(double a[3], MIAtom *atom)$/;"	f	file:
copya	apps/MIFit/ui/LSQFitDialog.cpp	/^static void copya(double a[3], MIAtom *atom)$/;"	f	file:
corners	apps/MIFit/ui/CMolwViewScene.h	/^    mi::math::Vector3<float> *corners;$/;"	m	class:CMolwViewScene
corners	apps/MIFit/ui/CMolwViewSlabPickingRenderable.h	/^    mi::math::Vector3<float> *corners;$/;"	m	class:CMolwViewSlabRenderable
cpars_errlist	libs/cmtz/library_err.c	/^static const char *const cpars_errlist[] =$/;"	v	file:
cpdext	libs/opengl/zlib/inftrees.cpp	/^local const uInt cpdext[30] =   \/* Extra bits for distance codes *\/$/;"	v
cpdist	libs/opengl/zlib/inftrees.cpp	/^local const uInt cpdist[30] =   \/* Copy offsets for distance codes 0..29 *\/$/;"	v
cplens	libs/opengl/zlib/inftrees.cpp	/^local const uInt cplens[31] =   \/* Copy lengths for literal codes 257..285 *\/$/;"	v
cplext	libs/opengl/zlib/inftrees.cpp	/^local const uInt cplext[31] =   \/* Extra bits for literal codes 257..285 *\/$/;"	v
cray	libs/map/fftlib.cpp	187;"	d	file:
crc32	libs/opengl/zlib/crc32.cpp	/^uLong ZEXPORT crc32($/;"	f
crc32	libs/opengl/zlib/zconf.h	33;"	d
crc_table	libs/opengl/zlib/crc32.cpp	/^local const uLongf crc_table[256] =$/;"	v
crc_table	libs/opengl/zlib/crc32.cpp	/^local uLongf crc_table[256];$/;"	v
crc_table_empty	libs/opengl/zlib/crc32.cpp	/^local int crc_table_empty = 1;$/;"	v
create	libs/util/FileIo.cpp	/^io*FileIo::create()$/;"	f	class:FileIo
create	libs/util/StringIo.cpp	/^io*StringIo::create()$/;"	f	class:StringIo
createActions	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::createActions()$/;"	f	class:MIMainWindow
createAlphaCarbonTrace	apps/MIFit/ui/GLOverviewCanvas.cpp	/^void GLOverviewCanvas::createAlphaCarbonTrace()$/;"	f	class:GLOverviewCanvas
createCharacter	libs/opengl/Text.cpp	/^CharData &TextPrivate::createCharacter(QChar c)$/;"	f	class:mi::opengl::TextPrivate
createDefaultNullPanel	apps/MIFit/ui/ViewSyncedPanel.cpp	/^void ViewSyncedPanel::createDefaultNullPanel()$/;"	f	class:ViewSyncedPanel
createDefaults	apps/MIFit/core/RenderStyle.cpp	/^bool RenderStyle::createDefaults()$/;"	f	class:RenderStyle
createDockWindows	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::createDockWindows()$/;"	f	class:MIMainWindow
createList	libs/opengl/Object3d.cpp	/^void Object3d::createList()$/;"	f	class:mi::opengl::Object3d
createLocalSocketScript	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::createLocalSocketScript()$/;"	f	class:MIMainWindow
createMIGLWidget	apps/MIFit/ui/MIMainWindow.cpp	/^QWidget*MIMainWindow::createMIGLWidget()$/;"	f	class:MIMainWindow
createMenus	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::createMenus()$/;"	f	class:DictEditCanvas
createMenus	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::createMenus()$/;"	f	class:MIMainWindow
createPanelForView	apps/MIFit/ui/DisplayView.cpp	/^QWidget*DisplayView::createPanelForView(MIGLWidget *view, QWidget *parent)$/;"	f	class:DisplayView
createPanelForView	apps/MIFit/ui/ModelsView.cpp	/^QWidget*ModelsView::createPanelForView(MIGLWidget *view, QWidget *parent)$/;"	f	class:ModelsView
createPlanes	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::createPlanes()$/;"	f	class:DictEditCanvas
createStatusBar	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::createStatusBar()$/;"	f	class:MIMainWindow
createToolBars	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::createToolBars()$/;"	f	class:MIMainWindow
createVertices	libs/opengl/Arc.cpp	/^void Arc::createVertices()$/;"	f	class:mi::opengl::Arc
createViewPanel	apps/MIFit/ui/ViewSyncedPanel.cpp	/^void ViewSyncedPanel::createViewPanel(MIGLWidget *view)$/;"	f	class:ViewSyncedPanel
cres	libs/chemlib/MIMolDictionary.h	/^        Residue *cres;$/;"	m	class:chemlib::MIMolDictionary
cross	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::cross(float a[3], float b[3], float c[3])$/;"	f	class:GLRenderer
cross	libs/jacgrid/linalg.h	/^inline void cross(float *z, const float *x, const float *y)$/;"	f
cross	libs/math/Matrices.cpp	/^void cross(double a[3], double b[3], double c[3])$/;"	f
cross	libs/math/Matrices.cpp	/^void cross(float a[3], float b[3], float c[3])$/;"	f
cross	libs/math/Vector3.h	/^        void Vector3<Type>::cross(const Vector3<Type> &v1, const Vector3<Type> &v2)$/;"	f	class:mi::math::Vector3
crossEyed	libs/opengl/StereoView.h	/^            bool crossEyed;$/;"	m	class:mi::opengl::StereoView
crossings	libs/jacgrid/isosurface.cpp	/^static unsigned int crossings[13];$/;"	v	file:
crossprod	apps/MIFit/core/rotate.cpp	/^void crossprod(double *x, double *y, double *z)$/;"	f
crydat	libs/cmtz/mtzdata.h	/^		 float crydat[12];     \/**< mosaicity *\/$/;"	m	struct:bathead
crystal	libs/cmtz/ccp4_spg.h	/^  char crystal[20];       \/* crystal system *\/$/;"	m	struct:CSym::ccp4_spacegroup_
crystalDataButton	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QPushButton *crystalDataButton;$/;"	m	class:Ui_EnvironmentPreferences
crystalDataLineEdit	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QLineEdit *crystalDataLineEdit;$/;"	m	class:Ui_EnvironmentPreferences
crystalFileExists	apps/MIFit/ui/ManageCrystals.cpp	/^bool ManageCrystals::crystalFileExists(std::string &crystal)$/;"	f	class:ManageCrystals
crystalListBox	apps/MIFit/ui/ui_ManageCrystals.h	/^    QListWidget *crystalListBox;$/;"	m	class:Ui_ManageCrystals
crystalListWidget	apps/MIFit/ui/ui_SelectCrystal.h	/^    QListWidget *crystalListWidget;$/;"	m	class:Ui_SelectCrystal
crystalName	apps/MIFit/ui/ui_ManageCrystals.h	/^    QLineEdit *crystalName;$/;"	m	class:Ui_ManageCrystals
crystal_name	libs/map/CMapHeaderBase.h	/^    std::string crystal_name;$/;"	m	class:CMapHeaderBase
cs	libs/map/fftlib.cpp	1456;"	d	file:
cs	libs/map/fftlib.cpp	1780;"	d	file:
csta	libs/map/fftlib.cpp	/^    char *csta;$/;"	m	struct:__anon54	file:
csym_errlist	libs/cmtz/library_err.c	/^static const char *const csym_errlist[] =$/;"	v	file:
ctof	libs/map/CMapHeaderBase.h	/^    float ctof[3][3]; \/* cartesian to fractional *\/$/;"	m	class:CMapHeaderBase
cubeOrigin	libs/math/Grid.h	/^            int cubeOrigin[3];$/;"	m	class:mi::math::Grid
cunit	libs/map/fftlib.cpp	/^    ftnint cunit;$/;"	m	struct:__anon54	file:
current	apps/MIFit/ui/Displaylist.h	/^    Molecule *current;$/;"	m	class:Displaylist
currentAtom	apps/MIFit/ui/ModelsView.cpp	/^    MIAtom *currentAtom;$/;"	m	class:AtomsTree	file:
currentAtomColors	apps/MIFit/ui/AtomColors.h	/^    std::vector<std::string> currentAtomColors;$/;"	m	class:AtomColors
currentAtomNames	apps/MIFit/ui/AtomColors.h	/^    std::vector<std::string> currentAtomNames;$/;"	m	class:AtomColors
currentAxes	libs/opengl/interact/MouseTranslator.h	/^                Axis *currentAxes;$/;"	m	class:mi::opengl::interact::MouseTranslator
currentChain	apps/MIFit/ui/ModelsView.cpp	/^    Residue *currentChain;$/;"	m	class:ModelsTree	file:
currentFormat	apps/MIFit/ui/GLFormatDialog.h	/^    QGLFormat currentFormat;$/;"	m	class:GLFormatDialog
currentIndex0	libs/math/Grid.h	/^            int currentIndex0;$/;"	m	class:mi::math::Grid
currentIndex1	libs/math/Grid.h	/^            int currentIndex1;$/;"	m	class:mi::math::Grid
currentIndex2	libs/math/Grid.h	/^            int currentIndex2;$/;"	m	class:mi::math::Grid
currentMIGLWidget	apps/MIFit/ui/MIMainWindow.cpp	/^MIGLWidget*MIMainWindow::currentMIGLWidget()$/;"	f	class:MIMainWindow
currentMapChanged	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::currentMapChanged(EMap *oldMap, EMap *newMap)$/;"	f	class:ModelsTree
currentMapChanged	apps/MIFit/ui/moc/moc_Displaylist.cpp	/^void Displaylist::currentMapChanged(EMap * _t1, EMap * _t2)$/;"	f	class:Displaylist
currentModel	apps/MIFit/ui/GLRenderer.h	/^    bool currentModel;$/;"	m	class:GLRenderer
currentModel	apps/MIFit/ui/ModelsView.cpp	/^    Molecule *currentModel;$/;"	m	class:ModelsTree	file:
currentModelChanged	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::currentModelChanged(Molecule *oldModel, Molecule *newModel)$/;"	f	class:DisplayTree
currentModelChanged	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::currentModelChanged(Molecule*, Molecule *newModel)$/;"	f	class:MIGLWidget
currentModelChanged	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::currentModelChanged(Molecule *oldModel, Molecule *newModel)$/;"	f	class:ModelsTree
currentModelRadioButton	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QRadioButton *currentModelRadioButton;$/;"	m	class:Ui_CustomJobDialog
currentMoleculeChanged	apps/MIFit/ui/moc/moc_Displaylist.cpp	/^void Displaylist::currentMoleculeChanged(Molecule * _t1, Molecule * _t2)$/;"	f	class:Displaylist
currentPosition	libs/opengl/interact/MouseTranslator.h	/^                mi::math::Vector3<float> *currentPosition;$/;"	m	class:mi::opengl::interact::MouseTranslator
currentPrompt	apps/MIFit/python/PythonEngine.h	/^    QString currentPrompt;$/;"	m	class:PythonEngine
currentQuat	libs/opengl/interact/MouseArcBall.h	/^                mi::math::Quaternion<float> currentQuat;$/;"	m	class:mi::opengl::interact::MouseArcBall
currentResidue	apps/MIFit/ui/ModelsView.cpp	/^    Residue *currentResidue;$/;"	m	class:ResiduesTree	file:
currentValue	libs/opengl/interact/MouseZoomer.h	/^                float currentValue;$/;"	m	class:mi::opengl::interact::MouseZoomer
currentVector	libs/opengl/interact/MouseArcBall.h	/^                mi::math::Vector3<float> currentVector;$/;"	m	class:mi::opengl::interact::MouseArcBall
cursor	apps/MIFit/ui/CursorArea.cpp	/^QString CursorArea::cursor() const$/;"	f	class:CursorArea
cursorShapeMap	apps/MIFit/ui/CursorArea.cpp	/^    QMap<QString, Qt::CursorShape> cursorShapeMap;$/;"	m	namespace:__anon6	file:
cursorShapeStrings	apps/MIFit/ui/CursorArea.cpp	/^    QMap<Qt::CursorShape, QString> cursorShapeStrings;$/;"	m	namespace:__anon6	file:
cursors	apps/MIFit/ui/MIMainWindow.h	/^    QCursor *cursors[imhCount];$/;"	m	class:MIMainWindow
curvelabel	apps/MIFit/ui/graphlib.h	/^    std::vector<CURVELABEL> curvelabel;$/;"	m	class:GraphWindow
customDictionaryButton	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QPushButton *customDictionaryButton;$/;"	m	class:Ui_EnvironmentPreferences
customDictionaryLineEdit	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QLineEdit *customDictionaryLineEdit;$/;"	m	class:Ui_EnvironmentPreferences
customJobAction	apps/MIFit/jobs/BatchJobManager.cpp	/^QAction *BatchJobManager::customJobAction(const QString &menuName, const QString &jobName,$/;"	f	class:BatchJobManager
customJobPrefs	apps/MIFit/ui/PreferencesDialog.h	/^    CustomJobPreferences *customJobPrefs;$/;"	m	class:PreferencesDialog
customLabel	apps/MIFit/core/ATOMLABEL.h	/^    bool customLabel;$/;"	m	class:ATOMLABEL
cx	libs/map/MINATOM.h	/^    float cx, cy, cz;$/;"	m	struct:minatom
cy	libs/map/MINATOM.h	/^    float cx, cy, cz;$/;"	m	struct:minatom
cycle	libs/map/fftsub.cpp	/^void cycle(int *x, int *y, int *z)$/;"	f
cyclic	libs/chemlib/TORSION.h	/^        int cyclic;$/;"	m	class:chemlib::TORSION
cylindersize	apps/MIFit/ui/ViewPointSettings.h	/^    int cylindersize;$/;"	m	class:ViewPointSettings
cz	libs/map/MINATOM.h	/^    float cx, cy, cz;$/;"	m	struct:minatom
d	apps/MIFit/core/CONTACT.h	/^    float d;$/;"	m	class:CONTACT
d	libs/chemlib/PLANE.h	/^        float d;$/;"	m	class:chemlib::PLANE
d	libs/map/fftlib.cpp	/^    doublereal d;$/;"	m	union:Multitype	file:
d	libs/opengl/Frustum.cpp	/^    float d;$/;"	m	class:mi::opengl::Plane	file:
d	libs/opengl/Text.h	/^    TextPrivate *const d;$/;"	m	class:mi::opengl::Text
dTorsion	libs/chemlib/transform_util.cpp	/^int dTorsion(MIAtom *a1,$/;"	f	namespace:chemlib
da1	libs/map/sfcalc_data.h	/^double da1[] = {0.493002, 2.310, 12.2126, 3.0485, 6.9053, 11.7695, 27.0059, 16.8819,$/;"	v
da2	libs/map/sfcalc_data.h	/^double da2[] = {0.322912, 1.020, 3.1322, 2.2868, 5.2034, 7.3573, 17.7639, 18.5913,$/;"	v
da3	libs/map/sfcalc_data.h	/^double da3[] = {0.140191, 1.5886, 2.0125, 1.5463, 1.4379, 3.5222, 15.7131, 25.5582,$/;"	v
da4	libs/map/sfcalc_data.h	/^double da4[] = {0.040810, 0.8650, 1.1663, 0.8670, 1.5863, 2.3045, 5.7837, 5.8600,$/;"	v
dabs	libs/map/fftlib.cpp	160;"	d	file:
data	apps/MIFit/core/Stack.h	/^    DataContainer data;$/;"	m	class:Stack
data	apps/MIFit/ui/MoleculeXmlHandler.h	/^    std::string data;$/;"	m	class:MoleculeXmlHandler
data	apps/MIFit/ui/graphlib.h	/^    std::vector<GR_POINT> data;$/;"	m	class:GraphWindow
data	apps/MIFit/ui/graphlib.h	/^    void *data;$/;"	m	class:GR_POINT
data	libs/jacgrid/grid.h	/^    float *data;          \/* the grid data values *\/$/;"	m	class:gridT
data	libs/jacgrid/plane.h	/^    float *data;       \/* of course, the data *\/$/;"	m	class:JACPlane
data	libs/jacgrid/surface.cpp	/^    float *data;$/;"	m	struct:__anon29	file:
data	libs/math/Grid.h	/^            float *data;$/;"	m	class:mi::math::Grid
data	libs/umtz/umtzlib.h	/^    char data[MTZRECLEN];$/;"	m	struct:umtz_hdr_
data	libs/umtz/umtzlib.h	/^    void *data;$/;"	m	struct:umtz_list_
dataFile	apps/MIFit/ui/CustomJobDialog.cpp	/^QString CustomJobDialog::dataFile() const$/;"	f	class:CustomJobDialog
dataLineEdit	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QLineEdit *dataLineEdit;$/;"	m	class:Ui_CustomJobDialog
dataPop	apps/MIFit/core/Stack.cpp	/^void Stack::dataPop()$/;"	f	class:Stack
dataPushButton	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QPushButton *dataPushButton;$/;"	m	class:Ui_CustomJobDialog
data_	libs/util/StringIo.h	/^        std::string data_;$/;"	m	struct:StringIo::StringIoData
data_	libs/util/StringIo.h	/^    StringIoData *data_;$/;"	m	class:StringIo
data_type	libs/opengl/zlib/zlib.h	/^    int data_type;      \/* best guess about the data type: ascii or binary *\/$/;"	m	struct:z_stream_s
databaseLineEdit	apps/MIFit/ui/ui_SmilesDialog.h	/^    QLineEdit *databaseLineEdit;$/;"	m	class:Ui_SmilesDialog
databaseRadioButton	apps/MIFit/ui/ui_SmilesDialog.h	/^    QRadioButton *databaseRadioButton;$/;"	m	class:Ui_SmilesDialog
datum	libs/cmtz/mtzdata.h	/^		 float datum[3];       \/**< datum values of goniostat axes *\/$/;"	m	struct:bathead
datypelen	libs/map/sfcalc_data.h	/^int datypelen[] = {  1,  1,  1,  1,  1, 2,   2,  2,   3,$/;"	v
datypes	libs/map/sfcalc_data.h	/^char datypes[][4] = {"H", "C", "N", "O", "S", "FE", "PT", "AU", "HG+",$/;"	v
db1	libs/map/sfcalc_data.h	/^double db1[] = {10.5109, 20.8439, 0.0057, 13.2771, 1.467, 4.7611, 1.51293, 0.4611,$/;"	v
db2	libs/map/sfcalc_data.h	/^double db2[] = {26.1257, 10.2075, 9.8933, 5.7011, 22.2151, 0.3072, 8.81174, 8.6216,$/;"	v
db3	libs/map/sfcalc_data.h	/^double db3[] = {3.14236, 0.5687, 28.9975, 0.3239, 0.2536, 15.3535, 0.42459, 1.4826,$/;"	v
db4	libs/map/sfcalc_data.h	/^double db4[] = {57.7997, 51.6512, 0.5826, 32.9089, 56.17, 76.8805, 38.6103, 36.3956,$/;"	v
dbits	libs/opengl/zlib/infcodes.cpp	/^    Byte dbits;         \/* dtree bits decoder per branch *\/$/;"	m	struct:inflate_codes_state	file:
dbquery	apps/MIFit/ui/SmilesDialog.h	/^        std::string dbquery;$/;"	m	struct:SmilesDialog::Data
dco	libs/map/sfcalc_data.h	/^double dco[] = {0.003038, 0.2156, -11.529, 0.2509, 0.8669, 1.0369, 11.6883, 12.0658,$/;"	v
dcompare	libs/map/EMapBase.cpp	/^static int dcompare(const void *ii, const void *jj)$/;"	f	file:
debug	apps/MIFit/ui/Logger.cpp	/^void Logger::debug(const char *format, ...)$/;"	f	class:Logger
debug	apps/MIFit/ui/Logger.h	/^    static void debug(const std::string &str)$/;"	f	class:Logger
decode	libs/opengl/zlib/infutil.h	/^        } decode;       \/* if CODES, current state *\/$/;"	m	union:inflate_blocks_state::__anon35	typeref:struct:inflate_blocks_state::__anon35::__anon37
defaultBall	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle *RenderStyle::defaultBall = NULL;$/;"	m	class:RenderStyle	file:
defaultBall	apps/MIFit/core/RenderStyle.h	/^    static const RenderStyle *defaultBall;$/;"	m	class:RenderStyle
defaultBallAndLine	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle *RenderStyle::defaultBallAndLine = NULL;$/;"	m	class:RenderStyle	file:
defaultBallAndLine	apps/MIFit/core/RenderStyle.h	/^    static const RenderStyle *defaultBallAndLine;$/;"	m	class:RenderStyle
defaultBallAndStick	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle *RenderStyle::defaultBallAndStick = NULL;$/;"	m	class:RenderStyle	file:
defaultBallAndStick	apps/MIFit/core/RenderStyle.h	/^    static const RenderStyle *defaultBallAndStick;$/;"	m	class:RenderStyle
defaultBlue	apps/MIFit/core/ATOMLABEL.cpp	/^unsigned char ATOMLABEL::defaultBlue()$/;"	f	class:ATOMLABEL
defaultBlue_	apps/MIFit/core/ATOMLABEL.cpp	/^unsigned char ATOMLABEL::defaultBlue_ = 255;$/;"	m	class:ATOMLABEL	file:
defaultBlue_	apps/MIFit/core/ATOMLABEL.h	/^    static unsigned char defaultBlue_;$/;"	m	class:ATOMLABEL
defaultColor	apps/MIFit/core/ATOMLABEL.cpp	/^void ATOMLABEL::defaultColor(unsigned char red, unsigned char green, unsigned char blue)$/;"	f	class:ATOMLABEL
defaultGreen	apps/MIFit/core/ATOMLABEL.cpp	/^unsigned char ATOMLABEL::defaultGreen()$/;"	f	class:ATOMLABEL
defaultGreen_	apps/MIFit/core/ATOMLABEL.cpp	/^unsigned char ATOMLABEL::defaultGreen_ = 255;$/;"	m	class:ATOMLABEL	file:
defaultGreen_	apps/MIFit/core/ATOMLABEL.h	/^    static unsigned char defaultGreen_;$/;"	m	class:ATOMLABEL
defaultIo	libs/util/io.cpp	/^io*io::defaultIo()$/;"	f	class:io
defaultIo_	libs/util/io.cpp	/^io*io::defaultIo_ = NULL;$/;"	m	class:io	file:
defaultIo_	libs/util/io.h	/^    static io *defaultIo_;$/;"	m	class:io
defaultLine	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle *RenderStyle::defaultLine = NULL;$/;"	m	class:RenderStyle	file:
defaultLine	apps/MIFit/core/RenderStyle.h	/^    static const RenderStyle *defaultLine;$/;"	m	class:RenderStyle
defaultRed	apps/MIFit/core/ATOMLABEL.cpp	/^unsigned char ATOMLABEL::defaultRed()$/;"	f	class:ATOMLABEL
defaultRed_	apps/MIFit/core/ATOMLABEL.cpp	/^unsigned char ATOMLABEL::defaultRed_ = 255;$/;"	m	class:ATOMLABEL	file:
defaultRed_	apps/MIFit/core/ATOMLABEL.h	/^    static unsigned char defaultRed_;$/;"	m	class:ATOMLABEL
defaultSize	apps/MIFit/core/ATOMLABEL.cpp	/^int ATOMLABEL::defaultSize()$/;"	f	class:ATOMLABEL
defaultSize	apps/MIFit/core/ATOMLABEL.cpp	/^void ATOMLABEL::defaultSize(int value)$/;"	f	class:ATOMLABEL
defaultSize_	apps/MIFit/core/ATOMLABEL.cpp	/^int ATOMLABEL::defaultSize_ = 12;$/;"	m	class:ATOMLABEL	file:
defaultSize_	apps/MIFit/core/ATOMLABEL.h	/^    static int defaultSize_;$/;"	m	class:ATOMLABEL
defaultStick	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle *RenderStyle::defaultStick = NULL;$/;"	m	class:RenderStyle	file:
defaultStick	apps/MIFit/core/RenderStyle.h	/^    static const RenderStyle *defaultStick;$/;"	m	class:RenderStyle
defaultStyle	apps/MIFit/core/ATOMLABEL.cpp	/^int ATOMLABEL::defaultStyle()$/;"	f	class:ATOMLABEL
defaultStyle	apps/MIFit/core/ATOMLABEL.cpp	/^void ATOMLABEL::defaultStyle(int value)$/;"	f	class:ATOMLABEL
defaultStyle_	apps/MIFit/core/ATOMLABEL.cpp	/^int ATOMLABEL::defaultStyle_ = 0;$/;"	m	class:ATOMLABEL	file:
defaultStyle_	apps/MIFit/core/ATOMLABEL.h	/^    static int defaultStyle_;$/;"	m	class:ATOMLABEL
default_atom_type	libs/map/sfcalc_data.h	/^int default_atom_type = 0;$/;"	v
default_scattering_factors	libs/map/sfcalc.cpp	/^int default_scattering_factors(char ***name, int **lname, char ***rname, double **a1, double **a2, double **a3, double **a4,$/;"	f
deflate	libs/opengl/zlib/zconf.h	17;"	d
deflateCopy	libs/opengl/zlib/zconf.h	24;"	d
deflateEnd	libs/opengl/zlib/zconf.h	18;"	d
deflateInit2_	libs/opengl/zlib/zconf.h	22;"	d
deflateInit_	libs/opengl/zlib/zconf.h	16;"	d
deflateParams	libs/opengl/zlib/zconf.h	26;"	d
deflateReset	libs/opengl/zlib/zconf.h	25;"	d
deflateSetDictionary	libs/opengl/zlib/zconf.h	23;"	d
delamb	libs/cmtz/mtzdata.h	/^		 float delamb;         \/**< dispersion (deltalambda \/ lambda) *\/$/;"	m	struct:bathead
delcor	libs/cmtz/mtzdata.h	/^		 float delcor;         \/**< correlated component *\/$/;"	m	struct:bathead
deleteAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *deleteAction_;$/;"	m	class:ModelsTree	file:
deleteAnisotropicity	libs/chemlib/MIAtom.cpp	/^void MIAtom::deleteAnisotropicity()$/;"	f	class:chemlib::MIAtom
deleteAnnotation	apps/MIFit/core/Molecule.cpp	/^void Molecule::deleteAnnotation(Annotation *annotation)$/;"	f	class:Molecule
deleteAtom	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::deleteAtom()$/;"	f	class:MIGLWidget
deleteAtomAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *deleteAtomAction;$/;"	m	class:MIGLWidget
deleteAtomLabel	apps/MIFit/core/Molecule.cpp	/^void Molecule::deleteAtomLabel(ATOMLABEL *label)$/;"	f	class:Molecule
deleteCrystal	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::deleteCrystal(std::string &crystal)$/;"	f	class:ManageCrystals
deleteCrystalButton	apps/MIFit/ui/ui_ManageCrystals.h	/^    QPushButton *deleteCrystalButton;$/;"	m	class:Ui_ManageCrystals
deleteResidueAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *deleteResidueAction;$/;"	m	class:MIGLWidget
deleteResidueOnTopOfStack	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::deleteResidueOnTopOfStack()$/;"	f	class:MIGLWidget
deleteTypePushButton	apps/MIFit/ui/ui_AtomColors.h	/^    QPushButton *deleteTypePushButton;$/;"	m	class:Ui_AtomColors
delete_level	apps/MIFit/ui/Displaylist.h	/^    unsigned int delete_level;$/;"	m	class:Displaylist
delim	libs/cmtz/ccp4_parser.h	/^  char   *delim;          \/* List of delimiter characters *\/$/;"	m	struct:CCP4::__anon27
delta	libs/jacgrid/surface.cpp	/^    int delta[3];$/;"	m	struct:__anon29	file:
densityForCurrentAtoms	apps/MIFit/ui/MIGLWidget.cpp	/^float MIGLWidget::densityForCurrentAtoms()$/;"	f	class:MIGLWidget
depth	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QCheckBox *depth;$/;"	m	class:Ui_GLFormatEdit
depthSize	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QSpinBox *depthSize;$/;"	m	class:Ui_GLFormatEdit
depthcue_color	apps/MIFit/ui/ViewPointSettings.h	/^    bool depthcue_color;$/;"	m	class:ViewPointSettings
depthcue_width	apps/MIFit/ui/ViewPointSettings.h	/^    bool depthcue_width;$/;"	m	class:ViewPointSettings
description	apps/MIFit/ui/SaveModel.h	/^    std::string description;$/;"	m	class:SaveModel
destroy	libs/chemlib/Matrix.h	/^        void destroy()$/;"	f	class:TNT::Matrix
destroyContentsForView	apps/MIFit/ui/DisplayView.cpp	/^void DisplayView::destroyContentsForView(MIGLWidget*, QWidget*)$/;"	f	class:DisplayView
destroyContentsForView	apps/MIFit/ui/ModelsView.cpp	/^void ModelsView::destroyContentsForView(MIGLWidget*, QWidget *panel)$/;"	f	class:ModelsView
detail	libs/math/IndexOutOfBoundsException.h	/^            char *detail;$/;"	m	class:mi::math::IndexOutOfBoundsException
detail	libs/opengl/Circle.h	/^            int detail;$/;"	m	class:mi::opengl::Circle
determinant	libs/math/Matrix3.h	/^        Type Matrix3<Type>::determinant() const$/;"	f	class:mi::math::Matrix3
determinant	libs/math/Matrix4.h	/^        Type Matrix4<Type>::determinant() const$/;"	f	class:mi::math::Matrix4
detlm	libs/cmtz/mtzdata.h	/^		 float detlm[2][2][2]; \/**< min & max values of detector coords$/;"	m	struct:bathead
dfiano	libs/map/sfcalc_data.h	/^double dfiano[] = {0.001, .009, .018, .032, 0.557,  3.204, 6.295, 7.297, 7.686, 1.283, 4.653, 11.276, 6.835, 3.934, 6.221, 12.320, 13.409, 6.566, 11.946, 1.139, 8.505, 3.937, 0.0, 0.0};$/;"	v
dfrano	libs/map/sfcalc_data.h	/^double dfrano[] = {0.001, .017, .029, .047, 0.319, -1.179, -5.233, -5.096, -4.990, -0.767, -0.079, -7.718, -0.579, -0.059, -5.581, -5.696, -5.359, -5.391, -9.242, -.879, -4.818, -9.733, 0.0, 0.0};$/;"	v
dialog_finished	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::dialog_finished(int)$/;"	f	class:ManageCrystals
dict	libs/molopt/MIMolOpt.h	/^    chemlib::MIMolDictionary dict;$/;"	m	class:MIMolOpt
dict_include	libs/chemlib/Bond.h	/^        int dict_include;$/;"	m	class:chemlib::Bond
dict_include	libs/chemlib/Constraint.h	/^        int dict_include;$/;"	m	class:chemlib::BondLength
dict_map	libs/chemlib/MIMolDictionary.h	/^    typedef std::multimap<std::string, DictResidue> dict_map;$/;"	t	namespace:chemlib
dictionaryResidueList	apps/MIFit/script/MIFitScriptObject.cpp	/^QStringList MIFitScriptObject::dictionaryResidueList()$/;"	f	class:MIFitScriptObject
dictionaryResidueList	mifit.py	/^def dictionaryResidueList():$/;"	f
diff_angle	libs/molopt/MIMolOpt.cpp	/^static inline float diff_angle(float angle1, float angle2)$/;"	f	file:
diffuseColor	libs/opengl/Light.h	/^            float *diffuseColor;$/;"	m	class:mi::opengl::Light
dim	libs/chemlib/Matrix.h	/^        Subscript dim(Subscript d) const$/;"	f	class:TNT::Matrix
dimNonactiveModels	apps/MIFit/ui/Application.h	/^    bool dimNonactiveModels;$/;"	m	class:Application
dimNonactiveModels	apps/MIFit/ui/GLRenderer.h	/^    bool dimNonactiveModels;$/;"	m	class:GLRenderer
dimNonactiveModels	apps/MIFit/ui/ViewPointSettings.h	/^    bool dimNonactiveModels;$/;"	m	class:ViewPointSettings
dims	libs/map/fftlib.cpp	/^    ftnlen *dims;$/;"	m	struct:Vardesc	file:
diprp_	libs/map/fftlib.cpp	/^int diprp_(integer *pts, integer *sym, integer *psym, integer *unsym, integer *dim, real *x, real *y)$/;"	f
direct	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QCheckBox *direct;$/;"	m	class:Ui_GLFormatEdit
direct	libs/cmtz/library_file.h	/^  unsigned int direct : 1, : 7;$/;"	m	struct:CCP4::_CFileStruct
directory	apps/MIFit/script/MIFitScriptObject.cpp	/^QString MIFitScriptObject::directory()$/;"	f	class:MIFitScriptObject
directory	mifit.py	/^def directory():$/;"	f
displayDock	apps/MIFit/ui/MIMainWindow.h	/^    QDockWidget *displayDock;$/;"	m	class:MIMainWindow
displayToolBar	apps/MIFit/ui/MIMainWindow.h	/^    QToolBar *displayToolBar;$/;"	m	class:MIMainWindow
displaylist	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.h	/^    Displaylist *displaylist;$/;"	m	class:CMolwViewAnnotationRenderable
displaylist	apps/MIFit/ui/CMolwViewAtomPickingRenderable.h	/^    Displaylist *displaylist;$/;"	m	class:CMolwViewAtomRenderable
displaylist	apps/MIFit/ui/DictEditAnnotationPickingRenderable.h	/^    Displaylist *displaylist;$/;"	m	class:DictEditAnnotationRenderable
displaylist	apps/MIFit/ui/DictEditAtomPickingRenderable.h	/^    Displaylist *displaylist;$/;"	m	class:DictEditAtomRenderable
displaylist	apps/MIFit/ui/DisplayView.cpp	/^Displaylist*DisplayTree::displaylist()$/;"	f	class:DisplayTree
displaylist	apps/MIFit/ui/LSQFitDialog.h	/^    Displaylist *displaylist;$/;"	m	class:LSQFitDialog
displaylist	apps/MIFit/ui/ModelsView.cpp	/^Displaylist*ModelsTree::displaylist()$/;"	f	class:ModelsTree
dist	libs/jacgrid/linalg.h	/^inline float dist(const float *a, const float *b)$/;"	f
dist	libs/opengl/zlib/infcodes.cpp	/^            uInt dist;          \/* distance back to copy from *\/$/;"	m	struct:inflate_codes_state::__anon39::__anon41	file:
distance	libs/chemlib/MIAtom.h	/^        double distance(MIAtom *b) const$/;"	f	class:chemlib::MIAtom
distance	libs/math/Point3.h	/^        Type Point3<Type>::distance(const Point3<Type> &p1) const$/;"	f	class:mi::math::Point3
distance	libs/math/Point4.h	/^        Type Point4<Type>::distance(const Point4<Type> &p1) const$/;"	f	class:mi::math::Point4
distance	libs/opengl/Frustum.cpp	/^float Plane::distance(Vector3<float> &p)$/;"	f	class:mi::opengl::Plane
distanceSquared	libs/math/Point3.h	/^        Type Point3<Type>::distanceSquared(const Point3<Type> &p1) const$/;"	f	class:mi::math::Point3
distanceSquared	libs/math/Point4.h	/^        Type Point4<Type>::distanceSquared(const Point4<Type> &p1) const$/;"	f	class:mi::math::Point4
distanceToTarget	libs/opengl/interact/MouseArcBallOrbitor.h	/^                float distanceToTarget;$/;"	m	class:mi::opengl::interact::MouseArcBallOrbitor
distsq	apps/MIFit/ui/surf.cpp	/^static float distsq(const float *a, const float *b)$/;"	f	file:
distsq	libs/jacgrid/linalg.h	/^inline float distsq(const float *a, const float *b)$/;"	f
divhd	libs/cmtz/mtzdata.h	/^		 float divhd;          \/**< horizontal beam divergence *\/$/;"	m	struct:bathead
divisions	libs/opengl/Arc.h	/^            int divisions;$/;"	m	class:mi::opengl::Arc
divvd	libs/cmtz/mtzdata.h	/^		 float divvd;          \/**< vertical beam divergence *\/$/;"	m	struct:bathead
dl	libs/map/fftlib.cpp	1450;"	d	file:
dl	libs/map/fftlib.cpp	1784;"	d	file:
dmax	apps/MIFit/core/clusterList.h	/^    float dmax;$/;"	m	class:ClusterList
dname	libs/cmtz/mtzdata.h	/^		 char dname[65];       \/**< Dataset name *\/$/;"	m	struct:__anon21
dname	libs/umtz/mmtzlib.h	/^    char dname[65];$/;"	m	struct:mmtz_dataset_
doAnnotationDelete	apps/MIFit/core/Molecule.cpp	/^void Molecule::doAnnotationDelete(Annotation *annotation)$/;"	f	class:Molecule
doAtomBValueAndOccupancy	apps/MIFit/core/Molecule.cpp	/^void Molecule::doAtomBValueAndOccupancy(MIAtom *atom, float bvalue, float occ)$/;"	f	class:Molecule
doAtomColor	apps/MIFit/core/Molecule.cpp	/^void Molecule::doAtomColor(MIAtom *atom, int color)$/;"	f	class:Molecule
doAtomLabelDelete	apps/MIFit/core/Molecule.cpp	/^void Molecule::doAtomLabelDelete(ATOMLABEL *label)$/;"	f	class:Molecule
doDeleteAtom	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::doDeleteAtom(MIAtom *a)$/;"	f	class:chemlib::MIMoleculeBase
doDeleteRes	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::doDeleteRes(Residue *oldres)$/;"	f	class:chemlib::MIMoleculeBase
doInsertRes	libs/chemlib/MIMoleculeBase.cpp	/^Residue*MIMoleculeBase::doInsertRes(Residue *atres, const Residue *dictres, int where, unsigned short chain_id)$/;"	f	class:chemlib::MIMoleculeBase
doJobFinished	apps/MIFit/jobs/BatchJob.cpp	/^void BatchJob::doJobFinished()$/;"	f	class:BatchJob
doMapContour	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::doMapContour(EMapBase *emap)$/;"	f	class:MIGLWidget
doRefresh	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::doRefresh()$/;"	f	class:MIGLWidget
doSelectCrystal	apps/MIFit/ui/SelectCrystal.cpp	/^bool SelectCrystal::doSelectCrystal(std::string& data) {$/;"	f	class:SelectCrystal
doSetFocusResidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::doSetFocusResidue(Residue *res)$/;"	f	class:MIGLWidget
doSlabDrag	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::doSlabDrag(int x, int y, int \/* dx *\/, int dy)$/;"	f	class:MIGLWidget
do_edge	libs/map/wxWweave.cpp	284;"	d	file:
do_smooth	libs/jacgrid/isosurface.cpp	/^static inline void do_smooth(float rad, const float *center, float *vertex)$/;"	f	file:
dot	apps/MIFit/ui/MoleculeXmlHandler.h	/^    SURFDOT dot;$/;"	m	class:MoleculeXmlHandler
dot	libs/jacgrid/linalg.h	/^inline float dot(const float *x, const float *y)$/;"	f
dot	libs/math/Vector3.h	/^        Type Vector3<Type>::dot(const Vector3<Type> &v1) const$/;"	f	class:mi::math::Vector3
dot	libs/math/Vector4.h	/^        Type Vector4<Type>::dot(const Vector4<Type> &v1) const$/;"	f	class:mi::math::Vector4
dotSurfAtomAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *dotSurfAtomAction;$/;"	m	class:MIGLWidget
dotSurfAtomSphereAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *dotSurfAtomSphereAction;$/;"	m	class:MIGLWidget
dotSurfAtomsAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *dotSurfAtomsAction;$/;"	m	class:MIGLWidget
dotSurfClearAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *dotSurfClearAction;$/;"	m	class:MIGLWidget
dotSurfResidueAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *dotSurfResidueAction;$/;"	m	class:MIGLWidget
dotSurfResiduesAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *dotSurfResiduesAction;$/;"	m	class:MIGLWidget
dotSurfSolventExposedAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *dotSurfSolventExposedAction;$/;"	m	class:MIGLWidget
dotSurfVdwAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *dotSurfVdwAction;$/;"	m	class:MIGLWidget
dots	apps/MIFit/core/Molecule.h	/^    SurfaceDots dots;$/;"	m	class:Molecule
dots_visible	apps/MIFit/core/Molecule.h	/^    int dots_visible;$/;"	m	class:Molecule
dotvect	libs/math/Matrices.cpp	/^double dotvect(double in1[3], double in2[3])$/;"	f
dotvect	libs/math/Matrices.cpp	/^float dotvect(float in1[3], float in2[3])$/;"	f
doubleBuffer	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QCheckBox *doubleBuffer;$/;"	m	class:Ui_GLFormatEdit
doubleclicked	apps/MIFit/ui/MIGLWidget.h	/^    bool doubleclicked;$/;"	m	class:MIGLWidget
doublecomplex	libs/map/fftlib.cpp	/^} doublecomplex;$/;"	t	typeref:struct:__anon50	file:
doublefromstr	libs/cmtz/ccp4_parser.c	/^int doublefromstr(const char *str, const double max_exp, const double min_exp,$/;"	f
doublereal	libs/map/fftlib.cpp	/^typedef double doublereal;$/;"	t	file:
drand48	libs/map/EMapBase.cpp	/^static double drand48(void)$/;"	f	file:
draw	apps/MIFit/ui/BondRenderer.cpp	/^void BondRenderer::draw() const$/;"	f	class:BondRenderer
draw	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::draw(QPainter *painter)$/;"	f	class:DictEditCanvas
draw	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::draw(QPainter *painter)$/;"	f	class:MIGLWidget
drawAngles	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::drawAngles(std::vector<ANGLE> &angles)$/;"	f	class:GLRenderer
drawAnnotations	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::drawAnnotations(Molecule::AnnotationList &Annotations, bool drawBox)$/;"	f	class:GLRenderer
drawBondCylinder	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::drawBondCylinder(const Vector3<float> &pos1, int color1, const Vector3<float> &pos2, int color2, float radius, bool capped)$/;"	f	class:GLRenderer
drawBondLine	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::drawBondLine(const Vector3<float> &pos1, int color1, const Vector3<float> &pos2, int color2, float lineWidth)$/;"	f	class:GLRenderer
drawBonds	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::drawBonds(std::vector<Bond> &bonds, int *color)$/;"	f	class:GLRenderer
drawBox	apps/MIFit/core/Molecule.h	/^    bool drawBox;$/;"	m	class:Molecule
drawCircle	apps/MIFit/ui/graphlib.cpp	/^void drawCircle (int x, int y, int r)$/;"	f
drawLabels	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::drawLabels(Molecule::AtomLabelList &labels)$/;"	f	class:GLRenderer
drawLines	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::drawLines(std::vector<PLINE> &Vus, int w, bool withDepthTest)$/;"	f	class:GLRenderer
drawMolecule	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::drawMolecule(Molecule *molecule)$/;"	f	class:GLRenderer
drawResidueAtoms	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::drawResidueAtoms(ResidueListIterator res, ResidueListIterator resEnd)$/;"	f	class:GLRenderer
drawSelectedResidueMarker	apps/MIFit/ui/GLOverviewCanvas.cpp	/^void GLOverviewCanvas::drawSelectedResidueMarker(float x, float y, float z)$/;"	f	class:GLOverviewCanvas
drawSurface	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::drawSurface(std::vector<SURFDOT> &dots)$/;"	f	class:GLRenderer
drawSymmetryMolecule	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::drawSymmetryMolecule(Molecule *molecule, bool showSymmetryAsBackbone)$/;"	f	class:GLRenderer
drawText	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::drawText(const char *text, float x, float y, float z)$/;"	f	class:GLRenderer
drawText	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::drawText(const char *text, float x, float y, float z, float offset, float scale, float inverseRotation[16], bool displayNumber, int number, float foreground[4])$/;"	f	class:GLRenderer
drawText	libs/opengl/Axes.cpp	/^void Axes::drawText(const char *text, float x, float y, float z, float offset, float scale, float inverseRotation[16])$/;"	f	class:mi::opengl::Axes
ds	libs/map/fftlib.cpp	1457;"	d	file:
ds	libs/map/fftlib.cpp	1779;"	d	file:
dsqmax	libs/map/fftsub.cpp	/^static float g11, g12, g13, g22, g23, g33, dsqmin, dsqmax;$/;"	v	file:
dsqmin	libs/map/fftsub.cpp	/^static float g11, g12, g13, g22, g23, g33, dsqmin, dsqmax;$/;"	v	file:
dtor	libs/math/crystmat.cpp	207;"	d	file:
dtree	libs/opengl/zlib/infcodes.cpp	/^    inflate_huft *dtree;        \/* distance tree *\/$/;"	m	struct:inflate_codes_state	file:
dummy	libs/opengl/zlib/infblock.cpp	/^struct inflate_codes_state {int dummy;$/;"	m	struct:inflate_codes_state	file:
dummy	libs/opengl/zlib/inffast.cpp	/^struct inflate_codes_state {int dummy;$/;"	m	struct:inflate_codes_state	file:
dummy	libs/opengl/zlib/inflate.cpp	/^struct inflate_blocks_state {int dummy;$/;"	m	struct:inflate_blocks_state	file:
dummy	libs/opengl/zlib/inftrees.cpp	/^struct internal_state {int dummy;$/;"	m	struct:internal_state	file:
dummy	libs/opengl/zlib/infutil.cpp	/^struct inflate_codes_state {int dummy;$/;"	m	struct:inflate_codes_state	file:
dummy	libs/opengl/zlib/infutil.h	/^struct internal_state {int dummy;$/;"	m	struct:internal_state
dummy	libs/opengl/zlib/zlib.h	/^struct internal_state {int dummy;$/;"	m	struct:internal_state
dummy	libs/opengl/zlib/zutil.cpp	/^struct internal_state {int dummy;$/;"	m	struct:internal_state	file:
duration	apps/MIFit/ui/MIGLWidget.cpp	/^    int ViewPointAnimation::duration() const$/;"	f	class:__anon10::ViewPointAnimation
dx	libs/chemlib/MIAtom.h	/^        float dx() const$/;"	f	class:chemlib::MIAtom
dx	libs/cmtz/mtzdata.h	/^		 float dx[2];          \/**< xtal to detector distance *\/$/;"	m	struct:bathead
dx1	libs/map/EMapBase.cpp	/^float m000, m001, m010, m011, m100, m101, m110, m111, dx1, dy1, dz1;$/;"	v
dx_	libs/chemlib/MIAtom.h	/^        float dx_;$/;"	m	class:chemlib::MIAtom
dy	libs/chemlib/MIAtom.h	/^        float dy() const$/;"	f	class:chemlib::MIAtom
dy1	libs/map/EMapBase.cpp	/^float m000, m001, m010, m011, m100, m101, m110, m111, dx1, dy1, dz1;$/;"	v
dy_	libs/chemlib/MIAtom.h	/^        float dy_;$/;"	m	class:chemlib::MIAtom
dying_widget	apps/MIFit/ui/MIMainWindow.cpp	/^static QWidget *dying_widget = 0;$/;"	v	file:
dz	libs/chemlib/MIAtom.h	/^        float dz() const$/;"	f	class:chemlib::MIAtom
dz1	libs/map/EMapBase.cpp	/^float m000, m001, m010, m011, m100, m101, m110, m111, dx1, dy1, dz1;$/;"	v
dz_	libs/chemlib/MIAtom.h	/^        float dz_;$/;"	m	class:chemlib::MIAtom
dzeff	libs/map/sfcalc_data.h	/^double dzeff[] = {1.0, 6.0, 7.0, 8.0, 16.0, 26.0, 78.0, 79.0, 80.0, 35.0, 48.0, 63.0, 53, 46.0, 76.0, 62.0, 92.0, 77.0, 64.0, 34.0, 82.0, 68.0,$/;"	v
e1	libs/cmtz/mtzdata.h	/^		 float e1[3];          \/**< vector 1 ("Cambridge" laboratory axes)$/;"	m	struct:bathead
e2	libs/cmtz/mtzdata.h	/^		 float e2[3];          \/**< vector 2 ("Cambridge" laboratory axes)$/;"	m	struct:bathead
e3	libs/cmtz/mtzdata.h	/^		 float e3[3];          \/**< vector 3 ("Cambridge" laboratory axes)$/;"	m	struct:bathead
edges	libs/jacgrid/cell_table.h	/^    unsigned int edges[12];$/;"	m	struct:__anon30
edges	libs/jacgrid/plane.cpp	/^    unsigned int edges[4];$/;"	m	struct:__anon31	file:
edges	libs/map/EMapBase.h	/^    std::vector<PLINE> edges;$/;"	m	class:EMapBase
editAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *editAction_;$/;"	m	class:ModelsTree	file:
editNamePushButton	apps/MIFit/ui/ui_AtomColors.h	/^    QPushButton *editNamePushButton;$/;"	m	class:Ui_AtomColors
eigen	apps/MIFit/core/eigen.cpp	/^eigen($/;"	f
el	libs/map/fftlib.cpp	1451;"	d	file:
el	libs/map/fftlib.cpp	1783;"	d	file:
element_type	libs/chemlib/Matrix.h	/^        typedef         T element_type;$/;"	t	class:TNT::Matrix
emap	libs/map/InterpBox.h	/^    EMapBase *emap;$/;"	m	class:InterpBox
empty	apps/MIFit/core/Stack.cpp	/^bool Stack::empty()$/;"	f	class:Stack
enabled	apps/MIFit/ui/GLRenderer.cpp	/^    bool enabled;$/;"	m	class:PushedName	file:
enabled1	apps/MIFit/ui/PhaseFileLoadDialog.h	/^        bool enabled1;$/;"	m	struct:PhaseFileLoadDialog::Data
enabled2	apps/MIFit/ui/PhaseFileLoadDialog.h	/^        bool enabled2;$/;"	m	struct:PhaseFileLoadDialog::Data
encode	apps/MIFit/core/xmlarchive.cpp	/^static std::string encode(const char *str)$/;"	f	file:
end	apps/MIFit/ui/Displaylist.h	/^inline std::list<Molecule*>::iterator Displaylist::end()$/;"	f	class:Displaylist
end	libs/opengl/zlib/infutil.h	/^    Bytef *end;         \/* one byte after sliding window *\/$/;"	m	struct:inflate_blocks_state
endDragAction	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::endDragAction()$/;"	f	class:DictEditCanvas
endElement	apps/MIFit/ui/MoleculeXmlHandler.cpp	/^bool MoleculeXmlHandler::endElement(const QString &namespaceURI, const QString &name, const QString &qName)$/;"	f	class:MoleculeXmlHandler
endOfModel	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QRadioButton *endOfModel;$/;"	m	class:Ui_AddResidueDialog
endPicking	libs/opengl/Frustum.cpp	/^void Frustum::endPicking()$/;"	f	class:mi::opengl::Frustum
endPosition	libs/opengl/interact/TranslationFeedback.h	/^                mi::math::Vector3<float> endPosition;$/;"	m	class:mi::opengl::interact::TranslationFeedback
endRotate	libs/opengl/interact/MouseArcBall.cpp	/^void MouseArcBall::endRotate()$/;"	f	class:mi::opengl::interact::MouseArcBall
endRotate	libs/opengl/interact/SimpleMouseRotator.cpp	/^void SimpleMouseRotator::endRotate()$/;"	f	class:mi::opengl::interact::SimpleMouseRotator
endTranslate	libs/opengl/interact/MouseTranslator.cpp	/^void MouseTranslator::endTranslate()$/;"	f	class:mi::opengl::interact::MouseTranslator
endZoom	libs/opengl/interact/MouseZoomer.cpp	/^void MouseZoomer::endZoom()$/;"	f	class:mi::opengl::interact::MouseZoomer
endsWith	libs/util/util.cpp	/^bool endsWith(const std::string &str, const char *substr)$/;"	f
endsWith	libs/util/util.cpp	/^bool endsWith(const std::string &str, const std::string &substr)$/;"	f
engine	apps/MIFit/script/LocalSocketScript.h	/^    QScriptEngine *engine;$/;"	m	class:LocalSocketScript
engine	apps/MIFit/script/MIFitScriptObject.h	/^    QScriptEngine *engine;$/;"	m	class:MIFitScriptObject
enterEvent	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::enterEvent(QEvent*)$/;"	f	class:MIGLWidget
enterEvent	apps/MIFit/ui/ModelsView.cpp	/^    void enterEvent(QEvent *evt)$/;"	f	class:MyLineEdit
environmentPrefs	apps/MIFit/ui/PreferencesDialog.h	/^    EnvironmentPreferences *environmentPrefs;$/;"	m	class:PreferencesDialog
epsilon	libs/cmtz/ccp4_spg.h	/^  int epsilon[13];        \/* flag which epsilon zones are applicable *\/$/;"	m	struct:CSym::ccp4_spacegroup_
epsilonEquals	libs/math/Matrix3.h	/^        bool Matrix3<Type>::epsilonEquals(const Matrix3<Type> &m1, Type epsilon) const$/;"	f	class:mi::math::Matrix3
epsilonEquals	libs/math/Matrix4.h	/^        bool Matrix4<Type>::epsilonEquals(const Matrix4<Type> &m1, Type epsilonValue) const$/;"	f	class:mi::math::Matrix4
epsilonEquals	libs/math/Tuple3.h	/^        bool Tuple3<Type>::epsilonEquals(const Tuple3<Type> &t1, Type epsilon) const$/;"	f	class:mi::math::Tuple3
epsilonEquals	libs/math/Tuple4.h	/^        bool Tuple4<Type>::epsilonEquals(const Tuple4<Type> &t1, Type epsilon) const$/;"	f	class:mi::math::Tuple4
equals	libs/math/mi_math.h	/^inline bool equals(T a, T b)$/;"	f
error	apps/MIFit/ui/MoleculeXmlHandler.cpp	/^bool MoleculeXmlHandler::error(const QXmlParseException &exception)$/;"	f	class:MoleculeXmlHandler
errorString	apps/MIFit/ui/MoleculeXmlHandler.h	/^    virtual QString errorString() const$/;"	f	class:MoleculeXmlHandler
errorString_	apps/MIFit/ui/MoleculeXmlHandler.h	/^    QString errorString_;$/;"	m	class:MoleculeXmlHandler
error_levels	libs/cmtz/library_err.c	/^static const char * const error_levels[] =$/;"	v	file:
error_list	libs/cmtz/library_err.c	/^  const char * const *error_list;$/;"	m	struct:error_system	file:
error_system	libs/cmtz/library_err.c	/^struct error_system {$/;"	s	file:
es	libs/map/fftlib.cpp	1458;"	d	file:
es	libs/map/fftlib.cpp	1778;"	d	file:
exec	apps/MIFit/ui/GenericDataDialog.cpp	/^int GenericDataDialog::exec()$/;"	f	class:GenericDataDialog
exec_script	mifit.py	/^def exec_script(script):$/;"	f
executable	apps/MIFit/jobs/BatchJobManager.cpp	/^    QString executable;$/;"	m	struct:CustomJob	file:
exop	libs/opengl/zlib/infblock.cpp	16;"	d	file:
exop	libs/opengl/zlib/infcodes.cpp	14;"	d	file:
exop	libs/opengl/zlib/inffast.cpp	17;"	d	file:
exop	libs/opengl/zlib/inftrees.cpp	25;"	d	file:
expansion_error	libs/map/fftsub.cpp	/^void expansion_error(int nsymop)$/;"	f
exportButton	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QPushButton *exportButton;$/;"	m	class:Ui_LSQFitDialog
exportButton	apps/MIFit/ui/ui_dicteditorform.h	/^    QPushButton *exportButton;$/;"	m	class:Ui_DictEditorForm
exportCurrentModel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::exportCurrentModel()$/;"	f	class:MIGLWidget
exportImageAction	apps/MIFit/ui/MIMainWindow.h	/^    QAction *exportImageAction;$/;"	m	class:MIMainWindow
exportModelAction	apps/MIFit/ui/MIMainWindow.h	/^    QAction *exportModelAction;$/;"	m	class:MIMainWindow
eyeSeparation	libs/opengl/StereoView.h	/^            float eyeSeparation;$/;"	m	class:mi::opengl::StereoView
f	apps/MIFit/core/xmlarchive.h	/^    std::string f;$/;"	m	class:XMLArchive
f	libs/cmtz/ccp4_types.h	/^    float32 f;$/;"	m	union:float_uint_uchar
f	libs/umtz/library.h	/^    float32 f;$/;"	m	union:float_uint_uchar
fColumnName	libs/map/EMapBase.h	/^    std::string fColumnName;$/;"	m	class:EMapBase
fRAND_MAX	libs/math/mathlib.h	38;"	d
faces	libs/opengl/Object3d.h	/^            std::vector<std::vector<int> > faces;$/;"	m	class:mi::opengl::Object3d
facesGroups	libs/opengl/Object3d.h	/^            std::vector<std::vector<std::string> > facesGroups;$/;"	m	class:mi::opengl::Object3d
facesnorms	libs/opengl/Object3d.h	/^            std::vector<std::vector<int> > facesnorms;$/;"	m	class:mi::opengl::Object3d
facestexs	libs/opengl/Object3d.h	/^            std::vector<std::vector<int> > facestexs;$/;"	m	class:mi::opengl::Object3d
farClipping	libs/opengl/Frustum.h	/^            float farClipping;$/;"	m	class:mi::opengl::Frustum
farpoint	libs/opengl/Object3d.h	/^            float farpoint;$/;"	m	class:mi::opengl::Object3d
fatalError	apps/MIFit/ui/MoleculeXmlHandler.cpp	/^bool MoleculeXmlHandler::fatalError(const QXmlParseException &exception)$/;"	f	class:MoleculeXmlHandler
fc	libs/map/CREFL.h	/^    float fc;$/;"	m	class:CREFL
fc1	apps/MIFit/ui/PhaseFileLoadDialog.h	/^        std::string fc1;$/;"	m	struct:PhaseFileLoadDialog::Data
fc1Label	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QLabel *fc1Label;$/;"	m	class:Ui_PhaseFileLoadDialog
fc2	apps/MIFit/ui/PhaseFileLoadDialog.h	/^        std::string fc2;$/;"	m	struct:PhaseFileLoadDialog::Data
fc2Label	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QLabel *fc2Label;$/;"	m	class:Ui_PhaseFileLoadDialog
fc_is_fom	libs/map/CMapHeaderBase.h	/^    int fc_is_fom;$/;"	m	class:CMapHeaderBase
fc_userset	apps/MIFit/ui/PhaseFileLoadDialog.h	/^    bool fc_userset[2];$/;"	m	class:PhaseFileLoadDialog
fcomplex	libs/map/fft.h	/^typedef struct fcomplex$/;"	s
fcomplex	libs/map/fft.h	/^} fcomplex;$/;"	t	typeref:struct:fcomplex
fconvert	libs/cmtz/library_file.h	/^  unsigned int fconvert: 8;$/;"	m	struct:CCP4::_CFileStruct
fd	libs/cmtz/library_file.h	/^  int fd;$/;"	m	struct:CCP4::_CFileStruct
fdata	libs/umtz/umtzlib.h	/^    float fdata[MTZBATFLT];$/;"	m	struct:umtz_bat_
fdopen	libs/opengl/zlib/zutil.h	119;"	d
fdopen	libs/opengl/zlib/zutil.h	133;"	d
fdopen	libs/opengl/zlib/zutil.h	137;"	d
fft3d	libs/map/fftsub.cpp	/^fft3d(CREFL *refl, int nrefl, CMapHeaderBase *mapheader, int usepsi)$/;"	f
fftPhasesAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *fftPhasesAction_;$/;"	m	class:ModelsTree	file:
fgetsl	libs/map/EMapBase.cpp	/^static char *fgetsl(char *buf, size_t size, FILE *fp)$/;"	f	file:
fiano	libs/map/sfcalc_data.h	/^double *fiano;$/;"	v
fieldModified	apps/MIFit/ui/ManageCrystals.h	/^    bool fieldModified;$/;"	m	class:ManageCrystals
fieldOfView	libs/opengl/Frustum.h	/^            float fieldOfView;$/;"	m	class:mi::opengl::Frustum
fieldTypes_	apps/MIFit/ui/GenericDataDialog.h	/^    QList<FieldType> fieldTypes_;$/;"	m	class:GenericDataDialog
file	apps/MIFit/core/Cfiles.h	/^    FILE *file;$/;"	m	class:CArchive
file	apps/MIFit/core/pdbmatch.cpp	/^    char file[1024];$/;"	m	class:hit	file:
fileDialog	apps/MIFit/ui/MIMainWindow.cpp	/^static QFileDialog *fileDialog = NULL;$/;"	v	file:
fileLineEdit	apps/MIFit/ui/ui_SmilesDialog.h	/^    QLineEdit *fileLineEdit;$/;"	m	class:Ui_SmilesDialog
fileModelRadioButton	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QRadioButton *fileModelRadioButton;$/;"	m	class:Ui_CustomJobDialog
fileNewAction	apps/MIFit/ui/MIMainWindow.h	/^    QAction *fileNewAction;$/;"	m	class:MIMainWindow
fileOpen	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::fileOpen()$/;"	f	class:MIMainWindow
fileOpenAction	apps/MIFit/ui/MIMainWindow.h	/^    QAction *fileOpenAction;$/;"	m	class:MIMainWindow
filePointer_	libs/util/FileIo.h	/^    FILE *filePointer_;$/;"	m	class:FileIo
filePrintAction	apps/MIFit/ui/MIMainWindow.h	/^    QAction *filePrintAction;$/;"	m	class:MIMainWindow
fileRadioButton	apps/MIFit/ui/ui_SmilesDialog.h	/^    QRadioButton *fileRadioButton;$/;"	m	class:Ui_SmilesDialog
fileSaveAction	apps/MIFit/ui/MIMainWindow.h	/^    QAction *fileSaveAction;$/;"	m	class:MIMainWindow
fileSaveAsAction	apps/MIFit/ui/MIMainWindow.h	/^    QAction *fileSaveAsAction;$/;"	m	class:MIMainWindow
file_attribute	libs/umtz/library.c	/^static char *file_attribute[] = { \/* DISKIO file modes *\/$/;"	v	file:
file_bytes_per_item	libs/umtz/library.c	/^static int  file_bytes_per_item[MAXFILES];\/* Pointer to disk file item size *\/$/;"	v	file:
file_extension	libs/util/util.cpp	/^const char *file_extension(const char *file)$/;"	f
file_fatal	libs/umtz/library.c	/^void file_fatal (char *message, char *file)$/;"	f
file_is_scratch	libs/umtz/library.c	/^static int  file_is_scratch[MAXFILES];    \/* Indicates if file is 'SCRATCH' *\/$/;"	v	file:
file_last_op	libs/umtz/library.c	/^static int  file_last_op [MAXFILES];    \/* see man fopen rd\/wr combinations *\/$/;"	v	file:
file_mode	libs/umtz/library.c	/^static int file_mode[MAXFILES];               \/* diskio mode of each stream *\/$/;"	v	file:
file_name	libs/umtz/library.c	/^static char file_name[MAXFILES][MAXFLEN];      \/* Pointer to disk file name *\/$/;"	v	file:
file_stream	libs/umtz/library.c	/^static FILE *file_stream[MAXFILES];                 \/* Pointer to disk file *\/$/;"	v	file:
filein	libs/cmtz/mtzdata.h	/^typedef struct { CCP4File *filein;     \/**< file for reading *\/$/;"	m	struct:__anon25
filename	apps/MIFit/ui/SmilesDialog.h	/^        std::string filename;$/;"	m	struct:SmilesDialog::Data
filename	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QLabel *filename;$/;"	m	class:Ui_PhaseFileLoadDialog
filename	libs/umtz/umtzlib.h	/^    char filename[200], mode[4];$/;"	m	struct:umtzfile_
fileout	libs/cmtz/mtzdata.h	/^                 CCP4File *fileout;    \/**< file for writing *\/$/;"	m	struct:__anon25
filetype	apps/MIFit/core/Cfiles.h	/^    int filetype;$/;"	m	class:CArchive
fillJobMenu	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::fillJobMenu()$/;"	f	class:MIMainWindow
fill_char_struct	libs/umtz/library.h	715;"	d
fill_char_struct	libs/umtz/library.h	738;"	d
fill_char_struct	libs/umtz/library.h	760;"	d
fill_char_struct	libs/umtz/library.h	785;"	d
fill_char_struct	libs/umtz/library.h	813;"	d
fill_char_struct	libs/umtz/library.h	839;"	d
fill_surf_menu	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::fill_surf_menu(QMenu *surf_menu)$/;"	f	class:MIMainWindow
filterIndex	apps/MIFit/ui/MIDialog.h	/^        int filterIndex;$/;"	m	struct:MIFileDialog::Data
findCenter	apps/MIFit/ui/GLOverviewCanvas.cpp	/^static void findCenter(std::vector<Bond> &bonds, Vector3<float> &min, Vector3<float> &max, Vector3<float> &center)$/;"	f	file:
findChain	apps/MIFit/ui/ModelsView.cpp	/^Residue*ModelsTree::findChain(Residue *residue)$/;"	f	class:ModelsTree
findChainEnd	libs/chemlib/MIMoleculeBase.cpp	/^static Residue *findChainEnd(Residue *res)$/;"	f	namespace:chemlib
findColorNumber	apps/MIFit/core/ColorUtil.cpp	/^int Colors::findColorNumber(const std::string &name)$/;"	f	class:Colors
findLabelForAtom	apps/MIFit/core/Molecule.cpp	/^ATOMLABEL*Molecule::findLabelForAtom(MIAtom *atom)$/;"	f	class:Molecule
findLigandDensityAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *findLigandDensityAction_;$/;"	m	class:ModelsTree	file:
findLigandFit	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::findLigandFit()$/;"	f	class:MIGLWidget
findMIFitBin	apps/MIFit/ui/Application.cpp	/^std::string findMIFitBin()$/;"	f
findMIGLWidget	apps/MIFit/ui/MIMainWindow.cpp	/^QMdiSubWindow*MIMainWindow::findMIGLWidget(const QString &fileName)$/;"	f	class:MIMainWindow
findModel	apps/MIFit/ui/ModelsView.cpp	/^Molecule*ModelsTree::findModel(Residue *residue)$/;"	f	class:ModelsTree
findMolecule	apps/MIFit/ui/LSQFitDialog.cpp	/^Molecule*LSQFitDialog::findMolecule(const std::string &str)$/;"	f	class:LSQFitDialog
findMolecule	apps/MIFit/ui/MIGLWidget.cpp	/^static Molecule *findMolecule(Displaylist *displaylist, const std::string &str)$/;"	f	file:
findPreferredFcItem	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^static std::string findPreferredFcItem(const std::string &foStr, const std::string &phiStr,$/;"	f	file:
findPreferredPhiItem	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^static std::string findPreferredPhiItem(const std::string &foStr, const std::string &fcStr,$/;"	f	file:
findPyQt	apps/MIFit/jobs/BatchJobManager.cpp	/^    QString findPyQt()$/;"	f	namespace:__anon17
findResidueAndMoleculeForAtom	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::findResidueAndMoleculeForAtom(MIAtom *atom, Residue* &res, Molecule* &mol)$/;"	f	class:MIGLWidget
findSpaceGroupButton	apps/MIFit/ui/ui_ManageCrystals.h	/^    QPushButton *findSpaceGroupButton;$/;"	m	class:Ui_ManageCrystals
finishMouseEvent	apps/MIFit/ui/graphlib.cpp	/^void GraphWindow::finishMouseEvent(QMouseEvent *evt, float fx, float fy)$/;"	f	class:GraphWindow
firstChildWithName	apps/MIFit/ui/MIMainWindow.cpp	/^static T firstChildWithName(const QWidget *widget, const QString &name)$/;"	f	file:
fitResidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::fitResidue()$/;"	f	class:MIGLWidget
fitResidueAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *fitResidueAction;$/;"	m	class:MIGLWidget
fitResidueRange	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::fitResidueRange()$/;"	f	class:MIGLWidget
fit_menu	apps/MIFit/ui/MIMainWindow.h	/^    QMenu *fit_menu;$/;"	m	class:MIMainWindow
fit_while_refine	libs/molopt/MIMolOpt.h	/^    bool fit_while_refine;$/;"	m	class:MIMolOpt
fitcenter	apps/MIFit/ui/MIGLWidget.h	/^    chemlib::MIAtom fitcenter;$/;"	m	class:MIGLWidget
fitmol	apps/MIFit/ui/MIGLWidget.h	/^    Molecule *fitmol;$/;"	m	class:MIGLWidget
fitres	apps/MIFit/ui/MIGLWidget.h	/^    chemlib::Residue *fitres;$/;"	m	class:MIGLWidget
fixcell	libs/map/EMapBase.cpp	/^fixcell(MINATOM *a)$/;"	f	file:
fixed_bd	libs/opengl/zlib/inffixed.h	/^local uInt fixed_bd = 5;$/;"	v
fixed_bd	libs/opengl/zlib/inftrees.cpp	/^local uInt fixed_bd;$/;"	v
fixed_bl	libs/opengl/zlib/inffixed.h	/^local uInt fixed_bl = 9;$/;"	v
fixed_bl	libs/opengl/zlib/inftrees.cpp	/^local uInt fixed_bl;$/;"	v
fixed_built	libs/opengl/zlib/inftrees.cpp	/^local int fixed_built = 0;$/;"	v
fixed_mem	libs/opengl/zlib/inftrees.cpp	/^local inflate_huft fixed_mem[FIXEDH];$/;"	v
fixed_td	libs/opengl/zlib/inffixed.h	/^local inflate_huft fixed_td[] = {$/;"	v
fixed_td	libs/opengl/zlib/inftrees.cpp	/^local inflate_huft *fixed_td;$/;"	v
fixed_tl	libs/opengl/zlib/inffixed.h	/^local inflate_huft fixed_tl[] = {$/;"	v
fixed_tl	libs/opengl/zlib/inftrees.cpp	/^local inflate_huft *fixed_tl;$/;"	v
fixname	libs/chemlib/MIAtom.h	/^    inline void MIAtom::fixname()$/;"	f	class:chemlib::MIAtom
fixname	libs/chemlib/Residue.cpp	/^static void fixname(char *name)$/;"	f	namespace:chemlib
fixname	libs/chemlib/Residue.cpp	/^static void fixname(std::string &name)$/;"	f	namespace:chemlib
fixnames	libs/chemlib/Residue.cpp	/^void Residue::fixnames(Residue *res)$/;"	f	class:chemlib::Residue
fixop	libs/map/CMapHeaderBase.cpp	/^std::string fixop(std::string op)$/;"	f
fl	libs/map/fftlib.cpp	1452;"	d	file:
fl	libs/map/fftlib.cpp	1782;"	d	file:
flag	apps/MIFit/ui/graphlib.h	/^    int flag;$/;"	m	class:CURVELABEL
flag	apps/MIFit/ui/graphlib.h	/^    int flag;$/;"	m	class:GR_POINT
flag	libs/map/fftlib.cpp	/^typedef long flag;$/;"	t	file:
flag	libs/map/fftlib.cpp	/^typedef short flag;$/;"	t	file:
flags	libs/chemlib/CHIRALDICT.h	/^        short flags;$/;"	m	class:chemlib::CHIRAL
flags	libs/chemlib/Monomer.h	/^        unsigned short flags() const$/;"	f	class:chemlib::Monomer
flags_	libs/chemlib/Monomer.h	/^        unsigned short flags_;$/;"	m	class:chemlib::Monomer
float32	libs/cmtz/ccp4_types.h	/^typedef float float32;$/;"	t
float32	libs/umtz/library.h	/^typedef float float32;$/;"	t
float_uint_uchar	libs/cmtz/ccp4_types.h	/^union float_uint_uchar {$/;"	u
float_uint_uchar	libs/umtz/library.h	/^union float_uint_uchar {$/;"	u
flog	libs/map/EMapBase.h	/^    FILE *flog;$/;"	m	class:EMapBase
flush	apps/MIFit/python/PythonEngine.cpp	/^void PythonEngine::flush(void)$/;"	f	class:PythonEngine
fmnf	libs/cmtz/mtzdata.h	/^                float fmnf;$/;"	m	union:__anon24
fo	libs/map/CREFL.h	/^    float fo;$/;"	m	class:CREFL
fo1	apps/MIFit/ui/PhaseFileLoadDialog.h	/^        std::string fo1;$/;"	m	struct:PhaseFileLoadDialog::Data
fo2	apps/MIFit/ui/PhaseFileLoadDialog.h	/^        std::string fo2;$/;"	m	struct:PhaseFileLoadDialog::Data
fo_userset	apps/MIFit/ui/PhaseFileLoadDialog.h	/^    bool fo_userset[2];$/;"	m	class:PhaseFileLoadDialog
focalLength	libs/opengl/Frustum.h	/^            float focalLength;$/;"	m	class:mi::opengl::Frustum
focusInEvent	apps/MIFit/ui/ModelsView.cpp	/^    void focusInEvent(QFocusEvent *evt)$/;"	f	class:MyLineEdit
focusResidueChanged	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::focusResidueChanged(Residue *residue)$/;"	f	class:ModelsTree
focusResidueChanged	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^void MIGLWidget::focusResidueChanged(chemlib::Residue * _t1)$/;"	f	class:MIGLWidget
focusnode	apps/MIFit/ui/MIGLWidget.h	/^    Molecule *focusnode;$/;"	m	class:MIGLWidget
focusres	apps/MIFit/ui/MIGLWidget.h	/^    chemlib::Residue *focusres;$/;"	m	class:MIGLWidget
focusresDeleted	apps/MIFit/ui/MIGLWidget.h	/^    bool focusresDeleted;$/;"	m	class:MIGLWidget
fogEnabled	apps/MIFit/ui/GLRenderer.h	/^    bool fogEnabled;$/;"	m	class:GLRenderer
fogEnd	apps/MIFit/ui/GLRenderer.h	/^    float fogEnd;$/;"	m	class:GLRenderer
fogStart	apps/MIFit/ui/GLRenderer.h	/^    float fogStart;$/;"	m	class:GLRenderer
fom	libs/map/CREFL.h	/^    float fom;$/;"	m	class:CREFL
fom1	apps/MIFit/ui/PhaseFileLoadDialog.h	/^        std::string fom1;$/;"	m	struct:PhaseFileLoadDialog::Data
fom1Label	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QLabel *fom1Label;$/;"	m	class:Ui_PhaseFileLoadDialog
fom2	apps/MIFit/ui/PhaseFileLoadDialog.h	/^        std::string fom2;$/;"	m	struct:PhaseFileLoadDialog::Data
fom2Label	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QLabel *fom2Label;$/;"	m	class:Ui_PhaseFileLoadDialog
fom_userset	apps/MIFit/ui/PhaseFileLoadDialog.h	/^    bool fom_userset[2];$/;"	m	class:PhaseFileLoadDialog
font	libs/opengl/Text.cpp	/^    QFont font;$/;"	m	struct:mi::opengl::TextPrivate	file:
font	libs/opengl/Text.cpp	/^QFont Text::font() const$/;"	f	class:mi::opengl::Text
fontMetrics	libs/opengl/Text.cpp	/^    QFontMetrics fontMetrics;$/;"	m	struct:mi::opengl::TextPrivate	file:
fontMetrics	libs/opengl/Text.cpp	/^QFontMetrics Text::fontMetrics() const$/;"	f	class:mi::opengl::Text
fontSize	apps/MIFit/ui/GLRenderer.h	/^    int fontSize;$/;"	m	class:GLRenderer
fontSize	libs/opengl/Axes.h	/^            int fontSize;$/;"	m	class:mi::opengl::Axes
footer	apps/MIFit/ui/Logger.cpp	/^void Logger::footer(const char *format, ...)$/;"	f	class:Logger
footer	apps/MIFit/ui/Logger.h	/^    static void footer(const std::string &str)$/;"	f	class:Logger
form	apps/MIFit/ui/DictEditCanvas.h	/^    Ui::DictEditorForm *form;$/;"	m	class:DictEditCanvas
formLayout	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QFormLayout *formLayout;$/;"	m	class:Ui_AddResidueDialog
formLayout	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QFormLayout *formLayout;$/;"	m	class:Ui_GLFormatEdit
formLayout_	apps/MIFit/ui/GenericDataDialog.h	/^    QFormLayout *formLayout_;$/;"	m	class:GenericDataDialog
formal_charge	libs/chemlib/MIAtom.h	/^        int formal_charge() const$/;"	f	class:chemlib::MIAtom
formal_charge_	libs/chemlib/MIAtom.h	/^        int formal_charge_;$/;"	m	class:chemlib::MIAtom
format	apps/MIFit/ui/GLFormatEdit.cpp	/^QGLFormat GLFormatEdit::format() const$/;"	f	class:GLFormatEdit
format	libs/util/util.cpp	/^std::string format(const char *fmt, ...)$/;"	f
formatInfo	apps/MIFit/ui/ui_GLFormatDialog.h	/^    QTextEdit *formatInfo;$/;"	m	class:Ui_GLFormatDialog
formatLabel	apps/MIFit/ui/ui_GLFormatDialog.h	/^    QLabel *formatLabel;$/;"	m	class:Ui_GLFormatDialog
formatToString	apps/MIFit/ui/GLFormatDialog.cpp	/^QString formatToString(const QGLFormat &format, const QString &formatName)$/;"	f	namespace:__anon8
formatType	apps/MIFit/ui/ui_GLFormatDialog.h	/^    QComboBox *formatType;$/;"	m	class:Ui_GLFormatDialog
formatTypeChanged	apps/MIFit/ui/GLFormatDialog.cpp	/^void GLFormatDialog::formatTypeChanged(const QString &type)$/;"	f	class:GLFormatDialog
format_	apps/MIFit/ui/GLFormatEdit.h	/^    QGLFormat format_;$/;"	m	class:GLFormatEdit
format_arg_list	libs/util/util.cpp	/^std::string format_arg_list(const char *fmt, va_list args)$/;"	f
fp	libs/cmtz/ccp4_parser.h	/^  FILE   *fp;             \/* Pointer to an external command file *\/$/;"	m	struct:CCP4::__anon27
fp	libs/util/FileIo.cpp	/^FILE*FileIo::fp()$/;"	f	class:FileIo
fp	libs/util/StringIo.cpp	/^FILE*StringIo::fp()$/;"	f	class:StringIo
fpstr	libs/umtz/library.h	/^typedef PStrPar fpstr;$/;"	t
fpstr	libs/umtz/library.h	/^typedef dsc$descriptor_s*fpstr;$/;"	t
fpstr	libs/umtz/library.h	/^typedef pstr fpstr;$/;"	t
fractionalDistance	libs/math/Grid.h	/^            float fractionalDistance[3];$/;"	m	class:mi::math::Grid
frand	libs/math/mathlib.h	/^inline float frand()$/;"	f
frand	libs/math/mathlib.h	/^inline float frand(float range)$/;"	f
frand2	libs/math/mathlib.h	/^inline float frand2(float range)$/;"	f
frano	libs/map/sfcalc_data.h	/^double *frano;$/;"	v
frcdigits	libs/cmtz/ccp4_parser.h	/^  int    frcdigits;     \/* Number of 'digits' after the decimal point (numbers$/;"	m	struct:CCP4::__anon26
free	libs/chemlib/MIAtom.h	/^    template <> void free<LINE>(LINE *a)$/;"	f	namespace:chemlib
free	libs/chemlib/MIAtom.h	/^    template <> void free<MIAtom*>(MIAtom **a)$/;"	f	namespace:chemlib
free	libs/chemlib/MIAtom.h	/^    template <> void free<MIAtom>(MIAtom *a)$/;"	f	namespace:chemlib
free	libs/chemlib/MIAtom.h	/^    template <> void free<TORSION>(TORSION *a)$/;"	f	namespace:chemlib
free	libs/chemlib/MIAtom.h	/^    template <> void free<char*>(char **a)$/;"	f	namespace:chemlib
free	libs/chemlib/MIAtom.h	/^    template <> void free<char>(char *a)$/;"	f	namespace:chemlib
free	libs/chemlib/MIAtom.h	/^    template <> void free<double>(double *a)$/;"	f	namespace:chemlib
free	libs/chemlib/MIAtom.h	/^    template <> void free<float>(float *a)$/;"	f	namespace:chemlib
free	libs/chemlib/MIAtom.h	/^    template <> void free<int>(int *a)$/;"	f	namespace:chemlib
free	libs/chemlib/MIAtom.h	/^    template <> void free<void>(void *a)$/;"	f	namespace:chemlib
free	libs/chemlib/MIAtom.h	/^    template <typename ARG> void free(ARG *a)$/;"	f	namespace:chemlib
freeRflag	libs/map/CREFL.h	/^    short freeRflag;$/;"	m	class:CREFL
free_func	libs/opengl/zlib/zlib.h	/^typedef void (*free_func)  OF ((voidpf opaque, voidpf address));$/;"	t
free_scattering_factors	libs/map/sfcalc.cpp	/^free_scattering_factors(char **name, int *lname, char **rname, double *a1, double *a2, double *a3,$/;"	f
from	libs/chemlib/SaveAtom.h	/^        MIAtom *from;$/;"	m	class:chemlib::SaveAtom
from	libs/math/LINE.h	/^    void *from;$/;"	m	class:LINE
from	libs/opengl/Arc.h	/^            mi::math::Vector3<float> from;$/;"	m	class:mi::opengl::Arc
fromcenter	apps/MIFit/ui/MIGLWidget.h	/^    chemlib::MIAtom *fromcenter;$/;"	m	class:MIGLWidget
frontCamera	apps/MIFit/ui/CMolwViewScene.h	/^    mi::opengl::Camera *frontCamera;$/;"	m	class:CMolwViewScene
frontClip	apps/MIFit/core/ViewPoint.cpp	/^qreal ViewPoint::frontClip() const$/;"	f	class:ViewPoint
frontClip	apps/MIFit/core/ViewPoint.h	/^    qreal frontClip;$/;"	m	class:ViewSave
frontClip_	apps/MIFit/core/ViewPoint.h	/^    qreal frontClip_;$/;"	m	class:ViewPoint
frustum	apps/MIFit/ui/CMolwViewScene.h	/^    mi::opengl::Frustum *frustum;$/;"	m	class:CMolwViewScene
frustum	apps/MIFit/ui/DictEditCanvas.h	/^    mi::opengl::Frustum *frustum;$/;"	m	class:DictEditCanvas
frustum	apps/MIFit/ui/DictEditScene.h	/^    mi::opengl::Frustum *frustum;$/;"	m	class:DictEditScene
frustum	apps/MIFit/ui/GLOverviewCanvas.h	/^    mi::opengl::Frustum *frustum;$/;"	m	class:GLOverviewCanvas
frustum	apps/MIFit/ui/GLRenderer.h	/^    mi::opengl::Frustum *frustum;$/;"	m	class:GLRenderer
frustum	apps/MIFit/ui/MIGLWidget.h	/^    mi::opengl::Frustum *frustum;$/;"	m	class:MIGLWidget
frustum	libs/opengl/StereoView.h	/^            Frustum *frustum;$/;"	m	class:mi::opengl::StereoView
frustum	libs/opengl/interact/FieldOfViewZoomCommand.h	/^                Frustum *frustum;$/;"	m	class:mi::opengl::interact::FieldOfViewZoomCommand
frustumBottom	libs/opengl/Frustum.h	/^            float frustumBottom;$/;"	m	class:mi::opengl::Frustum
frustumLeft	libs/opengl/Frustum.h	/^            float frustumLeft;$/;"	m	class:mi::opengl::Frustum
frustumOffset	libs/opengl/Frustum.h	/^            float frustumOffset;$/;"	m	class:mi::opengl::Frustum
frustumRight	libs/opengl/Frustum.h	/^            float frustumRight;$/;"	m	class:mi::opengl::Frustum
frustumTop	libs/opengl/Frustum.h	/^            float frustumTop;$/;"	m	class:mi::opengl::Frustum
fs	libs/map/fftlib.cpp	1459;"	d	file:
fs	libs/map/fftlib.cpp	1777;"	d	file:
fsread	libs/map/fssubs.cpp	/^fsread(int *rho, int *nx, int *ny, int *nz, float *rhoscale, float *rmsrho, FILE *fp, char *err)$/;"	f
fsread_uni	libs/map/fssubs.cpp	/^fsread_uni(std::vector<int> &rho, int *nx, int *ny, int *nz, float *rhoscale, float *rmsrho, FILE *fp, char *err, int swab)$/;"	f
fssize	libs/map/fssubs.cpp	/^fssize(FILE *fp)$/;"	f
fssize_uni	libs/map/fssubs.cpp	/^fssize_uni(FILE *fp, int *swab)$/;"	f
fssubs_in_float	libs/map/fssubs.cpp	/^float fssubs_in_float(FILE *fp, unsigned int swab)$/;"	f
fssubs_in_int	libs/map/fssubs.cpp	/^int fssubs_in_int(FILE *fp, unsigned int swab)$/;"	f
fswrite	libs/map/fssubs.cpp	/^fswrite(float *rho, FILE *fp, CMapHeaderBase *mh, int norn, int ncent)$/;"	f
ftable	libs/map/sfcalc_data.h	/^double **ftable;$/;"	v
ftnint	libs/map/fftlib.cpp	/^typedef long ftnint;$/;"	t	file:
ftnint	libs/map/fftlib.cpp	/^typedef short ftnint;$/;"	t	file:
ftnlen	libs/map/fftlib.cpp	/^typedef long ftnlen;$/;"	t	file:
ftnlen	libs/map/fftlib.cpp	/^typedef short ftnlen;$/;"	t	file:
ftoa	libs/math/mi_math.cpp	/^const char *ftoa(float f)$/;"	f
ftoa	libs/math/mi_math.cpp	/^const char *ftoa(int f)$/;"	f
ftoa	libs/math/mi_math.cpp	/^const char *ftoa(long f)$/;"	f
ftoc	libs/map/CMapHeaderBase.h	/^    float ftoc[3][3]; \/* fractional to cartesian *\/$/;"	m	class:CMapHeaderBase
fullScreenLayout	apps/MIFit/ui/MIGLWidget.h	/^    QVBoxLayout *fullScreenLayout;$/;"	m	class:MIGLWidget
fullScreenWidget	apps/MIFit/ui/MIGLWidget.h	/^    QWidget *fullScreenWidget;$/;"	m	class:MIGLWidget
fullscreenAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *fullscreenAction;$/;"	m	class:MIGLWidget
fullstring	libs/cmtz/ccp4_parser.h	/^  char   *fullstring;   \/* Full string containing all of token *\/$/;"	m	struct:CCP4::__anon26
fwriteDictEntry	libs/chemlib/MIMolDictionary.cpp	/^bool MIMolDictionary::fwriteDictEntry(FILE *fp, const char *res_type)$/;"	f	class:chemlib::MIMolDictionary
fwriteDictEntry_mmCIF	libs/chemlib/MIMolDictionary.cpp	/^bool MIMolDictionary::fwriteDictEntry_mmCIF(FILE *fp, const char *res_type)$/;"	f	class:chemlib::MIMolDictionary
fx	libs/map/MINATOM.h	/^    float fx, fy, fz;$/;"	m	struct:minatom
fx	libs/map/fftsub.cpp	/^float fx, fy, fz;$/;"	v
fy	libs/map/MINATOM.h	/^    float fx, fy, fz;$/;"	m	struct:minatom
fy	libs/map/fftsub.cpp	/^float fx, fy, fz;$/;"	v
fz	libs/map/MINATOM.h	/^    float fx, fy, fz;$/;"	m	struct:minatom
fz	libs/map/fftsub.cpp	/^float fx, fy, fz;$/;"	v
g11	libs/map/fftsub.cpp	/^static float g11, g12, g13, g22, g23, g33, dsqmin, dsqmax;$/;"	v	file:
g12	libs/map/fftsub.cpp	/^static float g11, g12, g13, g22, g23, g33, dsqmin, dsqmax;$/;"	v	file:
g13	libs/map/fftsub.cpp	/^static float g11, g12, g13, g22, g23, g33, dsqmin, dsqmax;$/;"	v	file:
g22	libs/map/fftsub.cpp	/^static float g11, g12, g13, g22, g23, g33, dsqmin, dsqmax;$/;"	v	file:
g23	libs/map/fftsub.cpp	/^static float g11, g12, g13, g22, g23, g33, dsqmin, dsqmax;$/;"	v	file:
g33	libs/map/fftsub.cpp	/^static float g11, g12, g13, g22, g23, g33, dsqmin, dsqmax;$/;"	v	file:
gaddr	libs/jacgrid/plane.cpp	206;"	d	file:
gama	libs/map/fftsub.cpp	/^static float a, b, c, alpha, beta, gama, rmin, rmax, vol;$/;"	v	file:
gamma	libs/map/CMapHeaderBase.h	/^    float a, b, c, alpha, beta, gamma;$/;"	m	class:CMapHeaderBase
gcos	libs/map/fftlib.cpp	188;"	d	file:
genConstraints	libs/ligand/LigPostProcessor.h	/^    bool genConstraints;$/;"	m	class:LigPostProcessor
genCoords	libs/ligand/LigPostProcessor.h	/^    bool genCoords;$/;"	m	class:LigPostProcessor
generalPrefs	apps/MIFit/ui/PreferencesDialog.h	/^    GeneralPreferences *generalPrefs;$/;"	m	class:PreferencesDialog
generateConformers	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::generateConformers(bool replace)$/;"	f	class:DictEditCanvas
generateSymmAtoms	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::generateSymmAtoms()$/;"	f	class:MIGLWidget
geom	libs/chemlib/MIAtom.h	/^        int geom() const$/;"	f	class:chemlib::MIAtom
geom_	libs/chemlib/MIAtom.h	/^        int geom_;$/;"	m	class:chemlib::MIAtom
geometry	libs/chemlib/Ligand.h	/^        ConstraintList geometry;$/;"	m	class:chemlib::Ligand
geomrefiner	apps/MIFit/ui/Application.h	/^    GeomRefiner *geomrefiner;$/;"	m	class:Application
geomrefiner	apps/MIFit/ui/DictEditCanvas.h	/^    GeomRefiner *geomrefiner;$/;"	m	class:DictEditCanvas
geomsaver	libs/molopt/MIMolOpt.h	/^    chemlib::GeomSaver geomsaver;$/;"	m	class:MIMolOpt
get	libs/opengl/zlib/infcodes.cpp	/^            uInt get;           \/* bits to get for extra *\/$/;"	m	struct:inflate_codes_state::__anon39::__anon41	file:
get00	libs/math/Matrix3.h	/^        Type Matrix3<Type>::get00() const$/;"	f	class:mi::math::Matrix3
get00	libs/math/Matrix4.h	/^        Type Matrix4<Type>::get00() const$/;"	f	class:mi::math::Matrix4
get01	libs/math/Matrix3.h	/^        Type Matrix3<Type>::get01() const$/;"	f	class:mi::math::Matrix3
get01	libs/math/Matrix4.h	/^        Type Matrix4<Type>::get01() const$/;"	f	class:mi::math::Matrix4
get02	libs/math/Matrix3.h	/^        Type Matrix3<Type>::get02() const$/;"	f	class:mi::math::Matrix3
get02	libs/math/Matrix4.h	/^        Type Matrix4<Type>::get02() const$/;"	f	class:mi::math::Matrix4
get03	libs/math/Matrix4.h	/^        Type Matrix4<Type>::get03() const$/;"	f	class:mi::math::Matrix4
get10	libs/math/Matrix3.h	/^        Type Matrix3<Type>::get10() const$/;"	f	class:mi::math::Matrix3
get10	libs/math/Matrix4.h	/^        Type Matrix4<Type>::get10() const$/;"	f	class:mi::math::Matrix4
get11	libs/math/Matrix3.h	/^        Type Matrix3<Type>::get11() const$/;"	f	class:mi::math::Matrix3
get11	libs/math/Matrix4.h	/^        Type Matrix4<Type>::get11() const$/;"	f	class:mi::math::Matrix4
get12	libs/math/Matrix3.h	/^        Type Matrix3<Type>::get12() const$/;"	f	class:mi::math::Matrix3
get12	libs/math/Matrix4.h	/^        Type Matrix4<Type>::get12() const$/;"	f	class:mi::math::Matrix4
get13	libs/math/Matrix4.h	/^        Type Matrix4<Type>::get13() const$/;"	f	class:mi::math::Matrix4
get20	libs/math/Matrix3.h	/^        Type Matrix3<Type>::get20() const$/;"	f	class:mi::math::Matrix3
get20	libs/math/Matrix4.h	/^        Type Matrix4<Type>::get20() const$/;"	f	class:mi::math::Matrix4
get21	libs/math/Matrix3.h	/^        Type Matrix3<Type>::get21() const$/;"	f	class:mi::math::Matrix3
get21	libs/math/Matrix4.h	/^        Type Matrix4<Type>::get21() const$/;"	f	class:mi::math::Matrix4
get22	libs/math/Matrix3.h	/^        Type Matrix3<Type>::get22() const$/;"	f	class:mi::math::Matrix3
get22	libs/math/Matrix4.h	/^        Type Matrix4<Type>::get22() const$/;"	f	class:mi::math::Matrix4
get23	libs/math/Matrix4.h	/^        Type Matrix4<Type>::get23() const$/;"	f	class:mi::math::Matrix4
get30	libs/math/Matrix4.h	/^        Type Matrix4<Type>::get30() const$/;"	f	class:mi::math::Matrix4
get31	libs/math/Matrix4.h	/^        Type Matrix4<Type>::get31() const$/;"	f	class:mi::math::Matrix4
get32	libs/math/Matrix4.h	/^        Type Matrix4<Type>::get32() const$/;"	f	class:mi::math::Matrix4
get33	libs/math/Matrix4.h	/^        Type Matrix4<Type>::get33() const$/;"	f	class:mi::math::Matrix4
getAmbientColor	libs/opengl/Light.cpp	/^float*Light::getAmbientColor()$/;"	f	class:mi::opengl::Light
getAmountToDimNonactiveModels	apps/MIFit/ui/ViewPointSettings.cpp	/^float ViewPointSettings::getAmountToDimNonactiveModels()$/;"	f	class:ViewPointSettings
getAngle	apps/MIFit/ui/DictEditAnglePickingRenderable.cpp	/^ANGLE*DictEditAnglePickingRenderable::getAngle(int id)$/;"	f	class:DictEditAnglePickingRenderable
getAngle	apps/MIFit/ui/GLRenderer.cpp	/^ANGLE*GLRenderer::getAngle(int id)$/;"	f	class:GLRenderer
getAngle	libs/opengl/Circle.cpp	/^float Circle::getAngle()$/;"	f	class:mi::opengl::Circle
getAngle	libs/opengl/interact/SimpleMouseRotator.cpp	/^float SimpleMouseRotator::getAngle()$/;"	f	class:mi::opengl::interact::SimpleMouseRotator
getAnnotation	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.cpp	/^Annotation*CMolwViewAnnotationPickingRenderable::getAnnotation(int id)$/;"	f	class:CMolwViewAnnotationPickingRenderable
getAnnotation	apps/MIFit/ui/DictEditAnnotationPickingRenderable.cpp	/^Annotation*DictEditAnnotationPickingRenderable::getAnnotation(int id)$/;"	f	class:DictEditAnnotationPickingRenderable
getAnnotation	apps/MIFit/ui/GLRenderer.cpp	/^Annotation*GLRenderer::getAnnotation(int id)$/;"	f	class:GLRenderer
getAnnotations	apps/MIFit/core/Molecule.cpp	/^Molecule::AnnotationList&Molecule::getAnnotations()$/;"	f	class:Molecule
getAtom	apps/MIFit/ui/CMolwViewAtomPickingRenderable.cpp	/^MIAtom*CMolwViewAtomPickingRenderable::getAtom(int id)$/;"	f	class:CMolwViewAtomPickingRenderable
getAtom	apps/MIFit/ui/DictEditAtomPickingRenderable.cpp	/^MIAtom*DictEditAtomPickingRenderable::getAtom(int id)$/;"	f	class:DictEditAtomPickingRenderable
getAtom	apps/MIFit/ui/GLRenderer.cpp	/^MIAtom*GLRenderer::getAtom(int id)$/;"	f	class:GLRenderer
getAtom1	libs/chemlib/ANGLE.h	/^        MIAtom *getAtom1() const$/;"	f	class:chemlib::ANGLE
getAtom1	libs/chemlib/Bond.h	/^        MIAtom *getAtom1() const$/;"	f	class:chemlib::Bond
getAtom1	libs/chemlib/CHIRALDICT.h	/^        MIAtom *getAtom1() const$/;"	f	class:chemlib::CHIRAL
getAtom1	libs/chemlib/Constraint.h	/^        MIAtom *getAtom1() const$/;"	f	class:chemlib::Angle
getAtom1	libs/chemlib/Constraint.h	/^        MIAtom *getAtom1() const$/;"	f	class:chemlib::BondLength
getAtom1	libs/chemlib/Constraint.h	/^        MIAtom *getAtom1() const$/;"	f	class:chemlib::Bump
getAtom1	libs/chemlib/TORSION.h	/^        MIAtom *getAtom1() const$/;"	f	class:chemlib::TORSION
getAtom2	libs/chemlib/ANGLE.h	/^        MIAtom *getAtom2() const$/;"	f	class:chemlib::ANGLE
getAtom2	libs/chemlib/Bond.h	/^        MIAtom *getAtom2() const$/;"	f	class:chemlib::Bond
getAtom2	libs/chemlib/CHIRALDICT.h	/^        MIAtom *getAtom2() const$/;"	f	class:chemlib::CHIRAL
getAtom2	libs/chemlib/Constraint.h	/^        MIAtom *getAtom2() const$/;"	f	class:chemlib::Angle
getAtom2	libs/chemlib/Constraint.h	/^        MIAtom *getAtom2() const$/;"	f	class:chemlib::BondLength
getAtom2	libs/chemlib/Constraint.h	/^        MIAtom *getAtom2() const$/;"	f	class:chemlib::Bump
getAtom2	libs/chemlib/TORSION.h	/^        MIAtom *getAtom2() const$/;"	f	class:chemlib::TORSION
getAtom3	libs/chemlib/ANGLE.h	/^        MIAtom *getAtom3() const$/;"	f	class:chemlib::ANGLE
getAtom3	libs/chemlib/CHIRALDICT.h	/^        MIAtom *getAtom3() const$/;"	f	class:chemlib::CHIRAL
getAtom3	libs/chemlib/Constraint.h	/^        MIAtom *getAtom3() const$/;"	f	class:chemlib::Angle
getAtom3	libs/chemlib/TORSION.h	/^        MIAtom *getAtom3() const$/;"	f	class:chemlib::TORSION
getAtom4	libs/chemlib/TORSION.h	/^        MIAtom *getAtom4() const$/;"	f	class:chemlib::TORSION
getAtomLabels	apps/MIFit/core/Molecule.cpp	/^Molecule::AtomLabelList&Molecule::getAtomLabels()$/;"	f	class:Molecule
getBall	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle&RenderStyle::getBall()$/;"	f	class:RenderStyle
getBallAndLine	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle&RenderStyle::getBallAndLine()$/;"	f	class:RenderStyle
getBallAndStick	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle&RenderStyle::getBallAndStick()$/;"	f	class:RenderStyle
getBallPercent	apps/MIFit/core/RenderStyle.cpp	/^float RenderStyle::getBallPercent()$/;"	f	class:RenderStyle
getBond	apps/MIFit/ui/CMolwViewBondPickingRenderable.cpp	/^Bond*CMolwViewBondPickingRenderable::getBond(int id)$/;"	f	class:CMolwViewBondPickingRenderable
getBond	apps/MIFit/ui/DictEditBondPickingRenderable.cpp	/^Bond*DictEditBondPickingRenderable::getBond(int id)$/;"	f	class:DictEditBondPickingRenderable
getBond	apps/MIFit/ui/GLRenderer.cpp	/^Bond*GLRenderer::getBond(int id)$/;"	f	class:GLRenderer
getBondLineWidth	apps/MIFit/core/RenderStyle.cpp	/^float RenderStyle::getBondLineWidth()$/;"	f	class:RenderStyle
getBonds	libs/chemlib/MIMoleculeBase.h	/^        std::vector<Bond>&getBonds()$/;"	f	class:chemlib::MIMoleculeBase
getCamera	apps/MIFit/ui/MIGLWidget.cpp	/^const mi::opengl::Camera *MIGLWidget::getCamera() const$/;"	f	class:MIGLWidget
getCamera	libs/opengl/StereoView.cpp	/^Camera*StereoView::getCamera()$/;"	f	class:mi::opengl::StereoView
getCenter	libs/opengl/interact/MouseArcBall.cpp	/^Point3<float>&MouseArcBall::getCenter()$/;"	f	class:mi::opengl::interact::MouseArcBall
getChainId	libs/chemlib/Monomer.h	/^        char getChainId() const$/;"	f	class:chemlib::Monomer
getColor	apps/MIFit/core/RESIDUE.h	/^inline int getColor(const chemlib::MIAtom *a)$/;"	f
getColor	apps/MIFit/ui/GLOverviewCanvas.cpp	/^float*GLOverviewCanvas::getColor(int colorIndex)$/;"	f	class:GLOverviewCanvas
getColor	apps/MIFit/ui/GLRenderer.cpp	/^float*GLRenderer::getColor(PaletteColor c, bool adjustForCurrentModel)$/;"	f	class:GLRenderer
getColor	apps/MIFit/ui/GLRenderer.cpp	/^float*GLRenderer::getColor(int colorIndex, bool adjustForCurrentModel)$/;"	f	class:GLRenderer
getColor	apps/MIFit/ui/MIColorPickerDlg.h	/^    static int getColor(QWidget *parent = 0, int selected = 0, const QString& title = QString("Choose color"))$/;"	f	class:MIColorPickerDlg
getColor	apps/MIFit/ui/surf.cpp	/^    const float *getColor(short index)$/;"	f	class:MISurface
getColorVector	apps/MIFit/ui/GLRenderer.cpp	/^QVector4D GLRenderer::getColorVector(int colorIndex, bool adjustForCurrentModel)$/;"	f	class:GLRenderer
getColumn	libs/math/Matrix3.h	/^        void Matrix3<Type>::getColumn(int column, Vector3<Type> &v) const$/;"	f	class:mi::math::Matrix3
getColumn	libs/math/Matrix4.h	/^        void Matrix4<Type>::getColumn(int column, Vector4<Type> &v) const$/;"	f	class:mi::math::Matrix4
getContacts	apps/MIFit/ui/Displaylist.h	/^inline std::vector<CONTACT>&Displaylist::getContacts()$/;"	f	class:Displaylist
getContext	apps/MIFit/ui/GLRenderer.cpp	/^void*GLRenderer::getContext()$/;"	f	class:GLRenderer
getControlSize	libs/opengl/interact/MouseArcBall.cpp	/^void MouseArcBall::getControlSize(int &x, int &y)$/;"	f	class:mi::opengl::interact::MouseArcBall
getCorners	libs/opengl/Frustum.cpp	/^Vector3<float>*Frustum::getCorners()$/;"	f	class:mi::opengl::Frustum
getCurrentAtom	apps/MIFit/ui/ModelsView.cpp	/^MIAtom*AtomsTree::getCurrentAtom()$/;"	f	class:AtomsTree
getCurrentChain	apps/MIFit/ui/ModelsView.cpp	/^Residue*ModelsTree::getCurrentChain()$/;"	f	class:ModelsTree
getCurrentDots	apps/MIFit/ui/Displaylist.h	/^inline std::vector<SURFDOT>&Displaylist::getCurrentDots()$/;"	f	class:Displaylist
getCurrentModel	apps/MIFit/ui/ModelsView.cpp	/^Molecule*ModelsTree::getCurrentModel()$/;"	f	class:ModelsTree
getCurrentPosition	libs/opengl/interact/MouseTranslator.cpp	/^Vector3<float>*MouseTranslator::getCurrentPosition()$/;"	f	class:mi::opengl::interact::MouseTranslator
getCurrentResidue	apps/MIFit/ui/ModelsView.cpp	/^Residue*ResiduesTree::getCurrentResidue()$/;"	f	class:ResiduesTree
getCurrentValue	libs/opengl/interact/MouseZoomer.cpp	/^float MouseZoomer::getCurrentValue()$/;"	f	class:mi::opengl::interact::MouseZoomer
getCurrentVector	libs/opengl/interact/MouseArcBall.cpp	/^Vector3<float>*MouseArcBall::getCurrentVector()$/;"	f	class:mi::opengl::interact::MouseArcBall
getData	apps/MIFit/core/Stack.cpp	/^const Stack::DataContainer &Stack::getData()$/;"	f	class:Stack
getDefaultBall	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle&RenderStyle::getDefaultBall()$/;"	f	class:RenderStyle
getDefaultBallAndLine	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle&RenderStyle::getDefaultBallAndLine()$/;"	f	class:RenderStyle
getDefaultBallAndStick	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle&RenderStyle::getDefaultBallAndStick()$/;"	f	class:RenderStyle
getDefaultLine	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle&RenderStyle::getDefaultLine()$/;"	f	class:RenderStyle
getDefaultStick	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle&RenderStyle::getDefaultStick()$/;"	f	class:RenderStyle
getDescription	libs/chemlib/PDB.h	/^        virtual std::string getDescription()$/;"	f	class:chemlib::PDB
getDescription	libs/chemlib/SMILES.h	/^        virtual std::string getDescription()$/;"	f	class:chemlib::SMILES
getDescription	libs/chemlib/mmCIF.h	/^        virtual std::string getDescription()$/;"	f	class:chemlib::mmCIF
getDescription	libs/chemlib/molfile.h	/^        virtual std::string getDescription()$/;"	f	class:chemlib::molfile
getDetail	libs/opengl/Circle.cpp	/^int Circle::getDetail()$/;"	f	class:mi::opengl::Circle
getDictionary	apps/MIFit/ui/Application.cpp	/^std::string Application::getDictionary()$/;"	f	class:Application
getDiffuseColor	libs/opengl/Light.cpp	/^float*Light::getDiffuseColor()$/;"	f	class:mi::opengl::Light
getDivisions	libs/opengl/Arc.cpp	/^int Arc::getDivisions()$/;"	f	class:mi::opengl::Arc
getDots	apps/MIFit/core/Molecule.h	/^inline Molecule::SurfaceDots&Molecule::getDots()$/;"	f	class:Molecule
getElement	libs/math/Matrix3.h	/^        Type Matrix3<Type>::getElement(int row, int column) const$/;"	f	class:mi::math::Matrix3
getElement	libs/math/Matrix4.h	/^        Type Matrix4<Type>::getElement(int row, int column) const$/;"	f	class:mi::math::Matrix4
getEventX	apps/MIFit/ui/DictEditCanvas.cpp	/^int DictEditCanvas::getEventX(QMouseEvent &e)$/;"	f	class:DictEditCanvas
getEventY	apps/MIFit/ui/DictEditCanvas.cpp	/^int DictEditCanvas::getEventY(QMouseEvent &e)$/;"	f	class:DictEditCanvas
getExistingDirectory	apps/MIFit/ui/Application.cpp	/^QString Application::getExistingDirectory(QWidget *parent, const QString &caption, const QString &filter)$/;"	f	class:Application
getExtension	libs/chemlib/PDB.h	/^        virtual std::string getExtension()$/;"	f	class:chemlib::PDB
getExtension	libs/chemlib/SMILES.h	/^        virtual std::string getExtension()$/;"	f	class:chemlib::SMILES
getExtension	libs/chemlib/mmCIF.h	/^        virtual std::string getExtension()$/;"	f	class:chemlib::mmCIF
getExtension	libs/chemlib/molfile.h	/^        virtual std::string getExtension()$/;"	f	class:chemlib::molfile
getEye	libs/opengl/Camera.cpp	/^Vector3<float> Camera::getEye()$/;"	f	class:mi::opengl::Camera
getEyeSeparation	libs/opengl/StereoView.cpp	/^float StereoView::getEyeSeparation()$/;"	f	class:mi::opengl::StereoView
getFarClipping	libs/opengl/Frustum.cpp	/^float Frustum::getFarClipping()$/;"	f	class:mi::opengl::Frustum
getFieldOfView	libs/opengl/Frustum.cpp	/^float Frustum::getFieldOfView()$/;"	f	class:mi::opengl::Frustum
getFocalLength	libs/opengl/Frustum.cpp	/^float Frustum::getFocalLength()$/;"	f	class:mi::opengl::Frustum
getFocusResidue	apps/MIFit/ui/MIGLWidget.cpp	/^const Residue*MIGLWidget::getFocusResidue()$/;"	f	class:MIGLWidget
getFogEnd	apps/MIFit/ui/GLRenderer.cpp	/^float GLRenderer::getFogEnd()$/;"	f	class:GLRenderer
getFogStart	apps/MIFit/ui/GLRenderer.cpp	/^float GLRenderer::getFogStart()$/;"	f	class:GLRenderer
getFontSize	apps/MIFit/ui/GLRenderer.cpp	/^int GLRenderer::getFontSize()$/;"	f	class:GLRenderer
getFrame	apps/MIFit/ui/DictEditDialog.cpp	/^QWidget*DictEditDialog::getFrame()$/;"	f	class:DictEditDialog
getFrom	libs/opengl/Arc.cpp	/^Vector3<float> Arc::getFrom()$/;"	f	class:mi::opengl::Arc
getFrustum	libs/opengl/StereoView.cpp	/^Frustum*StereoView::getFrustum()$/;"	f	class:mi::opengl::StereoView
getFrustumHeight	libs/opengl/Frustum.cpp	/^float Frustum::getFrustumHeight()$/;"	f	class:mi::opengl::Frustum
getFrustumHeight	libs/opengl/Frustum.cpp	/^float Frustum::getFrustumHeight(float z)$/;"	f	class:mi::opengl::Frustum
getFrustumOffset	libs/opengl/Frustum.cpp	/^float Frustum::getFrustumOffset()$/;"	f	class:mi::opengl::Frustum
getFrustumWidth	libs/opengl/Frustum.cpp	/^float Frustum::getFrustumWidth()$/;"	f	class:mi::opengl::Frustum
getGraphWin	apps/MIFit/ui/RamaPlot.cpp	/^GraphWindow*RamaPlotMgr::getGraphWin()$/;"	f	class:RamaPlotMgr
getGroups	libs/opengl/Object3d.cpp	/^vector<string>&Object3d::getGroups(int index)$/;"	f	class:mi::opengl::Object3d
getHeight	libs/opengl/Frustum.cpp	/^float Frustum::getHeight()$/;"	f	class:mi::opengl::Frustum
getHeight	libs/opengl/Viewport.cpp	/^int Viewport::getHeight()$/;"	f	class:mi::opengl::Viewport
getHorizontalAxis	libs/opengl/interact/SimpleMouseRotator.cpp	/^Vector3<float> SimpleMouseRotator::getHorizontalAxis()$/;"	f	class:mi::opengl::interact::SimpleMouseRotator
getImageSeparation	libs/opengl/StereoView.cpp	/^float StereoView::getImageSeparation()$/;"	f	class:mi::opengl::StereoView
getInColumnMajorOrder	libs/math/Matrix4.h	/^        void Matrix4<Type>::getInColumnMajorOrder(Type *matrix) const$/;"	f	class:mi::math::Matrix4
getIntMaximum	libs/math/MersenneTwister.h	/^            virtual int getIntMaximum()$/;"	f	class:mi::math::MersenneTwister
getIntMinimum	libs/math/MersenneTwister.h	/^            virtual int getIntMinimum()$/;"	f	class:mi::math::MersenneTwister
getInverseRotation	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::getInverseRotation(float inverseRotation[16])$/;"	f	class:GLRenderer
getInverseRotation	libs/opengl/Axes.cpp	/^static void getInverseRotation(float inverseRotation[16])$/;"	f	namespace:mi::opengl
getIterator	libs/chemlib/Residue.h	/^        static ResidueListIterator getIterator(Residue *start)$/;"	f	class:chemlib::Residue
getLabel	apps/MIFit/ui/SelectCrystal.cpp	/^const std::string SelectCrystal::getLabel()$/;"	f	class:SelectCrystal
getLeftViewport	libs/opengl/StereoView.cpp	/^Viewport*StereoView::getLeftViewport()$/;"	f	class:mi::opengl::StereoView
getLine	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle&RenderStyle::getLine()$/;"	f	class:RenderStyle
getLinearInterpolatedValue	libs/math/Grid.h	/^        float Grid<Type>::getLinearInterpolatedValue(Point3<Type> &pt)$/;"	f	class:mi::math::Grid
getLinearInterpolatedValue	libs/math/PeriodicGrid.h	/^        float PeriodicGrid<Type>::getLinearInterpolatedValue(Point3<Type> &pt)$/;"	f	class:mi::math::PeriodicGrid
getLines	apps/MIFit/ui/Displaylist.h	/^inline std::vector<PLINE>&Displaylist::getLines()$/;"	f	class:Displaylist
getMIFitPath	MIFit_log	/^getMIFitPath() {$/;"	f
getMaps	apps/MIFit/ui/Displaylist.h	/^inline Displaylist::MapList&Displaylist::getMaps()$/;"	f	class:Displaylist
getMatrixValue	libs/opengl/Frustum.cpp	/^static float getMatrixValue(float *result, int row, int col)$/;"	f	namespace:mi::opengl
getMdiArea	apps/MIFit/ui/MIMainWindow.cpp	/^QMdiArea*MIMainWindow::getMdiArea()$/;"	f	class:MIMainWindow
getMenuBar	apps/MIFit/ui/DictEditDialog.cpp	/^QMenuBar*DictEditDialog::getMenuBar()$/;"	f	class:DictEditDialog
getModel	apps/MIFit/ui/ModelsView.cpp	/^Molecule*ResiduesTree::getModel()$/;"	f	class:ResiduesTree
getMolecule	apps/MIFit/ui/DictEditCanvas.cpp	/^chemlib::MIMoleculeBase*DictEditCanvas::getMolecule()$/;"	f	class:DictEditCanvas
getMolecules	apps/MIFit/ui/Displaylist.h	/^inline std::list<Molecule*>&Displaylist::getMolecules()$/;"	f	class:Displaylist
getName	libs/math/Grid.h	/^        std::string Grid<Type>::getName()$/;"	f	class:mi::math::Grid
getName	libs/math/PeriodicGrid.h	/^        std::string PeriodicGrid<Type>::getName()$/;"	f	class:mi::math::PeriodicGrid
getNearClipping	libs/opengl/Frustum.cpp	/^float Frustum::getNearClipping()$/;"	f	class:mi::opengl::Frustum
getNearestIndex	libs/math/Grid.h	/^        int*Grid<Type>::getNearestIndex(Point3<Type> &point)$/;"	f	class:mi::math::Grid
getNearestIndex	libs/math/Grid.h	/^        void Grid<Type>::getNearestIndex(Point3<Type> &point, int *index)$/;"	f	class:mi::math::Grid
getNearestIndex	libs/math/PeriodicGrid.h	/^        int*PeriodicGrid<Type>::getNearestIndex(Point3<Type> &point)$/;"	f	class:mi::math::PeriodicGrid
getNearestIndex	libs/math/PeriodicGrid.h	/^        void PeriodicGrid<Type>::getNearestIndex(Point3<Type> &point, int *index)$/;"	f	class:mi::math::PeriodicGrid
getNearestValue	libs/math/Grid.h	/^        float Grid<Type>::getNearestValue(Point3<Type> &point)$/;"	f	class:mi::math::Grid
getNearestValue	libs/math/PeriodicGrid.h	/^        float PeriodicGrid<Type>::getNearestValue(Point3<Type> &point)$/;"	f	class:mi::math::PeriodicGrid
getOpenFileName	apps/MIFit/ui/Application.cpp	/^QString Application::getOpenFileName(QWidget *parent, const QString &caption, const QString &filter)$/;"	f	class:Application
getOrder	libs/chemlib/Bond.h	/^        unsigned char getOrder() const$/;"	f	class:chemlib::Bond
getOrigin	libs/math/Grid.h	/^        Point3<Type> Grid<Type>::getOrigin()$/;"	f	class:mi::math::Grid
getPerspectiveHeight	libs/opengl/Frustum.cpp	/^float Frustum::getPerspectiveHeight(float z)$/;"	f	class:mi::opengl::Frustum
getPerspectiveTop	libs/opengl/Frustum.cpp	/^float Frustum::getPerspectiveTop(float z)$/;"	f	class:mi::opengl::Frustum
getPickName	apps/MIFit/ui/GLRenderer.cpp	/^GLuint GLRenderer::getPickName(ANGLE &angle)$/;"	f	class:GLRenderer
getPickName	apps/MIFit/ui/GLRenderer.cpp	/^GLuint GLRenderer::getPickName(Annotation &annotation)$/;"	f	class:GLRenderer
getPickName	apps/MIFit/ui/GLRenderer.cpp	/^GLuint GLRenderer::getPickName(Bond &bond)$/;"	f	class:GLRenderer
getPickName	apps/MIFit/ui/GLRenderer.cpp	/^GLuint GLRenderer::getPickName(MIAtom *atom)$/;"	f	class:GLRenderer
getPlanes	libs/opengl/Frustum.cpp	/^Plane**Frustum::getPlanes()$/;"	f	class:mi::opengl::Frustum
getPoint	libs/math/Grid.h	/^        Point3<Type> Grid<Type>::getPoint(int *index)$/;"	f	class:mi::math::Grid
getPoint	libs/math/Grid.h	/^        Point3<Type> Grid<Type>::getPoint(int xIndex, int yIndex, int zIndex)$/;"	f	class:mi::math::Grid
getPoint	libs/math/PeriodicGrid.h	/^        Point3<Type> PeriodicGrid<Type>::getPoint(int *index)$/;"	f	class:mi::math::PeriodicGrid
getPoint	libs/math/PeriodicGrid.h	/^        Point3<Type> PeriodicGrid<Type>::getPoint(int xIndex, int yIndex, int zIndex)$/;"	f	class:mi::math::PeriodicGrid
getPoints	apps/MIFit/core/SurfaceSphere.cpp	/^std::vector<APOINT>&SurfaceSphere::getPoints()$/;"	f	class:SurfaceSphere
getPosition	libs/chemlib/MIAtom.cpp	/^void MIAtom::getPosition(double a[3]) const$/;"	f	class:chemlib::MIAtom
getPosition	libs/chemlib/MIAtom.cpp	/^void MIAtom::getPosition(float a[3]) const$/;"	f	class:chemlib::MIAtom
getPosition	libs/opengl/Light.cpp	/^Vector4<float> Light::getPosition()$/;"	f	class:mi::opengl::Light
getPosition	libs/opengl/Viewpoint.cpp	/^Vector3<float> Viewpoint::getPosition() const$/;"	f	class:mi::opengl::Viewpoint
getRadius	apps/MIFit/core/SurfaceSphere.cpp	/^float SurfaceSphere::getRadius()$/;"	f	class:SurfaceSphere
getRadius	libs/chemlib/MIAtom.cpp	/^float MIAtom::getRadius() const$/;"	f	class:chemlib::MIAtom
getRadius	libs/opengl/Circle.cpp	/^float Circle::getRadius()$/;"	f	class:mi::opengl::Circle
getRadius	libs/opengl/interact/MouseArcBall.cpp	/^float MouseArcBall::getRadius()$/;"	f	class:mi::opengl::interact::MouseArcBall
getReaderIndex	libs/chemlib/MIMolIO.cpp	/^int MIMolIOBase::getReaderIndex(const std::string &fname) const$/;"	f	class:chemlib::MIMolIOBase
getRenderStyle	apps/MIFit/ui/GLRenderer.cpp	/^RenderStyle&GLRenderer::getRenderStyle()$/;"	f	class:GLRenderer
getRightVector	libs/opengl/Viewpoint.cpp	/^Vector3<float> Viewpoint::getRightVector()$/;"	f	class:mi::opengl::Viewpoint
getRightViewport	libs/opengl/StereoView.cpp	/^Viewport*StereoView::getRightViewport()$/;"	f	class:mi::opengl::StereoView
getRotation	libs/opengl/RelativeViewpoint.cpp	/^Quaternion<float> RelativeViewpoint::getRotation()$/;"	f	class:mi::opengl::RelativeViewpoint
getRotation	libs/opengl/Viewpoint.cpp	/^Quaternion<float> Viewpoint::getRotation() const$/;"	f	class:mi::opengl::Viewpoint
getRow	libs/math/Matrix3.h	/^        void Matrix3<Type>::getRow(int row, Vector3<Type> &v) const$/;"	f	class:mi::math::Matrix3
getRow	libs/math/Matrix4.h	/^        void Matrix4<Type>::getRow(int row, Vector4<Type> &v) const$/;"	f	class:mi::math::Matrix4
getScaling	libs/opengl/interact/MouseTranslator.cpp	/^float MouseTranslator::getScaling()$/;"	f	class:mi::opengl::interact::MouseTranslator
getScaling	libs/opengl/interact/MouseZoomer.cpp	/^float MouseZoomer::getScaling()$/;"	f	class:mi::opengl::interact::MouseZoomer
getSecondaryStructure	apps/MIFit/core/Molecule.cpp	/^SecondaryStructure*Molecule::getSecondaryStructure()$/;"	f	class:Molecule
getSeed	libs/math/MersenneTwister.h	/^            virtual unsigned int getSeed()$/;"	f	class:mi::math::MersenneTwister
getSegmentNumber	libs/chemlib/Monomer.h	/^        unsigned short getSegmentNumber() const$/;"	f	class:chemlib::Monomer
getSize	libs/math/Grid.h	/^        int*Grid<Type>::getSize()$/;"	f	class:mi::math::Grid
getSpacing	apps/MIFit/core/SurfaceSphere.cpp	/^float SurfaceSphere::getSpacing()$/;"	f	class:SurfaceSphere
getSpacing	libs/math/Grid.h	/^        Type*Grid<Type>::getSpacing()$/;"	f	class:mi::math::Grid
getSpecularColor	libs/opengl/Light.cpp	/^float*Light::getSpecularColor()$/;"	f	class:mi::opengl::Light
getStartPosition	libs/opengl/interact/MouseTranslator.cpp	/^Vector3<float>*MouseTranslator::getStartPosition()$/;"	f	class:mi::opengl::interact::MouseTranslator
getStartValue	libs/opengl/interact/MouseZoomer.cpp	/^float MouseZoomer::getStartValue()$/;"	f	class:mi::opengl::interact::MouseZoomer
getStartVector	libs/opengl/interact/MouseArcBall.cpp	/^Vector3<float>*MouseArcBall::getStartVector()$/;"	f	class:mi::opengl::interact::MouseArcBall
getStaticMetaObject	apps/MIFit/core/moc/moc_Annotation.cpp	/^const QMetaObject &Annotation::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:Annotation
getStaticMetaObject	apps/MIFit/core/moc/moc_Molecule.cpp	/^const QMetaObject &Molecule::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:Molecule
getStaticMetaObject	apps/MIFit/core/moc/moc_Stack.cpp	/^const QMetaObject &Stack::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:Stack
getStaticMetaObject	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^const QMetaObject &BatchJob::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:BatchJob
getStaticMetaObject	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^const QMetaObject &JobFinishedStatusLabel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:JobFinishedStatusLabel
getStaticMetaObject	apps/MIFit/jobs/moc/moc_BatchJobManager.cpp	/^const QMetaObject &BatchJobManager::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:BatchJobManager
getStaticMetaObject	apps/MIFit/script/moc/moc_LocalSocketScript.cpp	/^const QMetaObject &LocalSocketScript::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:LocalSocketScript
getStaticMetaObject	apps/MIFit/script/moc/moc_MIFitScriptObject.cpp	/^const QMetaObject &MIFitScriptObject::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:MIFitScriptObject
getStaticMetaObject	apps/MIFit/ui/moc/moc_AddResidueDialog.cpp	/^const QMetaObject &AddResidueDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:AddResidueDialog
getStaticMetaObject	apps/MIFit/ui/moc/moc_Application.cpp	/^const QMetaObject &Application::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:Application
getStaticMetaObject	apps/MIFit/ui/moc/moc_AtomColors.cpp	/^const QMetaObject &AtomColors::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:AtomColors
getStaticMetaObject	apps/MIFit/ui/moc/moc_BValueColors.cpp	/^const QMetaObject &BValueColors::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:BValueColors
getStaticMetaObject	apps/MIFit/ui/moc/moc_ContourOptionsWidget.cpp	/^const QMetaObject &ContourOptionsWidget::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ContourOptionsWidget
getStaticMetaObject	apps/MIFit/ui/moc/moc_CurrentMIGLWidgetAction.cpp	/^const QMetaObject &CurrentMIGLWidgetAction::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:CurrentMIGLWidgetAction
getStaticMetaObject	apps/MIFit/ui/moc/moc_CursorArea.cpp	/^const QMetaObject &CursorArea::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:CursorArea
getStaticMetaObject	apps/MIFit/ui/moc/moc_CustomJobDialog.cpp	/^const QMetaObject &CustomJobDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:CustomJobDialog
getStaticMetaObject	apps/MIFit/ui/moc/moc_CustomJobPreferences.cpp	/^const QMetaObject &CustomJobPreferences::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:CustomJobPreferences
getStaticMetaObject	apps/MIFit/ui/moc/moc_DictEditCanvas.cpp	/^const QMetaObject &DictEditCanvas::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:DictEditCanvas
getStaticMetaObject	apps/MIFit/ui/moc/moc_DictEditDialog.cpp	/^const QMetaObject &DictEditDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:DictEditDialog
getStaticMetaObject	apps/MIFit/ui/moc/moc_Displaylist.cpp	/^const QMetaObject &Displaylist::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:Displaylist
getStaticMetaObject	apps/MIFit/ui/moc/moc_EMap.cpp	/^const QMetaObject &EMap::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:EMap
getStaticMetaObject	apps/MIFit/ui/moc/moc_EnvironmentPreferences.cpp	/^const QMetaObject &EnvironmentPreferences::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:EnvironmentPreferences
getStaticMetaObject	apps/MIFit/ui/moc/moc_GLFormatDialog.cpp	/^const QMetaObject &GLFormatDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:GLFormatDialog
getStaticMetaObject	apps/MIFit/ui/moc/moc_GLFormatEdit.cpp	/^const QMetaObject &GLFormatEdit::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:GLFormatEdit
getStaticMetaObject	apps/MIFit/ui/moc/moc_GeneralPreferences.cpp	/^const QMetaObject &GeneralPreferences::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:GeneralPreferences
getStaticMetaObject	apps/MIFit/ui/moc/moc_GenericDataDialog.cpp	/^const QMetaObject &GenericDataDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:GenericDataDialog
getStaticMetaObject	apps/MIFit/ui/moc/moc_JobsView.cpp	/^const QMetaObject &JobsView::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:JobsView
getStaticMetaObject	apps/MIFit/ui/moc/moc_LSQFitDialog.cpp	/^const QMetaObject &LSQFitDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:LSQFitDialog
getStaticMetaObject	apps/MIFit/ui/moc/moc_MIBrowsePair.cpp	/^const QMetaObject &MIBrowsePair::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:MIBrowsePair
getStaticMetaObject	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^const QMetaObject &MIColorPickerDlg::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:MIColorPickerDlg
getStaticMetaObject	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^const QMetaObject &MIColorToolButton::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:MIColorToolButton
getStaticMetaObject	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^const QMetaObject &MIGLWidget::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:MIGLWidget
getStaticMetaObject	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^const QMetaObject &ViewController::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ViewController
getStaticMetaObject	apps/MIFit/ui/moc/moc_MIMainWindow.cpp	/^const QMetaObject &MIMainWindow::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:MIMainWindow
getStaticMetaObject	apps/MIFit/ui/moc/moc_MIQDialog.cpp	/^const QMetaObject &MIQDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:MIQDialog
getStaticMetaObject	apps/MIFit/ui/moc/moc_MIQTreeWidget.cpp	/^const QMetaObject &MIQTreeWidget::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:MIQTreeWidget
getStaticMetaObject	apps/MIFit/ui/moc/moc_ManageCrystals.cpp	/^const QMetaObject &ManageCrystals::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ManageCrystals
getStaticMetaObject	apps/MIFit/ui/moc/moc_ModelsView.cpp	/^const QMetaObject &ModelsView::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ModelsView
getStaticMetaObject	apps/MIFit/ui/moc/moc_PhaseFileLoadDialog.cpp	/^const QMetaObject &PhaseFileLoadDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PhaseFileLoadDialog
getStaticMetaObject	apps/MIFit/ui/moc/moc_PreferencesDialog.cpp	/^const QMetaObject &PreferencesDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:PreferencesDialog
getStaticMetaObject	apps/MIFit/ui/moc/moc_RamaPlot.cpp	/^const QMetaObject &RamaPlotMgr::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:RamaPlotMgr
getStaticMetaObject	apps/MIFit/ui/moc/moc_RefinementOptionsDialog.cpp	/^const QMetaObject &RefinementOptionsDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:RefinementOptionsDialog
getStaticMetaObject	apps/MIFit/ui/moc/moc_SelectCrystal.cpp	/^const QMetaObject &SelectCrystal::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:SelectCrystal
getStaticMetaObject	apps/MIFit/ui/moc/moc_SmilesDialog.cpp	/^const QMetaObject &SmilesDialog::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:SmilesDialog
getStaticMetaObject	apps/MIFit/ui/moc/moc_ViewSyncedPanel.cpp	/^const QMetaObject &ViewSyncedPanel::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:ViewSyncedPanel
getStaticMetaObject	apps/MIFit/ui/moc/moc_graphlib.cpp	/^const QMetaObject &GraphWindow::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:GraphWindow
getStaticMetaObject	apps/MIFit/ui/moc/moc_tools.cpp	/^const QMetaObject &Tools::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:Tools
getStaticMetaObject	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^const QMetaObject &chemlib::MIMoleculeBase::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:chemlib::MIMoleculeBase
getStaticMetaObject	libs/map/moc/moc_CMapHeaderBase.cpp	/^const QMetaObject &CMapHeaderBase::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:CMapHeaderBase
getStaticMetaObject	libs/map/moc/moc_EMapBase.cpp	/^const QMetaObject &EMapBase::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:EMapBase
getStaticMetaObject	libs/molopt/moc/moc_MIMolOpt.cpp	/^const QMetaObject &MIMolOpt::getStaticMetaObject() { return staticMetaObject; }$/;"	f	class:MIMolOpt
getStick	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle&RenderStyle::getStick()$/;"	f	class:RenderStyle
getStickPercent	apps/MIFit/core/RenderStyle.cpp	/^float RenderStyle::getStickPercent()$/;"	f	class:RenderStyle
getSymmetryBonds	libs/chemlib/MIMoleculeBase.h	/^        std::vector<Bond>&getSymmetryBonds()$/;"	f	class:chemlib::MIMoleculeBase
getTORSION	libs/chemlib/MIMolDictionary.cpp	/^TORSION*MIMolDictionary::getTORSION(Residue *res, const char *type, Residue *prev) const$/;"	f	class:chemlib::MIMolDictionary
getTarget	libs/opengl/Viewpoint.cpp	/^Vector3<float> Viewpoint::getTarget(float focalLength)$/;"	f	class:mi::opengl::Viewpoint
getTargetSize	apps/MIFit/ui/CMolwViewScene.cpp	/^float CMolwViewScene::getTargetSize()$/;"	f	class:CMolwViewScene
getTargetVector	libs/opengl/Viewpoint.cpp	/^Vector3<float> Viewpoint::getTargetVector(float focalLength)$/;"	f	class:mi::opengl::Viewpoint
getTo	libs/opengl/Arc.cpp	/^Vector3<float> Arc::getTo()$/;"	f	class:mi::opengl::Arc
getUpVector	libs/opengl/Viewpoint.cpp	/^Vector3<float> Viewpoint::getUpVector()$/;"	f	class:mi::opengl::Viewpoint
getValue	libs/math/Grid.h	/^        float Grid<Type>::getValue(int *index)$/;"	f	class:mi::math::Grid
getValue	libs/math/Grid.h	/^        float Grid<Type>::getValue(int a, int b, int c)$/;"	f	class:mi::math::Grid
getValue	libs/math/PeriodicGrid.h	/^        float PeriodicGrid<Type>::getValue(int *index)$/;"	f	class:mi::math::PeriodicGrid
getValue	libs/math/PeriodicGrid.h	/^        float PeriodicGrid<Type>::getValue(int a, int b, int c)$/;"	f	class:mi::math::PeriodicGrid
getValue	libs/opengl/interact/FieldOfViewZoomCommand.cpp	/^float FieldOfViewZoomCommand::getValue()$/;"	f	class:mi::opengl::interact::FieldOfViewZoomCommand
getVerticalAxis	libs/opengl/interact/SimpleMouseRotator.cpp	/^Vector3<float> SimpleMouseRotator::getVerticalAxis()$/;"	f	class:mi::opengl::interact::SimpleMouseRotator
getViewVector	libs/opengl/Viewpoint.cpp	/^Vector3<float> Viewpoint::getViewVector()$/;"	f	class:mi::opengl::Viewpoint
getViewport	libs/opengl/StereoView.cpp	/^Viewport*StereoView::getViewport()$/;"	f	class:mi::opengl::StereoView
getW	libs/math/Tuple4.h	/^        Type Tuple4<Type>::getW() const$/;"	f	class:mi::math::Tuple4
getWidth	libs/opengl/Frustum.cpp	/^float Frustum::getWidth()$/;"	f	class:mi::opengl::Frustum
getWidth	libs/opengl/Viewport.cpp	/^int Viewport::getWidth()$/;"	f	class:mi::opengl::Viewport
getWriterIndex	libs/chemlib/MIMolIO.cpp	/^int MIMolIOBase::getWriterIndex(const std::string &fname) const$/;"	f	class:chemlib::MIMolIOBase
getX	libs/math/Tuple3.h	/^        Type Tuple3<Type>::getX() const$/;"	f	class:mi::math::Tuple3
getX	libs/math/Tuple4.h	/^        Type Tuple4<Type>::getX() const$/;"	f	class:mi::math::Tuple4
getX	libs/opengl/Viewport.cpp	/^int Viewport::getX()$/;"	f	class:mi::opengl::Viewport
getXWidth	libs/opengl/Object3d.cpp	/^float Object3d::getXWidth()$/;"	f	class:mi::opengl::Object3d
getY	libs/math/Tuple3.h	/^        Type Tuple3<Type>::getY() const$/;"	f	class:mi::math::Tuple3
getY	libs/math/Tuple4.h	/^        Type Tuple4<Type>::getY() const$/;"	f	class:mi::math::Tuple4
getY	libs/opengl/Viewport.cpp	/^int Viewport::getY()$/;"	f	class:mi::opengl::Viewport
getYHeight	libs/opengl/Object3d.cpp	/^float Object3d::getYHeight()$/;"	f	class:mi::opengl::Object3d
getZ	libs/math/Tuple3.h	/^        Type Tuple3<Type>::getZ() const$/;"	f	class:mi::math::Tuple3
getZ	libs/math/Tuple4.h	/^        Type Tuple4<Type>::getZ() const$/;"	f	class:mi::math::Tuple4
getZDepth	libs/opengl/Object3d.cpp	/^float Object3d::getZDepth()$/;"	f	class:mi::opengl::Object3d
get_cart_point	libs/map/wxWweave.cpp	299;"	d	file:
get_unit_cell	libs/map/fftsub.cpp	/^void get_unit_cell()$/;"	f
getbonddist	libs/molopt/MIMolOpt.cpp	/^int MIMolOpt::getbonddist(Residue *res, Bond *bond)$/;"	f	class:MIMolOpt
getbuff	libs/cmtz/library_file.h	/^  unsigned int getbuff : 1, : 4;$/;"	m	struct:CCP4::_CFileStruct
getchain	apps/MIFit/core/RESIDUE.cpp	/^void getchain(unsigned short chain_id, Residue *reslist, Residue* &nter, Residue* &cter)$/;"	f
getcolor	apps/MIFit/core/Molecule.cpp	/^int Molecule::getcolor(ResidueListIterator res, MIAtom *a, bool docolor, int color, int colormethod, std::string atoms)$/;"	f	class:Molecule
getfx	libs/map/CMapHeaderBase.cpp	/^void CMapHeaderBase::getfx(MAP_POINT *CA1, float *fx0, float *fy0, float *fz0)$/;"	f	class:CMapHeaderBase
getfx	libs/map/CMapHeaderBase.cpp	/^void CMapHeaderBase::getfx(chemlib::MIAtom *CA1, float *fx0, float *fy0, float *fz0)$/;"	f	class:CMapHeaderBase
getheight	apps/MIFit/core/ViewPoint.cpp	/^float ViewPoint::getheight() const$/;"	f	class:ViewPoint
getndots	apps/MIFit/core/Molecule.h	/^inline long Molecule::getndots()$/;"	f	class:Molecule
getnlinks	libs/chemlib/MIMoleculeBase.h	/^        int getnlinks()$/;"	f	class:chemlib::MIMoleculeBase
getnresidues	libs/chemlib/MIMoleculeBase.cpp	/^int MIMoleculeBase::getnresidues()$/;"	f	class:chemlib::MIMoleculeBase
getnribboatomCount	apps/MIFit/core/Molecule.h	/^inline long Molecule::getnribboatomCount()$/;"	f	class:Molecule
gets	libs/util/FileIo.cpp	/^char*FileIo::gets(char *s, size_t length)$/;"	f	class:FileIo
gets	libs/util/StringIo.cpp	/^char*StringIo::gets(char *s, size_t length)$/;"	f	class:StringIo
getwidth	apps/MIFit/core/ViewPoint.cpp	/^float ViewPoint::getwidth() const$/;"	f	class:ViewPoint
gl	libs/map/fftlib.cpp	1469;"	d	file:
gl	libs/map/fftlib.cpp	1767;"	d	file:
glDisable	libs/opengl/Light.cpp	/^void Light::glDisable()$/;"	f	class:mi::opengl::Light
glEnable	libs/opengl/Light.cpp	/^void Light::glEnable()$/;"	f	class:mi::opengl::Light
glStereo	libs/opengl/StereoView.h	/^            bool glStereo;$/;"	m	class:mi::opengl::StereoView
glUnitsPerPixel	apps/MIFit/ui/CMolwViewScene.h	/^    float glUnitsPerPixel;$/;"	m	class:CMolwViewScene
glUnitsPerPixel	apps/MIFit/ui/DictEditScene.h	/^    float glUnitsPerPixel;$/;"	m	class:DictEditScene
glUnitsPerPixel	libs/opengl/Axes.h	/^            float glUnitsPerPixel;$/;"	m	class:mi::opengl::Axes
glWidget	apps/MIFit/ui/DictEditCanvas.cpp	/^    DictEditCanvas *glWidget;$/;"	m	class:DictEditMainItem	file:
glWidget	apps/MIFit/ui/MIGLWidget.cpp	/^        MIGLWidget *glWidget;$/;"	m	class:__anon10::ViewPointAnimation	file:
glWidget	apps/MIFit/ui/MIGLWidget.cpp	/^    MIGLWidget *glWidget;$/;"	m	class:MainItem	file:
gmask	libs/jacgrid/surface.cpp	/^static gmaskT gmask;$/;"	v	file:
gmaskT	libs/jacgrid/surface.cpp	/^} gmaskT;$/;"	t	typeref:struct:__anon29	file:
goToResidue	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::goToResidue(const std::string &nameRef)$/;"	f	class:ModelsTree
gonlab	libs/cmtz/mtzdata.h	/^		 char gonlab[3][9];    \/**< names of the three axes *\/$/;"	m	struct:bathead
gotoXyzWithPrompt	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::gotoXyzWithPrompt()$/;"	f	class:MIGLWidget
grand	libs/math/mathlib.h	/^inline float grand(float range)$/;"	f
graph_HEADER	apps/MIFit/ui/graphlib.h	2;"	d
graph_clear	apps/MIFit/ui/graphlib.h	/^    void graph_clear()$/;"	f	class:GraphWindow
graph_curvelabel	apps/MIFit/ui/graphlib.cpp	/^void GraphWindow::graph_curvelabel(int \/* i *\/, const char *label, int flag, GraphColor color)$/;"	f	class:GraphWindow
graph_labelpoint	apps/MIFit/ui/graphlib.cpp	/^bool GraphWindow::graph_labelpoint(int i, const char *string)$/;"	f	class:GraphWindow
graph_point	apps/MIFit/ui/graphlib.cpp	/^int GraphWindow::graph_point(float x, float y, int flag, GraphColor color, int width)$/;"	f	class:GraphWindow
graph_point	apps/MIFit/ui/graphlib.cpp	/^int GraphWindow::graph_point(float x, float y, int flag, void *user_data, GraphColor color, int width)$/;"	f	class:GraphWindow
graph_pop_scale	apps/MIFit/ui/graphlib.cpp	/^void GraphWindow::graph_pop_scale()$/;"	f	class:GraphWindow
graph_push_scale	apps/MIFit/ui/graphlib.cpp	/^void GraphWindow::graph_push_scale(double x1, double x2, double y1, double y2)$/;"	f	class:GraphWindow
graph_removepointsafter	apps/MIFit/ui/graphlib.cpp	/^void GraphWindow::graph_removepointsafter(int i)$/;"	f	class:GraphWindow
graph_replacepoint	apps/MIFit/ui/graphlib.cpp	/^bool GraphWindow::graph_replacepoint(int i, float x, float y, int flag)$/;"	f	class:GraphWindow
graph_scale	apps/MIFit/ui/graphlib.cpp	/^void GraphWindow::graph_scale(double x1, double x2, double y1, double y2)$/;"	f	class:GraphWindow
graph_set_style	apps/MIFit/ui/graphlib.h	/^    void graph_set_style(int style)$/;"	f	class:GraphWindow
graph_title	apps/MIFit/ui/graphlib.h	/^    void graph_title(const char *s)$/;"	f	class:GraphWindow
graph_xdivisions	apps/MIFit/ui/graphlib.h	/^    void graph_xdivisions(int div)$/;"	f	class:GraphWindow
graph_xlabel	apps/MIFit/ui/graphlib.h	/^    void graph_xlabel(const char *s)$/;"	f	class:GraphWindow
graph_xminor	apps/MIFit/ui/graphlib.h	/^    void graph_xminor(int div)$/;"	f	class:GraphWindow
graph_ydivisions	apps/MIFit/ui/graphlib.h	/^    void graph_ydivisions(int div)$/;"	f	class:GraphWindow
graph_ylabel	apps/MIFit/ui/graphlib.h	/^    void graph_ylabel(const char *s)$/;"	f	class:GraphWindow
graph_yminor	apps/MIFit/ui/graphlib.h	/^    void graph_yminor(int div)$/;"	f	class:GraphWindow
graphstyle	apps/MIFit/ui/graphlib.h	/^    int graphstyle;$/;"	m	class:GraphWindow
greaterthan	libs/chemlib/MIMoleculeBase.cpp	/^static int greaterthan(Residue *res1, Residue *res2)$/;"	f	namespace:chemlib
green	apps/MIFit/core/ATOMLABEL.cpp	/^unsigned char ATOMLABEL::green() const$/;"	f	class:ATOMLABEL
green	apps/MIFit/core/ATOMLABEL.cpp	/^void ATOMLABEL::green(unsigned char value)$/;"	f	class:ATOMLABEL
green	apps/MIFit/core/Colors.h	/^    unsigned char green;$/;"	m	class:PaletteColor
green_	apps/MIFit/core/ATOMLABEL.h	/^    unsigned char green_;$/;"	m	class:ATOMLABEL
grid	apps/MIFit/ui/PhaseFileLoadDialog.h	/^        int grid;$/;"	m	struct:PhaseFileLoadDialog::Data
grid	libs/jacgrid/isosurface.cpp	/^static const gridT *grid;$/;"	v	file:
gridChoice	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QComboBox *gridChoice;$/;"	m	class:Ui_PhaseFileLoadDialog
gridLayout	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_AddResidueDialog
gridLayout	apps/MIFit/ui/ui_AtomColors.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_AtomColors
gridLayout	apps/MIFit/ui/ui_BValueColors.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_BValueColors
gridLayout	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_ContourOptionsWidget
gridLayout	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_CustomJobDialog
gridLayout	apps/MIFit/ui/ui_CustomJobPreferences.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_CustomJobPreferences
gridLayout	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_EnvironmentPreferences
gridLayout	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_LSQFitDialog
gridLayout	apps/MIFit/ui/ui_ManageCrystals.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_ManageCrystals
gridLayout	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_PhaseFileLoadDialog
gridLayout	apps/MIFit/ui/ui_PreferencesDialog.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_PreferencesDialog
gridLayout	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_RefinementOptionsDialog
gridLayout	apps/MIFit/ui/ui_SelectCrystal.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_SelectCrystal
gridLayout	apps/MIFit/ui/ui_SmilesDialog.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_SmilesDialog
gridLayout	apps/MIFit/ui/ui_dicteditorform.h	/^    QGridLayout *gridLayout;$/;"	m	class:Ui_DictEditorForm
gridLayout1	apps/MIFit/ui/ui_dicteditorform.h	/^    QGridLayout *gridLayout1;$/;"	m	class:Ui_DictEditorForm
gridLayout_2	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_AddResidueDialog
gridLayout_2	apps/MIFit/ui/ui_BValueColors.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_BValueColors
gridLayout_2	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_ContourOptionsWidget
gridLayout_2	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_CustomJobDialog
gridLayout_2	apps/MIFit/ui/ui_SelectCrystal.h	/^    QGridLayout *gridLayout_2;$/;"	m	class:Ui_SelectCrystal
gridMaximum	libs/math/Grid.h	/^            Point3<Type> gridMaximum;$/;"	m	class:mi::math::Grid
gridOrigin	libs/math/Grid.h	/^            Point3<Type> gridOrigin;$/;"	m	class:mi::math::Grid
gridSize0	libs/math/Grid.h	/^            int gridSize0;$/;"	m	class:mi::math::Grid
gridSize1	libs/math/Grid.h	/^            int gridSize1;$/;"	m	class:mi::math::Grid
gridSize2	libs/math/Grid.h	/^            int gridSize2;$/;"	m	class:mi::math::Grid
gridSpacing0	libs/math/Grid.h	/^            Type gridSpacing0;$/;"	m	class:mi::math::Grid
gridSpacing1	libs/math/Grid.h	/^            Type gridSpacing1;$/;"	m	class:mi::math::Grid
gridSpacing2	libs/math/Grid.h	/^            Type gridSpacing2;$/;"	m	class:mi::math::Grid
gridT	libs/jacgrid/grid.cpp	/^gridT::gridT()$/;"	f	class:gridT
gridT	libs/jacgrid/grid.cpp	/^gridT::gridT(float InitVal,$/;"	f	class:gridT
gridT	libs/jacgrid/grid.h	/^class gridT$/;"	c
gridUnit	libs/jacgrid/surface.h	/^    float gridUnit[3];                   \/* the grid unit sizes used to make the surface *\/$/;"	m	class:surfaceT
grid_points	libs/map/InterpBox.h	/^    std::vector<float> grid_points;$/;"	m	class:InterpBox
gridspacing	libs/map/EMapBase.h	/^    float gridspacing;$/;"	m	class:EMapBase
groupBox	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QGroupBox *groupBox;$/;"	m	class:Ui_CustomJobDialog
groupBox	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QGroupBox *groupBox;$/;"	m	class:Ui_GeneralPreferences
groupBox	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QGroupBox *groupBox;$/;"	m	class:Ui_LSQFitDialog
groupBox	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QGroupBox *groupBox;$/;"	m	class:Ui_PhaseFileLoadDialog
groupBox	apps/MIFit/ui/ui_dicteditorform.h	/^    QGroupBox *groupBox;$/;"	m	class:Ui_DictEditorForm
groupBox_2	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QGroupBox *groupBox_2;$/;"	m	class:Ui_GeneralPreferences
groupBox_2	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QGroupBox *groupBox_2;$/;"	m	class:Ui_PhaseFileLoadDialog
groupBox_2	apps/MIFit/ui/ui_dicteditorform.h	/^    QGroupBox *groupBox_2;$/;"	m	class:Ui_DictEditorForm
groupBox_3	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QGroupBox *groupBox_3;$/;"	m	class:Ui_PhaseFileLoadDialog
gs	libs/map/fftlib.cpp	1460;"	d	file:
gs	libs/map/fftlib.cpp	1776;"	d	file:
guessBondOrders	libs/ligand/LigPostProcessor.h	/^    bool guessBondOrders;$/;"	m	class:LigPostProcessor
h	libs/map/fftlib.cpp	/^    shortint h;$/;"	m	union:Multitype	file:
handleConnection	apps/MIFit/script/LocalSocketScript.cpp	/^void LocalSocketScript::handleConnection()$/;"	f	class:LocalSocketScript
handleCustomJobAction	apps/MIFit/jobs/BatchJobManager.cpp	/^void BatchJobManager::handleCustomJobAction()$/;"	f	class:BatchJobManager
handleKeyPress	apps/MIFit/ui/RamaPlot.cpp	/^void RamaPlotMgr::handleKeyPress(int keycode, bool shift)$/;"	f	class:RamaPlotMgr
handleKey_space	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::handleKey_space(bool spaceKeyDown)$/;"	f	class:MIGLWidget
handleMouseDoubleClick	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::handleMouseDoubleClick(QGraphicsSceneMouseEvent *e)$/;"	f	class:MIGLWidget
handleMouseMove	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::handleMouseMove(QGraphicsSceneMouseEvent *e)$/;"	f	class:MIGLWidget
handleMouseMoveEvent	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::handleMouseMoveEvent(QGraphicsSceneMouseEvent *evt)$/;"	f	class:DictEditCanvas
handleMouseOver	apps/MIFit/ui/RamaPlot.cpp	/^void RamaPlotMgr::handleMouseOver(int id)$/;"	f	class:RamaPlotMgr
handleMousePress	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::handleMousePress(QGraphicsSceneMouseEvent *e)$/;"	f	class:MIGLWidget
handleMousePressEvent	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::handleMousePressEvent(QGraphicsSceneMouseEvent *evt)$/;"	f	class:DictEditCanvas
handleMouseRelease	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::handleMouseRelease(QGraphicsSceneMouseEvent *e)$/;"	f	class:MIGLWidget
handleMouseReleaseEvent	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::handleMouseReleaseEvent(QGraphicsSceneMouseEvent *evt)$/;"	f	class:DictEditCanvas
handlePick	apps/MIFit/ui/DictEditCanvas.cpp	/^bool DictEditCanvas::handlePick(const QPoint &point)$/;"	f	class:DictEditCanvas
handlePick	apps/MIFit/ui/RamaPlot.cpp	/^void RamaPlotMgr::handlePick(const GR_POINT &gr)$/;"	f	class:RamaPlotMgr
handleWheelEvent	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::handleWheelEvent(QGraphicsSceneWheelEvent *evt)$/;"	f	class:DictEditCanvas
hardwareStereo	libs/opengl/StereoView.h	/^            bool hardwareStereo;$/;"	m	class:mi::opengl::StereoView
hardwareStereoAvailable	apps/MIFit/ui/Application.h	/^    bool hardwareStereoAvailable;$/;"	m	class:Application
hasAnisotropicity	libs/chemlib/MIAtom.cpp	/^bool MIAtom::hasAnisotropicity() const$/;"	f	class:chemlib::MIAtom
haveNextNextGaussian	libs/math/Random.h	/^            bool haveNextNextGaussian;$/;"	m	class:mi::math::Random
hbondContacts	apps/MIFit/core/Molecule.h	/^    std::vector<CONTACT> hbondContacts;$/;"	m	class:Molecule
hbondable	libs/chemlib/mol_util.cpp	/^bool hbondable(const MIAtom &a1, const MIAtom &a2, const Monomer &r1, const Monomer &r2)$/;"	f	namespace:chemlib
hbonds	libs/chemlib/MIMoleculeBase.h	/^        std::vector<Bond> hbonds;$/;"	m	class:chemlib::MIMoleculeBase
hboxLayout	apps/MIFit/ui/ui_dicteditorform.h	/^    QHBoxLayout *hboxLayout;$/;"	m	class:Ui_DictEditorForm
hboxLayout1	apps/MIFit/ui/ui_dicteditorform.h	/^    QHBoxLayout *hboxLayout1;$/;"	m	class:Ui_DictEditorForm
hcompare	apps/MIFit/core/pdbmatch.cpp	/^int hcompare(const void *i, const void *j)$/;"	f
hcount	libs/chemlib/MIAtom.h	/^        int hcount() const$/;"	f	class:chemlib::MIAtom
hcount_	libs/chemlib/MIAtom.h	/^        int hcount_;$/;"	m	class:chemlib::MIAtom
header	libs/chemlib/MIMolInfo.h	/^        std::vector<std::string> header; \/\/ PDB only$/;"	m	class:chemlib::MIMolInfo
headers	libs/umtz/umtzlib.h	/^    umtz_list headers;$/;"	m	struct:umtzfile_
height	apps/MIFit/core/ViewPoint.cpp	/^int ViewPoint::height() const$/;"	f	class:ViewPoint
height	apps/MIFit/ui/GLRenderer.h	/^    int height;$/;"	m	class:GLRenderer
height	libs/opengl/Text.cpp	/^        uint height;$/;"	m	struct:__anon45::CharData	file:
height	libs/opengl/Viewport.h	/^            int height;$/;"	m	class:mi::opengl::Viewport
height_	apps/MIFit/core/ViewPoint.h	/^    int width_, height_; \/\/ viewport size; screen coords.$/;"	m	class:ViewPoint
hermft	libs/map/fftlib.cpp	/^int hermft(real *x, real *y, integer *n, integer *dim)$/;"	f
hidden	apps/MIFit/core/Annotation.h	/^    bool hidden;$/;"	m	class:Annotation
hideHydrogens	apps/MIFit/ui/GLRenderer.h	/^    bool hideHydrogens;$/;"	m	class:GLRenderer
hide_menu	apps/MIFit/ui/MIMainWindow.h	/^    QMenu *hide_menu;$/;"	m	class:MIMainWindow
hin	libs/map/fftsub.cpp	/^static int hin[4], hout[4];$/;"	v	file:
hist	libs/cmtz/mtzdata.h	/^		 char *hist;           \/**< history of mtz file *\/$/;"	m	struct:__anon25
histlines	libs/cmtz/mtzdata.h	/^		 int histlines;        \/**< number of lines in hist *\/$/;"	m	struct:__anon25
historicalQuat	libs/opengl/interact/MouseArcBall.h	/^                mi::math::Quaternion<float> historicalQuat;$/;"	m	class:mi::opengl::interact::MouseArcBall
history	libs/umtz/umtzlib.h	/^    umtz_list history;$/;"	m	struct:umtzfile_
hit	apps/MIFit/core/pdbmatch.cpp	/^class hit$/;"	c	file:
hl	libs/map/fftlib.cpp	1470;"	d	file:
hl	libs/map/fftlib.cpp	1766;"	d	file:
hmax	libs/map/CMapHeaderBase.h	/^    int hmin, hmax, kmin, kmax, lmin, lmax;$/;"	m	class:CMapHeaderBase
hmax	libs/map/fftsub.cpp	/^static int nx, ny, nz, hmax, kmax, lmax;$/;"	v	file:
hmin	libs/map/CMapHeaderBase.h	/^    int hmin, hmax, kmin, kmax, lmin, lmax;$/;"	m	class:CMapHeaderBase
hmsymbol	libs/map/CMapHeaderBase.cpp	/^char hmsymbol[][14] =$/;"	v
horizontalAxis	libs/opengl/interact/SimpleMouseRotator.h	/^                mi::math::Vector3<float> horizontalAxis;$/;"	m	class:mi::opengl::interact::SimpleMouseRotator
horizontalLayout	apps/MIFit/ui/ui_AtomColors.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_AtomColors
horizontalLayout	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_CustomJobDialog
horizontalLayout	apps/MIFit/ui/ui_GLFormatDialog.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_GLFormatDialog
horizontalLayout	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_GLFormatEdit
horizontalLayout	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_GeneralPreferences
horizontalLayout	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_LSQFitDialog
horizontalLayout	apps/MIFit/ui/ui_ManageCrystals.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_ManageCrystals
horizontalLayout	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_PhaseFileLoadDialog
horizontalLayout	apps/MIFit/ui/ui_SmilesDialog.h	/^    QHBoxLayout *horizontalLayout;$/;"	m	class:Ui_SmilesDialog
horizontalLayout_10	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QHBoxLayout *horizontalLayout_10;$/;"	m	class:Ui_ContourOptionsWidget
horizontalLayout_11	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QHBoxLayout *horizontalLayout_11;$/;"	m	class:Ui_ContourOptionsWidget
horizontalLayout_2	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QHBoxLayout *horizontalLayout_2;$/;"	m	class:Ui_CustomJobDialog
horizontalLayout_2	apps/MIFit/ui/ui_GLFormatDialog.h	/^    QHBoxLayout *horizontalLayout_2;$/;"	m	class:Ui_GLFormatDialog
horizontalLayout_2	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QHBoxLayout *horizontalLayout_2;$/;"	m	class:Ui_GLFormatEdit
horizontalLayout_2	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QHBoxLayout *horizontalLayout_2;$/;"	m	class:Ui_GeneralPreferences
horizontalLayout_2	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QHBoxLayout *horizontalLayout_2;$/;"	m	class:Ui_LSQFitDialog
horizontalLayout_2	apps/MIFit/ui/ui_ManageCrystals.h	/^    QHBoxLayout *horizontalLayout_2;$/;"	m	class:Ui_ManageCrystals
horizontalLayout_3	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QHBoxLayout *horizontalLayout_3;$/;"	m	class:Ui_CustomJobDialog
horizontalLayout_3	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QHBoxLayout *horizontalLayout_3;$/;"	m	class:Ui_GLFormatEdit
horizontalLayout_3	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QHBoxLayout *horizontalLayout_3;$/;"	m	class:Ui_LSQFitDialog
horizontalLayout_4	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QHBoxLayout *horizontalLayout_4;$/;"	m	class:Ui_GLFormatEdit
horizontalLayout_4	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QHBoxLayout *horizontalLayout_4;$/;"	m	class:Ui_LSQFitDialog
horizontalLayout_5	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QHBoxLayout *horizontalLayout_5;$/;"	m	class:Ui_GLFormatEdit
horizontalLayout_5	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QHBoxLayout *horizontalLayout_5;$/;"	m	class:Ui_LSQFitDialog
horizontalLayout_6	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QHBoxLayout *horizontalLayout_6;$/;"	m	class:Ui_ContourOptionsWidget
horizontalLayout_6	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QHBoxLayout *horizontalLayout_6;$/;"	m	class:Ui_LSQFitDialog
horizontalLayout_7	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QHBoxLayout *horizontalLayout_7;$/;"	m	class:Ui_ContourOptionsWidget
horizontalLayout_7	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QHBoxLayout *horizontalLayout_7;$/;"	m	class:Ui_LSQFitDialog
horizontalLayout_8	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QHBoxLayout *horizontalLayout_8;$/;"	m	class:Ui_ContourOptionsWidget
horizontalLayout_8	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QHBoxLayout *horizontalLayout_8;$/;"	m	class:Ui_LSQFitDialog
horizontalSpacer	apps/MIFit/ui/ui_BValueColors.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_BValueColors
horizontalSpacer	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_ContourOptionsWidget
horizontalSpacer	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_CustomJobDialog
horizontalSpacer	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_LSQFitDialog
horizontalSpacer	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_PhaseFileLoadDialog
horizontalSpacer	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_RefinementOptionsDialog
horizontalSpacer	apps/MIFit/ui/ui_SmilesDialog.h	/^    QSpacerItem *horizontalSpacer;$/;"	m	class:Ui_SmilesDialog
horizontalSpacer_2	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QSpacerItem *horizontalSpacer_2;$/;"	m	class:Ui_ContourOptionsWidget
horizontalSpacer_2	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QSpacerItem *horizontalSpacer_2;$/;"	m	class:Ui_GeneralPreferences
horizontalSpacer_2	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QSpacerItem *horizontalSpacer_2;$/;"	m	class:Ui_LSQFitDialog
horizontalSpacer_2	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QSpacerItem *horizontalSpacer_2;$/;"	m	class:Ui_PhaseFileLoadDialog
horizontalSpacer_3	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QSpacerItem *horizontalSpacer_3;$/;"	m	class:Ui_LSQFitDialog
horizontalSpacer_3	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QSpacerItem *horizontalSpacer_3;$/;"	m	class:Ui_PhaseFileLoadDialog
horizontalSpacer_4	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QSpacerItem *horizontalSpacer_4;$/;"	m	class:Ui_ContourOptionsWidget
horizontalSpacer_4	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QSpacerItem *horizontalSpacer_4;$/;"	m	class:Ui_LSQFitDialog
horizontalSpacer_5	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QSpacerItem *horizontalSpacer_5;$/;"	m	class:Ui_LSQFitDialog
horizontalSpacer_6	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QSpacerItem *horizontalSpacer_6;$/;"	m	class:Ui_LSQFitDialog
horizontalSpacer_7	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QSpacerItem *horizontalSpacer_7;$/;"	m	class:Ui_LSQFitDialog
horizontalSpacer_8	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QSpacerItem *horizontalSpacer_8;$/;"	m	class:Ui_LSQFitDialog
hout	libs/map/fftsub.cpp	/^static int hin[4], hout[4];$/;"	v	file:
hs	libs/map/fftlib.cpp	1461;"	d	file:
hs	libs/map/fftlib.cpp	1774;"	d	file:
htmlBrowserButton	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QPushButton *htmlBrowserButton;$/;"	m	class:Ui_EnvironmentPreferences
htmlBrowserLineEdit	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QLineEdit *htmlBrowserLineEdit;$/;"	m	class:Ui_EnvironmentPreferences
huft_build	libs/opengl/zlib/inftrees.cpp	/^local int huft_build($/;"	f
hufts	libs/opengl/zlib/infutil.h	/^    inflate_huft *hufts; \/* single malloc for tree space *\/$/;"	m	struct:inflate_blocks_state
hybrid	libs/chemlib/MIAtom.h	/^        int hybrid() const$/;"	f	class:chemlib::MIAtom
hybrid_	libs/chemlib/MIAtom.h	/^        int hybrid_;$/;"	m	class:chemlib::MIAtom
i	libs/cmtz/ccp4_types.h	/^                 double i;             \/* imaginary component of *\/$/;"	m	struct:__anon18
i	libs/cmtz/ccp4_types.h	/^    uint32 i;$/;"	m	union:float_uint_uchar
i	libs/map/EMapBase.cpp	/^    real r, i;$/;"	m	struct:__anon48	file:
i	libs/map/fftlib.cpp	/^    doublereal r, i;$/;"	m	struct:__anon50	file:
i	libs/map/fftlib.cpp	/^    integer i;$/;"	m	union:Multitype	file:
i	libs/map/fftlib.cpp	/^    real r, i;$/;"	m	struct:__anon49	file:
i	libs/umtz/library.h	/^                 double i;             \/* imaginary component of *\/$/;"	m	struct:__anon57
i	libs/umtz/library.h	/^    uint32 i;$/;"	m	union:float_uint_uchar
i386	apps/MIFlex/miflex.cpp	13;"	d	file:
i386	libs/map/EMapBase.cpp	28;"	d	file:
ibeg	libs/cmtz/ccp4_parser.h	/^  int    ibeg,iend;     \/* Begin and end character positions of token$/;"	m	struct:CCP4::__anon26
iciend	libs/map/fftlib.cpp	/^    flag iciend;$/;"	m	struct:__anon52	file:
icierr	libs/map/fftlib.cpp	/^    flag icierr;$/;"	m	struct:__anon52	file:
icifmt	libs/map/fftlib.cpp	/^    char *icifmt;$/;"	m	struct:__anon52	file:
icilist	libs/map/fftlib.cpp	/^} icilist;$/;"	t	typeref:struct:__anon52	file:
icirlen	libs/map/fftlib.cpp	/^    ftnint icirlen;$/;"	m	struct:__anon52	file:
icirnum	libs/map/fftlib.cpp	/^    ftnint icirnum;$/;"	m	struct:__anon52	file:
iciunit	libs/map/fftlib.cpp	/^    char *iciunit;$/;"	m	struct:__anon52	file:
iconvert	libs/cmtz/library_file.h	/^  unsigned int iconvert : 8;$/;"	m	struct:CCP4::_CFileStruct
id	libs/umtz/library.h	/^    int id;$/;"	m	struct:SStrPar
id	libs/umtz/library.h	/^    int id;$/;"	m	struct:Str_Desc
idLineEdit	apps/MIFit/ui/ui_SmilesDialog.h	/^    QLineEdit *idLineEdit;$/;"	m	class:Ui_SmilesDialog
idata	libs/umtz/umtzlib.h	/^    int idata[MTZBATINT];$/;"	m	struct:umtz_bat_
ideal	libs/chemlib/TORSION.h	/^        float ideal[3];$/;"	m	class:chemlib::TORSDICT
ideal	libs/chemlib/TORSION.h	/^        float ideal[3];$/;"	m	class:chemlib::TORSION
ideal_angle	libs/chemlib/ANGLE.h	/^        float ideal_angle;$/;"	m	class:chemlib::ANGLE
ideal_angle	libs/chemlib/Constraint.h	/^        float ideal_angle;$/;"	m	class:chemlib::Angle
ideal_dist	libs/chemlib/Constraint.h	/^        float ideal_dist;$/;"	m	class:chemlib::BondLength
ideal_length	libs/chemlib/Bond.h	/^        float ideal_length;$/;"	m	class:chemlib::Bond
ideal_length	libs/chemlib/MIMolDictionary.cpp	/^    float ideal_length;$/;"	m	class:chemlib::ANGLEDICT	file:
ideal_length	libs/chemlib/MIMolDictionary.cpp	/^    float ideal_length;$/;"	m	class:chemlib::BondDICT	file:
ideal_volume	libs/chemlib/Chiral.h	/^        double ideal_volume;$/;"	m	class:chemlib::Chiral
ieeeF2convexF	libs/cmtz/library_file.c	/^static void ieeeF2convexF(union float_uint_uchar *buffer, const unsigned int size)$/;"	f	file:
ieeeF2convexF	libs/umtz/library.c	/^static void ieeeF2convexF(union float_uint_uchar buffer[], int size)$/;"	f	file:
ieeeF2vaxF	libs/cmtz/library_file.c	/^static void ieeeF2vaxF(union float_uint_uchar *buffer, const unsigned int size)$/;"	f	file:
ieeeF2vaxF	libs/umtz/library.c	/^static void ieeeF2vaxF(union float_uint_uchar buffer[], int size)$/;"	f	file:
iend	libs/cmtz/ccp4_parser.h	/^  int    ibeg,iend;     \/* Begin and end character positions of token$/;"	m	struct:CCP4::__anon26
il	libs/map/fftlib.cpp	1471;"	d	file:
il	libs/map/fftlib.cpp	1765;"	d	file:
im	libs/map/fft.h	/^    float im;$/;"	m	struct:fcomplex
imageIndex	apps/MIFit/ui/ModelsView.cpp	/^    ImageIndexMap imageIndex;$/;"	m	class:AtomsTree	file:
imageIndex	apps/MIFit/ui/ModelsView.cpp	/^    ImageIndexMap imageIndex;$/;"	m	class:ModelsTree	file:
imageIndex	apps/MIFit/ui/ModelsView.cpp	/^    ImageIndexMap imageIndex;$/;"	m	class:ResiduesTree	file:
imageSeparation	libs/opengl/StereoView.h	/^            float imageSeparation;$/;"	m	class:mi::opengl::StereoView
imhCenter	apps/MIFit/ui/MIMainWindow.h	/^const unsigned int imhCenter = 6; \/\/ Centering operation cursor.$/;"	v
imhCount	apps/MIFit/ui/MIMainWindow.h	/^const unsigned int imhCount = 16; \/\/ Number of cursors$/;"	v
imhCross	apps/MIFit/ui/MIMainWindow.h	/^const unsigned int imhCross = 0; \/\/ Cross cursor used to pick on canvas.$/;"	v
imhRotate	apps/MIFit/ui/MIMainWindow.h	/^const unsigned int imhRotate = 2; \/\/ Rotate cursor used to indicate a rotation operation.$/;"	v
imhScale	apps/MIFit/ui/MIMainWindow.h	/^const unsigned int imhScale = 7; \/\/ Scale\/zoom operation cursor.$/;"	v
imhSlab	apps/MIFit/ui/MIMainWindow.h	/^const unsigned int imhSlab = 8; \/\/ Slab operation cursor indicating the slab plane is being moved.$/;"	v
imhSlabDrag	apps/MIFit/ui/MIMainWindow.h	/^const unsigned int imhSlabDrag = 15; \/\/ Slab drag operation$/;"	v
imhTorsion	apps/MIFit/ui/MIMainWindow.h	/^const unsigned int imhTorsion = 5; \/\/ Torsion operation cusor indicating a bond is being twisted.$/;"	v
imhTranslate	apps/MIFit/ui/MIMainWindow.h	/^const unsigned int imhTranslate = 1; \/\/ Translate cursor used to indicate a translation operation.$/;"	v
imhWait1	apps/MIFit/ui/MIMainWindow.h	/^const unsigned int imhWait1 = 9; \/\/ Animated wait cursor.$/;"	v
imhWait2	apps/MIFit/ui/MIMainWindow.h	/^const unsigned int imhWait2 = 10; \/\/ Animated wait cursor.$/;"	v
imhWait3	apps/MIFit/ui/MIMainWindow.h	/^const unsigned int imhWait3 = 11; \/\/ Animated wait cursor.$/;"	v
imhWait4	apps/MIFit/ui/MIMainWindow.h	/^const unsigned int imhWait4 = 12; \/\/ Animated wait cursor.$/;"	v
imhWait5	apps/MIFit/ui/MIMainWindow.h	/^const unsigned int imhWait5 = 13; \/\/ Animated wait cursor.$/;"	v
imhWait6	apps/MIFit/ui/MIMainWindow.h	/^const unsigned int imhWait6 = 14; \/\/ Animated wait cursor.$/;"	v
imhZCursor	apps/MIFit/ui/MIMainWindow.h	/^const unsigned int imhZCursor = 4; \/\/ Indicates cursor in the z rotation area which ids the top 30 pixels of the canvas.$/;"	v
imhZRotate	apps/MIFit/ui/MIMainWindow.h	/^const unsigned int imhZRotate = 3; \/\/ Z rotation cursor used to indicate a Z-rotation operation.$/;"	v
importButton	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QPushButton *importButton;$/;"	m	class:Ui_LSQFitDialog
impropers	libs/chemlib/Dictionary.h	/^        std::vector<Improper> impropers;$/;"	m	class:chemlib::LigDictionary
inTag	apps/MIFit/core/xmlarchive.h	/^    int inTag;$/;"	m	class:XMLArchive
in_Annotation	apps/MIFit/ui/MoleculeXmlHandler.h	/^    bool in_Annotation;$/;"	m	class:MoleculeXmlHandler
in_Defaults	apps/MIFit/ui/MoleculeXmlHandler.h	/^    bool in_Defaults;$/;"	m	class:MoleculeXmlHandler
in_EMap	apps/MIFit/ui/MoleculeXmlHandler.h	/^    bool in_EMap;$/;"	m	class:MoleculeXmlHandler
in_MapHeader	apps/MIFit/ui/MoleculeXmlHandler.h	/^    bool in_MapHeader;$/;"	m	class:MoleculeXmlHandler
in_Molecule	apps/MIFit/ui/MoleculeXmlHandler.h	/^    bool in_Molecule;$/;"	m	class:MoleculeXmlHandler
in_to_add	libs/chemlib/MIMolDictionary.cpp	/^static bool in_to_add(vector<std::string> &to_add, char *type)$/;"	f	namespace:chemlib
inacc	libs/map/fftlib.cpp	/^    char *inacc;$/;"	m	struct:__anon56	file:
inacclen	libs/map/fftlib.cpp	/^    ftnlen inacclen;$/;"	m	struct:__anon56	file:
inblank	libs/map/fftlib.cpp	/^    char *inblank;$/;"	m	struct:__anon56	file:
inblanklen	libs/map/fftlib.cpp	/^    ftnlen inblanklen;$/;"	m	struct:__anon56	file:
incmatrix	libs/math/Matrices.cpp	/^void incmatrix(float xinc, float yinc, float zinc, float oldmat[3][3], float newmat[3][3])$/;"	f
incrementallyColorCheckBox	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QCheckBox *incrementallyColorCheckBox;$/;"	m	class:Ui_GeneralPreferences
incrementallyColorModels	apps/MIFit/ui/Application.h	/^    bool incrementallyColorModels;$/;"	m	class:Application
ind	libs/map/CREFL.h	/^    int ind[3];$/;"	m	class:CREFL
indent	apps/MIFit/core/xmlarchive.h	/^    char indent[2048];$/;"	m	class:XMLArchive
index	libs/opengl/zlib/infutil.h	/^            uInt index;         \/* index into blens (or border) *\/$/;"	m	struct:inflate_blocks_state::__anon35::__anon36
indexOfAtom	libs/chemlib/Monomer.cpp	/^int Monomer::indexOfAtom(const MIAtom *patm) const$/;"	f	class:chemlib::Monomer
index_	libs/util/StringIo.h	/^        size_t index_;$/;"	m	struct:StringIo::StringIoData
indir	libs/map/fftlib.cpp	/^    char *indir;$/;"	m	struct:__anon56	file:
indirlen	libs/map/fftlib.cpp	/^    ftnlen indirlen;$/;"	m	struct:__anon56	file:
inerr	libs/map/fftlib.cpp	/^    flag inerr;$/;"	m	struct:__anon56	file:
inex	libs/map/fftlib.cpp	/^    ftnint *inex; \/*parameters in standard's order*\/$/;"	m	struct:__anon56	file:
infile	libs/map/fftlib.cpp	/^    char *infile;$/;"	m	struct:__anon56	file:
infilen	libs/map/fftlib.cpp	/^    ftnlen infilen;$/;"	m	struct:__anon56	file:
inflate	libs/opengl/zlib/inflate.cpp	/^int ZEXPORT inflate($/;"	f
inflate	libs/opengl/zlib/zconf.h	20;"	d
inflateEnd	libs/opengl/zlib/inflate.cpp	/^int ZEXPORT inflateEnd($/;"	f
inflateEnd	libs/opengl/zlib/zconf.h	21;"	d
inflateInit	libs/opengl/zlib/zlib.h	307;"	d
inflateInit2	libs/opengl/zlib/zlib.h	309;"	d
inflateInit2_	libs/opengl/zlib/inflate.cpp	/^int ZEXPORT inflateInit2_($/;"	f
inflateInit2_	libs/opengl/zlib/zconf.h	27;"	d
inflateInit_	libs/opengl/zlib/inflate.cpp	/^int ZEXPORT inflateInit_($/;"	f
inflateInit_	libs/opengl/zlib/zconf.h	19;"	d
inflateReset	libs/opengl/zlib/inflate.cpp	/^int ZEXPORT inflateReset($/;"	f
inflateReset	libs/opengl/zlib/zconf.h	28;"	d
inflate_block_mode	libs/opengl/zlib/infutil.h	/^inflate_block_mode;$/;"	t	typeref:enum:__anon34
inflate_blocks	libs/opengl/zlib/infblock.cpp	/^int inflate_blocks($/;"	f
inflate_blocks_free	libs/opengl/zlib/infblock.cpp	/^int inflate_blocks_free($/;"	f
inflate_blocks_new	libs/opengl/zlib/infblock.cpp	/^inflate_blocks_statef *inflate_blocks_new($/;"	f
inflate_blocks_reset	libs/opengl/zlib/infblock.cpp	/^void inflate_blocks_reset($/;"	f
inflate_blocks_state	libs/opengl/zlib/inflate.cpp	/^struct inflate_blocks_state {int dummy;$/;"	s	file:
inflate_blocks_state	libs/opengl/zlib/infutil.h	/^struct inflate_blocks_state$/;"	s
inflate_blocks_statef	libs/opengl/zlib/infblock.h	/^typedef struct inflate_blocks_state FAR inflate_blocks_statef;$/;"	t	typeref:struct:FAR
inflate_codes	libs/opengl/zlib/infcodes.cpp	/^int inflate_codes($/;"	f
inflate_codes_free	libs/opengl/zlib/infcodes.cpp	/^void inflate_codes_free($/;"	f
inflate_codes_mode	libs/opengl/zlib/infcodes.cpp	/^inflate_codes_mode;$/;"	t	typeref:enum:__anon38	file:
inflate_codes_new	libs/opengl/zlib/infcodes.cpp	/^inflate_codes_statef *inflate_codes_new($/;"	f
inflate_codes_state	libs/opengl/zlib/infblock.cpp	/^struct inflate_codes_state {int dummy;$/;"	s	file:
inflate_codes_state	libs/opengl/zlib/infcodes.cpp	/^struct inflate_codes_state$/;"	s	file:
inflate_codes_state	libs/opengl/zlib/inffast.cpp	/^struct inflate_codes_state {int dummy;$/;"	s	file:
inflate_codes_state	libs/opengl/zlib/infutil.cpp	/^struct inflate_codes_state {int dummy;$/;"	s	file:
inflate_codes_statef	libs/opengl/zlib/infcodes.h	/^typedef struct inflate_codes_state FAR inflate_codes_statef;$/;"	t	typeref:struct:FAR
inflate_copyright	libs/opengl/zlib/inftrees.cpp	/^const char inflate_copyright[] =$/;"	v
inflate_fast	libs/opengl/zlib/inffast.cpp	/^int inflate_fast($/;"	f
inflate_flush	libs/opengl/zlib/infutil.cpp	/^int inflate_flush($/;"	f
inflate_huft	libs/opengl/zlib/inftrees.h	/^typedef struct inflate_huft_s FAR inflate_huft;$/;"	t	typeref:struct:FAR
inflate_huft_s	libs/opengl/zlib/inftrees.h	/^struct inflate_huft_s$/;"	s
inflate_mask	libs/opengl/zlib/infutil.cpp	/^uInt inflate_mask[17] =$/;"	v
inflate_mode	libs/opengl/zlib/inflate.cpp	/^inflate_mode;$/;"	t	typeref:enum:__anon42	file:
inflate_set_dictionary	libs/opengl/zlib/infblock.cpp	/^void inflate_set_dictionary($/;"	f
inflate_trees_bits	libs/opengl/zlib/inftrees.cpp	/^int inflate_trees_bits($/;"	f
inflate_trees_dynamic	libs/opengl/zlib/inftrees.cpp	/^int inflate_trees_dynamic($/;"	f
inflate_trees_fixed	libs/opengl/zlib/inftrees.cpp	/^int inflate_trees_fixed($/;"	f
infmt	libs/map/fftlib.cpp	/^    char *infmt;$/;"	m	struct:__anon56	file:
infmtlen	libs/map/fftlib.cpp	/^    ftnlen infmtlen;$/;"	m	struct:__anon56	file:
inform	libs/map/fftlib.cpp	/^    char *inform;$/;"	m	struct:__anon56	file:
informlen	libs/map/fftlib.cpp	/^    ftnint informlen;$/;"	m	struct:__anon56	file:
init	libs/math/LSQMatrix.h	/^    bool init;$/;"	m	class:LSQMatrix
initCursorShapeMaps	apps/MIFit/ui/CursorArea.cpp	/^    void initCursorShapeMaps()$/;"	f	namespace:__anon6
init_char_struct	libs/umtz/library.h	718;"	d
init_char_struct	libs/umtz/library.h	741;"	d
init_char_struct	libs/umtz/library.h	764;"	d
init_char_struct	libs/umtz/library.h	790;"	d
init_char_struct	libs/umtz/library.h	816;"	d
init_char_struct	libs/umtz/library.h	842;"	d
init_colornames	apps/MIFit/core/ColorUtil.cpp	/^void init_colornames()$/;"	f
initialised	libs/umtz/library.c	/^static int initialised =  0;    \/* flag to initialise data and file streams *\/$/;"	v	file:
initialize	libs/chemlib/Matrix.h	/^        void initialize(Subscript M, Subscript N)$/;"	f	class:TNT::Matrix
initialize	libs/math/Grid.h	/^        void Grid<Type>::initialize(int *size, Type *spacing, Point3<Type> &origin)$/;"	f	class:mi::math::Grid
initializeFileDialog	apps/MIFit/ui/MIMainWindow.cpp	/^static void initializeFileDialog()$/;"	f	file:
initializeForRender	apps/MIFit/ui/CMolwViewScene.cpp	/^void CMolwViewScene::initializeForRender()$/;"	f	class:CMolwViewScene
initializeForRender	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::initializeForRender()$/;"	f	class:DictEditCanvas
initializeForRender	apps/MIFit/ui/DictEditScene.cpp	/^void DictEditScene::initializeForRender()$/;"	f	class:DictEditScene
initializeForRender	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::initializeForRender()$/;"	f	class:GLRenderer
initializeGL	apps/MIFit/ui/GLOverviewCanvas.cpp	/^void GLOverviewCanvas::initializeGL()$/;"	f	class:GLOverviewCanvas
initializeGL	apps/MIFit/ui/graphlib.cpp	/^void GraphWindow::initializeGL()$/;"	f	class:GraphWindow
initializeRotation	libs/opengl/interact/MouseArcBall.cpp	/^void MouseArcBall::initializeRotation()$/;"	f	class:mi::opengl::interact::MouseArcBall
initializeRotation	libs/opengl/interact/MouseArcBallOrbitor.cpp	/^void MouseArcBallOrbitor::initializeRotation()$/;"	f	class:mi::opengl::interact::MouseArcBallOrbitor
initialized	apps/MIFit/ui/DictEditCanvas.h	/^    bool initialized;$/;"	m	class:DictEditCanvas
initrotate	libs/math/crystmat.cpp	/^initrotate(float a1, float a2, float a3,$/;"	f
initspheres	apps/MIFit/core/SURFDOT.cpp	/^int initspheres(float *radii)$/;"	f
inlist	libs/map/fftlib.cpp	/^} inlist;$/;"	t	typeref:struct:__anon56	file:
inname	libs/map/fftlib.cpp	/^    char *inname;$/;"	m	struct:__anon56	file:
innamed	libs/map/fftlib.cpp	/^    ftnint *innamed;$/;"	m	struct:__anon56	file:
innamlen	libs/map/fftlib.cpp	/^    ftnlen innamlen;$/;"	m	struct:__anon56	file:
innrec	libs/map/fftlib.cpp	/^    ftnint *innrec;$/;"	m	struct:__anon56	file:
innum	libs/map/fftlib.cpp	/^    ftnint *innum;$/;"	m	struct:__anon56	file:
inopen	libs/map/fftlib.cpp	/^    ftnint *inopen;$/;"	m	struct:__anon56	file:
inputMapHeaders	apps/MIFit/ui/MIGLWidget.h	/^    MapHeaderList inputMapHeaders;$/;"	m	class:MIGLWidget
inrecl	libs/map/fftlib.cpp	/^    ftnint *inrecl;$/;"	m	struct:__anon56	file:
inseq	libs/map/fftlib.cpp	/^    char *inseq;$/;"	m	struct:__anon56	file:
inseqlen	libs/map/fftlib.cpp	/^    ftnlen inseqlen;$/;"	m	struct:__anon56	file:
insertAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *insertAction_;$/;"	m	class:ModelsTree	file:
insertItem	apps/MIFit/ui/MIQTreeWidget.cpp	/^QTreeWidgetItem*MIQTreeWidget::insertItem(QTreeWidgetItem *parent,$/;"	f	class:MIQTreeWidget
insertPositionGroup	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QGroupBox *insertPositionGroup;$/;"	m	class:Ui_AddResidueDialog
insertResidue	libs/chemlib/Residue.cpp	/^Residue*Residue::insertResidue(Residue *residue)$/;"	f	class:chemlib::Residue
inside_sphere	libs/map/wxWweave.cpp	/^static int inside_sphere(float p[3])$/;"	f	file:
instance	apps/MIFit/ui/Application.cpp	/^Application *Application::instance()$/;"	f	class:Application
instance	apps/MIFit/ui/Application.cpp	/^MIBusyManager*MIBusyManager::instance()$/;"	f	class:MIBusyManager
instance	apps/MIFit/ui/MIGLWidget.cpp	/^ViewController*ViewController::instance()$/;"	f	class:ViewController
instance	apps/MIFit/ui/MIMainWindow.cpp	/^MIMainWindow*MIMainWindow::instance()$/;"	f	class:MIMainWindow
instance	apps/MIFit/ui/RamaPlot.cpp	/^RamaPlotMgr*RamaPlotMgr::instance()$/;"	f	class:RamaPlotMgr
instance	apps/MIFit/ui/tools.cpp	/^Tools&Tools::instance()$/;"	f	class:Tools
int64_t	libs/math/MersenneTwister.h	11;"	d
intdigits	libs/cmtz/ccp4_parser.h	/^  int    intdigits;     \/* Number of 'digits' preceeding the decimal point$/;"	m	struct:CCP4::__anon26
integer	libs/map/fftlib.cpp	/^typedef long int integer;$/;"	t	file:
interact	apps/MIFit/ui/CMolwViewScene.h	/^        namespace interact$/;"	n	namespace:mi::opengl
interact	apps/MIFit/ui/DictEditCanvas.h	/^        namespace interact$/;"	n	namespace:mi::opengl
interact	apps/MIFit/ui/DictEditScene.h	/^        namespace interact$/;"	n	namespace:mi::opengl
interact	apps/MIFit/ui/MIGLWidget.h	/^        namespace interact$/;"	n	namespace:mi::opengl
interact	libs/opengl/interact/ArcBallFeedback.cpp	/^namespace interact$/;"	n	namespace:mi::opengl	file:
interact	libs/opengl/interact/ArcBallFeedback.h	/^        namespace interact$/;"	n	namespace:mi::opengl
interact	libs/opengl/interact/FieldOfViewZoomCommand.cpp	/^namespace interact$/;"	n	namespace:mi::opengl	file:
interact	libs/opengl/interact/FieldOfViewZoomCommand.h	/^        namespace interact$/;"	n	namespace:mi::opengl
interact	libs/opengl/interact/MouseArcBall.cpp	/^namespace interact$/;"	n	namespace:mi::opengl	file:
interact	libs/opengl/interact/MouseArcBall.h	/^        namespace interact$/;"	n	namespace:mi::opengl
interact	libs/opengl/interact/MouseArcBallOrbitor.cpp	/^namespace interact$/;"	n	namespace:mi::opengl	file:
interact	libs/opengl/interact/MouseArcBallOrbitor.h	/^        namespace interact$/;"	n	namespace:mi::opengl
interact	libs/opengl/interact/MousePicker.cpp	/^namespace interact$/;"	n	namespace:mi::opengl	file:
interact	libs/opengl/interact/MousePicker.h	/^        namespace interact$/;"	n	namespace:mi::opengl
interact	libs/opengl/interact/MouseTranslator.cpp	/^namespace interact$/;"	n	namespace:mi::opengl	file:
interact	libs/opengl/interact/MouseTranslator.h	/^        namespace interact$/;"	n	namespace:mi::opengl
interact	libs/opengl/interact/MouseZoomer.cpp	/^namespace interact$/;"	n	namespace:mi::opengl	file:
interact	libs/opengl/interact/MouseZoomer.h	/^        namespace interact$/;"	n	namespace:mi::opengl
interact	libs/opengl/interact/PropertyCommand.h	/^        namespace interact$/;"	n	namespace:mi::opengl
interact	libs/opengl/interact/SimpleMouseRotator.cpp	/^namespace interact$/;"	n	namespace:mi::opengl	file:
interact	libs/opengl/interact/SimpleMouseRotator.h	/^        namespace interact$/;"	n	namespace:mi::opengl
interact	libs/opengl/interact/TargetFeedback.cpp	/^namespace interact$/;"	n	namespace:mi::opengl	file:
interact	libs/opengl/interact/TargetFeedback.h	/^        namespace interact$/;"	n	namespace:mi::opengl
interact	libs/opengl/interact/TranslationFeedback.cpp	/^namespace interact$/;"	n	namespace:mi::opengl	file:
interact	libs/opengl/interact/TranslationFeedback.h	/^        namespace interact$/;"	n	namespace:mi::opengl
internalSetRefiRes	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::internalSetRefiRes(chemlib::Residue *residue, int nResidues)$/;"	f	class:MIMolOpt
internal_state	libs/opengl/zlib/inflate.cpp	/^struct internal_state$/;"	s	file:
internal_state	libs/opengl/zlib/inftrees.cpp	/^struct internal_state {int dummy;$/;"	s	file:
internal_state	libs/opengl/zlib/infutil.h	/^struct internal_state {int dummy;$/;"	s
internal_state	libs/opengl/zlib/zlib.h	/^struct internal_state {int dummy;$/;"	s
internal_state	libs/opengl/zlib/zutil.cpp	/^struct internal_state {int dummy;$/;"	s	file:
interpolate	libs/math/Quaternion.h	/^        void Quaternion<Type>::interpolate(const Quaternion &q1, Type omega)$/;"	f	class:mi::math::Quaternion
interpolate	libs/math/Quaternion.h	/^        void Quaternion<Type>::interpolate(const Quaternion &q1, const Quaternion &q2, Type omega)$/;"	f	class:mi::math::Quaternion
intf	libs/opengl/zlib/zconf.h	/^typedef int FAR intf;$/;"	t
intf	libs/opengl/zlib/zconf.h	40;"	d
inunf	libs/map/fftlib.cpp	/^    char *inunf;$/;"	m	struct:__anon56	file:
inunflen	libs/map/fftlib.cpp	/^    ftnlen inunflen;$/;"	m	struct:__anon56	file:
inunit	libs/map/fftlib.cpp	/^    ftnint inunit;$/;"	m	struct:__anon56	file:
inv21_	libs/map/fftlib.cpp	/^int inv21_(real *x, real *y, integer *n, integer *d)$/;"	f
invalidateTreeData	apps/MIFit/ui/TreeData.cpp	/^void invalidateTreeData(TreeData *data)$/;"	f
inverse	libs/math/Matrix3.h	/^        void Matrix3<Type>::inverse()$/;"	f	class:mi::math::Matrix3
inverse	libs/math/Matrix3.h	/^        void Matrix3<Type>::inverse(const Matrix3<Type> &m1)$/;"	f	class:mi::math::Matrix3
inverse	libs/math/Quaternion.h	/^        void Quaternion<Type>::inverse()$/;"	f	class:mi::math::Quaternion
inverse	libs/math/Quaternion.h	/^        void Quaternion<Type>::inverse(const Quaternion<Type> &q1)$/;"	f	class:mi::math::Quaternion
invert	libs/math/Matrix4.h	/^        void Matrix4<Type>::invert()$/;"	f	class:mi::math::Matrix4
invert	libs/math/Matrix4.h	/^        void Matrix4<Type>::invert(const Matrix4<Type> &m1)$/;"	f	class:mi::math::Matrix4
invert3matrix	libs/cmtz/cvecmat.c	/^double invert3matrix(const double a[3][3], double ai[3][3])$/;"	f
invert4matrix	libs/cmtz/cvecmat.c	/^float invert4matrix(const float a[4][4], float ai[4][4])$/;"	f
invertChiralAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *invertChiralAction;$/;"	m	class:DictEditCanvas
invertRotation	libs/opengl/interact/MouseArcBall.h	/^                bool invertRotation;$/;"	m	class:mi::opengl::interact::MouseArcBall
invokeSlot	apps/MIFit/ui/CurrentMIGLWidgetAction.cpp	/^    void invokeSlot(QObject *object, const char *slot, QAction *arg = 0)$/;"	f	namespace:__anon9
invsymop	libs/cmtz/ccp4_spg.h	/^  ccp4_symop *invsymop;   \/* inverse symmetry matrices *\/$/;"	m	struct:CSym::ccp4_spacegroup_
io	libs/util/io.cpp	/^io::io()$/;"	f	class:io
io	libs/util/io.h	/^class io$/;"	c
iortyp	libs/cmtz/mtzdata.h	/^                 int iortyp;           \/**< type of orientation block (for $/;"	m	struct:bathead
iostat	libs/cmtz/library_file.h	/^  int iostat;$/;"	m	struct:CCP4::_CFileStruct
irand	libs/math/mathlib.h	/^inline int irand(int range)$/;"	f
irand_approx	libs/chemlib/util.h	/^    inline size_t irand_approx(int range)$/;"	f	namespace:chemlib
is	libs/map/fftlib.cpp	1462;"	d	file:
is	libs/map/fftlib.cpp	1773;"	d	file:
isAntialiasLines	apps/MIFit/ui/GLRenderer.cpp	/^bool GLRenderer::isAntialiasLines()$/;"	f	class:GLRenderer
isAtomBall	apps/MIFit/core/RenderStyle.cpp	/^bool RenderStyle::isAtomBall()$/;"	f	class:RenderStyle
isAtomLabeled	apps/MIFit/core/Molecule.cpp	/^bool Molecule::isAtomLabeled(MIAtom *atom)$/;"	f	class:Molecule
isBondCylinder	apps/MIFit/core/RenderStyle.cpp	/^bool RenderStyle::isBondCylinder()$/;"	f	class:RenderStyle
isBondLine	apps/MIFit/core/RenderStyle.cpp	/^bool RenderStyle::isBondLine()$/;"	f	class:RenderStyle
isCrossEyed	libs/opengl/StereoView.cpp	/^bool StereoView::isCrossEyed()$/;"	f	class:mi::opengl::StereoView
isCustomLabel	apps/MIFit/core/ATOMLABEL.cpp	/^bool ATOMLABEL::isCustomLabel()$/;"	f	class:ATOMLABEL
isDepthCuedColors	apps/MIFit/ui/ViewPointSettings.cpp	/^bool ViewPointSettings::isDepthCuedColors()$/;"	f	class:ViewPointSettings
isDepthCuedLineWidth	apps/MIFit/ui/ViewPointSettings.cpp	/^bool ViewPointSettings::isDepthCuedLineWidth()$/;"	f	class:ViewPointSettings
isDimNonactiveModels	apps/MIFit/ui/GLRenderer.cpp	/^bool GLRenderer::isDimNonactiveModels()$/;"	f	class:GLRenderer
isDimNonactiveModels	apps/MIFit/ui/ViewPointSettings.cpp	/^bool ViewPointSettings::isDimNonactiveModels()$/;"	f	class:ViewPointSettings
isDrawAnnotationBox	apps/MIFit/core/Molecule.h	/^inline bool Molecule::isDrawAnnotationBox()$/;"	f	class:Molecule
isFogEnabled	apps/MIFit/ui/GLRenderer.cpp	/^bool GLRenderer::isFogEnabled()$/;"	f	class:GLRenderer
isGLStereo	libs/opengl/StereoView.cpp	/^bool StereoView::isGLStereo()$/;"	f	class:mi::opengl::StereoView
isHardwareStereo	libs/opengl/StereoView.cpp	/^bool StereoView::isHardwareStereo()$/;"	f	class:mi::opengl::StereoView
isHardwareStereoAvailable	apps/MIFit/ui/Application.h	/^    bool isHardwareStereoAvailable()$/;"	f	class:Application
isHidden	apps/MIFit/core/Annotation.cpp	/^bool Annotation::isHidden()$/;"	f	class:Annotation
isHidden	libs/chemlib/MIAtom.h	/^        bool isHidden() const$/;"	f	class:chemlib::MIAtom
isHideHydrogens	apps/MIFit/ui/GLRenderer.cpp	/^bool GLRenderer::isHideHydrogens()$/;"	f	class:GLRenderer
isIndexInGrid	libs/math/Grid.h	/^        bool Grid<Type>::isIndexInGrid(int *index)$/;"	f	class:mi::math::Grid
isIndexInGrid	libs/math/Grid.h	/^        bool Grid<Type>::isIndexInGrid(int a, int b, int c)$/;"	f	class:mi::math::Grid
isIndexInGrid	libs/math/PeriodicGrid.h	/^        bool PeriodicGrid<Type>::isIndexInGrid(int *index)$/;"	f	class:mi::math::PeriodicGrid
isIndexInGrid	libs/math/PeriodicGrid.h	/^        bool PeriodicGrid<Type>::isIndexInGrid(int a, int b, int c)$/;"	f	class:mi::math::PeriodicGrid
isInvertRotation	libs/opengl/interact/MouseArcBall.cpp	/^bool MouseArcBall::isInvertRotation()$/;"	f	class:mi::opengl::interact::MouseArcBall
isJobLimit	apps/MIFit/ui/MIMainWindow.cpp	/^bool MIMainWindow::isJobLimit()$/;"	f	class:MIMainWindow
isLineWidthDepthCued	apps/MIFit/ui/GLRenderer.cpp	/^bool GLRenderer::isLineWidthDepthCued()$/;"	f	class:GLRenderer
isModelString	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^static bool isModelString(const char *str)$/;"	f	file:
isOpen	libs/util/FileIo.cpp	/^bool FileIo::isOpen()$/;"	f	class:FileIo
isOpen	libs/util/StringIo.cpp	/^bool StringIo::isOpen()$/;"	f	class:StringIo
isPanning	apps/MIFit/ui/DictEditCanvas.h	/^    bool isPanning;$/;"	m	class:DictEditCanvas
isPerspective	libs/opengl/Frustum.cpp	/^bool Frustum::isPerspective()$/;"	f	class:mi::opengl::Frustum
isPointInGrid	libs/math/Grid.h	/^        bool Grid<Type>::isPointInGrid(Point3<Type> &point)$/;"	f	class:mi::math::Grid
isPointInGrid	libs/math/PeriodicGrid.h	/^        bool PeriodicGrid<Type>::isPointInGrid(Point3<Type> &point)$/;"	f	class:mi::math::PeriodicGrid
isPredictedAsDifferenceMap	libs/map/EMapBase.h	/^    bool isPredictedAsDifferenceMap()$/;"	f	class:EMapBase
isRefiningChanged	libs/molopt/moc/moc_MIMolOpt.cpp	/^void MIMolOpt::isRefiningChanged(bool _t1)$/;"	f	class:MIMolOpt
isRotating	apps/MIFit/ui/DictEditCanvas.h	/^    bool isRotating;$/;"	m	class:DictEditCanvas
isRunning	apps/MIFit/jobs/BatchJob.cpp	/^bool BatchJob::isRunning()$/;"	f	class:BatchJob
isSecondaryStructureRibbons	apps/MIFit/core/Molecule.h	/^inline bool Molecule::isSecondaryStructureRibbons()$/;"	f	class:Molecule
isSecondaryStructureSchematic	apps/MIFit/core/Molecule.h	/^inline bool Molecule::isSecondaryStructureSchematic()$/;"	f	class:Molecule
isSizeEquals	libs/math/Grid.h	/^        bool Grid<Type>::isSizeEquals(Grid<Type> &other)$/;"	f	class:mi::math::Grid
isStereo	libs/opengl/StereoView.cpp	/^bool StereoView::isStereo()$/;"	f	class:mi::opengl::StereoView
isSuccess	apps/MIFit/jobs/BatchJob.h	/^    bool isSuccess()$/;"	f	class:BatchJob
isValid	apps/MIFit/ui/Displaylist.cpp	/^bool Displaylist::isValid(Displaylist *list)$/;"	f	class:Displaylist
isValid	libs/chemlib/MIAtom.cpp	/^bool MIAtom::isValid(const MIAtom *atom)$/;"	f	class:chemlib::MIAtom
isValid	libs/chemlib/MIMoleculeBase.cpp	/^bool MIMoleculeBase::isValid(MIMoleculeBase *mol)$/;"	f	class:chemlib::MIMoleculeBase
isValid	libs/chemlib/Monomer.cpp	/^bool Monomer::isValid(const Monomer *res)$/;"	f	class:chemlib::Monomer
isVisible	apps/MIFit/core/ATOMLABEL.cpp	/^bool ATOMLABEL::isVisible() const$/;"	f	class:ATOMLABEL
isVisible	apps/MIFit/core/Stack.cpp	/^bool Stack::isVisible() const$/;"	f	class:Stack
isZooming	apps/MIFit/ui/DictEditCanvas.h	/^    bool isZooming;$/;"	m	class:DictEditCanvas
is_drawing	apps/MIFit/ui/MIGLWidget.h	/^    bool is_drawing;$/;"	m	class:MIGLWidget
is_valid_extension	apps/MIFit/ui/MIMainWindow.cpp	/^static bool is_valid_extension(const char *ext)$/;"	f	file:
isaromatic	libs/chemlib/ANGLE.h	/^        int isaromatic;$/;"	m	class:chemlib::ANGLE
isaromatic	libs/chemlib/Bond.h	/^        int isaromatic;$/;"	m	class:chemlib::Bond
isaromatic	libs/chemlib/Constraint.h	/^        int isaromatic;             \/\/True if all three atoms are in the same aromatic system$/;"	m	class:chemlib::Angle
isaromatic	libs/chemlib/MIAtom.h	/^        int isaromatic() const$/;"	f	class:chemlib::MIAtom
isaromatic_	libs/chemlib/MIAtom.h	/^        int isaromatic_;$/;"	m	class:chemlib::MIAtom
iscyclic	libs/chemlib/ANGLE.h	/^        int iscyclic;$/;"	m	class:chemlib::ANGLE
iscyclic	libs/chemlib/Bond.h	/^        int iscyclic;$/;"	m	class:chemlib::Bond
iscyclic	libs/chemlib/Constraint.h	/^        int iscyclic;               \/\/True if all three atoms are in the same ring system$/;"	m	class:chemlib::Angle
iscyclic	libs/chemlib/MIAtom.h	/^        int iscyclic() const$/;"	f	class:chemlib::MIAtom
iscyclic_	libs/chemlib/MIAtom.h	/^        int iscyclic_;$/;"	m	class:chemlib::MIAtom
isnull	libs/cmtz/ccp4_parser.h	/^  int    isnull;        \/* Flag: true if token is null field *\/$/;"	m	struct:CCP4::__anon26
isnumber	libs/cmtz/ccp4_parser.h	/^  int    isnumber;      \/* Flag: true if token is number *\/$/;"	m	struct:CCP4::__anon26
isquoted	libs/cmtz/ccp4_parser.h	/^  int    isquoted;      \/* Flag: true if token is contained in quotes *\/$/;"	m	struct:CCP4::__anon26
isstring	libs/cmtz/ccp4_parser.h	/^  int    isstring;      \/* Flag: true if token is character string *\/$/;"	m	struct:CCP4::__anon26
item	apps/MIFit/ui/TreeData.h	/^    QTreeWidgetItem *item;$/;"	m	class:TreeData
itemInit	apps/MIFit/ui/MIQTreeWidget.cpp	/^void MIQTreeWidget::itemInit(QTreeWidgetItem *item, const std::string &name, int image, TreeData *data)$/;"	f	class:MIQTreeWidget
itemToJob	apps/MIFit/ui/JobsView.cpp	/^    std::map<QTreeWidgetItem*, BatchJob*> itemToJob;$/;"	m	class:JobsTree	file:
item_sizes	libs/umtz/library.c	/^static int item_sizes[] = {$/;"	v	file:
itemsize	libs/cmtz/library_file.h	/^  unsigned int itemsize : 8;$/;"	m	struct:CCP4::_CFileStruct
iterator	libs/chemlib/Matrix.h	/^        typedef         T*iterator;$/;"	t	class:TNT::Matrix
iunit	libs/umtz/umtzlib.h	/^    int iunit, ncol, nrow;$/;"	m	struct:umtzfile_
ix	libs/map/PEAK.h	/^    int ix, iy, iz;$/;"	m	struct:peak
ix	libs/map/fftsub.cpp	/^static int ix, iy, iz;$/;"	v	file:
iy	libs/map/PEAK.h	/^    int ix, iy, iz;$/;"	m	struct:peak
iy	libs/map/fftsub.cpp	/^static int ix, iy, iz;$/;"	v	file:
iz	libs/map/PEAK.h	/^    int ix, iy, iz;$/;"	m	struct:peak
iz	libs/map/fftsub.cpp	/^static int ix, iy, iz;$/;"	v	file:
jacMakeSurface	libs/jacgrid/isosurface.cpp	/^bool jacMakeSurface(surfaceT &surf, unsigned int itype,$/;"	f
jl	libs/map/fftlib.cpp	1472;"	d	file:
jl	libs/map/fftlib.cpp	1764;"	d	file:
jobAdded	apps/MIFit/jobs/moc/moc_BatchJobManager.cpp	/^void BatchJobManager::jobAdded(BatchJob * _t1)$/;"	f	class:BatchJobManager
jobAdded	apps/MIFit/ui/JobsView.cpp	/^void JobsView::jobAdded(BatchJob *job)$/;"	f	class:JobsView
jobChanged	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^void BatchJob::jobChanged(BatchJob * _t1)$/;"	f	class:BatchJob
jobChanged	apps/MIFit/ui/JobsView.cpp	/^void JobsView::jobChanged(BatchJob *job)$/;"	f	class:JobsView
jobDeleted	apps/MIFit/jobs/moc/moc_BatchJobManager.cpp	/^void BatchJobManager::jobDeleted(BatchJob * _t1)$/;"	f	class:BatchJobManager
jobDeleted	apps/MIFit/ui/JobsView.cpp	/^void JobsView::jobDeleted(BatchJob *job)$/;"	f	class:JobsView
jobId	apps/MIFit/jobs/BatchJob.h	/^    unsigned long jobId() const$/;"	f	class:BatchJob
jobId_	apps/MIFit/jobs/BatchJob.h	/^    unsigned long jobId_;$/;"	m	class:BatchJob
jobInTree	apps/MIFit/ui/JobsView.cpp	/^bool JobsView::jobInTree(BatchJob *job)$/;"	f	class:JobsView
jobLogsDir	apps/MIFit/ui/Application.h	/^    QDir jobLogsDir;$/;"	m	class:Application
jobLogsDirectory	apps/MIFit/ui/Application.h	/^    QDir jobLogsDirectory() const$/;"	f	class:Application
jobMenu	apps/MIFit/script/MIFitScriptObject.h	/^    QMenu *jobMenu;$/;"	m	class:MIFitScriptObject
jobMenu	apps/MIFit/ui/MIMainWindow.cpp	/^QMenu *MIMainWindow::jobMenu() const$/;"	f	class:MIMainWindow
jobName	apps/MIFit/jobs/BatchJob.h	/^    QString jobName() const$/;"	f	class:BatchJob
jobName	apps/MIFit/jobs/BatchJobManager.cpp	/^    QString jobName;$/;"	m	struct:CustomJob	file:
jobName	apps/MIFit/ui/CustomJobDialog.cpp	/^QString CustomJobDialog::jobName() const$/;"	f	class:CustomJobDialog
jobNameLineEdit	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QLineEdit *jobNameLineEdit;$/;"	m	class:Ui_CustomJobDialog
jobName_	apps/MIFit/jobs/BatchJob.h	/^    QString jobName_;$/;"	m	class:BatchJob
jobToItem	apps/MIFit/ui/JobsView.cpp	/^    std::map<BatchJob*, QTreeWidgetItem*> jobToItem;$/;"	m	class:JobsTree	file:
jobsDock	apps/MIFit/ui/MIMainWindow.h	/^    QDockWidget *jobsDock;$/;"	m	class:MIMainWindow
jobsTree	apps/MIFit/ui/JobsView.h	/^    JobsTree *jobsTree;$/;"	m	class:JobsView
joinBondsOfSameColor	apps/MIFit/ui/GLRenderer.h	/^    bool joinBondsOfSameColor;$/;"	m	class:GLRenderer
js	libs/map/fftlib.cpp	1463;"	d	file:
js	libs/map/fftlib.cpp	1772;"	d	file:
jsaxs	libs/cmtz/mtzdata.h	/^		 int jsaxs;            \/**< goniostat scan axis number *\/$/;"	m	struct:bathead
jumpax	libs/cmtz/mtzdata.h	/^		 int jumpax;           \/**< reciprocal axis closest to rotation$/;"	m	struct:bathead
keyPress	apps/MIFit/ui/moc/moc_graphlib.cpp	/^void GraphWindow::keyPress(int _t1, bool _t2)$/;"	f	class:GraphWindow
keyPressEvent	apps/MIFit/python/Console.cpp	/^void Console::keyPressEvent(QKeyEvent *event)$/;"	f	class:Console
keyPressEvent	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::keyPressEvent(QKeyEvent *event)$/;"	f	class:DictEditCanvas
keyPressEvent	apps/MIFit/ui/GLOverviewCanvas.cpp	/^void GLOverviewCanvas::keyPressEvent(QKeyEvent *e)$/;"	f	class:GLOverviewCanvas
keyPressEvent	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::keyPressEvent(QKeyEvent *e)$/;"	f	class:MIGLWidget
keyPressEvent	apps/MIFit/ui/graphlib.cpp	/^void GraphWindow::keyPressEvent(QKeyEvent *key_evt)$/;"	f	class:GraphWindow
keyword	libs/cmtz/ccp4_parser.h	/^  char   keyword[5];      \/* Keyword (=token[1].token, uppercased) *\/$/;"	m	struct:CCP4::__anon27
kl	libs/map/fftlib.cpp	1473;"	d	file:
kl	libs/map/fftlib.cpp	1763;"	d	file:
kmax	libs/map/CMapHeaderBase.h	/^    int hmin, hmax, kmin, kmax, lmin, lmax;$/;"	m	class:CMapHeaderBase
kmax	libs/map/fftsub.cpp	/^static int nx, ny, nz, hmax, kmax, lmax;$/;"	v	file:
kmin	libs/map/CMapHeaderBase.h	/^    int hmin, hmax, kmin, kmax, lmin, lmax;$/;"	m	class:CMapHeaderBase
ks	libs/map/fftlib.cpp	1464;"	d	file:
ks	libs/map/fftlib.cpp	1771;"	d	file:
l00014	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00014"><\/a><a class="code" href="umtzlib_8h.html#a0">00014<\/a> <font class="preprocessor">#define MTZRECLEN 80<\/font>$/;"	a
l00015	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00015"><\/a><a class="code" href="umtzlib_8h.html#a1">00015<\/a> <font class="preprocessor"><\/font><font class="preprocessor">#define MTZBATCHR (3*MTZRECLEN)<\/font>$/;"	a
l00016	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00016"><\/a><a class="code" href="umtzlib_8h.html#a2">00016<\/a> <font class="preprocessor"><\/font><font class="preprocessor">#define MTZBATINT 29<\/font>$/;"	a
l00017	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00017"><\/a><a class="code" href="umtzlib_8h.html#a3">00017<\/a> <font class="preprocessor"><\/font><font class="preprocessor">#define MTZBATFLT 156<\/font>$/;"	a
l00018	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00018"><\/a><a class="code" href="umtzlib_8h.html#a4">00018<\/a> <font class="preprocessor"><\/font><font class="preprocessor">#define MTZBATLEN ( MTZBATCHR + 4*(MTZBATINT+MTZBATFLT) )<\/font>$/;"	a
l00019	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00019"><\/a><a class="code" href="umtzlib_8h.html#a5">00019<\/a> <font class="preprocessor"><\/font><font class="preprocessor">#define MTZDATAOFF 20<\/font>$/;"	a
l00022	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00022"><\/a><a class="code" href="structumtz__hdr__.html#m0">00022<\/a>   <font class="keywordtype">char<\/font> data[MTZRECLEN];$/;"	a
l00026	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00026"><\/a><a class="code" href="structumtz__bat__.html#m0">00026<\/a>   <font class="keywordtype">char<\/font>  cdata[3*MTZRECLEN];$/;"	a
l00027	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00027"><\/a><a class="code" href="structumtz__bat__.html#m1">00027<\/a>   <font class="keywordtype">int<\/font>   idata[MTZBATINT];$/;"	a
l00028	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00028"><\/a><a class="code" href="structumtz__bat__.html#m2">00028<\/a>   <font class="keywordtype">float<\/font> fdata[MTZBATFLT];$/;"	a
l00034	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00034"><\/a><a class="code" href="structumtz__list__.html#m0">00034<\/a>   <font class="keywordtype">int<\/font> size, capacity;$/;"	a
l00035	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00035"><\/a><a class="code" href="structumtz__list__.html#m2">00035<\/a>   <font class="keywordtype">void<\/font>* data;$/;"	a
l00041	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00041"><\/a><a class="code" href="structumtzfile__.html#m1">00041<\/a>   <font class="keywordtype">char<\/font> filename[200], mode[4];$/;"	a
l00042	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00042"><\/a><a class="code" href="structumtzfile__.html#m4">00042<\/a>   <font class="keywordtype">int<\/font> iunit, ncol, nrow;$/;"	a
l00043	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00043"><\/a><a class="code" href="structumtzfile__.html#m5">00043<\/a>   <font class="keywordtype">float<\/font> mnf;$/;"	a
l00044	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00044"><\/a><a class="code" href="structumtzfile__.html#m6">00044<\/a>   <a class="code" href="structumtz__list__.html">umtz_list<\/a> headers;$/;"	a
l00045	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00045"><\/a><a class="code" href="structumtzfile__.html#m7">00045<\/a>   <a class="code" href="structumtz__list__.html">umtz_list<\/a> history;$/;"	a
l00046	libs/umtz/html/umtzlib_8h-source.html	/^<a name="l00046"><\/a><a class="code" href="structumtzfile__.html#m8">00046<\/a>   <a class="code" href="structumtz__list__.html">umtz_list<\/a> batches;$/;"	a
l00065	libs/umtz/html/mmtzlib_8h-source.html	/^<a name="l00065"><\/a><a class="code" href="mmtzlib_8h.html#a0">00065<\/a> <font class="keyword">typedef<\/font> <a class="code" href="structumtzfile__.html">umtzfile<\/a>* <a class="code" href="structumtzfile__.html">mmtzfile<\/a>;$/;"	a
l00069	libs/umtz/html/mmtzlib_8h-source.html	/^<a name="l00069"><\/a><a class="code" href="structmmtz__column__.html#m0">00069<\/a>   <font class="keywordtype">char<\/font> label[31];$/;"	a
l00070	libs/umtz/html/mmtzlib_8h-source.html	/^<a name="l00070"><\/a><a class="code" href="structmmtz__column__.html#m1">00070<\/a>   <font class="keywordtype">char<\/font> type[2];$/;"	a
l00075	libs/umtz/html/mmtzlib_8h-source.html	/^<a name="l00075"><\/a><a class="code" href="structmmtz__dataset__.html#m0">00075<\/a>   <font class="keywordtype">char<\/font> dname[65];$/;"	a
l00076	libs/umtz/html/mmtzlib_8h-source.html	/^<a name="l00076"><\/a><a class="code" href="structmmtz__dataset__.html#m1">00076<\/a>   <font class="keywordtype">float<\/font> wavel;$/;"	a
l00081	libs/umtz/html/mmtzlib_8h-source.html	/^<a name="l00081"><\/a><a class="code" href="structmmtz__crystal__.html#m0">00081<\/a>   <font class="keywordtype">char<\/font> xname[65];$/;"	a
l00082	libs/umtz/html/mmtzlib_8h-source.html	/^<a name="l00082"><\/a><a class="code" href="structmmtz__crystal__.html#m1">00082<\/a>   <font class="keywordtype">float<\/font> cell[6];$/;"	a
l00083	libs/umtz/html/mmtzlib_8h-source.html	/^<a name="l00083"><\/a><a class="code" href="structmmtz__crystal__.html#m2">00083<\/a>   <font class="keywordtype">char<\/font> pname[65];$/;"	a
label	apps/MIFit/core/ATOMLABEL.cpp	/^const std::string&ATOMLABEL::label() const$/;"	f	class:ATOMLABEL
label	apps/MIFit/core/ATOMLABEL.cpp	/^void ATOMLABEL::label(const char *text)$/;"	f	class:ATOMLABEL
label	apps/MIFit/ui/MoleculeXmlHandler.h	/^    ATOMLABEL *label;$/;"	m	class:MoleculeXmlHandler
label	apps/MIFit/ui/graphlib.h	/^    std::string label;$/;"	m	class:CURVELABEL
label	apps/MIFit/ui/graphlib.h	/^    std::string label;$/;"	m	class:GR_POINT
label	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QLabel *label;$/;"	m	class:Ui_CustomJobDialog
label	apps/MIFit/ui/ui_CustomJobPreferences.h	/^    QLabel *label;$/;"	m	class:Ui_CustomJobPreferences
label	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QLabel *label;$/;"	m	class:Ui_EnvironmentPreferences
label	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QLabel *label;$/;"	m	class:Ui_GLFormatEdit
label	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QLabel *label;$/;"	m	class:Ui_GeneralPreferences
label	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QLabel *label;$/;"	m	class:Ui_LSQFitDialog
label	apps/MIFit/ui/ui_ManageCrystals.h	/^    QLabel *label;$/;"	m	class:Ui_ManageCrystals
label	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QLabel *label;$/;"	m	class:Ui_RefinementOptionsDialog
label	apps/MIFit/ui/ui_SelectCrystal.h	/^    QLabel *label;$/;"	m	class:Ui_SelectCrystal
label	apps/MIFit/ui/ui_SmilesDialog.h	/^    QLabel *label;$/;"	m	class:Ui_SmilesDialog
label	libs/cmtz/mtzdata.h	/^typedef struct { char label[31];       \/**< column name as given by user *\/$/;"	m	struct:__anon20
label	libs/umtz/mmtzlib.h	/^    char label[31];$/;"	m	struct:mmtz_column_
labelAtom	apps/MIFit/core/Molecule.cpp	/^void Molecule::labelAtom(MIAtom *atom, Residue *res)$/;"	f	class:Molecule
labelAtomStyle	apps/MIFit/core/Molecule.cpp	/^void Molecule::labelAtomStyle(MIAtom *atom, int style)$/;"	f	class:Molecule
labelEveryNthResidue	apps/MIFit/core/Molecule.cpp	/^void Molecule::labelEveryNthResidue(int n)$/;"	f	class:Molecule
labelString	apps/MIFit/core/ATOMLABEL.cpp	/^std::string ATOMLABEL::labelString(const Monomer *res, const MIAtom *atom, int style)$/;"	f	class:ATOMLABEL
label_	apps/MIFit/core/ATOMLABEL.h	/^    mutable std::string label_;$/;"	m	class:ATOMLABEL
label_10	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QLabel *label_10;$/;"	m	class:Ui_GLFormatEdit
label_10	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QLabel *label_10;$/;"	m	class:Ui_RefinementOptionsDialog
label_11	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QLabel *label_11;$/;"	m	class:Ui_GLFormatEdit
label_11	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QLabel *label_11;$/;"	m	class:Ui_RefinementOptionsDialog
label_12	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QLabel *label_12;$/;"	m	class:Ui_GLFormatEdit
label_14	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QLabel *label_14;$/;"	m	class:Ui_PhaseFileLoadDialog
label_2	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QLabel *label_2;$/;"	m	class:Ui_CustomJobDialog
label_2	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QLabel *label_2;$/;"	m	class:Ui_EnvironmentPreferences
label_2	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QLabel *label_2;$/;"	m	class:Ui_GLFormatEdit
label_2	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QLabel *label_2;$/;"	m	class:Ui_LSQFitDialog
label_2	apps/MIFit/ui/ui_ManageCrystals.h	/^    QLabel *label_2;$/;"	m	class:Ui_ManageCrystals
label_2	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QLabel *label_2;$/;"	m	class:Ui_PhaseFileLoadDialog
label_2	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QLabel *label_2;$/;"	m	class:Ui_RefinementOptionsDialog
label_2	apps/MIFit/ui/ui_SelectCrystal.h	/^    QLabel *label_2;$/;"	m	class:Ui_SelectCrystal
label_3	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QLabel *label_3;$/;"	m	class:Ui_CustomJobDialog
label_3	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QLabel *label_3;$/;"	m	class:Ui_EnvironmentPreferences
label_3	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QLabel *label_3;$/;"	m	class:Ui_GLFormatEdit
label_3	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QLabel *label_3;$/;"	m	class:Ui_GeneralPreferences
label_3	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QLabel *label_3;$/;"	m	class:Ui_LSQFitDialog
label_3	apps/MIFit/ui/ui_ManageCrystals.h	/^    QLabel *label_3;$/;"	m	class:Ui_ManageCrystals
label_3	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QLabel *label_3;$/;"	m	class:Ui_PhaseFileLoadDialog
label_3	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QLabel *label_3;$/;"	m	class:Ui_RefinementOptionsDialog
label_3	apps/MIFit/ui/ui_SelectCrystal.h	/^    QLabel *label_3;$/;"	m	class:Ui_SelectCrystal
label_4	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QLabel *label_4;$/;"	m	class:Ui_CustomJobDialog
label_4	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QLabel *label_4;$/;"	m	class:Ui_GLFormatEdit
label_4	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QLabel *label_4;$/;"	m	class:Ui_LSQFitDialog
label_4	apps/MIFit/ui/ui_ManageCrystals.h	/^    QLabel *label_4;$/;"	m	class:Ui_ManageCrystals
label_4	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QLabel *label_4;$/;"	m	class:Ui_PhaseFileLoadDialog
label_4	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QLabel *label_4;$/;"	m	class:Ui_RefinementOptionsDialog
label_5	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QLabel *label_5;$/;"	m	class:Ui_CustomJobDialog
label_5	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QLabel *label_5;$/;"	m	class:Ui_GLFormatEdit
label_5	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QLabel *label_5;$/;"	m	class:Ui_LSQFitDialog
label_5	apps/MIFit/ui/ui_ManageCrystals.h	/^    QLabel *label_5;$/;"	m	class:Ui_ManageCrystals
label_5	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QLabel *label_5;$/;"	m	class:Ui_PhaseFileLoadDialog
label_5	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QLabel *label_5;$/;"	m	class:Ui_RefinementOptionsDialog
label_6	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QLabel *label_6;$/;"	m	class:Ui_CustomJobDialog
label_6	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QLabel *label_6;$/;"	m	class:Ui_EnvironmentPreferences
label_6	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QLabel *label_6;$/;"	m	class:Ui_GLFormatEdit
label_6	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QLabel *label_6;$/;"	m	class:Ui_LSQFitDialog
label_6	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QLabel *label_6;$/;"	m	class:Ui_RefinementOptionsDialog
label_7	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QLabel *label_7;$/;"	m	class:Ui_CustomJobDialog
label_7	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QLabel *label_7;$/;"	m	class:Ui_EnvironmentPreferences
label_7	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QLabel *label_7;$/;"	m	class:Ui_GLFormatEdit
label_7	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QLabel *label_7;$/;"	m	class:Ui_LSQFitDialog
label_8	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QLabel *label_8;$/;"	m	class:Ui_EnvironmentPreferences
label_8	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QLabel *label_8;$/;"	m	class:Ui_GLFormatEdit
label_9	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QLabel *label_9;$/;"	m	class:Ui_GLFormatEdit
label_9	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QLabel *label_9;$/;"	m	class:Ui_RefinementOptionsDialog
labelsFont	libs/opengl/Axes.h	/^            std::auto_ptr<Text> labelsFont;$/;"	m	class:mi::opengl::Axes
labelsFontFile	apps/MIFit/ui/CMolwViewScene.h	/^    static std::string labelsFontFile;$/;"	m	class:CMolwViewScene
labelsFontSize	libs/opengl/Axes.cpp	/^int Axes::labelsFontSize = 16;$/;"	m	class:mi::opengl::Axes	file:
labelsFontSize	libs/opengl/Axes.h	/^            static int labelsFontSize;$/;"	m	class:mi::opengl::Axes
labelsFont_	apps/MIFit/ui/GLRenderer.h	/^    std::auto_ptr<mi::opengl::Text> labelsFont_;$/;"	m	class:GLRenderer
labelsTextScale	apps/MIFit/ui/GLRenderer.h	/^    float labelsTextScale;$/;"	m	class:GLRenderer
labels_visible	apps/MIFit/core/Molecule.h	/^    int labels_visible;$/;"	m	class:Molecule
last	libs/opengl/zlib/infutil.h	/^    uInt last;          \/* true if this block is the last block *\/$/;"	m	struct:inflate_blocks_state
last_op	libs/cmtz/library_file.h	/^  unsigned int last_op : 2;$/;"	m	struct:CCP4::_CFileStruct
last_rot	apps/MIFit/ui/surf.cpp	/^    Tuple3<float> last_rot;$/;"	m	class:MISurface	file:
last_slice	libs/jacgrid/isosurface.cpp	/^static unsigned int *this_slice, *last_slice;$/;"	v	file:
later	apps/MIFit/jobs/OpenJobResults.cpp	/^bool later(const QPair<QString, QDateTime> &f1, const QPair<QString, QDateTime> &f2)$/;"	f	namespace:__anon16
latestFileBrowseDirectory	apps/MIFit/ui/Application.cpp	/^QString Application::latestFileBrowseDirectory(const QString &path)$/;"	f	class:Application
laue_name	libs/cmtz/ccp4_spg.h	/^  char laue_name[20];     \/* Laue class name *\/$/;"	m	struct:CSym::ccp4_spacegroup_
laue_sampling	libs/cmtz/ccp4_spg.h	/^  int laue_sampling[3];   \/* sampling factors for FFT *\/$/;"	m	struct:CSym::ccp4_spacegroup_
lbcell	libs/cmtz/mtzdata.h	/^		 int lbcell[6];        \/**< refinement flags for cell *\/$/;"	m	struct:bathead
lbits	libs/opengl/zlib/infcodes.cpp	/^    Byte lbits;         \/* ltree bits decoded per branch *\/$/;"	m	struct:inflate_codes_state	file:
lbmflg	libs/cmtz/mtzdata.h	/^		 int lbmflg;           \/**< flag for type of beam info:$/;"	m	struct:bathead
lbound	libs/chemlib/Matrix.h	/^        Subscript lbound() const$/;"	f	class:TNT::Matrix
lcrflg	libs/cmtz/mtzdata.h	/^		 int lcrflg;           \/**< mosaicity model: 0 = isotropic, $/;"	m	struct:bathead
ldtype	libs/cmtz/mtzdata.h	/^		 int ldtype;           \/**< type of data: 2D (1), 3D (2), or $/;"	m	struct:bathead
leaveEvent	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::leaveEvent(QEvent*)$/;"	f	class:MIGLWidget
left	libs/opengl/zlib/infutil.h	/^        uInt left;      \/* if STORED, bytes left to copy *\/$/;"	m	union:inflate_blocks_state::__anon35
leftViewport	libs/opengl/StereoView.h	/^            Viewport *leftViewport;$/;"	m	class:mi::opengl::StereoView
leftpoint	libs/opengl/Object3d.h	/^            float leftpoint;$/;"	m	class:mi::opengl::Object3d
len	libs/opengl/zlib/infcodes.cpp	/^    uInt len;$/;"	m	struct:inflate_codes_state	file:
len	libs/umtz/library.h	/^    int len;$/;"	m	struct:SStrPar
length	apps/MIFit/ui/LSQFitDialog.h	/^    int length;$/;"	m	class:MATCH
length	libs/cmtz/library_file.h	/^  off_t length;$/;"	m	struct:CCP4::_CFileStruct
length	libs/math/Vector3.h	/^        Type Vector3<Type>::length() const$/;"	f	class:mi::math::Vector3
length	libs/math/Vector4.h	/^        Type Vector4<Type>::length() const$/;"	f	class:mi::math::Vector4
length	libs/opengl/Axes.h	/^            int length;$/;"	m	class:mi::opengl::Axes
length	libs/opengl/interact/TargetFeedback.h	/^                float length;$/;"	m	class:mi::opengl::interact::TargetFeedback
length	libs/opengl/interact/TranslationFeedback.h	/^                float length;$/;"	m	class:mi::opengl::interact::TranslationFeedback
lengthSpinBox	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QSpinBox *lengthSpinBox;$/;"	m	class:Ui_LSQFitDialog
lengthSquared	libs/math/Vector3.h	/^        Type Vector3<Type>::lengthSquared() const$/;"	f	class:mi::math::Vector3
lengthSquared	libs/math/Vector4.h	/^        Type Vector4<Type>::lengthSquared() const$/;"	f	class:mi::math::Vector4
levelLabel_1	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *levelLabel_1;$/;"	m	class:Ui_BValueColors
levelLabel_10	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *levelLabel_10;$/;"	m	class:Ui_BValueColors
levelLabel_2	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *levelLabel_2;$/;"	m	class:Ui_BValueColors
levelLabel_3	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *levelLabel_3;$/;"	m	class:Ui_BValueColors
levelLabel_4	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *levelLabel_4;$/;"	m	class:Ui_BValueColors
levelLabel_5	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *levelLabel_5;$/;"	m	class:Ui_BValueColors
levelLabel_6	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *levelLabel_6;$/;"	m	class:Ui_BValueColors
levelLabel_7	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *levelLabel_7;$/;"	m	class:Ui_BValueColors
levelLabel_8	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *levelLabel_8;$/;"	m	class:Ui_BValueColors
levelLabel_9	apps/MIFit/ui/ui_BValueColors.h	/^    QLabel *levelLabel_9;$/;"	m	class:Ui_BValueColors
levelSpinBox_1	apps/MIFit/ui/ui_BValueColors.h	/^    QDoubleSpinBox *levelSpinBox_1;$/;"	m	class:Ui_BValueColors
levelSpinBox_10	apps/MIFit/ui/ui_BValueColors.h	/^    QDoubleSpinBox *levelSpinBox_10;$/;"	m	class:Ui_BValueColors
levelSpinBox_2	apps/MIFit/ui/ui_BValueColors.h	/^    QDoubleSpinBox *levelSpinBox_2;$/;"	m	class:Ui_BValueColors
levelSpinBox_3	apps/MIFit/ui/ui_BValueColors.h	/^    QDoubleSpinBox *levelSpinBox_3;$/;"	m	class:Ui_BValueColors
levelSpinBox_4	apps/MIFit/ui/ui_BValueColors.h	/^    QDoubleSpinBox *levelSpinBox_4;$/;"	m	class:Ui_BValueColors
levelSpinBox_5	apps/MIFit/ui/ui_BValueColors.h	/^    QDoubleSpinBox *levelSpinBox_5;$/;"	m	class:Ui_BValueColors
levelSpinBox_6	apps/MIFit/ui/ui_BValueColors.h	/^    QDoubleSpinBox *levelSpinBox_6;$/;"	m	class:Ui_BValueColors
levelSpinBox_7	apps/MIFit/ui/ui_BValueColors.h	/^    QDoubleSpinBox *levelSpinBox_7;$/;"	m	class:Ui_BValueColors
levelSpinBox_8	apps/MIFit/ui/ui_BValueColors.h	/^    QDoubleSpinBox *levelSpinBox_8;$/;"	m	class:Ui_BValueColors
levelSpinBox_9	apps/MIFit/ui/ui_BValueColors.h	/^    QDoubleSpinBox *levelSpinBox_9;$/;"	m	class:Ui_BValueColors
lig	libs/chemlib/Dictionary.h	/^        Ligand *lig;$/;"	m	class:chemlib::LigDictionary
light	apps/MIFit/ui/DictEditScene.h	/^    mi::opengl::Light *light;$/;"	m	class:DictEditScene
light	apps/MIFit/ui/GLRenderer.h	/^    mi::opengl::Light *light;$/;"	m	class:GLRenderer
light2	apps/MIFit/ui/GLRenderer.h	/^    mi::opengl::Light *light2;$/;"	m	class:GLRenderer
lightId	libs/opengl/Light.h	/^            int lightId;$/;"	m	class:mi::opengl::Light
line	apps/MIFit/core/CONTACT.h	/^    chemlib::Bond line;$/;"	m	class:CONTACT
line	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle *RenderStyle::line = NULL;$/;"	m	class:RenderStyle	file:
line	apps/MIFit/core/RenderStyle.h	/^    static const RenderStyle *line;$/;"	m	class:RenderStyle
line	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QFrame *line;$/;"	m	class:Ui_PhaseFileLoadDialog
line	apps/MIFit/ui/ui_SelectCrystal.h	/^    QFrame *line;$/;"	m	class:Ui_SelectCrystal
lineEditToModelsTree	apps/MIFit/ui/ModelsView.cpp	/^ModelsView::LineEditToModelsTreeMap ModelsView::lineEditToModelsTree;$/;"	m	class:ModelsView	file:
lineEditToModelsTree	apps/MIFit/ui/ModelsView.h	/^    static LineEditToModelsTreeMap lineEditToModelsTree;$/;"	m	class:ModelsView
lineThickness	apps/MIFit/ui/ViewPointSettings.h	/^    int lineThickness;$/;"	m	class:ViewPointSettings
lineWidthDepthCued	apps/MIFit/ui/GLRenderer.h	/^    bool lineWidthDepthCued;$/;"	m	class:GLRenderer
lineWidthLabel	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *lineWidthLabel;$/;"	m	class:Ui_ContourOptionsWidget
lineWidthSpinBox	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QDoubleSpinBox *lineWidthSpinBox;$/;"	m	class:Ui_ContourOptionsWidget
line_3	apps/MIFit/ui/ui_SelectCrystal.h	/^    QFrame *line_3;$/;"	m	class:Ui_SelectCrystal
link_here	libs/chemlib/Ligand.h	/^        char link_here[MAXNAME], link_next[MAXNAME]; \/\/MAXNAME is in define.h$/;"	m	class:chemlib::Ligand
link_here	libs/chemlib/MIMoleculeBase.h	/^        char link_here[MAXNAME];$/;"	m	class:chemlib::MIMoleculeBase
link_next	libs/chemlib/Ligand.h	/^        char link_here[MAXNAME], link_next[MAXNAME]; \/\/MAXNAME is in define.h$/;"	m	class:chemlib::Ligand
link_next	libs/chemlib/MIMoleculeBase.h	/^        char link_next[MAXNAME];$/;"	m	class:chemlib::MIMoleculeBase
link_symm	apps/MIFit/ui/MIGLWidget.h	/^    bool link_symm;$/;"	m	class:MIGLWidget
linkage_type	libs/chemlib/Monomer.h	/^        unsigned short linkage_type() const$/;"	f	class:chemlib::Monomer
linkage_type_	libs/chemlib/Monomer.h	/^        unsigned short linkage_type_;$/;"	m	class:chemlib::Monomer
linked	libs/chemlib/MIMoleculeBase.cpp	/^bool MIMoleculeBase::linked(MIAtom *a1)$/;"	f	class:chemlib::MIMoleculeBase
linked	libs/chemlib/MIMoleculeBase.cpp	/^bool MIMoleculeBase::linked(MIAtom *a1, MIAtom *a2)$/;"	f	class:chemlib::MIMoleculeBase
linterp	libs/jacgrid/isosurface.cpp	215;"	d	file:
linterp	libs/jacgrid/isosurface.cpp	394;"	d	file:
linterp	libs/jacgrid/isosurface.cpp	981;"	d	file:
linterp	libs/jacgrid/plane.cpp	141;"	d	file:
listWidget	apps/MIFit/ui/ui_AtomColors.h	/^    QListWidget *listWidget;$/;"	m	class:Ui_AtomColors
listWidget	apps/MIFit/ui/ui_PreferencesDialog.h	/^    QListWidget *listWidget;$/;"	m	class:Ui_PreferencesDialog
listeningToBatchJobManager	apps/MIFit/ui/JobsView.h	/^    bool listeningToBatchJobManager;$/;"	m	class:JobsView
liststring	libs/chemlib/MIAtom.cpp	/^std::string MIAtom::liststring(const MIAtom *atom)$/;"	f	class:chemlib::MIAtom
liststring	libs/chemlib/Residue.cpp	/^const std::string Residue::liststring(Residue *res)$/;"	f	class:chemlib::Residue
lit	libs/opengl/zlib/infcodes.cpp	/^        uInt lit;       \/* if LIT, literal *\/$/;"	m	union:inflate_codes_state::__anon39	file:
ll	libs/map/fftlib.cpp	1474;"	d	file:
ll	libs/map/fftlib.cpp	1762;"	d	file:
lmax	libs/map/CMapHeaderBase.h	/^    int hmin, hmax, kmin, kmax, lmin, lmax;$/;"	m	class:CMapHeaderBase
lmax	libs/map/fftsub.cpp	/^static int nx, ny, nz, hmax, kmax, lmax;$/;"	v	file:
lmin	libs/map/CMapHeaderBase.h	/^    int hmin, hmax, kmin, kmax, lmin, lmax;$/;"	m	class:CMapHeaderBase
load	apps/MIFit/core/Cfiles.h	/^    enum Mode { store = 0, load = 1 };$/;"	e	enum:CArchive::Mode
load	apps/MIFit/core/ViewPointIO.cpp	/^void ViewPointIO::load(ViewPoint &vp, FILE *fp)$/;"	f	class:ViewPointIO
load	apps/MIFit/ui/MapSettings.cpp	/^void MapSettings::load(MapSettingsBase& settings)$/;"	f	class:MapSettings
loadSelectedCrystal	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::loadSelectedCrystal()$/;"	f	class:ManageCrystals
loadSettings	apps/MIFit/ui/AddResidueDialog.cpp	/^void AddResidueDialog::loadSettings()$/;"	f	class:AddResidueDialog
loadStyle	apps/MIFit/ui/MapSettings.cpp	/^void MapSettings::loadStyle(int i, MapSettingsBase& settings)$/;"	f	class:MapSettings
loadobject	libs/opengl/Object3d.cpp	/^void Object3d::loadobject(istream &br)$/;"	f	class:mi::opengl::Object3d
loc	libs/cmtz/library_file.h	/^  off_t loc;$/;"	m	struct:CCP4::_CFileStruct
local	libs/opengl/zlib/crc32.cpp	10;"	d	file:
local	libs/opengl/zlib/zutil.h	30;"	d
localServer	apps/MIFit/script/LocalSocketScript.h	/^    QLocalServer *localServer;$/;"	m	class:LocalSocketScript
lockRefineTarget	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::lockRefineTarget()$/;"	f	class:MIMolOpt
log	apps/MIFit/ui/Logger.cpp	/^void Logger::log(const char *format, ...)$/;"	f	class:Logger
log	apps/MIFit/ui/Logger.h	/^    static void log(const std::string &str)$/;"	f	class:Logger
logDock	apps/MIFit/ui/MIMainWindow.h	/^    QDockWidget *logDock;$/;"	m	class:MIMainWindow
logFile	apps/MIFit/jobs/BatchJob.h	/^    QString logFile;$/;"	m	class:BatchJob
logOpenGLErrors	apps/MIFit/ui/CMolwViewScene.cpp	/^static void logOpenGLErrors(const char *file, int line)$/;"	f	file:
logOpenGLErrors	apps/MIFit/ui/DictEditScene.cpp	/^static void logOpenGLErrors(const char *file, int line)$/;"	f	file:
logOpenGLErrors	apps/MIFit/ui/GLRenderer.cpp	/^static void logOpenGLErrors(const char *file, int line)$/;"	f	file:
logWindow	apps/MIFit/ui/MIMainWindow.h	/^    QTextEdit *logWindow;$/;"	m	class:MIMainWindow
logical	libs/map/fftlib.cpp	/^typedef long int logical;$/;"	t	file:
lookAt	libs/opengl/Camera.cpp	/^void Camera::lookAt(const Vector3<float> &target)$/;"	f	class:mi::opengl::Camera
lookupSpaceGroup	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::lookupSpaceGroup()$/;"	f	class:ManageCrystals
lpal	apps/MIFit/ui/Application.h	/^    MIPalette *lpal;$/;"	m	class:Application
ls	libs/map/fftlib.cpp	1465;"	d	file:
ls	libs/map/fftlib.cpp	1770;"	d	file:
lsqplane	libs/chemlib/mol_util.cpp	/^void lsqplane(PLANE *plane)$/;"	f	namespace:chemlib
lsqplane	libs/chemlib/mol_util.cpp	/^void lsqplane(Plane &plane, float *normal, float *displace)$/;"	f	namespace:chemlib
lsqplane	libs/molopt/MIMolOpt.cpp	/^void lsqplane(PLANE &plane)$/;"	f
ltree	libs/opengl/zlib/infcodes.cpp	/^    inflate_huft *ltree;        \/* literal\/length\/eob tree *\/$/;"	m	struct:inflate_codes_state	file:
m0	libs/umtz/html/structmmtz__column__.html	/^<a name="m0" doxytag="mmtz_column_::label"><\/a><p>$/;"	a
m0	libs/umtz/html/structmmtz__crystal__.html	/^<a name="m0" doxytag="mmtz_crystal_::xname"><\/a><p>$/;"	a
m0	libs/umtz/html/structmmtz__dataset__.html	/^<a name="m0" doxytag="mmtz_dataset_::dname"><\/a><p>$/;"	a
m0	libs/umtz/html/structumtz__bat__.html	/^<a name="m0" doxytag="umtz_bat_::cdata"><\/a><p>$/;"	a
m0	libs/umtz/html/structumtz__hdr__.html	/^<a name="m0" doxytag="umtz_hdr_::data"><\/a><p>$/;"	a
m0	libs/umtz/html/structumtz__list__.html	/^<a name="m0" doxytag="umtz_list_::size"><\/a><p>$/;"	a
m0	libs/umtz/html/structumtzfile__.html	/^<a name="m0" doxytag="umtzfile_::filename"><\/a><p>$/;"	a
m00	libs/math/Matrix3.h	/^            Type m00;$/;"	m	class:mi::math::Matrix3
m00	libs/math/Matrix4.h	/^            Type m00;$/;"	m	class:mi::math::Matrix4
m000	libs/map/EMapBase.cpp	/^float m000, m001, m010, m011, m100, m101, m110, m111, dx1, dy1, dz1;$/;"	v
m001	libs/map/EMapBase.cpp	/^float m000, m001, m010, m011, m100, m101, m110, m111, dx1, dy1, dz1;$/;"	v
m01	libs/math/Matrix3.h	/^            Type m01;$/;"	m	class:mi::math::Matrix3
m01	libs/math/Matrix4.h	/^            Type m01;$/;"	m	class:mi::math::Matrix4
m010	libs/map/EMapBase.cpp	/^float m000, m001, m010, m011, m100, m101, m110, m111, dx1, dy1, dz1;$/;"	v
m011	libs/map/EMapBase.cpp	/^float m000, m001, m010, m011, m100, m101, m110, m111, dx1, dy1, dz1;$/;"	v
m02	libs/math/Matrix3.h	/^            Type m02;$/;"	m	class:mi::math::Matrix3
m02	libs/math/Matrix4.h	/^            Type m02;$/;"	m	class:mi::math::Matrix4
m03	libs/math/Matrix4.h	/^            Type m03;$/;"	m	class:mi::math::Matrix4
m1	libs/umtz/html/structmmtz__column__.html	/^<a name="m1" doxytag="mmtz_column_::type"><\/a><p>$/;"	a
m1	libs/umtz/html/structmmtz__crystal__.html	/^<a name="m1" doxytag="mmtz_crystal_::cell"><\/a><p>$/;"	a
m1	libs/umtz/html/structmmtz__dataset__.html	/^<a name="m1" doxytag="mmtz_dataset_::wavel"><\/a><p>$/;"	a
m1	libs/umtz/html/structumtz__bat__.html	/^<a name="m1" doxytag="umtz_bat_::idata"><\/a><p>$/;"	a
m1	libs/umtz/html/structumtz__list__.html	/^<a name="m1" doxytag="umtz_list_::capacity"><\/a><p>$/;"	a
m1	libs/umtz/html/structumtzfile__.html	/^<a name="m1" doxytag="umtzfile_::mode"><\/a><p>$/;"	a
m10	libs/math/Matrix3.h	/^            Type m10;$/;"	m	class:mi::math::Matrix3
m10	libs/math/Matrix4.h	/^            Type m10;$/;"	m	class:mi::math::Matrix4
m100	libs/map/EMapBase.cpp	/^float m000, m001, m010, m011, m100, m101, m110, m111, dx1, dy1, dz1;$/;"	v
m101	libs/map/EMapBase.cpp	/^float m000, m001, m010, m011, m100, m101, m110, m111, dx1, dy1, dz1;$/;"	v
m11	libs/math/Matrix3.h	/^            Type m11;$/;"	m	class:mi::math::Matrix3
m11	libs/math/Matrix4.h	/^            Type m11;$/;"	m	class:mi::math::Matrix4
m110	libs/map/EMapBase.cpp	/^float m000, m001, m010, m011, m100, m101, m110, m111, dx1, dy1, dz1;$/;"	v
m111	libs/map/EMapBase.cpp	/^float m000, m001, m010, m011, m100, m101, m110, m111, dx1, dy1, dz1;$/;"	v
m12	libs/math/Matrix3.h	/^            Type m12;$/;"	m	class:mi::math::Matrix3
m12	libs/math/Matrix4.h	/^            Type m12;$/;"	m	class:mi::math::Matrix4
m13	libs/math/Matrix4.h	/^            Type m13;$/;"	m	class:mi::math::Matrix4
m2	libs/umtz/html/structmmtz__crystal__.html	/^<a name="m2" doxytag="mmtz_crystal_::pname"><\/a><p>$/;"	a
m2	libs/umtz/html/structumtz__bat__.html	/^<a name="m2" doxytag="umtz_bat_::fdata"><\/a><p>$/;"	a
m2	libs/umtz/html/structumtz__list__.html	/^<a name="m2" doxytag="umtz_list_::data"><\/a><p>$/;"	a
m2	libs/umtz/html/structumtzfile__.html	/^<a name="m2" doxytag="umtzfile_::iunit"><\/a><p>$/;"	a
m20	libs/math/Matrix3.h	/^            Type m20;$/;"	m	class:mi::math::Matrix3
m20	libs/math/Matrix4.h	/^            Type m20;$/;"	m	class:mi::math::Matrix4
m21	libs/math/Matrix3.h	/^            Type m21;$/;"	m	class:mi::math::Matrix3
m21	libs/math/Matrix4.h	/^            Type m21;$/;"	m	class:mi::math::Matrix4
m22	libs/math/Matrix3.h	/^            Type m22;$/;"	m	class:mi::math::Matrix3
m22	libs/math/Matrix4.h	/^            Type m22;$/;"	m	class:mi::math::Matrix4
m23	libs/math/Matrix4.h	/^            Type m23;$/;"	m	class:mi::math::Matrix4
m3	libs/umtz/html/structumtzfile__.html	/^<a name="m3" doxytag="umtzfile_::ncol"><\/a><p>$/;"	a
m30	libs/math/Matrix4.h	/^            Type m30;$/;"	m	class:mi::math::Matrix4
m31	libs/math/Matrix4.h	/^            Type m31;$/;"	m	class:mi::math::Matrix4
m32	libs/math/Matrix4.h	/^            Type m32;$/;"	m	class:mi::math::Matrix4
m33	libs/math/Matrix4.h	/^            Type m33;$/;"	m	class:mi::math::Matrix4
m4	libs/umtz/html/structumtzfile__.html	/^<a name="m4" doxytag="umtzfile_::nrow"><\/a><p>$/;"	a
m5	libs/umtz/html/structumtzfile__.html	/^<a name="m5" doxytag="umtzfile_::mnf"><\/a><p>$/;"	a
m6	libs/umtz/html/structumtzfile__.html	/^<a name="m6" doxytag="umtzfile_::headers"><\/a><p>$/;"	a
m7	libs/umtz/html/structumtzfile__.html	/^<a name="m7" doxytag="umtzfile_::history"><\/a><p>$/;"	a
m8	libs/umtz/html/structumtzfile__.html	/^<a name="m8" doxytag="umtzfile_::batches"><\/a><p>$/;"	a
m_	libs/chemlib/Matrix.h	/^        Subscript m_;$/;"	m	class:TNT::Matrix
m_author	apps/MIFit/core/Annotation.h	/^    std::string m_author;$/;"	m	class:Annotation
m_bRGB	apps/MIFit/core/RibbonSegment.h	/^    unsigned char m_bRGB[4];$/;"	m	class:RibbonSegment
m_bSquare	apps/MIFit/core/RibbonSegment.h	/^    bool m_bSquare;$/;"	m	class:RibbonSegment
m_busy	apps/MIFit/ui/Application.h	/^    unsigned int m_busy;$/;"	m	class:MIBusyManager
m_color	apps/MIFit/core/Annotation.h	/^    PaletteColor m_color;$/;"	m	class:Annotation
m_csFirstResidueName	apps/MIFit/core/RibbonSegment.h	/^    std::string m_csFirstResidueName;$/;"	m	class:RibbonSegment
m_currentmap	apps/MIFit/ui/Displaylist.h	/^    EMap *m_currentmap;$/;"	m	class:Displaylist
m_cursor_number	apps/MIFit/ui/Application.h	/^    unsigned int m_cursor_number;$/;"	m	class:MIBusyManager
m_dAxisA	apps/MIFit/core/Helix.h	/^    double m_dAxisA[3];$/;"	m	class:Helix
m_dAxisB	apps/MIFit/core/Helix.h	/^    double m_dAxisB[3];$/;"	m	class:Helix
m_dCapNormA	apps/MIFit/core/Helix.h	/^    double m_dCapNormA[Helix_NSEG][3];$/;"	m	class:Helix
m_dCapNormB	apps/MIFit/core/Helix.h	/^    double m_dCapNormB[Helix_NSEG][3];$/;"	m	class:Helix
m_dEndA	apps/MIFit/core/Helix.h	/^    double m_dEndA[Helix_NSEG][3];$/;"	m	class:Helix
m_dEndB	apps/MIFit/core/Helix.h	/^    double m_dEndB[Helix_NSEG][3];$/;"	m	class:Helix
m_dNormA	apps/MIFit/core/Helix.h	/^    double m_dNormA[Helix_NSEG][3];$/;"	m	class:Helix
m_dNormB	apps/MIFit/core/Helix.h	/^    double m_dNormB[Helix_NSEG][3];$/;"	m	class:Helix
m_dRadius	apps/MIFit/core/Helix.h	/^    double m_dRadius;$/;"	m	class:Helix
m_dThick	apps/MIFit/core/RibbonSegment.h	/^    double m_dThick;$/;"	m	class:RibbonSegment
m_dWidth	apps/MIFit/core/RibbonSegment.h	/^    double m_dWidth;$/;"	m	class:RibbonSegment
m_id	apps/MIFit/core/Annotation.h	/^    unsigned long m_id;$/;"	m	class:Annotation
m_mol	libs/chemlib/AtomTyper.h	/^        Ligand m_mol;$/;"	m	class:chemlib::AtomTyper
m_mon	libs/ligand/LigPostProcessor.h	/^    LigDictEntry &m_mon;$/;"	m	class:LigPostProcessor
m_nPoints	apps/MIFit/core/RibbonSegment.h	/^    int m_nPoints; \/\/Number of points in cross section$/;"	m	class:RibbonSegment
m_nResidues	apps/MIFit/core/RibbonSegment.h	/^    int m_nResidues;$/;"	m	class:RibbonSegment
m_nSteps	apps/MIFit/core/RibbonSegment.h	/^    int m_nSteps; \/\/Numuber of parametric steps per span$/;"	m	class:RibbonSegment
m_pHelixList	apps/MIFit/core/SecondaryStructure.h	/^    std::vector<Helix*> m_pHelixList;$/;"	m	class:SecondaryStructure
m_pNext	apps/MIFit/core/Helix.h	/^    Helix *m_pNext;$/;"	m	class:Helix
m_pNext	apps/MIFit/core/RibbonSegment.h	/^    RibbonSegment *m_pNext;$/;"	m	class:RibbonSegment
m_pNext	apps/MIFit/core/RibbonSpan.h	/^    RibbonSpan *m_pNext;$/;"	m	class:RibbonSpan
m_pRandomLast	apps/MIFit/core/SecondaryStructure.h	/^    RibbonSegment *m_pRandomLast;$/;"	m	class:SecondaryStructure
m_pRandomList	apps/MIFit/core/SecondaryStructure.h	/^    RibbonSegment *m_pRandomList;$/;"	m	class:SecondaryStructure
m_pRibbonSegmentLast	apps/MIFit/core/SecondaryStructure.h	/^    RibbonSegment *m_pRibbonSegmentLast;$/;"	m	class:SecondaryStructure
m_pRibbonSegmentList	apps/MIFit/core/SecondaryStructure.h	/^    RibbonSegment *m_pRibbonSegmentList;$/;"	m	class:SecondaryStructure
m_pRibbonSpanLast	apps/MIFit/core/RibbonSegment.h	/^    RibbonSpan *m_pRibbonSpanLast;$/;"	m	class:RibbonSegment
m_pRibbonSpanList	apps/MIFit/core/RibbonSegment.h	/^    RibbonSpan *m_pRibbonSpanList;$/;"	m	class:RibbonSegment
m_pSecondaryStructure	apps/MIFit/core/Molecule.h	/^    SecondaryStructure *m_pSecondaryStructure;$/;"	m	class:Molecule
m_pSheetLast	apps/MIFit/core/SecondaryStructure.h	/^    RibbonSegment *m_pSheetLast;$/;"	m	class:SecondaryStructure
m_pSheetList	apps/MIFit/core/SecondaryStructure.h	/^    RibbonSegment *m_pSheetList;$/;"	m	class:SecondaryStructure
m_pTurnLast	apps/MIFit/core/SecondaryStructure.h	/^    RibbonSegment *m_pTurnLast;$/;"	m	class:SecondaryStructure
m_pTurnList	apps/MIFit/core/SecondaryStructure.h	/^    RibbonSegment *m_pTurnList;$/;"	m	class:SecondaryStructure
m_radiusmax	libs/map/EMapBase.h	/^    int m_radiusmax()$/;"	f	class:EMapBase
m_radiusmax	libs/map/EMapBase.h	/^    void m_radiusmax(int radiusmax)$/;"	f	class:EMapBase
m_radiusmax	libs/map/MapSettingsBase.h	/^    int m_radiusmax;$/;"	m	class:MapSettingsBase
m_source	apps/MIFit/ui/LSQFitDialog.h	/^    Molecule *m_source;$/;"	m	class:LSQFitDialog
m_subject	apps/MIFit/core/Annotation.h	/^    std::string m_subject;$/;"	m	class:Annotation
m_target	apps/MIFit/ui/LSQFitDialog.h	/^    Molecule *m_target;$/;"	m	class:LSQFitDialog
m_text	apps/MIFit/core/Annotation.h	/^    std::string m_text;$/;"	m	class:Annotation
m_timer	apps/MIFit/ui/MIGLWidget.h	/^    int m_timer;$/;"	m	class:MIGLWidget
m_type	apps/MIFit/core/Annotation.h	/^    unsigned int m_type; \/\/ one of enum$/;"	m	class:Annotation
m_ui	apps/MIFit/ui/GLFormatDialog.h	/^    Ui::GLFormatDialog *m_ui;$/;"	m	class:GLFormatDialog
m_ui	apps/MIFit/ui/GLFormatEdit.h	/^    Ui::GLFormatEdit *m_ui;$/;"	m	class:GLFormatEdit
m_x	apps/MIFit/core/Annotation.h	/^    float m_x, m_y, m_z;$/;"	m	class:Annotation
m_y	apps/MIFit/core/Annotation.h	/^    float m_x, m_y, m_z;$/;"	m	class:Annotation
m_z	apps/MIFit/core/Annotation.h	/^    float m_x, m_y, m_z;$/;"	m	class:Annotation
magic_delete	libs/chemlib/MIAtom.cpp	/^static unsigned int magic_delete = UINT_MAX;$/;"	m	namespace:chemlib	file:
magic_delete	libs/chemlib/MIMoleculeBase.cpp	/^static unsigned int magic_delete = UINT_MAX;$/;"	m	namespace:chemlib	file:
magic_delete	libs/chemlib/Monomer.cpp	/^static unsigned int magic_delete = UINT_MAX;$/;"	m	namespace:chemlib	file:
main	apps/MIFit/main/main.cpp	/^int main(int argc, char **argv)$/;"	f
main	apps/MIFlex/miconf.cpp	/^int main(int argc, char **argv)$/;"	f
main	apps/MIFlex/miflex.cpp	/^int main(int argc, char **argv)$/;"	f
main	libs/chemlib/itertest.cxx	/^int main(int argc, char **argv)$/;"	f
main	libs/umtz/mmtztest.c	/^main()$/;"	f
main	libs/umtz/umtzdiff.c	/^main(int argc, char** argv)$/;"	f
main	libs/umtz/umtztest.c	/^main()$/;"	f
mainItem	apps/MIFit/ui/DictEditCanvas.h	/^    DictEditMainItem *mainItem;$/;"	m	class:DictEditCanvas
mainItem	apps/MIFit/ui/MIGLWidget.h	/^    MainItem *mainItem;$/;"	m	class:MIGLWidget
main_dict	apps/MIFit/python/PythonEngine.h	/^    PyObject *main_dict;$/;"	m	class:PythonEngine
make_crc_table	libs/opengl/zlib/crc32.cpp	/^local void make_crc_table()$/;"	f
make_res	apps/MIFit/core/RESIDUE.cpp	/^Residue *make_res(const MIAtomList &atoms)$/;"	f
manageMenu	apps/MIFit/ui/tools.cpp	/^void Tools::manageMenu()$/;"	f	class:Tools
map	apps/MIFit/ui/TreeData.h	/^    EMap *map;$/;"	m	class:TreeData
map	libs/map/fftsub.cpp	/^int map;$/;"	v
map1Check	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QCheckBox *map1Check;$/;"	m	class:Ui_PhaseFileLoadDialog
map1F1Label	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QLabel *map1F1Label;$/;"	m	class:Ui_PhaseFileLoadDialog
map1FcChoice	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QComboBox *map1FcChoice;$/;"	m	class:Ui_PhaseFileLoadDialog
map1FoChoice	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QComboBox *map1FoChoice;$/;"	m	class:Ui_PhaseFileLoadDialog
map1FomChoice	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QComboBox *map1FomChoice;$/;"	m	class:Ui_PhaseFileLoadDialog
map1Model	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QLabel *map1Model;$/;"	m	class:Ui_PhaseFileLoadDialog
map1PhiChoice	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QComboBox *map1PhiChoice;$/;"	m	class:Ui_PhaseFileLoadDialog
map1Type	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QComboBox *map1Type;$/;"	m	class:Ui_PhaseFileLoadDialog
map2Check	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QCheckBox *map2Check;$/;"	m	class:Ui_PhaseFileLoadDialog
map2F1Label	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QLabel *map2F1Label;$/;"	m	class:Ui_PhaseFileLoadDialog
map2FcChoice	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QComboBox *map2FcChoice;$/;"	m	class:Ui_PhaseFileLoadDialog
map2FoChoice	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QComboBox *map2FoChoice;$/;"	m	class:Ui_PhaseFileLoadDialog
map2FomChoice	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QComboBox *map2FomChoice;$/;"	m	class:Ui_PhaseFileLoadDialog
map2Model	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QLabel *map2Model;$/;"	m	class:Ui_PhaseFileLoadDialog
map2PhiChoice	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QComboBox *map2PhiChoice;$/;"	m	class:Ui_PhaseFileLoadDialog
map2Type	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QComboBox *map2Type;$/;"	m	class:Ui_PhaseFileLoadDialog
mapAdded	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::mapAdded(EMap *emap)$/;"	f	class:MIGLWidget
mapAdded	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::mapAdded(EMap *map)$/;"	f	class:ModelsTree
mapAdded	apps/MIFit/ui/moc/moc_Displaylist.cpp	/^void Displaylist::mapAdded(EMap * _t1)$/;"	f	class:Displaylist
mapContourLevelsChanged	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::mapContourLevelsChanged(EMapBase *emap)$/;"	f	class:MIGLWidget
mapContourLevelsChanged	libs/map/moc/moc_EMapBase.cpp	/^void EMapBase::mapContourLevelsChanged(EMapBase * _t1)$/;"	f	class:EMapBase
mapExportAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *mapExportAction_;$/;"	m	class:ModelsTree	file:
mapFftRecalculated	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::mapFftRecalculated(EMap *map)$/;"	f	class:ModelsTree
mapFftRecalculated	apps/MIFit/ui/moc/moc_EMap.cpp	/^void EMap::mapFftRecalculated(EMap * _t1)$/;"	f	class:EMap
mapGrid	libs/map/EMapBase.h	/^    int mapGrid;$/;"	m	class:EMapBase
mapHeader	apps/MIFit/ui/ManageCrystals.h	/^    CMapHeader *mapHeader;$/;"	m	class:ManageCrystals
mapHeader	apps/MIFit/ui/TreeData.h	/^    CMapHeaderBase *mapHeader;$/;"	m	class:TreeData
mapHeaderChanged	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::mapHeaderChanged(CMapHeaderBase *mapHeader)$/;"	f	class:ModelsTree
mapHeaderChanged	libs/map/moc/moc_CMapHeaderBase.cpp	/^void CMapHeaderBase::mapHeaderChanged(CMapHeaderBase * _t1)$/;"	f	class:CMapHeaderBase
mapHeaderToCrystalData	apps/MIFit/ui/ModelsView.cpp	/^    MapHeaderToDataMap mapHeaderToCrystalData;$/;"	m	class:ModelsTree	file:
mapHeaders	apps/MIFit/ui/MoleculeXmlHandler.h	/^    MapHeaderList mapHeaders;$/;"	m	class:MoleculeXmlHandler
mapLoadfromfile	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::mapLoadfromfile()$/;"	f	class:MIGLWidget
mapLoadfromfile	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::mapLoadfromfile(const std::string &file)$/;"	f	class:MIGLWidget
mapLoadfromphsfile	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::mapLoadfromphsfile()$/;"	f	class:MIGLWidget
mapLoadfromphsfile	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::mapLoadfromphsfile(const std::string &file)$/;"	f	class:MIGLWidget
mapName	libs/map/EMapBase.h	/^    std::string mapName;$/;"	m	class:EMapBase
mapSlider	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QSlider *mapSlider;$/;"	m	class:Ui_RefinementOptionsDialog
mapStylesComboBox	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QComboBox *mapStylesComboBox;$/;"	m	class:Ui_ContourOptionsWidget
mapStylesLabel	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *mapStylesLabel;$/;"	m	class:Ui_ContourOptionsWidget
mapToBeDeleted	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::mapToBeDeleted(EMap *map)$/;"	f	class:ModelsTree
mapToBeDeleted	apps/MIFit/ui/moc/moc_Displaylist.cpp	/^void Displaylist::mapToBeDeleted(EMap * _t1)$/;"	f	class:Displaylist
mapToCamera	apps/MIFit/ui/MIGLWidget.cpp	/^Vector3<float> MIGLWidget::mapToCamera(const QPoint &point, int z)$/;"	f	class:MIGLWidget
mapToCrystalData	apps/MIFit/ui/ModelsView.cpp	/^    MapToDataMap mapToCrystalData;$/;"	m	class:ModelsTree	file:
mapToData	apps/MIFit/ui/ModelsView.cpp	/^    MapToDataMap mapToData;$/;"	m	class:ModelsTree	file:
mapToView	apps/MIFit/ui/MIGLWidget.cpp	/^Vector3<float> MIGLWidget::mapToView(const QPoint &point, int z)$/;"	f	class:MIGLWidget
mapType_userset	apps/MIFit/ui/PhaseFileLoadDialog.h	/^    bool mapType_userset[2];$/;"	m	class:PhaseFileLoadDialog
mapVisibilityChanged	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::mapVisibilityChanged(EMapBase *map)$/;"	f	class:MIGLWidget
mapVisibilityChanged	libs/map/moc/moc_EMapBase.cpp	/^void EMapBase::mapVisibilityChanged(EMapBase * _t1)$/;"	f	class:EMapBase
mapWeight	apps/MIFit/ui/RefinementOptionsDialog.h	/^        int mapWeight;$/;"	m	struct:RefinementOptionsDialog::Data
map_center	libs/map/EMapBase.h	/^    float map_center[3];$/;"	m	class:EMapBase
map_in_float	libs/map/EMapBase.cpp	/^static float map_in_float(FILE *fp, unsigned int swab)$/;"	f	file:
map_in_int	libs/map/EMapBase.cpp	/^static int map_in_int(FILE *fp, unsigned int swab)$/;"	f	file:
map_points	libs/map/EMapBase.h	/^    std::vector<float> map_points;$/;"	m	class:EMapBase
mapasu_ccp4	libs/cmtz/ccp4_spg.h	/^  float mapasu_ccp4[3];   \/* CCP4 map asu: upper limits *\/$/;"	m	struct:CSym::ccp4_spacegroup_
mapasu_ccp4_descr	libs/cmtz/ccp4_spg.h	/^  char mapasu_ccp4_descr[80];  \/* CCP4 map asu: defaults to mapasu_zero *\/$/;"	m	struct:CSym::ccp4_spacegroup_
mapasu_zero	libs/cmtz/ccp4_spg.h	/^  float mapasu_zero[3];   \/* origin-based map asu: upper limits *\/$/;"	m	struct:CSym::ccp4_spacegroup_
mapasu_zero_descr	libs/cmtz/ccp4_spg.h	/^  char mapasu_zero_descr[80];  \/* origin-based map asu: description from file *\/$/;"	m	struct:CSym::ccp4_spacegroup_
mapdex	libs/map/EMapBase.h	/^    int mapdex(int ix, int iy, int iz)$/;"	f	class:EMapBase
mapheader	apps/MIFit/core/Molecule.h	/^    CMapHeaderBase *mapheader;$/;"	m	class:Molecule
mapheader	apps/MIFit/ui/MoleculeXmlHandler.h	/^    CMapHeader mapheader;$/;"	m	class:MoleculeXmlHandler
mapheader	libs/map/EMapBase.h	/^    CMapHeaderBase *mapheader;$/;"	m	class:EMapBase
maplinewidth	libs/map/MapSettingsBase.h	/^    float maplinewidth;$/;"	m	class:MapSettingsBase
mapmax	libs/map/EMapBase.h	/^    float mapmin, mapmax;$/;"	m	class:EMapBase
mapmax	libs/map/MapSettingsBase.h	/^    float mapmax;$/;"	m	class:MapSettingsBase
mapmin	libs/map/EMapBase.h	/^    float mapmin, mapmax;$/;"	m	class:EMapBase
mapmin	libs/map/MapSettingsBase.h	/^    float mapmin;$/;"	m	class:MapSettingsBase
mapnumber	libs/map/EMapBase.h	/^    int mapnumber;$/;"	m	class:EMapBase
mapp_compare	libs/map/EMapBase.cpp	/^static bool mapp_compare(const MAP_POINT &lt, const MAP_POINT &rt)$/;"	f	file:
maptype	libs/map/CMapHeaderBase.h	/^    int maptype; \/* fft.h contains maptypes info *\/$/;"	m	class:CMapHeaderBase
maptype	libs/map/fftsub.cpp	/^static int maptype = 0;$/;"	v	file:
maptypes	libs/map/EMapBase.cpp	/^static const char *maptypes[MAP_TYPE_COUNT] = {"Fo", "Fc", "2Fo-Fc", "Fo-Fc", "Fo*Fo", "Fo*fom",$/;"	v	file:
markEnabled	apps/MIFit/ui/MIQDialog.cpp	/^void MIQDialog::markEnabled(QWidget *w, bool thisEnabled, bool &globalEnabled)$/;"	f	class:MIQDialog
marker	libs/opengl/zlib/inflate.cpp	/^        uInt marker;    \/* if BAD, inflateSync's marker bytes count *\/$/;"	m	union:internal_state::__anon43	file:
mass	libs/chemlib/MIAtom.h	/^        int mass() const$/;"	f	class:chemlib::MIAtom
mass_	libs/chemlib/MIAtom.h	/^        int mass_;$/;"	m	class:chemlib::MIAtom
mat	libs/math/LSQMatrix.h	/^    float mat[3][3];$/;"	m	class:LSQMatrix
mat4_to_recip_symop	libs/cmtz/ccp4_parser.c	/^char *mat4_to_recip_symop(char *symchs_begin, char *symchs_end, const float rsm[4][4])$/;"	f
mat4_to_rotandtrn	libs/cmtz/ccp4_parser.c	/^ccp4_symop mat4_to_rotandtrn(const float rsm[4][4]) {$/;"	f
mat4_to_symop	libs/cmtz/ccp4_parser.c	/^char *mat4_to_symop(char *symchs_begin, char *symchs_end, const float rsm[4][4])$/;"	f
matchListBox	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QListWidget *matchListBox;$/;"	m	class:Ui_LSQFitDialog
matchvec	apps/MIFit/core/pdbmatch.cpp	/^Residue *matchvec(const MIAtomList &CA, const MIAtomList &CB, std::string &pentdir, FILE *fvec)$/;"	f
math	libs/math/Grid.h	/^    namespace math$/;"	n	namespace:mi
math	libs/math/IndexOutOfBoundsException.cpp	/^namespace math$/;"	n	namespace:mi	file:
math	libs/math/IndexOutOfBoundsException.h	/^    namespace math$/;"	n	namespace:mi
math	libs/math/Matrix3.h	/^    namespace math$/;"	n	namespace:mi
math	libs/math/Matrix4.h	/^    namespace math$/;"	n	namespace:mi
math	libs/math/MersenneTwister.h	/^    namespace math$/;"	n	namespace:mi
math	libs/math/PeriodicGrid.h	/^    namespace math$/;"	n	namespace:mi
math	libs/math/Point3.h	/^    namespace math$/;"	n	namespace:mi
math	libs/math/Point4.h	/^    namespace math$/;"	n	namespace:mi
math	libs/math/Quaternion.h	/^    namespace math$/;"	n	namespace:mi
math	libs/math/Random.h	/^    namespace math$/;"	n	namespace:mi
math	libs/math/Tuple.h	/^    namespace math$/;"	n	namespace:mi
math	libs/math/Tuple3.h	/^    namespace math$/;"	n	namespace:mi
math	libs/math/Tuple4.h	/^    namespace math$/;"	n	namespace:mi
math	libs/math/Vector3.h	/^    namespace math$/;"	n	namespace:mi
math	libs/math/Vector4.h	/^    namespace math$/;"	n	namespace:mi
matmul	libs/math/Matrices.cpp	/^void matmul(float l[3][3], float r[3][3], float prod[3][3])$/;"	f
matmult	libs/chemlib/Matrix.h	/^    inline Matrix<T> matmult(const Matrix<T> &A,$/;"	f	namespace:TNT
matmult	libs/chemlib/Matrix.h	/^    inline int matmult(Matrix<T> &C, const Matrix<T> &A,$/;"	f	namespace:TNT
matrix	apps/MIFit/core/eigen.cpp	/^typedef double*matrix;$/;"	t	file:
matrixText	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QTextEdit *matrixText;$/;"	m	class:Ui_LSQFitDialog
matset	libs/map/fftsub.cpp	/^int matset(float *am, float *dv, long int *nm, long int *nv)$/;"	f
matvec	apps/MIFit/core/Matvec.cpp	/^void matvec(double *m, double *v, double *rv)$/;"	f
max	apps/MIFit/ui/GLOverviewCanvas.h	/^    mi::math::Vector3<float> max;$/;"	m	class:GLOverviewCanvas
max	libs/cmtz/mtzdata.h	/^		 float max;            \/**< maximum data element *\/$/;"	m	struct:__anon20
max	libs/opengl/OpenGL.h	7;"	d
maxLabel_0	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *maxLabel_0;$/;"	m	class:Ui_ContourOptionsWidget
maxLabel_1	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *maxLabel_1;$/;"	m	class:Ui_ContourOptionsWidget
maxLabel_2	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *maxLabel_2;$/;"	m	class:Ui_ContourOptionsWidget
maxLabel_3	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *maxLabel_3;$/;"	m	class:Ui_ContourOptionsWidget
maxLabel_4	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *maxLabel_4;$/;"	m	class:Ui_ContourOptionsWidget
maxRadiusLabel	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *maxRadiusLabel;$/;"	m	class:Ui_ContourOptionsWidget
maxRadiusSpinBox	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QSpinBox *maxRadiusSpinBox;$/;"	m	class:Ui_ContourOptionsWidget
max_exponent	libs/cmtz/ccp4_parser.h	/^  double max_exponent;    \/* Largest allowed exponent for numerical tokens *\/$/;"	m	struct:CCP4::__anon27
max_x	libs/map/InterpBox.h	/^    float min_x, min_y, min_z, max_x, max_y, max_z;$/;"	m	class:InterpBox
max_y	libs/map/InterpBox.h	/^    float min_x, min_y, min_z, max_x, max_y, max_z;$/;"	m	class:InterpBox
max_z	libs/map/InterpBox.h	/^    float min_x, min_y, min_z, max_x, max_y, max_z;$/;"	m	class:InterpBox
maxconn	libs/jacgrid/surface.h	/^    unsigned int maxconn;                \/* maximum allocated verts in connection list *\/$/;"	m	class:surfaceT
maxdens	libs/map/EMapBase.cpp	/^float EMapBase::maxdens(MIAtom *CAprev, MIAtom *CA1, int l, float fx0, float fy0, float fz0)$/;"	f	class:EMapBase
maxtokens	libs/cmtz/ccp4_parser.h	/^  int    maxtokens;       \/* Maximum number of tokens allowed *\/$/;"	m	struct:CCP4::__anon27
maxverts	libs/jacgrid/surface.h	/^    unsigned int maxverts;               \/* maximum allocated verts *\/$/;"	m	class:surfaceT
maxx	apps/MIFit/ui/graphlib.h	/^    double maxx;     \/*axis scaling - use GR_AUTO for autoscaling*\/$/;"	m	class:GraphWindow
maxy	apps/MIFit/ui/graphlib.h	/^    double maxy;$/;"	m	class:GraphWindow
mc68010	libs/map/fftlib.cpp	189;"	d	file:
mc68020	libs/map/fftlib.cpp	190;"	d	file:
mdex	libs/map/EMapBase.cpp	315;"	d	file:
mdex	libs/map/EMapBase.cpp	316;"	d	file:
mdftkd_	libs/map/fftlib.cpp	/^int mdftkd_(integer *n, integer *factor, integer *dim, real *x, real *y)$/;"	f
mdiArea	apps/MIFit/ui/MIMainWindow.h	/^    QMdiArea *mdiArea;$/;"	m	class:MIMainWindow
membuf	libs/map/fftsub.cpp	/^static fcomplex *membuf;$/;"	v	file:
menuBar	apps/MIFit/ui/DictEditCanvas.h	/^    QMenuBar *menuBar;$/;"	m	class:DictEditCanvas
menuItemName	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QLineEdit *menuItemName;$/;"	m	class:Ui_CustomJobDialog
menuList	apps/MIFit/ui/ui_CustomJobPreferences.h	/^    QListWidget *menuList;$/;"	m	class:Ui_CustomJobPreferences
menuName	apps/MIFit/jobs/BatchJobManager.cpp	/^    QString menuName;$/;"	m	struct:CustomJob	file:
message	apps/MIFit/python/Console.cpp	/^void Console::message(const QString &text)$/;"	f	class:Console
message	apps/MIFit/ui/Logger.cpp	/^void Logger::message(const char *format, ...)$/;"	f	class:Logger
message	apps/MIFit/ui/Logger.h	/^    static void message(const std::string &str)$/;"	f	class:Logger
messageItem	apps/MIFit/ui/MIGLWidget.h	/^    QGraphicsObject *messageItem;$/;"	m	class:MIGLWidget
metaObject	apps/MIFit/core/moc/moc_Annotation.cpp	/^const QMetaObject *Annotation::metaObject() const$/;"	f	class:Annotation
metaObject	apps/MIFit/core/moc/moc_Molecule.cpp	/^const QMetaObject *Molecule::metaObject() const$/;"	f	class:Molecule
metaObject	apps/MIFit/core/moc/moc_Stack.cpp	/^const QMetaObject *Stack::metaObject() const$/;"	f	class:Stack
metaObject	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^const QMetaObject *BatchJob::metaObject() const$/;"	f	class:BatchJob
metaObject	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^const QMetaObject *JobFinishedStatusLabel::metaObject() const$/;"	f	class:JobFinishedStatusLabel
metaObject	apps/MIFit/jobs/moc/moc_BatchJobManager.cpp	/^const QMetaObject *BatchJobManager::metaObject() const$/;"	f	class:BatchJobManager
metaObject	apps/MIFit/script/moc/moc_LocalSocketScript.cpp	/^const QMetaObject *LocalSocketScript::metaObject() const$/;"	f	class:LocalSocketScript
metaObject	apps/MIFit/script/moc/moc_MIFitScriptObject.cpp	/^const QMetaObject *MIFitScriptObject::metaObject() const$/;"	f	class:MIFitScriptObject
metaObject	apps/MIFit/ui/moc/moc_AddResidueDialog.cpp	/^const QMetaObject *AddResidueDialog::metaObject() const$/;"	f	class:AddResidueDialog
metaObject	apps/MIFit/ui/moc/moc_Application.cpp	/^const QMetaObject *Application::metaObject() const$/;"	f	class:Application
metaObject	apps/MIFit/ui/moc/moc_AtomColors.cpp	/^const QMetaObject *AtomColors::metaObject() const$/;"	f	class:AtomColors
metaObject	apps/MIFit/ui/moc/moc_BValueColors.cpp	/^const QMetaObject *BValueColors::metaObject() const$/;"	f	class:BValueColors
metaObject	apps/MIFit/ui/moc/moc_ContourOptionsWidget.cpp	/^const QMetaObject *ContourOptionsWidget::metaObject() const$/;"	f	class:ContourOptionsWidget
metaObject	apps/MIFit/ui/moc/moc_CurrentMIGLWidgetAction.cpp	/^const QMetaObject *CurrentMIGLWidgetAction::metaObject() const$/;"	f	class:CurrentMIGLWidgetAction
metaObject	apps/MIFit/ui/moc/moc_CursorArea.cpp	/^const QMetaObject *CursorArea::metaObject() const$/;"	f	class:CursorArea
metaObject	apps/MIFit/ui/moc/moc_CustomJobDialog.cpp	/^const QMetaObject *CustomJobDialog::metaObject() const$/;"	f	class:CustomJobDialog
metaObject	apps/MIFit/ui/moc/moc_CustomJobPreferences.cpp	/^const QMetaObject *CustomJobPreferences::metaObject() const$/;"	f	class:CustomJobPreferences
metaObject	apps/MIFit/ui/moc/moc_DictEditCanvas.cpp	/^const QMetaObject *DictEditCanvas::metaObject() const$/;"	f	class:DictEditCanvas
metaObject	apps/MIFit/ui/moc/moc_DictEditDialog.cpp	/^const QMetaObject *DictEditDialog::metaObject() const$/;"	f	class:DictEditDialog
metaObject	apps/MIFit/ui/moc/moc_Displaylist.cpp	/^const QMetaObject *Displaylist::metaObject() const$/;"	f	class:Displaylist
metaObject	apps/MIFit/ui/moc/moc_EMap.cpp	/^const QMetaObject *EMap::metaObject() const$/;"	f	class:EMap
metaObject	apps/MIFit/ui/moc/moc_EnvironmentPreferences.cpp	/^const QMetaObject *EnvironmentPreferences::metaObject() const$/;"	f	class:EnvironmentPreferences
metaObject	apps/MIFit/ui/moc/moc_GLFormatDialog.cpp	/^const QMetaObject *GLFormatDialog::metaObject() const$/;"	f	class:GLFormatDialog
metaObject	apps/MIFit/ui/moc/moc_GLFormatEdit.cpp	/^const QMetaObject *GLFormatEdit::metaObject() const$/;"	f	class:GLFormatEdit
metaObject	apps/MIFit/ui/moc/moc_GeneralPreferences.cpp	/^const QMetaObject *GeneralPreferences::metaObject() const$/;"	f	class:GeneralPreferences
metaObject	apps/MIFit/ui/moc/moc_GenericDataDialog.cpp	/^const QMetaObject *GenericDataDialog::metaObject() const$/;"	f	class:GenericDataDialog
metaObject	apps/MIFit/ui/moc/moc_JobsView.cpp	/^const QMetaObject *JobsView::metaObject() const$/;"	f	class:JobsView
metaObject	apps/MIFit/ui/moc/moc_LSQFitDialog.cpp	/^const QMetaObject *LSQFitDialog::metaObject() const$/;"	f	class:LSQFitDialog
metaObject	apps/MIFit/ui/moc/moc_MIBrowsePair.cpp	/^const QMetaObject *MIBrowsePair::metaObject() const$/;"	f	class:MIBrowsePair
metaObject	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^const QMetaObject *MIColorPickerDlg::metaObject() const$/;"	f	class:MIColorPickerDlg
metaObject	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^const QMetaObject *MIColorToolButton::metaObject() const$/;"	f	class:MIColorToolButton
metaObject	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^const QMetaObject *MIGLWidget::metaObject() const$/;"	f	class:MIGLWidget
metaObject	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^const QMetaObject *ViewController::metaObject() const$/;"	f	class:ViewController
metaObject	apps/MIFit/ui/moc/moc_MIMainWindow.cpp	/^const QMetaObject *MIMainWindow::metaObject() const$/;"	f	class:MIMainWindow
metaObject	apps/MIFit/ui/moc/moc_MIQDialog.cpp	/^const QMetaObject *MIQDialog::metaObject() const$/;"	f	class:MIQDialog
metaObject	apps/MIFit/ui/moc/moc_MIQTreeWidget.cpp	/^const QMetaObject *MIQTreeWidget::metaObject() const$/;"	f	class:MIQTreeWidget
metaObject	apps/MIFit/ui/moc/moc_ManageCrystals.cpp	/^const QMetaObject *ManageCrystals::metaObject() const$/;"	f	class:ManageCrystals
metaObject	apps/MIFit/ui/moc/moc_ModelsView.cpp	/^const QMetaObject *ModelsView::metaObject() const$/;"	f	class:ModelsView
metaObject	apps/MIFit/ui/moc/moc_PhaseFileLoadDialog.cpp	/^const QMetaObject *PhaseFileLoadDialog::metaObject() const$/;"	f	class:PhaseFileLoadDialog
metaObject	apps/MIFit/ui/moc/moc_PreferencesDialog.cpp	/^const QMetaObject *PreferencesDialog::metaObject() const$/;"	f	class:PreferencesDialog
metaObject	apps/MIFit/ui/moc/moc_RamaPlot.cpp	/^const QMetaObject *RamaPlotMgr::metaObject() const$/;"	f	class:RamaPlotMgr
metaObject	apps/MIFit/ui/moc/moc_RefinementOptionsDialog.cpp	/^const QMetaObject *RefinementOptionsDialog::metaObject() const$/;"	f	class:RefinementOptionsDialog
metaObject	apps/MIFit/ui/moc/moc_SelectCrystal.cpp	/^const QMetaObject *SelectCrystal::metaObject() const$/;"	f	class:SelectCrystal
metaObject	apps/MIFit/ui/moc/moc_SmilesDialog.cpp	/^const QMetaObject *SmilesDialog::metaObject() const$/;"	f	class:SmilesDialog
metaObject	apps/MIFit/ui/moc/moc_ViewSyncedPanel.cpp	/^const QMetaObject *ViewSyncedPanel::metaObject() const$/;"	f	class:ViewSyncedPanel
metaObject	apps/MIFit/ui/moc/moc_graphlib.cpp	/^const QMetaObject *GraphWindow::metaObject() const$/;"	f	class:GraphWindow
metaObject	apps/MIFit/ui/moc/moc_tools.cpp	/^const QMetaObject *Tools::metaObject() const$/;"	f	class:Tools
metaObject	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^const QMetaObject *chemlib::MIMoleculeBase::metaObject() const$/;"	f	class:chemlib::MIMoleculeBase
metaObject	libs/map/moc/moc_CMapHeaderBase.cpp	/^const QMetaObject *CMapHeaderBase::metaObject() const$/;"	f	class:CMapHeaderBase
metaObject	libs/map/moc/moc_EMapBase.cpp	/^const QMetaObject *EMapBase::metaObject() const$/;"	f	class:EMapBase
metaObject	libs/molopt/moc/moc_MIMolOpt.cpp	/^const QMetaObject *MIMolOpt::metaObject() const$/;"	f	class:MIMolOpt
method	libs/opengl/zlib/inflate.cpp	/^        uInt method;    \/* if FLAGS, method byte *\/$/;"	m	union:internal_state::__anon43	file:
methodCode	apps/MIFit/ui/CurrentMIGLWidgetAction.cpp	/^    int methodCode(const char *method)$/;"	f	namespace:__anon9
methodGroupBox	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QGroupBox *methodGroupBox;$/;"	m	class:Ui_ContourOptionsWidget
methodOptionsGroupBox	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QGroupBox *methodOptionsGroupBox;$/;"	m	class:Ui_ContourOptionsWidget
mhin	libs/map/sfcalc.cpp	/^CMapHeaderBase *mhin;$/;"	v
mi	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.h	/^namespace mi$/;"	n
mi	apps/MIFit/ui/CMolwViewAtomPickingRenderable.h	/^namespace mi$/;"	n
mi	apps/MIFit/ui/CMolwViewBondPickingRenderable.h	/^namespace mi$/;"	n
mi	apps/MIFit/ui/CMolwViewScene.h	/^namespace mi$/;"	n
mi	apps/MIFit/ui/CMolwViewSlabPickingRenderable.h	/^namespace mi$/;"	n
mi	apps/MIFit/ui/DictEditAnglePickingRenderable.h	/^namespace mi$/;"	n
mi	apps/MIFit/ui/DictEditAnnotationPickingRenderable.h	/^namespace mi$/;"	n
mi	apps/MIFit/ui/DictEditAtomPickingRenderable.h	/^namespace mi$/;"	n
mi	apps/MIFit/ui/DictEditBondPickingRenderable.h	/^namespace mi$/;"	n
mi	apps/MIFit/ui/DictEditCanvas.h	/^namespace mi$/;"	n
mi	apps/MIFit/ui/DictEditScene.h	/^namespace mi$/;"	n
mi	apps/MIFit/ui/GLOverviewCanvas.h	/^namespace mi$/;"	n
mi	apps/MIFit/ui/GLRenderer.h	/^namespace mi$/;"	n
mi	apps/MIFit/ui/MIGLWidget.h	/^namespace mi$/;"	n
mi	libs/math/Grid.h	/^namespace mi$/;"	n
mi	libs/math/IndexOutOfBoundsException.cpp	/^namespace mi$/;"	n	file:
mi	libs/math/IndexOutOfBoundsException.h	/^namespace mi$/;"	n
mi	libs/math/Matrix3.h	/^namespace mi$/;"	n
mi	libs/math/Matrix4.h	/^namespace mi$/;"	n
mi	libs/math/MersenneTwister.h	/^namespace mi$/;"	n
mi	libs/math/PeriodicGrid.h	/^namespace mi$/;"	n
mi	libs/math/Point3.h	/^namespace mi$/;"	n
mi	libs/math/Point4.h	/^namespace mi$/;"	n
mi	libs/math/Quaternion.h	/^namespace mi$/;"	n
mi	libs/math/Random.h	/^namespace mi$/;"	n
mi	libs/math/Tuple.h	/^namespace mi$/;"	n
mi	libs/math/Tuple3.h	/^namespace mi$/;"	n
mi	libs/math/Tuple4.h	/^namespace mi$/;"	n
mi	libs/math/Vector3.h	/^namespace mi$/;"	n
mi	libs/math/Vector4.h	/^namespace mi$/;"	n
mi	libs/opengl/Arc.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/Arc.h	/^namespace mi$/;"	n
mi	libs/opengl/Axes.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/Axes.h	/^namespace mi$/;"	n
mi	libs/opengl/Axis.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/Axis.h	/^namespace mi$/;"	n
mi	libs/opengl/Camera.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/Camera.h	/^namespace mi$/;"	n
mi	libs/opengl/Circle.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/Circle.h	/^namespace mi$/;"	n
mi	libs/opengl/Frustum.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/Frustum.h	/^namespace mi$/;"	n
mi	libs/opengl/Light.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/Light.h	/^namespace mi$/;"	n
mi	libs/opengl/Object3d.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/Object3d.h	/^namespace mi$/;"	n
mi	libs/opengl/QuatUtil.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/QuatUtil.h	/^namespace mi$/;"	n
mi	libs/opengl/RelativeViewpoint.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/RelativeViewpoint.h	/^namespace mi$/;"	n
mi	libs/opengl/Renderable.h	/^namespace mi$/;"	n
mi	libs/opengl/Scene.h	/^namespace mi$/;"	n
mi	libs/opengl/Sphere.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/Sphere.h	/^namespace mi$/;"	n
mi	libs/opengl/StereoView.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/StereoView.h	/^namespace mi$/;"	n
mi	libs/opengl/Text.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/Text.h	/^namespace mi$/;"	n
mi	libs/opengl/Viewpoint.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/Viewpoint.h	/^namespace mi$/;"	n
mi	libs/opengl/Viewport.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/Viewport.h	/^namespace mi$/;"	n
mi	libs/opengl/ViewportRelativeViewpoint.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/ViewportRelativeViewpoint.h	/^namespace mi$/;"	n
mi	libs/opengl/interact/ArcBallFeedback.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/interact/ArcBallFeedback.h	/^namespace mi$/;"	n
mi	libs/opengl/interact/FieldOfViewZoomCommand.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/interact/FieldOfViewZoomCommand.h	/^namespace mi$/;"	n
mi	libs/opengl/interact/MouseArcBall.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/interact/MouseArcBall.h	/^namespace mi$/;"	n
mi	libs/opengl/interact/MouseArcBallOrbitor.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/interact/MouseArcBallOrbitor.h	/^namespace mi$/;"	n
mi	libs/opengl/interact/MousePicker.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/interact/MousePicker.h	/^namespace mi$/;"	n
mi	libs/opengl/interact/MouseTranslator.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/interact/MouseTranslator.h	/^namespace mi$/;"	n
mi	libs/opengl/interact/MouseZoomer.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/interact/MouseZoomer.h	/^namespace mi$/;"	n
mi	libs/opengl/interact/PropertyCommand.h	/^namespace mi$/;"	n
mi	libs/opengl/interact/SimpleMouseRotator.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/interact/SimpleMouseRotator.h	/^namespace mi$/;"	n
mi	libs/opengl/interact/TargetFeedback.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/interact/TargetFeedback.h	/^namespace mi$/;"	n
mi	libs/opengl/interact/TranslationFeedback.cpp	/^namespace mi$/;"	n	file:
mi	libs/opengl/interact/TranslationFeedback.h	/^namespace mi$/;"	n
mi_math_Grid_h	libs/math/Grid.h	2;"	d
mi_math_IndexOutOfBoundsException_h	libs/math/IndexOutOfBoundsException.h	2;"	d
mi_math_Matrix3_h	libs/math/Matrix3.h	2;"	d
mi_math_Matrix4_h	libs/math/Matrix4.h	2;"	d
mi_math_MersenneTwister_h	libs/math/MersenneTwister.h	2;"	d
mi_math_PeriodicGrid_h	libs/math/PeriodicGrid.h	2;"	d
mi_math_Point3_h	libs/math/Point3.h	2;"	d
mi_math_Point4_h	libs/math/Point4.h	2;"	d
mi_math_Quaternion_h	libs/math/Quaternion.h	2;"	d
mi_math_Random_h	libs/math/Random.h	2;"	d
mi_math_Tuple3_h	libs/math/Tuple3.h	2;"	d
mi_math_Tuple4_h	libs/math/Tuple4.h	2;"	d
mi_math_Tuple_h	libs/math/Tuple.h	2;"	d
mi_math_Vector3_h	libs/math/Vector3.h	2;"	d
mi_math_Vector4_h	libs/math/Vector4.h	2;"	d
mi_opengl_Arc_h	libs/opengl/Arc.h	2;"	d
mi_opengl_Axes_h	libs/opengl/Axes.h	2;"	d
mi_opengl_Axis_h	libs/opengl/Axis.h	2;"	d
mi_opengl_Camera_h	libs/opengl/Camera.h	2;"	d
mi_opengl_Circle_h	libs/opengl/Circle.h	2;"	d
mi_opengl_Frustum_h	libs/opengl/Frustum.h	2;"	d
mi_opengl_Light_h	libs/opengl/Light.h	2;"	d
mi_opengl_Object3d_h	libs/opengl/Object3d.h	2;"	d
mi_opengl_OpenGL_h	libs/opengl/OpenGL.h	2;"	d
mi_opengl_QuatUtil_h	libs/opengl/QuatUtil.h	2;"	d
mi_opengl_RelativeViewpoint_h	libs/opengl/RelativeViewpoint.h	2;"	d
mi_opengl_Renderable_h	libs/opengl/Renderable.h	2;"	d
mi_opengl_Scene_h	libs/opengl/Scene.h	2;"	d
mi_opengl_Sphere_h	libs/opengl/Sphere.h	2;"	d
mi_opengl_StereoView_h	libs/opengl/StereoView.h	2;"	d
mi_opengl_Text_h	libs/opengl/Text.h	2;"	d
mi_opengl_Viewpoint_h	libs/opengl/Viewpoint.h	2;"	d
mi_opengl_ViewportRelativeViewpoint_h	libs/opengl/ViewportRelativeViewpoint.h	2;"	d
mi_opengl_Viewport_h	libs/opengl/Viewport.h	2;"	d
mi_opengl_interact_FieldOfViewZoomCommand_h	libs/opengl/interact/FieldOfViewZoomCommand.h	2;"	d
mi_opengl_interact_MouseArcBallOrbitor_h	libs/opengl/interact/MouseArcBallOrbitor.h	2;"	d
mi_opengl_interact_MouseArcBall_h	libs/opengl/interact/MouseArcBall.h	2;"	d
mi_opengl_interact_MousePicker_h	libs/opengl/interact/MousePicker.h	2;"	d
mi_opengl_interact_MouseTranslator_h	libs/opengl/interact/MouseTranslator.h	2;"	d
mi_opengl_interact_MouseZoomer_h	libs/opengl/interact/MouseZoomer.h	2;"	d
mi_opengl_interact_PropertyCommand_h	libs/opengl/interact/PropertyCommand.h	2;"	d
mi_opengl_interact_SimpleMouseRotator_h	libs/opengl/interact/SimpleMouseRotator.h	2;"	d
mi_opengl_interact_TargetFeedback_h	libs/opengl/interact/TargetFeedback.h	2;"	d
mi_opengl_interact_TranslationFeedback_h	libs/opengl/interact/TranslationFeedback.h	2;"	d
micomplex	libs/map/EMapBase.cpp	/^} micomplex;$/;"	t	typeref:struct:__anon48	file:
micomplex	libs/map/fftlib.cpp	/^} micomplex;$/;"	t	typeref:struct:__anon49	file:
middleFooter	apps/MIFit/ui/MIMainWindow.h	/^    QLabel *middleFooter;$/;"	m	class:MIMainWindow
mifig_ui_CMolwViewAnnotationPickingRenderable_h	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.h	2;"	d
mifitDir	mifit.py	/^    mifitDir = os.environ['MIFIT_DIR']$/;"	v
mifitDir	mifit.py	/^mifitDir = None$/;"	v
mifit_ConfSaver_h	libs/chemlib/ConfSaver.h	2;"	d
mifit_SaveItem_h	libs/chemlib/SaveItem.h	2;"	d
mifit_Version_h	apps/MIFit/core/Version.h	2;"	d
mifit_fios_PDB_h	libs/chemlib/PDB.h	2;"	d
mifit_fios_SMILES_h	libs/chemlib/SMILES.h	2;"	d
mifit_fios_mmCIF_h	libs/chemlib/mmCIF.h	2;"	d
mifit_fios_molfile_h	libs/chemlib/molfile.h	2;"	d
mifit_io_FirstToken_h	libs/chemlib/FirstToken.h	2;"	d
mifit_jobs_BatchJobManager_h	apps/MIFit/jobs/BatchJobManager.h	2;"	d
mifit_jobs_BatchJob_h	apps/MIFit/jobs/BatchJob.h	2;"	d
mifit_jobs_OpenJobResults_h	apps/MIFit/jobs/OpenJobResults.h	2;"	d
mifit_jobs_jobslib_h	apps/MIFit/jobs/jobslib.h	2;"	d
mifit_legacy_MIMolDictionary_h	libs/chemlib/MIMolDictionary.h	2;"	d
mifit_legacy_MIMolOPt_h	libs/molopt/MIMolOpt.h	2;"	d
mifit_legacy_rotlsq_h	apps/MIFit/core/rotlsq.h	2;"	d
mifit_ligand_LigDictEntry_h	libs/ligand/LigDictEntry.h	2;"	d
mifit_ligand_LigPostProcessor_h	libs/ligand/LigPostProcessor.h	2;"	d
mifit_map_CMapHeaderBase_h	libs/map/CMapHeaderBase.h	2;"	d
mifit_map_EMapBase_h	libs/map/EMapBase.h	2;"	d
mifit_map_InterpBox_h	libs/map/InterpBox.h	2;"	d
mifit_map_MINATOM_h	libs/map/MINATOM.h	2;"	d
mifit_map_MapSettingsBase_h	libs/map/MapSettingsBase.h	2;"	d
mifit_map_PEAK_h	libs/map/PEAK.h	2;"	d
mifit_math_LSQMatrix_h	libs/math/LSQMatrix.h	2;"	d
mifit_math_math_h	libs/math/mi_math.h	2;"	d
mifit_mimolio_h	apps/MIFit/ui/MIMolIO.h	2;"	d
mifit_model_ATOMLABEL_H	apps/MIFit/core/ATOMLABEL.h	2;"	d
mifit_model_DictResidue_h	libs/chemlib/DictResidue.h	2;"	d
mifit_model_GeomSaver_h	libs/chemlib/GeomSaver.h	2;"	d
mifit_model_Helix_h	apps/MIFit/core/Helix.h	2;"	d
mifit_model_RibbonSegment_h	apps/MIFit/core/RibbonSegment.h	2;"	d
mifit_model_RibbonSpan_h	apps/MIFit/core/RibbonSpan.h	2;"	d
mifit_model_SURFDOT_h	apps/MIFit/core/SURFDOT.h	2;"	d
mifit_model_SaveAtom_h	libs/chemlib/SaveAtom.h	2;"	d
mifit_model_Stack_h	apps/MIFit/core/Stack.h	2;"	d
mifit_model_SurfaceSphere_h	apps/MIFit/core/SurfaceSphere.h	2;"	d
mifit_ui_CMolwViewAtomPickingRenderable_h	apps/MIFit/ui/CMolwViewAtomPickingRenderable.h	2;"	d
mifit_ui_CMolwViewBondPickingRenderable_h	apps/MIFit/ui/CMolwViewBondPickingRenderable.h	2;"	d
mifit_ui_CMolwViewScene_h	apps/MIFit/ui/CMolwViewScene.h	2;"	d
mifit_ui_CMolwViewSlabPickingRenderable_h	apps/MIFit/ui/CMolwViewSlabPickingRenderable.h	2;"	d
mifit_ui_DisplayView_h	apps/MIFit/ui/DisplayView.h	2;"	d
mifit_ui_GLRenderer_h	apps/MIFit/ui/GLRenderer.h	2;"	d
mifit_ui_GenericDataDialog_h	apps/MIFit/ui/GenericDataDialog.h	2;"	d
mifit_ui_JobsView_h	apps/MIFit/ui/JobsView.h	2;"	d
mifit_ui_Logger_h	apps/MIFit/ui/Logger.h	2;"	d
mifit_ui_MIGLWidget_h	apps/MIFit/ui/MIGLWidget.h	2;"	d
mifit_ui_MapSettings_h	apps/MIFit/ui/MapSettings.h	2;"	d
mifit_ui_ModelsView_h	apps/MIFit/ui/ModelsView.h	2;"	d
mifit_ui_RamaPlot_h	apps/MIFit/ui/RamaPlot.h	2;"	d
mifit_ui_RenderStyle_h	apps/MIFit/core/RenderStyle.h	2;"	d
mifit_ui_SecondaryStructure_h	apps/MIFit/core/SecondaryStructure.h	2;"	d
mifit_ui_TreeData_h	apps/MIFit/ui/TreeData.h	2;"	d
mifit_ui_ViewSyncedPanel_h	apps/MIFit/ui/ViewSyncedPanel.h	2;"	d
mifit_ui_WaitCursor_h	apps/MIFit/ui/WaitCursor.h	2;"	d
mifit_util_utillib_h	libs/util/utillib.h	2;"	d
min	apps/MIFit/ui/GLOverviewCanvas.h	/^    mi::math::Vector3<float> min;$/;"	m	class:GLOverviewCanvas
min	libs/cmtz/mtzdata.h	/^ 		 float min;            \/**< minimum data element *\/$/;"	m	struct:__anon20
min	libs/opengl/OpenGL.h	6;"	d
minLabel_0	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *minLabel_0;$/;"	m	class:Ui_ContourOptionsWidget
minLabel_1	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *minLabel_1;$/;"	m	class:Ui_ContourOptionsWidget
minLabel_2	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *minLabel_2;$/;"	m	class:Ui_ContourOptionsWidget
minLabel_3	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *minLabel_3;$/;"	m	class:Ui_ContourOptionsWidget
minLabel_4	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *minLabel_4;$/;"	m	class:Ui_ContourOptionsWidget
minRadiusLabel	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *minRadiusLabel;$/;"	m	class:Ui_ContourOptionsWidget
min_d	libs/chemlib/Constraint.h	/^        float min_d;$/;"	m	class:chemlib::Bump
min_exponent	libs/cmtz/ccp4_parser.h	/^  double min_exponent;    \/* Smallest allowed exponent for numerical tokens *\/$/;"	m	struct:CCP4::__anon27
min_x	libs/map/InterpBox.h	/^    float min_x, min_y, min_z, max_x, max_y, max_z;$/;"	m	class:InterpBox
min_y	libs/map/InterpBox.h	/^    float min_x, min_y, min_z, max_x, max_y, max_z;$/;"	m	class:InterpBox
min_z	libs/map/InterpBox.h	/^    float min_x, min_y, min_z, max_x, max_y, max_z;$/;"	m	class:InterpBox
minatom	libs/map/MINATOM.h	/^typedef struct minatom$/;"	s
minimize_angles	libs/conflib/AtomRefiner.cpp	/^float AtomRefiner::minimize_angles(MIAtom *refi_atom)$/;"	f	class:AtomRefiner
minimize_angles	libs/conflib/LigRefiner.cpp	/^double LigRefiner::minimize_angles(Angle *angles, unsigned int nangles)$/;"	f	class:LigRefiner
minimize_angles	libs/molopt/MIMolOpt.cpp	/^int MIMolOpt::minimize_angles(std::vector<ANGLE> &angles, unsigned int nangles)$/;"	f	class:MIMolOpt
minimize_bonds	libs/conflib/AtomRefiner.cpp	/^float AtomRefiner::minimize_bonds(MIAtom *refi_atom)$/;"	f	class:AtomRefiner
minimize_bonds	libs/conflib/LigRefiner.cpp	/^double LigRefiner::minimize_bonds(BondLength *bonds, unsigned int nbonds)$/;"	f	class:LigRefiner
minimize_bonds	libs/molopt/MIMolOpt.cpp	/^int MIMolOpt::minimize_bonds(std::vector<Bond> &bonds, unsigned int nbonds)$/;"	f	class:MIMolOpt
minimize_bumps	libs/conflib/LigRefiner.cpp	/^double LigRefiner::minimize_bumps(Bump *bumps, unsigned int nbumps)$/;"	f	class:LigRefiner
minimize_bumps	libs/molopt/MIMolOpt.cpp	/^int MIMolOpt::minimize_bumps(std::vector<Bond> &bumps, unsigned int nbumps)$/;"	f	class:MIMolOpt
minimize_constraints	libs/molopt/MIMolOpt.cpp	/^int MIMolOpt::minimize_constraints(std::vector<Bond> &bonds, unsigned int nbonds)$/;"	f	class:MIMolOpt
minimize_map	libs/molopt/MIMolOpt.cpp	/^int MIMolOpt::minimize_map()$/;"	f	class:MIMolOpt
minimize_phipsi	libs/molopt/MIMolOpt.cpp	/^int MIMolOpt::minimize_phipsi()$/;"	f	class:MIMolOpt
minimize_planes	libs/conflib/AtomRefiner.cpp	/^float AtomRefiner::minimize_planes(MIAtom *refi_atom)$/;"	f	class:AtomRefiner
minimize_planes	libs/conflib/LigRefiner.cpp	/^double LigRefiner::minimize_planes(Plane *planes, unsigned int nplanes)$/;"	f	class:LigRefiner
minimize_planes	libs/molopt/MIMolOpt.cpp	/^int MIMolOpt::minimize_planes(std::vector<PLANE> &planes, unsigned int nplanes)$/;"	f	class:MIMolOpt
minimize_torsions	libs/conflib/AtomRefiner.cpp	/^float AtomRefiner::minimize_torsions(MIAtom *refi_atom)$/;"	f	class:AtomRefiner
minimize_torsions	libs/conflib/LigRefiner.cpp	/^double LigRefiner::minimize_torsions()$/;"	f	class:LigRefiner
minimize_torsions	libs/molopt/MIMolOpt.cpp	/^int MIMolOpt::minimize_torsions()$/;"	f	class:MIMolOpt
minx	apps/MIFit/ui/graphlib.h	/^    double minx;$/;"	m	class:GraphWindow
miny	apps/MIFit/ui/graphlib.h	/^    double miny;$/;"	m	class:GraphWindow
mips	libs/map/fftlib.cpp	191;"	d	file:
misflg	libs/cmtz/mtzdata.h	/^		 int misflg;           \/**< number of phixyz used (0, 1, or 2) *\/$/;"	m	struct:bathead
ml	libs/map/fftlib.cpp	1475;"	d	file:
ml	libs/map/fftlib.cpp	1761;"	d	file:
ml_cross	libs/math/mi_math.cpp	/^void ml_cross(double a[3], double b[3], double c[3])$/;"	f
ml_dot	libs/math/mi_math.cpp	/^double ml_dot(double a[3], double b[3])$/;"	f
ml_line_define	libs/math/mi_math.cpp	/^int ml_line_define(double pta[3], double ptb[3], double lineq[6])$/;"	f
ml_lineplane_intersect	libs/math/mi_math.cpp	/^int ml_lineplane_intersect(double lineq[6], double plane[4], double pt[3])$/;"	f
ml_linesphere_intersect	libs/math/mi_math.cpp	/^int ml_linesphere_intersect(double lineq[6], double center[3],$/;"	f
ml_lseglseg_intersect	libs/math/mi_math.cpp	/^int ml_lseglseg_intersect(double pta[3], double ptb[3], double ptc[3],$/;"	f
ml_lsegpt_param	libs/math/mi_math.cpp	/^double ml_lsegpt_param(double pta[3], double ptb[3], double ptc[3])$/;"	f
ml_mat_normalTransformZ	libs/math/mi_math.cpp	/^void ml_mat_normalTransformZ(double normal[3], double mat[3][3])$/;"	f
ml_mat_transpose33	libs/math/mi_math.cpp	/^void ml_mat_transpose33(double mat[3][3], double mat_trans[3][3])$/;"	f
ml_matmat44	libs/math/mi_math.cpp	/^void ml_matmat44(double mata[4][4], double matb[4][4], double matc[4][4])$/;"	f
ml_normalize	libs/math/mi_math.cpp	/^int ml_normalize(double a[3])$/;"	f
ml_parallel_min	libs/math/mi_math.cpp	/^double ml_parallel_min = 0.001;$/;"	v
ml_plane_define	libs/math/mi_math.cpp	/^int ml_plane_define(double a[3], double b[3], double c[3], double plane[4])$/;"	f
ml_plane_maxdiff	libs/math/mi_math.cpp	/^double ml_plane_maxdiff = 0.01;$/;"	v
ml_plane_test	libs/math/mi_math.cpp	/^int ml_plane_test(double plane[4], double a[3])$/;"	f
ml_ptpt_distance	libs/math/mi_math.cpp	/^double ml_ptpt_distance(double a[3], double b[3])$/;"	f
ml_ptpt_mindist	libs/math/mi_math.cpp	/^double ml_ptpt_mindist = 0.0001;$/;"	v
ml_pttri_inside	libs/math/mi_math.cpp	/^int ml_pttri_inside(double pt[3], double pta[3], double ptb[3], double ptc[3], double pt_bc[3])$/;"	f
ml_vec4_mat44	libs/math/mi_math.cpp	/^void ml_vec4_mat44(double a[4], double mat[4][4], double b[4])$/;"	f
ml_vec_mat33	libs/math/mi_math.cpp	/^void ml_vec_mat33(double a[3], double mat[3][3], double b[3])$/;"	f
ml_vec_mat44	libs/math/mi_math.cpp	/^void ml_vec_mat44(double a[3], double vw, double mat[4][4], double b[3])$/;"	f
ml_vector_minlen	libs/math/mi_math.cpp	/^double ml_vector_minlen = 0.0001;$/;"	v
mmCIF	apps/MIFit/core/MoleculeType.h	/^        mmCIF,$/;"	e	enum:MoleculeType::__anon2
mmCIF	libs/chemlib/Ligand.h	/^            mmCIF,$/;"	e	enum:chemlib::Ligand::__anon28
mmCIF	libs/chemlib/mmCIF.cpp	/^mmCIF::mmCIF()$/;"	f	class:chemlib::mmCIF
mmCIF	libs/chemlib/mmCIF.h	/^    class mmCIF : public Reader, public Writer$/;"	c	namespace:chemlib
mmCIF_phase	libs/map/EMapBase.h	/^        mmCIF_phase,$/;"	e	enum:EMapBase::__anon47
mmtz_add_column	libs/umtz/mmtzlib.c	/^int mmtz_add_column( mmtzfile file, const mmtz_column* col, const mmtz_dataset* set, const mmtz_crystal* xtl )$/;"	f
mmtz_add_row	libs/umtz/mmtzlib.c	/^void mmtz_add_row( mmtzfile file, float* fdata, const int* flags )$/;"	f
mmtz_add_sort_header	libs/umtz/mmtzlib.c	/^void mmtz_add_sort_header( mmtzfile file, const char* sortorder )$/;"	f
mmtz_add_syminf_header	libs/umtz/mmtzlib.c	/^void mmtz_add_syminf_header( mmtzfile file, const int nsym, const int nsymp, const char cellcode, const int ccp4_symbol, const char* hm_symbol, const char* pg_symbol )$/;"	f
mmtz_add_symop_header	libs/umtz/mmtzlib.c	/^void mmtz_add_symop_header( mmtzfile file, const char* symop )$/;"	f
mmtz_close	libs/umtz/mmtzlib.c	/^void mmtz_close( mmtzfile file )$/;"	f
mmtz_column	libs/umtz/mmtzlib.h	/^} mmtz_column;$/;"	t	typeref:struct:mmtz_column_
mmtz_column_	libs/umtz/mmtzlib.h	/^typedef struct mmtz_column_$/;"	s
mmtz_copy_headers	libs/umtz/mmtzlib.c	/^void mmtz_copy_headers( mmtzfile dest, const mmtzfile src )$/;"	f
mmtz_crystal	libs/umtz/mmtzlib.h	/^} mmtz_crystal;$/;"	t	typeref:struct:mmtz_crystal_
mmtz_crystal_	libs/umtz/mmtzlib.h	/^typedef struct mmtz_crystal_$/;"	s
mmtz_dataset	libs/umtz/mmtzlib.h	/^} mmtz_dataset;$/;"	t	typeref:struct:mmtz_dataset_
mmtz_dataset_	libs/umtz/mmtzlib.h	/^typedef struct mmtz_dataset_$/;"	s
mmtz_get_cell	libs/umtz/mmtzlib.c	/^float* mmtz_get_cell( const mmtzfile file, float* cell )$/;"	f
mmtz_get_column	libs/umtz/mmtzlib.c	/^int mmtz_get_column( const mmtzfile file, const int icol, mmtz_column* col, mmtz_dataset* set, mmtz_crystal* xtl )$/;"	f
mmtz_get_num_symops	libs/umtz/mmtzlib.c	/^int mmtz_get_num_symops( const mmtzfile file )$/;"	f
mmtz_get_row	libs/umtz/mmtzlib.c	/^void mmtz_get_row( const mmtzfile file, float* fdata, int* flags )$/;"	f
mmtz_get_setxtl	libs/umtz/mmtzlib.c	/^void mmtz_get_setxtl( const mmtzfile file, const int iset, mmtz_dataset* set, mmtz_crystal* xtl )$/;"	f
mmtz_get_symop	libs/umtz/mmtzlib.c	/^char* mmtz_get_symop( const mmtzfile file, const int isym, char* symop )$/;"	f
mmtz_init_headers	libs/umtz/mmtzlib.c	/^void mmtz_init_headers( mmtzfile file, const char* title, const float cell[6] )$/;"	f
mmtz_num_cols	libs/umtz/mmtzlib.c	/^int mmtz_num_cols( const mmtzfile file )$/;"	f
mmtz_num_datasets	libs/umtz/mmtzlib.c	/^int mmtz_num_datasets( const mmtzfile file )$/;"	f
mmtz_num_rows	libs/umtz/mmtzlib.c	/^int mmtz_num_rows( const mmtzfile file )$/;"	f
mmtz_open	libs/umtz/mmtzlib.c	/^mmtzfile mmtz_open( const char* filename, const char* mode )$/;"	f
mmtz_seek_row	libs/umtz/mmtzlib.c	/^void mmtz_seek_row( const mmtzfile file, const int n )$/;"	f
mmtzfile	libs/umtz/mmtzlib.h	/^typedef umtzfile*mmtzfile;$/;"	t
mn_	libs/chemlib/Matrix.h	/^        Subscript mn_;  \/\/ total size$/;"	m	class:TNT::Matrix
mnf	libs/cmtz/mtzdata.h	/^                 MNF mnf;              \/**< value of missing number flag *\/$/;"	m	struct:__anon25
mnf	libs/umtz/umtzlib.h	/^    float mnf;$/;"	m	struct:umtzfile_
mode	apps/MIFit/core/Cfiles.h	/^    int mode;$/;"	m	class:CArchive
mode	apps/MIFit/ui/SmilesDialog.h	/^        int mode;$/;"	m	struct:SmilesDialog::Data
mode	libs/cmtz/library_file.h	/^  unsigned int mode : 8;$/;"	m	struct:CCP4::_CFileStruct
mode	libs/opengl/zlib/infcodes.cpp	/^    inflate_codes_mode mode;    \/* current inflate_codes mode *\/$/;"	m	struct:inflate_codes_state	file:
mode	libs/opengl/zlib/inflate.cpp	/^    inflate_mode mode;  \/* current inflate mode *\/$/;"	m	struct:internal_state	file:
mode	libs/opengl/zlib/infutil.h	/^    inflate_block_mode mode;    \/* current inflate_block mode *\/$/;"	m	struct:inflate_blocks_state
mode	libs/umtz/umtzlib.h	/^    char filename[200], mode[4];$/;"	m	struct:umtzfile_
model	apps/MIFit/ui/DictEditCanvas.h	/^    Molecule *model;$/;"	m	class:DictEditCanvas
model	apps/MIFit/ui/ModelsView.cpp	/^    Molecule *model;$/;"	m	class:AtomsTree	file:
model	apps/MIFit/ui/ModelsView.cpp	/^    Molecule *model;$/;"	m	class:ResiduesTree	file:
model	apps/MIFit/ui/SaveModel.h	/^    Molecule *model;$/;"	m	class:SaveModel
model	apps/MIFit/ui/TreeData.h	/^    Molecule *model;$/;"	m	class:TreeData
modelAdded	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::modelAdded(Molecule *model)$/;"	f	class:DisplayTree
modelAdded	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::modelAdded(Molecule *model)$/;"	f	class:MIGLWidget
modelAdded	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::modelAdded(Molecule *model)$/;"	f	class:ModelsTree
modelAdded	apps/MIFit/ui/moc/moc_Displaylist.cpp	/^void Displaylist::modelAdded(Molecule * _t1)$/;"	f	class:Displaylist
modelAtomsToBeDeleted	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::modelAtomsToBeDeleted(MIMoleculeBase *mol, const MIAtomList &atoms)$/;"	f	class:MIGLWidget
modelChanged	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::modelChanged(MIMoleculeBase*)$/;"	f	class:MIGLWidget
modelExportAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *modelExportAction_;$/;"	m	class:ModelsTree	file:
modelFile	apps/MIFit/ui/CustomJobDialog.cpp	/^QString CustomJobDialog::modelFile() const$/;"	f	class:CustomJobDialog
modelLineEdit	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QLineEdit *modelLineEdit;$/;"	m	class:Ui_CustomJobDialog
modelLocation	apps/MIFit/ui/AddResidueDialog.cpp	/^AddResidueDialog::ModelLocation AddResidueDialog::modelLocation() const$/;"	f	class:AddResidueDialog
modelMode	apps/MIFit/ui/CustomJobDialog.cpp	/^CustomJobDialog::ModelMode CustomJobDialog::modelMode() const$/;"	f	class:CustomJobDialog
modelObjectDeleted	apps/MIFit/ui/RamaPlot.cpp	/^void RamaPlotMgr::modelObjectDeleted(chemlib::MIMoleculeBase* )$/;"	f	class:RamaPlotMgr
modelPushButton	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QPushButton *modelPushButton;$/;"	m	class:Ui_CustomJobDialog
modelReplaceWithSequence	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::modelReplaceWithSequence()$/;"	f	class:MIGLWidget
modelResiduesToBeDeleted	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::modelResiduesToBeDeleted(MIMoleculeBase *mol, std::vector<Residue*> &res)$/;"	f	class:MIGLWidget
modelStringToModelName	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^std::string PhaseFileLoadDialog::modelStringToModelName(const char *str)$/;"	f	class:PhaseFileLoadDialog
modelStringToNumber	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^static int modelStringToNumber(const char *str)$/;"	f	file:
modelToAnnotationListData	apps/MIFit/ui/DisplayView.cpp	/^    ModelToDataMap modelToAnnotationListData;$/;"	m	class:DisplayTree	file:
modelToAtomLabelListData	apps/MIFit/ui/DisplayView.cpp	/^    ModelToDataMap modelToAtomLabelListData;$/;"	m	class:DisplayTree	file:
modelToBeDeleted	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::modelToBeDeleted(chemlib::MIMoleculeBase *mol)$/;"	f	class:DisplayTree
modelToBeDeleted	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::modelToBeDeleted(MIMoleculeBase *mol)$/;"	f	class:ModelsTree
modelToCrystalData	apps/MIFit/ui/ModelsView.cpp	/^    ModelToDataMap modelToCrystalData;$/;"	m	class:ModelsTree	file:
modelToData	apps/MIFit/ui/DisplayView.cpp	/^    ModelToDataMap modelToData;$/;"	m	class:DisplayTree	file:
modelToData	apps/MIFit/ui/ModelsView.cpp	/^    ModelToDataMap modelToData;$/;"	m	class:ModelsTree	file:
modelToSurfaceData	apps/MIFit/ui/DisplayView.cpp	/^    ModelToDataMap modelToSurfaceData;$/;"	m	class:DisplayTree	file:
model_menu	apps/MIFit/ui/MIMainWindow.h	/^    QMenu *model_menu;$/;"	m	class:MIMainWindow
modelnumber	apps/MIFit/core/Molecule.h	/^    int modelnumber;$/;"	m	class:Molecule
models	apps/MIFit/ui/CMolwViewScene.h	/^    Displaylist *models;$/;"	m	class:CMolwViewScene
models	apps/MIFit/ui/DictEditScene.h	/^    Displaylist *models;$/;"	m	class:DictEditScene
modelsDock	apps/MIFit/ui/MIMainWindow.h	/^    QDockWidget *modelsDock;$/;"	m	class:MIMainWindow
modelsTree	apps/MIFit/ui/ModelsView.cpp	/^    ModelsTree *modelsTree;$/;"	m	class:ModelsViewPanel	file:
modelsView	apps/MIFit/ui/MIMainWindow.h	/^    ViewSyncedPanel *modelsView;$/;"	m	class:MIMainWindow
modelview	libs/opengl/Frustum.h	/^            float *modelview;$/;"	m	class:mi::opengl::Frustum
modified	apps/MIFit/ui/ManageCrystals.h	/^    bool modified;$/;"	m	class:ManageCrystals
modified	libs/chemlib/MIMolDictionary.h	/^        bool modified;$/;"	m	class:chemlib::MIMolDictionary
modified	libs/chemlib/MIMoleculeBase.h	/^        bool modified;$/;"	m	class:chemlib::MIMoleculeBase
modified	libs/map/EMapBase.h	/^    bool modified;$/;"	m	class:EMapBase
modifiedAngles	apps/MIFit/ui/DictEditCanvas.h	/^    std::vector<bool> modifiedAngles;$/;"	m	class:DictEditCanvas
molecular_calc_cell_verts	libs/jacgrid/isosurface.cpp	/^static void molecular_calc_cell_verts(unsigned int index, unsigned int x1, unsigned int y1, unsigned int z1)$/;"	f	file:
molecule	apps/MIFit/core/Stack.h	/^    Molecule *molecule;$/;"	m	struct:__anon3
molecule	apps/MIFit/ui/CMolwViewBondPickingRenderable.h	/^    Molecule *molecule;$/;"	m	class:CMolwViewBondRenderable
molecule	apps/MIFit/ui/MoleculeXmlHandler.h	/^    Molecule *molecule;$/;"	m	class:MoleculeXmlHandler
moleculeChanged	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::moleculeChanged(MIMoleculeBase *model)$/;"	f	class:ModelsTree
moleculeChanged	apps/MIFit/ui/RamaPlot.cpp	/^void RamaPlotMgr::moleculeChanged(chemlib::MIMoleculeBase *mol)$/;"	f	class:RamaPlotMgr
moleculeChanged	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^void chemlib::MIMoleculeBase::moleculeChanged(chemlib::MIMoleculeBase * _t1)$/;"	f	class:chemlib::MIMoleculeBase
moleculeDeleted	apps/MIFit/ui/RamaPlot.cpp	/^void RamaPlotMgr::moleculeDeleted(chemlib::MIMoleculeBase*)$/;"	f	class:RamaPlotMgr
moleculeDeleted	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^void chemlib::MIMoleculeBase::moleculeDeleted(chemlib::MIMoleculeBase * _t1)$/;"	f	class:chemlib::MIMoleculeBase
moleculeDeleted	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::moleculeDeleted(MIMoleculeBase *molecule)$/;"	f	class:MIMolOpt
moleculeToBeDeleted	apps/MIFit/core/Stack.cpp	/^void Stack::moleculeToBeDeleted(MIMoleculeBase *mol)$/;"	f	class:Stack
moleculeToBeDeleted	apps/MIFit/ui/Displaylist.cpp	/^void Displaylist::moleculeToBeDeleted(MIMoleculeBase *mol)$/;"	f	class:Displaylist
moleculeToBeDeleted	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::moleculeToBeDeleted(MIMoleculeBase *model)$/;"	f	class:MIGLWidget
moleculeToBeDeleted	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^void chemlib::MIMoleculeBase::moleculeToBeDeleted(chemlib::MIMoleculeBase * _t1)$/;"	f	class:chemlib::MIMoleculeBase
moleculeToBeDeleted	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::moleculeToBeDeleted(MIMoleculeBase *molecule)$/;"	f	class:MIMolOpt
molecules	apps/MIFit/ui/MoleculeXmlHandler.h	/^    MoleculeList molecules;$/;"	m	class:MoleculeXmlHandler
molfile	libs/chemlib/molfile.cpp	/^molfile::molfile()$/;"	f	class:chemlib::molfile
molfile	libs/chemlib/molfile.h	/^    class molfile : public Reader, public Writer$/;"	c	namespace:chemlib
molrep_score	libs/molopt/MIMolOpt.cpp	/^static void molrep_score(trial &t, MIAtomList &atoms, EMapBase *emap)$/;"	f	file:
mouse	apps/MIFit/ui/MIGLWidget.h	/^    QPoint mouse, mousestart;$/;"	m	class:MIGLWidget
mouseClickThreshold	apps/MIFit/ui/DictEditCanvas.cpp	/^const int DictEditCanvas::mouseClickThreshold = 300;$/;"	m	class:DictEditCanvas	file:
mouseClickThreshold	apps/MIFit/ui/DictEditCanvas.h	/^    static const int mouseClickThreshold;$/;"	m	class:DictEditCanvas
mouseDoubleClickEvent	apps/MIFit/ui/GLOverviewCanvas.cpp	/^void GLOverviewCanvas::mouseDoubleClickEvent(QMouseEvent *e)$/;"	f	class:GLOverviewCanvas
mouseDoubleClickEvent	apps/MIFit/ui/MIGLWidget.cpp	/^    virtual void mouseDoubleClickEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:MainItem
mouseDownTime	apps/MIFit/ui/DictEditCanvas.cpp	/^static QTime mouseDownTime;$/;"	v	file:
mouseHelper	apps/MIFit/ui/graphlib.cpp	/^bool GraphWindow::mouseHelper(QMouseEvent *e, float &fx, float &fy, float &xrange, float &yrange)$/;"	f	class:GraphWindow
mouseMoveEvent	apps/MIFit/ui/DictEditCanvas.cpp	/^    virtual void mouseMoveEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:DictEditMainItem
mouseMoveEvent	apps/MIFit/ui/GLOverviewCanvas.cpp	/^void GLOverviewCanvas::mouseMoveEvent(QMouseEvent *e)$/;"	f	class:GLOverviewCanvas
mouseMoveEvent	apps/MIFit/ui/MIGLWidget.cpp	/^    virtual void mouseMoveEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:MainItem
mouseMoveEvent	apps/MIFit/ui/graphlib.cpp	/^void GraphWindow::mouseMoveEvent(QMouseEvent *evt)$/;"	f	class:GraphWindow
mouseOver	apps/MIFit/ui/moc/moc_graphlib.cpp	/^void GraphWindow::mouseOver(int _t1)$/;"	f	class:GraphWindow
mousePicker	apps/MIFit/ui/DictEditCanvas.h	/^    mi::opengl::interact::MousePicker *mousePicker;$/;"	m	class:DictEditCanvas
mousePicker	apps/MIFit/ui/MIGLWidget.h	/^    mi::opengl::interact::MousePicker *mousePicker;$/;"	m	class:MIGLWidget
mousePressEvent	apps/MIFit/ui/DictEditCanvas.cpp	/^    virtual void mousePressEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:DictEditMainItem
mousePressEvent	apps/MIFit/ui/GLOverviewCanvas.cpp	/^void GLOverviewCanvas::mousePressEvent(QMouseEvent *e)$/;"	f	class:GLOverviewCanvas
mousePressEvent	apps/MIFit/ui/MIGLWidget.cpp	/^    virtual void mousePressEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:MainItem
mousePressEvent	apps/MIFit/ui/graphlib.cpp	/^void GraphWindow::mousePressEvent(QMouseEvent *evt)$/;"	f	class:GraphWindow
mouseReleaseEvent	apps/MIFit/ui/DictEditCanvas.cpp	/^    virtual void mouseReleaseEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:DictEditMainItem
mouseReleaseEvent	apps/MIFit/ui/GLOverviewCanvas.cpp	/^void GLOverviewCanvas::mouseReleaseEvent(QMouseEvent *e)$/;"	f	class:GLOverviewCanvas
mouseReleaseEvent	apps/MIFit/ui/MIGLWidget.cpp	/^    virtual void mouseReleaseEvent(QGraphicsSceneMouseEvent *event)$/;"	f	class:MainItem
mouseReleaseEvent	apps/MIFit/ui/graphlib.cpp	/^void GraphWindow::mouseReleaseEvent(QMouseEvent *evt)$/;"	f	class:GraphWindow
mouseStart	apps/MIFit/ui/DictEditCanvas.h	/^    QPoint mouseStart;$/;"	m	class:DictEditCanvas
mouseTimer	apps/MIFit/ui/DictEditCanvas.h	/^    QTimer *mouseTimer;$/;"	m	class:DictEditCanvas
mouseTranslator	apps/MIFit/ui/DictEditScene.h	/^    mi::opengl::interact::MouseTranslator *mouseTranslator;$/;"	m	class:DictEditScene
mouseZoomer	apps/MIFit/ui/DictEditCanvas.h	/^    mi::opengl::interact::MouseZoomer *mouseZoomer;$/;"	m	class:DictEditCanvas
mousestart	apps/MIFit/ui/MIGLWidget.h	/^    QPoint mouse, mousestart;$/;"	m	class:MIGLWidget
moveBy	apps/MIFit/core/ViewPoint.cpp	/^void ViewPoint::moveBy(const mi::math::Vector3<float> &delta)$/;"	f	class:ViewPoint
moveTo	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::moveTo(const Vector3<float> &pos)$/;"	f	class:MIGLWidget
ms	libs/map/fftlib.cpp	1467;"	d	file:
ms	libs/map/fftlib.cpp	1769;"	d	file:
msg	libs/opengl/zlib/zlib.h	/^    char     *msg;      \/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s
mt	libs/math/MersenneTwister.h	/^            unsigned int mt[MT_SIZE];$/;"	m	class:mi::math::MersenneTwister
mti	libs/math/MersenneTwister.h	/^            int mti;$/;"	m	class:mi::math::MersenneTwister
mtzsymm	libs/cmtz/mtzdata.h	/^                 SYMGRP mtzsymm;       \/**< symmetry information *\/$/;"	m	struct:__anon25
mult_element	libs/chemlib/Matrix.h	/^    Matrix<T> mult_element(const Matrix<T> &A,$/;"	f	namespace:TNT
multiply	libs/math/Matrix3.h	/^        void Matrix3<Type>::multiply(Type scalar)$/;"	f	class:mi::math::Matrix3
multiply	libs/math/Matrix3.h	/^        void Matrix3<Type>::multiply(Type scalar, const Matrix3<Type> &m1)$/;"	f	class:mi::math::Matrix3
multiply	libs/math/Matrix3.h	/^        void Matrix3<Type>::multiply(const Matrix3<Type> &m1)$/;"	f	class:mi::math::Matrix3
multiply	libs/math/Matrix3.h	/^        void Matrix3<Type>::multiply(const Matrix3<Type> &m1, const Matrix3<Type> &m2)$/;"	f	class:mi::math::Matrix3
multiply	libs/math/Matrix4.h	/^        void Matrix4<Type>::multiply(Type scalar)$/;"	f	class:mi::math::Matrix4
multiply	libs/math/Matrix4.h	/^        void Matrix4<Type>::multiply(Type scalar, const Matrix4<Type> &m1)$/;"	f	class:mi::math::Matrix4
multiply	libs/math/Matrix4.h	/^        void Matrix4<Type>::multiply(const Matrix4<Type> &m1)$/;"	f	class:mi::math::Matrix4
multiply	libs/math/Matrix4.h	/^        void Matrix4<Type>::multiply(const Matrix4<Type> &m1, const Matrix4<Type> &m2)$/;"	f	class:mi::math::Matrix4
multiply	libs/math/Quaternion.h	/^        void Quaternion<Type>::multiply(const Quaternion<Type> &q1)$/;"	f	class:mi::math::Quaternion
multiply	libs/math/Quaternion.h	/^        void Quaternion<Type>::multiply(const Quaternion<Type> &q1, const Quaternion<Type> &q2)$/;"	f	class:mi::math::Quaternion
myColorSetter	apps/MIFit/ui/Application.cpp	/^class myColorSetter$/;"	c	file:
myMolPrefsHandler	apps/MIFit/ui/Application.cpp	/^class myMolPrefsHandler$/;"	c	file:
myRenderText	apps/MIFit/ui/graphlib.cpp	/^void GraphWindow::myRenderText(double x, double y, double z, const QString &str, const QFont &font,$/;"	f	class:GraphWindow
myRenderText	apps/MIFit/ui/graphlib.cpp	/^void GraphWindow::myRenderText(int x, int y, const QString &str, const QFont &font, int listBase)$/;"	f	class:GraphWindow
myTorsionWritePrompt	apps/MIFit/ui/Application.cpp	/^class myTorsionWritePrompt$/;"	c	file:
my_dTorsion	libs/molopt/MIMolOpt.cpp	/^static int my_dTorsion(MIAtom *a1, MIAtom *a2, MIAtom *a3, float dangle, float *dx, float *dy, float *dz)$/;"	f	file:
my_index	libs/map/fftsub.cpp	/^int my_index(char *str, char ch)$/;"	f
nCycles	libs/conflib/LigRefiner.h	/^        int nCycles;$/;"	m	class:conflib::LigRefiner
nCycles	libs/molopt/MIMolOpt.h	/^    int nCycles;$/;"	m	class:MIMolOpt
nNCRSymmops	libs/map/CMapHeaderBase.h	/^    int nNCRSymmops;$/;"	m	class:CMapHeaderBase
nRefiRes	libs/molopt/MIMolOpt.h	/^    int nRefiRes;$/;"	m	class:MIMolOpt
nResDict	libs/chemlib/MIMolDictionary.h	/^        int nResDict;$/;"	m	class:chemlib::MIMolDictionary
n_	libs/chemlib/Matrix.h	/^        Subscript n_;$/;"	m	class:TNT::Matrix
n_orig_bat	libs/cmtz/mtzdata.h	/^		 int n_orig_bat;       \/**< original number of batches *\/$/;"	m	struct:__anon25
nabors	libs/chemlib/MIAtom.h	/^        const MIAtomList&nabors() const$/;"	f	class:chemlib::MIAtom
nabors_	libs/chemlib/MIAtom.h	/^        MIAtomList nabors_;$/;"	m	class:chemlib::MIAtom
name	apps/MIFit/script/LocalSocketScript.cpp	/^QString LocalSocketScript::name() const$/;"	f	class:LocalSocketScript
name	libs/chemlib/CHIRALDICT.h	/^        char name[4][MAXATOMNAME];$/;"	m	class:chemlib::CHIRALDICT
name	libs/chemlib/MIAtom.h	/^        const char *name() const$/;"	f	class:chemlib::MIAtom
name	libs/chemlib/Monomer.h	/^        const std::string name() const$/;"	f	class:chemlib::Monomer
name	libs/chemlib/PLANE.h	/^        char name[MAXPLANE][MAXNAME]; \/* if more than 20 use overlapping planes*\/$/;"	m	class:chemlib::PLANEDICT
name	libs/chemlib/TORSION.h	/^        char name[4][MAXATOMNAME]; \/* atom names *\/$/;"	m	class:chemlib::TORSDICT
name	libs/cmtz/library_file.h	/^  char *name;$/;"	m	struct:CCP4::_CFileStruct
name	libs/map/fftlib.cpp	/^    char *name;$/;"	m	struct:Namelist	file:
name	libs/map/fftlib.cpp	/^    char *name;$/;"	m	struct:Vardesc	file:
name	libs/math/Grid.h	/^            std::string name;$/;"	m	class:mi::math::Grid
name1	libs/chemlib/Monomer.h	/^        char name1() const$/;"	f	class:chemlib::Monomer
name1_	libs/chemlib/Monomer.h	/^        char name1_;$/;"	m	class:chemlib::Monomer
name_	apps/MIFit/script/LocalSocketScript.h	/^    QString name_;$/;"	m	class:LocalSocketScript
name_	libs/chemlib/MIAtom.h	/^        char name_[MAXATOMNAME];$/;"	m	class:chemlib::MIAtom
name_	libs/chemlib/Monomer.h	/^        std::string name_;$/;"	m	class:chemlib::Monomer
nativeFT	libs/cmtz/library_file.c	/^static uint16 nativeFT = NATIVEFT; \/* machine float type *\/$/;"	v	file:
nativeFT	libs/cmtz/library_utils.c	/^static uint16 nativeFT = NATIVEFT; \/* machine float type *\/$/;"	v	file:
nativeFT	libs/umtz/library.c	/^static uint16 nativeFT = NATIVEFT; \/* machine float type *\/$/;"	v	file:
nativeIT	libs/cmtz/library_file.c	/^static uint16 nativeIT = NATIVEIT; \/* machine integer type *\/ $/;"	v	file:
nativeIT	libs/umtz/library.c	/^static uint16 nativeIT = NATIVEIT; \/* machine integer type *\/ $/;"	v	file:
natoms	libs/chemlib/PLANE.h	/^        int natoms;$/;"	m	class:chemlib::PLANE
natoms	libs/chemlib/PLANE.h	/^        int natoms;$/;"	m	class:chemlib::PLANEDICT
natoms	libs/map/InterpBox.h	/^    int natoms;$/;"	m	class:InterpBox
navigator	apps/MIFit/ui/MIGLWidget.h	/^    NavigatorCanvas *navigator;$/;"	m	class:MIGLWidget
navigator	apps/MIFit/ui/MIMainWindow.h	/^    GLOverviewCanvas *navigator;$/;"	m	class:MIMainWindow
navigatorDock	apps/MIFit/ui/MIMainWindow.h	/^    QDockWidget *navigatorDock;$/;"	m	class:MIMainWindow
nbscal	libs/cmtz/mtzdata.h	/^		 int nbscal;           \/**< number of batch scales & Bfactors$/;"	m	struct:bathead
nbsetid	libs/cmtz/mtzdata.h	/^                 int nbsetid;          \/**< dataset id - should be pointer? *\/$/;"	m	struct:bathead
ncol	libs/cmtz/mtzdata.h	/^		 int ncol;             \/**< number of columns *\/$/;"	m	struct:__anon21
ncol	libs/umtz/umtzlib.h	/^    int iunit, ncol, nrow;$/;"	m	struct:umtzfile_
ncol_read	libs/cmtz/mtzdata.h	/^                 int ncol_read;        \/**< number of columns from file *\/$/;"	m	struct:__anon25
nconn	libs/jacgrid/surface.h	/^    unsigned int nconn;                  \/* number of verts in connection (triangle) list *\/$/;"	m	class:surfaceT
ncryst	libs/cmtz/mtzdata.h	/^		 int ncryst;           \/**< crystal number *\/$/;"	m	struct:bathead
ncsOps	apps/MIFit/ui/ui_ManageCrystals.h	/^    QTextEdit *ncsOps;$/;"	m	class:Ui_ManageCrystals
ndata	apps/MIFit/core/RibbonSpan.cpp	/^static double ndata[8][3] =    {{0.0, 1.0, 0.0},$/;"	v	file:
ndet	libs/cmtz/mtzdata.h	/^		 int ndet;             \/**< number of detectors (current maximum$/;"	m	struct:bathead
nearClipping	libs/opengl/Frustum.h	/^            float nearClipping;$/;"	m	class:mi::opengl::Frustum
nearpoint	libs/opengl/Object3d.h	/^            float nearpoint;$/;"	m	class:mi::opengl::Object3d
nedges	libs/jacgrid/cell_table.h	/^    unsigned int nedges;$/;"	m	struct:__anon30
nedges	libs/jacgrid/plane.cpp	/^    unsigned int nedges;$/;"	m	struct:__anon31	file:
need	libs/opengl/zlib/infcodes.cpp	/^            uInt need;          \/* bits needed *\/$/;"	m	struct:inflate_codes_state::__anon39::__anon40	file:
need	libs/opengl/zlib/inflate.cpp	/^            uLong need;         \/* stream check value *\/$/;"	m	struct:internal_state::__anon43::__anon44	file:
needs_resort	libs/jacgrid/surface.h	/^    unsigned int needs_resort;           \/* for transparent surfaces *\/$/;"	m	class:surfaceT
needsrefining	apps/MIFit/ui/DictEditCanvas.h	/^    bool needsrefining;$/;"	m	class:DictEditCanvas
negate	libs/math/Matrix3.h	/^        void Matrix3<Type>::negate()$/;"	f	class:mi::math::Matrix3
negate	libs/math/Matrix3.h	/^        void Matrix3<Type>::negate(const Matrix3<Type> &m1)$/;"	f	class:mi::math::Matrix3
negate	libs/math/Matrix4.h	/^        void Matrix4<Type>::negate()$/;"	f	class:mi::math::Matrix4
negate	libs/math/Matrix4.h	/^        void Matrix4<Type>::negate(const Matrix4<Type> &m1)$/;"	f	class:mi::math::Matrix4
negate	libs/math/Tuple3.h	/^        void Tuple3<Type>::negate()$/;"	f	class:mi::math::Tuple3
negate	libs/math/Tuple3.h	/^        void Tuple3<Type>::negate(const Tuple3<Type> &t1)$/;"	f	class:mi::math::Tuple3
negate	libs/math/Tuple4.h	/^        void Tuple4<Type>::negate()$/;"	f	class:mi::math::Tuple4
negate	libs/math/Tuple4.h	/^        void Tuple4<Type>::negate(const Tuple4<Type> &t1)$/;"	f	class:mi::math::Tuple4
newAnisotropicity	libs/chemlib/MIAtom.cpp	/^void MIAtom::newAnisotropicity()$/;"	f	class:chemlib::MIAtom
newCrystalButton	apps/MIFit/ui/ui_ManageCrystals.h	/^    QPushButton *newCrystalButton;$/;"	m	class:Ui_ManageCrystals
newSolidsurfMenu	apps/MIFit/ui/MIGLWidget.cpp	/^QMenu*MIGLWidget::newSolidsurfMenu(bool include_selection_items)$/;"	f	class:MIGLWidget
newWindow	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::newWindow()$/;"	f	class:MIMainWindow
new_ptr	libs/opengl/zlib/zutil.cpp	/^    voidpf new_ptr;$/;"	m	struct:ptr_table_s	file:
newfile	apps/MIFit/ui/MIGLWidget.h	/^    int newfile;$/;"	m	class:MIGLWidget
newsize	libs/chemlib/Matrix.h	/^        Matrix<T>&newsize(Subscript M, Subscript N)$/;"	f	class:TNT::Matrix
next	libs/chemlib/Residue.h	/^        Residue *next() const$/;"	f	class:chemlib::Residue
next	libs/chemlib/itertest.cxx	/^    RESIDUE *next() { return next_res; }$/;"	f	class:RESIDUE
next	libs/cmtz/mtzdata.h	/^		 struct bathead *next; \/**< next batch in list *\/$/;"	m	struct:bathead	typeref:struct:bathead::bathead
next	libs/math/MersenneTwister.h	/^            virtual unsigned int next(int bits)$/;"	f	class:mi::math::MersenneTwister
nextAct	apps/MIFit/ui/MIMainWindow.h	/^    QAction *nextAct;$/;"	m	class:MIMainWindow
nextAnnotationId	apps/MIFit/ui/DictEditCanvas.h	/^    int nextAnnotationId;$/;"	m	class:DictEditCanvas
nextBoolean	libs/math/MersenneTwister.h	/^            virtual bool nextBoolean()$/;"	f	class:mi::math::MersenneTwister
nextCauchy	libs/math/Random.h	/^            virtual double nextCauchy()$/;"	f	class:mi::math::Random
nextConformerAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *nextConformerAction;$/;"	m	class:DictEditCanvas
nextDouble	libs/math/MersenneTwister.h	/^            virtual double nextDouble()$/;"	f	class:mi::math::MersenneTwister
nextDoubleExclusive	libs/math/MersenneTwister.h	/^            virtual double nextDoubleExclusive()$/;"	f	class:mi::math::MersenneTwister
nextDoubleInclusive	libs/math/MersenneTwister.h	/^            virtual double nextDoubleInclusive()$/;"	f	class:mi::math::MersenneTwister
nextFloat	libs/math/MersenneTwister.h	/^            virtual float nextFloat()$/;"	f	class:mi::math::MersenneTwister
nextFloatExclusive	libs/math/MersenneTwister.h	/^            virtual float nextFloatExclusive()$/;"	f	class:mi::math::MersenneTwister
nextFloatInclusive	libs/math/MersenneTwister.h	/^            virtual float nextFloatInclusive()$/;"	f	class:mi::math::MersenneTwister
nextGaussian	libs/math/Random.h	/^            virtual double nextGaussian()$/;"	f	class:mi::math::Random
nextInt	libs/math/MersenneTwister.h	/^            virtual int nextInt()$/;"	f	class:mi::math::MersenneTwister
nextNextGaussian	libs/math/Random.h	/^            double nextNextGaussian;$/;"	m	class:mi::math::Random
next_in	libs/opengl/zlib/zlib.h	/^    Bytef    *next_in;  \/* next input byte *\/$/;"	m	struct:z_stream_s
next_line	libs/map/EMapBase.cpp	/^static bool next_line(FILE *fp,  char *buf, size_t n, std::string &ubuf)$/;"	f	file:
next_out	libs/opengl/zlib/zlib.h	/^    Bytef    *next_out; \/* next output byte should be put there *\/$/;"	m	struct:z_stream_s
next_ptr	libs/opengl/zlib/zutil.cpp	/^local int next_ptr = 0;$/;"	v
next_res	libs/chemlib/Residue.h	/^        Residue *next_res;$/;"	m	class:chemlib::Residue
next_res	libs/chemlib/itertest.cxx	/^    RESIDUE *next_res;$/;"	m	class:RESIDUE	file:
nextf	libs/map/fftsub.cpp	/^int nextf(int h[3], fcomplex *f, int i, CREFL *refl, int nrefl)$/;"	f
ngonax	libs/cmtz/mtzdata.h	/^		 int ngonax;           \/**< number of goniostat axes *\/$/;"	m	struct:bathead
nideal	libs/chemlib/TORSION.h	/^        int nideal;$/;"	m	class:chemlib::TORSDICT
nideal	libs/chemlib/TORSION.h	/^        int nideal;$/;"	m	class:chemlib::TORSION
nl	libs/map/fftlib.cpp	1476;"	d	file:
nl	libs/map/fftlib.cpp	1760;"	d	file:
nlaue	libs/cmtz/ccp4_spg.h	/^  int nlaue;              \/* CCP4 Laue class number, inferred from asu_descr *\/$/;"	m	struct:CSym::ccp4_spacegroup_
nlinks	libs/chemlib/MIMoleculeBase.h	/^        int nlinks;$/;"	m	class:chemlib::MIMoleculeBase
norm	libs/math/Quaternion.h	/^        Type Quaternion<Type>::norm() const$/;"	f	class:mi::math::Quaternion
normal	libs/opengl/Frustum.cpp	/^    Vector3<float> normal;$/;"	m	class:mi::opengl::Plane	file:
normalBuffer	libs/opengl/Sphere.h	/^            float *normalBuffer;$/;"	m	class:mi::opengl::Sphere
normalize	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::normalize(float a[3])$/;"	f	class:GLRenderer
normalize	libs/math/Quaternion.h	/^        void Quaternion<Type>::normalize()$/;"	f	class:mi::math::Quaternion
normalize	libs/math/Quaternion.h	/^        void Quaternion<Type>::normalize(const Quaternion<Type> &q1)$/;"	f	class:mi::math::Quaternion
normalize	libs/math/Vector3.h	/^        void Vector3<Type>::normalize()$/;"	f	class:mi::math::Vector3
normalize	libs/math/Vector4.h	/^        void Vector4<Type>::normalize()$/;"	f	class:mi::math::Vector4
normals	libs/jacgrid/surface.h	/^    std::vector<float> normals;          \/* normal at the vertex *\/$/;"	m	class:surfaceT
normvect	libs/math/Matrices.cpp	/^void normvect(double in[3], double out[3])$/;"	f
normvect	libs/math/Matrices.cpp	/^void normvect(float in[3], float out[3])$/;"	f
nowrap	libs/opengl/zlib/inflate.cpp	/^    int nowrap;         \/* flag for no wrapper *\/$/;"	m	struct:internal_state	file:
npatt	libs/cmtz/ccp4_spg.h	/^  int npatt;              \/* Patterson spacegroup number, inferred from asu_descr *\/$/;"	m	struct:CSym::ccp4_spacegroup_
npg_ops	libs/map/CMapHeaderBase.h	/^    int npg_ops;$/;"	m	class:CMapHeaderBase
npolys	libs/jacgrid/cell_table.h	/^    unsigned int npolys;$/;"	m	struct:__anon30
npr	apps/MIFit/core/RibbonSpan.h	/^    int npr;  \/\/ Number for profile points$/;"	m	class:RibbonSpan
nprobe	libs/jacgrid/surface.cpp	/^    unsigned int nprobe; \/* number of points in probe *\/$/;"	m	class:ProbeT	file:
npts	libs/jacgrid/grid.h	/^    unsigned int npts[3]; \/* number of divisions in each direction -- the dimension *\/$/;"	m	class:gridT
nref	libs/cmtz/mtzdata.h	/^		 int nref;             \/**< total number of reflections *\/$/;"	m	struct:__anon25
nref_filein	libs/cmtz/mtzdata.h	/^		 int nref_filein;      \/**< number of reflections from input file *\/$/;"	m	struct:__anon25
nrefl	libs/map/sfcalc.cpp	/^int nrefl;$/;"	v
nresidues	libs/chemlib/MIMoleculeBase.h	/^        int nresidues;$/;"	m	class:chemlib::MIMoleculeBase
nribbons	apps/MIFit/core/Molecule.h	/^    int nribbons;$/;"	m	class:Molecule
nrow	libs/umtz/umtzlib.h	/^    int iunit, ncol, nrow;$/;"	m	struct:umtzfile_
ns	libs/map/fftlib.cpp	1468;"	d	file:
ns	libs/map/fftlib.cpp	1768;"	d	file:
nseg	apps/MIFit/core/RibbonSpan.h	/^    int nseg; \/\/ Number of segments$/;"	m	class:RibbonSpan
nset	libs/cmtz/mtzdata.h	/^		 int nset;             \/**< number of datasets *\/$/;"	m	struct:__anon22
nsym	libs/cmtz/mtzdata.h	/^		 int nsym;             \/**< number of symmetry operations *\/$/;"	m	struct:__anon23
nsym	libs/map/CMapHeaderBase.h	/^    int nsym;$/;"	m	class:CMapHeaderBase
nsymmops	libs/map/fftsub.cpp	/^static int nsymmops;$/;"	v	file:
nsymop	libs/cmtz/ccp4_spg.h	/^  int nsymop;             \/* total number of symmetry operations *\/$/;"	m	struct:CSym::ccp4_spacegroup_
nsymop_prim	libs/cmtz/ccp4_spg.h	/^  int nsymop_prim;        \/* number of primitive symmetry operations *\/$/;"	m	struct:CSym::ccp4_spacegroup_
nsymp	libs/cmtz/mtzdata.h	/^		 int nsymp;            \/**< number of primitive symmetry ops. *\/$/;"	m	struct:__anon23
ntokens	libs/cmtz/ccp4_parser.h	/^  int    ntokens;         \/* Number of tokens *\/$/;"	m	struct:CCP4::__anon27
nucleic	libs/molopt/MIMolOpt.h	/^    int nucleic;$/;"	m	class:MIMolOpt
nulldelim	libs/cmtz/ccp4_parser.h	/^  char   *nulldelim;      \/* List of null delimiter characters *\/$/;"	m	struct:CCP4::__anon27
num	libs/cmtz/mtzdata.h	/^typedef struct bathead { int num;              \/**< batch number *\/$/;"	m	struct:bathead
num_cols	libs/chemlib/Matrix.h	/^        Subscript num_cols() const$/;"	f	class:TNT::Matrix
num_rows	libs/chemlib/Matrix.h	/^        Subscript num_rows() const$/;"	f	class:TNT::Matrix
numberOfRunningJobs	apps/MIFit/jobs/BatchJobManager.cpp	/^int BatchJobManager::numberOfRunningJobs()$/;"	f	class:BatchJobManager
numberToModelString	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^static std::string numberToModelString(unsigned int n)$/;"	f	file:
number_of_args	examples/smilesdb.py	/^number_of_args = len(sys.argv)$/;"	v
numpolygons	libs/opengl/Object3d.cpp	/^int Object3d::numpolygons()$/;"	f	class:mi::opengl::Object3d
numpolys	libs/opengl/Object3d.h	/^            int numpolys;$/;"	m	class:mi::opengl::Object3d
nvars	libs/map/fftlib.cpp	/^    int nvars;$/;"	m	struct:Namelist	file:
nverts	libs/jacgrid/cell_table.h	/^    unsigned int nverts;$/;"	m	struct:__anon30
nverts	libs/jacgrid/surface.h	/^    unsigned int nverts;                 \/* number of vertices used *\/$/;"	m	class:surfaceT
nx	libs/map/CMapHeaderBase.h	/^    int nx, ny, nz;$/;"	m	class:CMapHeaderBase
nx	libs/map/InterpBox.h	/^    int nx, ny, nz;$/;"	m	class:InterpBox
nx	libs/map/fftsub.cpp	/^static int nx, ny, nz, hmax, kmax, lmax;$/;"	v	file:
nxtal	libs/cmtz/mtzdata.h	/^		 int nxtal;            \/**< number of crystals *\/$/;"	m	struct:__anon25
ny	libs/map/CMapHeaderBase.h	/^    int nx, ny, nz;$/;"	m	class:CMapHeaderBase
ny	libs/map/InterpBox.h	/^    int nx, ny, nz;$/;"	m	class:InterpBox
ny	libs/map/fftsub.cpp	/^static int nx, ny, nz, hmax, kmax, lmax;$/;"	v	file:
nz	libs/map/CMapHeaderBase.h	/^    int nx, ny, nz;$/;"	m	class:CMapHeaderBase
nz	libs/map/InterpBox.h	/^    int nx, ny, nz;$/;"	m	class:InterpBox
nz	libs/map/fftsub.cpp	/^static int nx, ny, nz, hmax, kmax, lmax;$/;"	v	file:
oacc	libs/map/fftlib.cpp	/^    char *oacc;$/;"	m	struct:__anon53	file:
objectlist	libs/opengl/Object3d.h	/^            int objectlist;$/;"	m	class:mi::opengl::Object3d
oblnk	libs/map/fftlib.cpp	/^    char *oblnk;$/;"	m	struct:__anon53	file:
occ	libs/chemlib/MIAtom.h	/^        float occ() const$/;"	f	class:chemlib::MIAtom
occ_	libs/chemlib/MIAtom.h	/^        float occ_;$/;"	m	class:chemlib::MIAtom
oerr	libs/map/fftlib.cpp	/^    flag oerr;$/;"	m	struct:__anon53	file:
ofm	libs/map/fftlib.cpp	/^    char *ofm;$/;"	m	struct:__anon53	file:
ofnm	libs/map/fftlib.cpp	/^    char *ofnm;$/;"	m	struct:__anon53	file:
ofnmlen	libs/map/fftlib.cpp	/^    ftnlen ofnmlen;$/;"	m	struct:__anon53	file:
oldParent	apps/MIFit/ui/MIGLWidget.h	/^    QMdiSubWindow *oldParent;$/;"	m	class:MIGLWidget
olist	libs/map/fftlib.cpp	/^} olist;$/;"	t	typeref:struct:__anon53	file:
onCloseSaveActiveModelToPdb	apps/MIFit/ui/Application.h	/^    bool onCloseSaveActiveModelToPdb;$/;"	m	class:Application
on_addButton_clicked	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::on_addButton_clicked()$/;"	f	class:LSQFitDialog
on_addTypePushButton_clicked	apps/MIFit/ui/AtomColors.cpp	/^void AtomColors::on_addTypePushButton_clicked()$/;"	f	class:AtomColors
on_applyButton_clicked	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::on_applyButton_clicked()$/;"	f	class:ManageCrystals
on_browseButton_clicked	apps/MIFit/ui/SmilesDialog.cpp	/^void SmilesDialog::on_browseButton_clicked()$/;"	f	class:SmilesDialog
on_calcButton_clicked	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::on_calcButton_clicked()$/;"	f	class:LSQFitDialog
on_changeNameButton_clicked	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::on_changeNameButton_clicked()$/;"	f	class:DictEditCanvas
on_checkpointDirectoryButton_pressed	apps/MIFit/ui/EnvironmentPreferences.cpp	/^void EnvironmentPreferences::on_checkpointDirectoryButton_pressed()$/;"	f	class:EnvironmentPreferences
on_colorToolButton10_clicked	apps/MIFit/ui/BValueColors.h	/^    void on_colorToolButton10_clicked()$/;"	f	class:BValueColors
on_colorToolButton1_clicked	apps/MIFit/ui/BValueColors.h	/^    void on_colorToolButton1_clicked()$/;"	f	class:BValueColors
on_colorToolButton2_clicked	apps/MIFit/ui/BValueColors.h	/^    void on_colorToolButton2_clicked()$/;"	f	class:BValueColors
on_colorToolButton3_clicked	apps/MIFit/ui/BValueColors.h	/^    void on_colorToolButton3_clicked()$/;"	f	class:BValueColors
on_colorToolButton4_clicked	apps/MIFit/ui/BValueColors.h	/^    void on_colorToolButton4_clicked()$/;"	f	class:BValueColors
on_colorToolButton5_clicked	apps/MIFit/ui/BValueColors.h	/^    void on_colorToolButton5_clicked()$/;"	f	class:BValueColors
on_colorToolButton6_clicked	apps/MIFit/ui/BValueColors.h	/^    void on_colorToolButton6_clicked()$/;"	f	class:BValueColors
on_colorToolButton7_clicked	apps/MIFit/ui/BValueColors.h	/^    void on_colorToolButton7_clicked()$/;"	f	class:BValueColors
on_colorToolButton8_clicked	apps/MIFit/ui/BValueColors.h	/^    void on_colorToolButton8_clicked()$/;"	f	class:BValueColors
on_colorToolButton9_clicked	apps/MIFit/ui/BValueColors.h	/^    void on_colorToolButton9_clicked()$/;"	f	class:BValueColors
on_colorToolButton_clicked	apps/MIFit/ui/AtomColors.cpp	/^void AtomColors::on_colorToolButton_clicked()$/;"	f	class:AtomColors
on_conformerSpinbox_valueChanged	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::on_conformerSpinbox_valueChanged(int conformer)$/;"	f	class:DictEditCanvas
on_copyCrystalButton_clicked	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::on_copyCrystalButton_clicked()$/;"	f	class:ManageCrystals
on_crystalDataButton_pressed	apps/MIFit/ui/EnvironmentPreferences.cpp	/^void EnvironmentPreferences::on_crystalDataButton_pressed()$/;"	f	class:EnvironmentPreferences
on_crystalListBox_itemClicked	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::on_crystalListBox_itemClicked(QListWidgetItem*)$/;"	f	class:ManageCrystals
on_crystalListWidget_itemClicked	apps/MIFit/ui/SelectCrystal.cpp	/^void SelectCrystal::on_crystalListWidget_itemClicked(QListWidgetItem *item)$/;"	f	class:SelectCrystal
on_crystalName_textEdited	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::on_crystalName_textEdited(const QString&)$/;"	f	class:ManageCrystals
on_customDictionaryButton_pressed	apps/MIFit/ui/EnvironmentPreferences.cpp	/^void EnvironmentPreferences::on_customDictionaryButton_pressed()$/;"	f	class:EnvironmentPreferences
on_deleteCrystalButton_clicked	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::on_deleteCrystalButton_clicked()$/;"	f	class:ManageCrystals
on_deleteTypePushButton_clicked	apps/MIFit/ui/AtomColors.cpp	/^void AtomColors::on_deleteTypePushButton_clicked()$/;"	f	class:AtomColors
on_editNamePushButton_clicked	apps/MIFit/ui/AtomColors.cpp	/^void AtomColors::on_editNamePushButton_clicked()$/;"	f	class:AtomColors
on_exportButton_clicked	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::on_exportButton_clicked()$/;"	f	class:DictEditCanvas
on_exportButton_clicked	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::on_exportButton_clicked()$/;"	f	class:LSQFitDialog
on_findSpaceGroupButton_clicked	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::on_findSpaceGroupButton_clicked()$/;"	f	class:ManageCrystals
on_htmlBrowserButton_pressed	apps/MIFit/ui/EnvironmentPreferences.cpp	/^void EnvironmentPreferences::on_htmlBrowserButton_pressed()$/;"	f	class:EnvironmentPreferences
on_importButton_clicked	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::on_importButton_clicked()$/;"	f	class:LSQFitDialog
on_listWidget_currentRowChanged	apps/MIFit/ui/AtomColors.cpp	/^void AtomColors::on_listWidget_currentRowChanged(int idx)$/;"	f	class:AtomColors
on_map1FcChoice_activated	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::on_map1FcChoice_activated(int)$/;"	f	class:PhaseFileLoadDialog
on_map1FoChoice_activated	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::on_map1FoChoice_activated(int)$/;"	f	class:PhaseFileLoadDialog
on_map1FomChoice_activated	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::on_map1FomChoice_activated(int)$/;"	f	class:PhaseFileLoadDialog
on_map1PhiChoice_activated	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::on_map1PhiChoice_activated(int)$/;"	f	class:PhaseFileLoadDialog
on_map1Type_activated	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::on_map1Type_activated(int)$/;"	f	class:PhaseFileLoadDialog
on_map2FcChoice_activated	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::on_map2FcChoice_activated(int)$/;"	f	class:PhaseFileLoadDialog
on_map2FoChoice_activated	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::on_map2FoChoice_activated(int)$/;"	f	class:PhaseFileLoadDialog
on_map2FomChoice_activated	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::on_map2FomChoice_activated(int)$/;"	f	class:PhaseFileLoadDialog
on_map2PhiChoice_activated	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::on_map2PhiChoice_activated(int)$/;"	f	class:PhaseFileLoadDialog
on_map2Type_activated	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::on_map2Type_activated(int)$/;"	f	class:PhaseFileLoadDialog
on_mapStylesComboBox_currentIndexChanged	apps/MIFit/ui/ContourOptionsWidget.cpp	/^void ContourOptionsWidget::on_mapStylesComboBox_currentIndexChanged(int styleNum)$/;"	f	class:ContourOptionsWidget
on_maxRadiusSpinBox_valueChanged	apps/MIFit/ui/ContourOptionsWidget.cpp	/^void ContourOptionsWidget::on_maxRadiusSpinBox_valueChanged(int i)$/;"	f	class:ContourOptionsWidget
on_ncsOps_textChanged	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::on_ncsOps_textChanged()$/;"	f	class:ManageCrystals
on_newCrystalButton_clicked	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::on_newCrystalButton_clicked()$/;"	f	class:ManageCrystals
on_optimizeButton_clicked	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::on_optimizeButton_clicked()$/;"	f	class:DictEditCanvas
on_removeButton_clicked	apps/MIFit/ui/CustomJobPreferences.cpp	/^void CustomJobPreferences::on_removeButton_clicked()$/;"	f	class:CustomJobPreferences
on_removeButton_clicked	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::on_removeButton_clicked()$/;"	f	class:LSQFitDialog
on_resetButton_clicked	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::on_resetButton_clicked()$/;"	f	class:DictEditCanvas
on_resetButton_clicked	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::on_resetButton_clicked()$/;"	f	class:ManageCrystals
on_resetPushButton_clicked	apps/MIFit/ui/AtomColors.cpp	/^void AtomColors::on_resetPushButton_clicked()$/;"	f	class:AtomColors
on_revertPushButton_clicked	apps/MIFit/ui/ContourOptionsWidget.cpp	/^void ContourOptionsWidget::on_revertPushButton_clicked()$/;"	f	class:ContourOptionsWidget
on_selectCrystalRadioButton_clicked	apps/MIFit/ui/SelectCrystal.cpp	/^void SelectCrystal::on_selectCrystalRadioButton_clicked()$/;"	f	class:SelectCrystal
on_shelxHomeButton_pressed	apps/MIFit/ui/EnvironmentPreferences.cpp	/^void EnvironmentPreferences::on_shelxHomeButton_pressed()$/;"	f	class:EnvironmentPreferences
on_showAngles_clicked	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::on_showAngles_clicked()$/;"	f	class:DictEditCanvas
on_showAtomLabels_clicked	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::on_showAtomLabels_clicked()$/;"	f	class:DictEditCanvas
on_showBonds_clicked	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::on_showBonds_clicked()$/;"	f	class:DictEditCanvas
on_showChirals_clicked	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::on_showChirals_clicked()$/;"	f	class:DictEditCanvas
on_showHydrogens_clicked	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::on_showHydrogens_clicked()$/;"	f	class:DictEditCanvas
on_showPlanes_clicked	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::on_showPlanes_clicked()$/;"	f	class:DictEditCanvas
on_showTorsions_clicked	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::on_showTorsions_clicked()$/;"	f	class:DictEditCanvas
on_sourceComboBox_currentIndexChanged	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::on_sourceComboBox_currentIndexChanged(const QString &text)$/;"	f	class:LSQFitDialog
on_sourceListWidget_currentTextChanged	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::on_sourceListWidget_currentTextChanged(const QString &str)$/;"	f	class:LSQFitDialog
on_spaceGroupLineEdit_textEdited	apps/MIFit/ui/SelectCrystal.cpp	/^void SelectCrystal::on_spaceGroupLineEdit_textEdited(const QString &str)$/;"	f	class:SelectCrystal
on_spaceGroup_textEdited	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::on_spaceGroup_textEdited(const QString&)$/;"	f	class:ManageCrystals
on_specifyParametersRadioButton_clicked	apps/MIFit/ui/SelectCrystal.cpp	/^void SelectCrystal::on_specifyParametersRadioButton_clicked()$/;"	f	class:SelectCrystal
on_symmOps_textChanged	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::on_symmOps_textChanged()$/;"	f	class:ManageCrystals
on_targetComboBox_currentIndexChanged	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::on_targetComboBox_currentIndexChanged(const QString &text)$/;"	f	class:LSQFitDialog
on_targetListWidget_currentTextChanged	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::on_targetListWidget_currentTextChanged(const QString &str)$/;"	f	class:LSQFitDialog
on_title_textEdited	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::on_title_textEdited(const QString&)$/;"	f	class:ManageCrystals
on_triggered	apps/MIFit/ui/CurrentMIGLWidgetAction.cpp	/^void CurrentMIGLWidgetAction::on_triggered()$/;"	f	class:CurrentMIGLWidgetAction
on_unitCellLineEdit_textEdited	apps/MIFit/ui/SelectCrystal.cpp	/^void SelectCrystal::on_unitCellLineEdit_textEdited(const QString &str)$/;"	f	class:SelectCrystal
on_unitCell_textEdited	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::on_unitCell_textEdited(const QString&)$/;"	f	class:ManageCrystals
one	apps/MIFit/core/RESIDUE.cpp	/^static char one[] = {'A', 'C', 'D', 'E', 'F',$/;"	v	file:
one	libs/chemlib/mol_util.cpp	/^static char one[] = {'A', 'C', 'D', 'E', 'F',$/;"	m	namespace:chemlib	file:
op_name	apps/MIFit/ui/WaitCursor.h	/^    std::string op_name;$/;"	m	class:WaitCursor
opaque	libs/opengl/zlib/zlib.h	/^    voidpf opaque;      \/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s
open	libs/cmtz/library_file.h	/^  unsigned int open : 1;$/;"	m	struct:CCP4::_CFileStruct
open	libs/util/FileIo.cpp	/^bool FileIo::open(const char *file, const char *mode)$/;"	f	class:FileIo
open	libs/util/StringIo.cpp	/^bool StringIo::open(const char* \/* file *\/, const char *mode)$/;"	f	class:StringIo
openRecentFile	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::openRecentFile()$/;"	f	class:MIMainWindow
openResults	apps/MIFit/jobs/BatchJob.cpp	/^void BatchJob::openResults()$/;"	f	class:BatchJob
opengl	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	apps/MIFit/ui/CMolwViewAtomPickingRenderable.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	apps/MIFit/ui/CMolwViewBondPickingRenderable.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	apps/MIFit/ui/CMolwViewScene.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	apps/MIFit/ui/CMolwViewSlabPickingRenderable.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	apps/MIFit/ui/DictEditAnglePickingRenderable.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	apps/MIFit/ui/DictEditAnnotationPickingRenderable.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	apps/MIFit/ui/DictEditAtomPickingRenderable.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	apps/MIFit/ui/DictEditBondPickingRenderable.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	apps/MIFit/ui/DictEditCanvas.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	apps/MIFit/ui/DictEditScene.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	apps/MIFit/ui/GLOverviewCanvas.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	apps/MIFit/ui/GLRenderer.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	apps/MIFit/ui/MIGLWidget.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/Arc.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/Arc.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/Axes.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/Axes.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/Axis.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/Axis.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/Camera.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/Camera.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/Circle.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/Circle.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/Frustum.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/Frustum.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/Light.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/Light.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/Object3d.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/Object3d.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/QuatUtil.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/QuatUtil.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/RelativeViewpoint.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/RelativeViewpoint.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/Renderable.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/Scene.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/Sphere.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/Sphere.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/StereoView.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/StereoView.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/Text.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/Text.h	/^namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/Viewpoint.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/Viewpoint.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/Viewport.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/Viewport.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/ViewportRelativeViewpoint.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/ViewportRelativeViewpoint.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/interact/ArcBallFeedback.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/interact/ArcBallFeedback.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/interact/FieldOfViewZoomCommand.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/interact/FieldOfViewZoomCommand.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/interact/MouseArcBall.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/interact/MouseArcBall.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/interact/MouseArcBallOrbitor.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/interact/MouseArcBallOrbitor.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/interact/MousePicker.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/interact/MousePicker.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/interact/MouseTranslator.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/interact/MouseTranslator.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/interact/MouseZoomer.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/interact/MouseZoomer.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/interact/PropertyCommand.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/interact/SimpleMouseRotator.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/interact/SimpleMouseRotator.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/interact/TargetFeedback.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/interact/TargetFeedback.h	/^    namespace opengl$/;"	n	namespace:mi
opengl	libs/opengl/interact/TranslationFeedback.cpp	/^namespace opengl$/;"	n	namespace:mi	file:
opengl	libs/opengl/interact/TranslationFeedback.h	/^    namespace opengl$/;"	n	namespace:mi
operator !=	libs/chemlib/Residue.cpp	/^bool ResidueListIterator::operator!=(const ResidueListIterator &iter)$/;"	f	class:chemlib::ResidueListIterator
operator ()	apps/MIFit/ui/Application.cpp	/^    bool operator()()$/;"	f	class:myTorsionWritePrompt
operator ()	apps/MIFit/ui/Application.cpp	/^    bool operator()(MIAtom *atom) const$/;"	f	class:myColorSetter
operator ()	apps/MIFit/ui/Application.cpp	/^    bool operator()(MIAtom *atom, char c) const$/;"	f	class:myColorSetter
operator ()	apps/MIFit/ui/Application.cpp	/^    void operator()(bool *breakByDiscontinuity, bool *breakByNonpeptide)$/;"	f	class:myMolPrefsHandler
operator ()	apps/MIFit/ui/MIGLWidget.cpp	/^    bool operator()(MIMoleculeBase*)$/;"	f	class:MyMIMolOptCheckPoint
operator ()	libs/chemlib/Bond.h	/^    inline bool IsAromatic::operator ()(const Bond &bond) const$/;"	f	class:chemlib::IsAromatic
operator ()	libs/chemlib/MIAtom.h	/^        inline bool operator()(const MIAtom *atom) const$/;"	f	struct:chemlib::IsHeavy
operator ()	libs/chemlib/Matrix.h	/^        inline const_reference operator()(Subscript i) const$/;"	f	class:TNT::Matrix
operator ()	libs/chemlib/Matrix.h	/^        inline const_reference operator()(Subscript i, Subscript j) const$/;"	f	class:TNT::Matrix
operator ()	libs/chemlib/Matrix.h	/^        inline reference operator()(Subscript i)$/;"	f	class:TNT::Matrix
operator ()	libs/chemlib/Matrix.h	/^        inline reference operator()(Subscript i, Subscript j)$/;"	f	class:TNT::Matrix
operator ()	libs/chemlib/atom_util.cpp	/^bool ResContainsBond::operator ()(const Bond &bond, const Residue &res) const$/;"	f	class:chemlib::ResContainsBond
operator ()	libs/chemlib/atom_util.h	/^        inline bool operator()(const Bond &bond, const MIAtom *atom) const$/;"	f	struct:chemlib::ContainsHvyNabor
operator ()	libs/chemlib/atom_util.h	/^        inline bool operator()(const MIAtom *atom) const$/;"	f	struct:chemlib::IsHydrogen
operator ()	libs/chemlib/atom_util.h	/^    inline bool ContainsAtom::operator ()(const Bond &bond, const MIAtom *atom) const$/;"	f	class:chemlib::ContainsAtom
operator ()	libs/chemlib/atom_util.h	/^    inline bool ContainsAtoms::operator ()(const Bond &bond,$/;"	f	class:chemlib::ContainsAtoms
operator ()	libs/chemlib/atom_util.h	/^    inline bool ContainsCoAtoms::operator ()(const Bond &bond,$/;"	f	class:chemlib::ContainsCoAtoms
operator ()	libs/chemlib/atom_util.h	/^    inline bool ContainsNewAtom::operator ()(const Bond &bond, const MIAtom *atom) const$/;"	f	class:chemlib::ContainsNewAtom
operator ()	libs/chemlib/atom_util.h	/^    inline bool MatchesAtomName::operator ()(const MIAtom *atom, const std::string &query) const$/;"	f	class:chemlib::MatchesAtomName
operator ()	libs/chemlib/mol_util.cpp	/^bool IsBondRotatable::operator()(const Bond &bond) const$/;"	f	class:chemlib::IsBondRotatable
operator ()	libs/chemlib/substituent_util.h	/^        bool operator()(const Substituent &c1, const Substituent &c2) const$/;"	f	struct:chemlib::LeastTheta
operator ()	libs/chemlib/transform_util.h	/^    inline bool DoTransformAtom::operator ()(MIAtom *atom, const double *mat) const$/;"	f	class:chemlib::DoTransformAtom
operator ()	libs/chemlib/transform_util.h	/^    inline bool DoTranslateAtom::operator ()(MIAtom *atom, const double *v) const$/;"	f	class:chemlib::DoTranslateAtom
operator ()	libs/chemlib/util.h	/^        void operator()(T &input_obj) const$/;"	f	class:chemlib::void_mem_fun_ref_t
operator ()	libs/chemlib/util.h	/^        void operator()(T *input_obj_ptr) const$/;"	f	class:chemlib::void_mem_fun_t
operator ()	libs/molopt/MIMolOpt.cpp	/^bool TorsionMatch::operator ()(const chemlib::TORSION &t, const chemlib::TORSDICT &td) const$/;"	f	class:TorsionMatch
operator *	libs/chemlib/Matrix.h	/^    inline Matrix<T> operator*(const Matrix<T> &A,$/;"	f	namespace:TNT
operator *	libs/chemlib/Residue.cpp	/^Residue &ResidueListIterator::operator*() const$/;"	f	class:chemlib::ResidueListIterator
operator *	libs/math/Matrix4.h	/^        Matrix4<Type> Matrix4<Type>::operator*(const Matrix4<Type> &m2) const$/;"	f	class:mi::math::Matrix4
operator *	libs/math/Quaternion.h	/^        Quaternion<Type> Quaternion<Type>::operator*(const Quaternion<Type> &q1) const$/;"	f	class:mi::math::Quaternion
operator *	libs/math/Quaternion.h	/^        Vector3<Type> Quaternion<Type>::operator*(const Vector3<Type> &v1) const$/;"	f	class:mi::math::Quaternion
operator *=	libs/math/Quaternion.h	/^        Quaternion<Type>&Quaternion<Type>::operator*=(const Quaternion<Type> &q1)$/;"	f	class:mi::math::Quaternion
operator *=	libs/math/Tuple3.h	/^        Tuple3<Type>&Tuple3<Type>::operator*=(Type s)$/;"	f	class:mi::math::Tuple3
operator *=	libs/math/Tuple4.h	/^        Tuple4<Type>&Tuple4<Type>::operator*=(Type s)$/;"	f	class:mi::math::Tuple4
operator +	libs/chemlib/Matrix.h	/^    Matrix<T> operator+(const Matrix<T> &A,$/;"	f	namespace:TNT
operator +	libs/math/Matrix3.h	/^        Matrix3<Type> Matrix3<Type>::operator+(const Matrix3<Type> &m1) const$/;"	f	class:mi::math::Matrix3
operator +	libs/math/Matrix3.h	/^        Matrix3<Type> operator+(Type scalar, const Matrix3<Type> &m1)$/;"	f	namespace:mi::math
operator +	libs/math/Matrix3.h	/^        Matrix3<Type> operator+(const Matrix3<Type> &m1, Type scalar)$/;"	f	namespace:mi::math
operator +	libs/math/Matrix4.h	/^        Matrix4<Type> Matrix4<Type>::operator+(const Matrix4<Type> &m1) const$/;"	f	class:mi::math::Matrix4
operator +	libs/math/Matrix4.h	/^        Matrix4<Type> operator+(Type scalar, const Matrix4<Type> &m1)$/;"	f	namespace:mi::math
operator +	libs/math/Matrix4.h	/^        Matrix4<Type> operator+(const Matrix4<Type> &m1, Type scalar)$/;"	f	namespace:mi::math
operator +	libs/math/Tuple3.h	/^        Tuple3<Type> Tuple3<Type>::operator+(const Tuple3<Type> &t1) const$/;"	f	class:mi::math::Tuple3
operator +	libs/math/Tuple4.h	/^        Tuple4<Type> Tuple4<Type>::operator+(const Tuple4<Type> &t1) const$/;"	f	class:mi::math::Tuple4
operator ++	libs/chemlib/Residue.cpp	/^ResidueListIterator &ResidueListIterator::operator++()$/;"	f	class:chemlib::ResidueListIterator
operator ++	libs/chemlib/Residue.cpp	/^ResidueListIterator ResidueListIterator::operator++(int)$/;"	f	class:chemlib::ResidueListIterator
operator +=	libs/math/Matrix3.h	/^        Matrix3<Type>&Matrix3<Type>::operator+=(Type scalar)$/;"	f	class:mi::math::Matrix3
operator +=	libs/math/Matrix3.h	/^        Matrix3<Type>&Matrix3<Type>::operator+=(const Matrix3<Type> &m1)$/;"	f	class:mi::math::Matrix3
operator +=	libs/math/Matrix4.h	/^        Matrix4<Type>&Matrix4<Type>::operator+=(Type scalar)$/;"	f	class:mi::math::Matrix4
operator +=	libs/math/Matrix4.h	/^        Matrix4<Type>&Matrix4<Type>::operator+=(const Matrix4<Type> &m1)$/;"	f	class:mi::math::Matrix4
operator +=	libs/math/Tuple3.h	/^        Tuple3<Type>&Tuple3<Type>::operator+=(const Tuple3<Type> &t1)$/;"	f	class:mi::math::Tuple3
operator +=	libs/math/Tuple4.h	/^        Tuple4<Type>&Tuple4<Type>::operator+=(const Tuple4<Type> &t1)$/;"	f	class:mi::math::Tuple4
operator -	libs/chemlib/Matrix.h	/^    Matrix<T> operator-(const Matrix<T> &A,$/;"	f	namespace:TNT
operator -	libs/math/Matrix3.h	/^        Matrix3<Type> Matrix3<Type>::operator-() const$/;"	f	class:mi::math::Matrix3
operator -	libs/math/Matrix3.h	/^        Matrix3<Type> Matrix3<Type>::operator-(const Matrix3<Type> &m1) const$/;"	f	class:mi::math::Matrix3
operator -	libs/math/Matrix3.h	/^        Matrix3<Type> operator-(Type scalar, const Matrix3<Type> &m1)$/;"	f	namespace:mi::math
operator -	libs/math/Matrix3.h	/^        Matrix3<Type> operator-(const Matrix3<Type> &m1, Type scalar)$/;"	f	namespace:mi::math
operator -	libs/math/Matrix4.h	/^        Matrix4<Type> Matrix4<Type>::operator-() const$/;"	f	class:mi::math::Matrix4
operator -	libs/math/Matrix4.h	/^        Matrix4<Type> Matrix4<Type>::operator-(const Matrix4<Type> &m1) const$/;"	f	class:mi::math::Matrix4
operator -	libs/math/Matrix4.h	/^        Matrix4<Type> operator-(Type scalar, const Matrix4<Type> &m1)$/;"	f	namespace:mi::math
operator -	libs/math/Matrix4.h	/^        Matrix4<Type> operator-(const Matrix4<Type> &m1, Type scalar)$/;"	f	namespace:mi::math
operator -	libs/math/Tuple3.h	/^        Tuple3<Type> Tuple3<Type>::operator-() const$/;"	f	class:mi::math::Tuple3
operator -	libs/math/Tuple3.h	/^        Tuple3<Type> Tuple3<Type>::operator-(const Tuple3<Type> &t1) const$/;"	f	class:mi::math::Tuple3
operator -	libs/math/Tuple4.h	/^        Tuple4<Type> Tuple4<Type>::operator-() const$/;"	f	class:mi::math::Tuple4
operator -	libs/math/Tuple4.h	/^        Tuple4<Type> Tuple4<Type>::operator-(const Tuple4<Type> &t1) const$/;"	f	class:mi::math::Tuple4
operator --	libs/chemlib/Residue.cpp	/^ResidueListIterator &ResidueListIterator::operator--()$/;"	f	class:chemlib::ResidueListIterator
operator --	libs/chemlib/Residue.cpp	/^ResidueListIterator ResidueListIterator::operator--(int)$/;"	f	class:chemlib::ResidueListIterator
operator -=	libs/math/Matrix3.h	/^        Matrix3<Type>&Matrix3<Type>::operator-=(Type scalar)$/;"	f	class:mi::math::Matrix3
operator -=	libs/math/Matrix3.h	/^        Matrix3<Type>&Matrix3<Type>::operator-=(const Matrix3<Type> &m1)$/;"	f	class:mi::math::Matrix3
operator -=	libs/math/Matrix4.h	/^        Matrix4<Type>&Matrix4<Type>::operator-=(Type scalar)$/;"	f	class:mi::math::Matrix4
operator -=	libs/math/Matrix4.h	/^        Matrix4<Type>&Matrix4<Type>::operator-=(const Matrix4<Type> &m1)$/;"	f	class:mi::math::Matrix4
operator -=	libs/math/Tuple3.h	/^        Tuple3<Type>&Tuple3<Type>::operator-=(const Tuple3<Type> &t1)$/;"	f	class:mi::math::Tuple3
operator -=	libs/math/Tuple4.h	/^        Tuple4<Type>&Tuple4<Type>::operator-=(const Tuple4<Type> &t1)$/;"	f	class:mi::math::Tuple4
operator ->	libs/chemlib/Residue.cpp	/^Residue *ResidueListIterator::operator->() const$/;"	f	class:chemlib::ResidueListIterator
operator <<	apps/MIFit/jobs/BatchJobManager.cpp	/^QDataStream &operator<<(QDataStream &out, const CustomJob &job)$/;"	f
operator <<	libs/math/Matrix3.h	/^        std::ostream&operator<<(std::ostream &stream, const Matrix3<Type> &m1)$/;"	f	namespace:mi::math
operator <<	libs/math/Matrix4.h	/^        std::ostream&operator<<(std::ostream &stream, const Matrix4<Type> &m1)$/;"	f	namespace:mi::math
operator <<	libs/math/Tuple3.h	/^        std::ostream&operator<<(std::ostream &stream, const Tuple3<Type> &t1)$/;"	f	namespace:mi::math
operator <<	libs/math/Tuple4.h	/^        std::ostream&operator<<(std::ostream &stream, const Tuple4<Type> &t1)$/;"	f	namespace:mi::math
operator <<	libs/math/Vector3.h	/^        QDebug& operator<<(QDebug &debug, const Vector3<Type> &vector)$/;"	f	namespace:mi::math
operator =	apps/MIFit/core/Molecule.h	/^    Molecule&operator=(const Molecule& \/* mol *\/)$/;"	f	class:Molecule
operator =	libs/chemlib/Matrix.h	/^        Matrix<T>&operator=(const Matrix<T> &A)$/;"	f	class:TNT::Matrix
operator =	libs/chemlib/Matrix.h	/^        Matrix<T>&operator=(const T &scalar)$/;"	f	class:TNT::Matrix
operator =	libs/chemlib/Monomer.cpp	/^Monomer&Monomer::operator=(const Monomer &rhs)$/;"	f	class:chemlib::Monomer
operator =	libs/chemlib/Residue.cpp	/^Residue&Residue::operator=(Residue other)$/;"	f	class:chemlib::Residue
operator =	libs/chemlib/Residue.cpp	/^ResidueListIterator &ResidueListIterator::operator=(ResidueListIterator iter)$/;"	f	class:chemlib::ResidueListIterator
operator =	libs/conflib/FlexTorsion.cpp	/^FlexTorsion&FlexTorsion::operator=(const FlexTorsion &rhs)$/;"	f	class:FlexTorsion
operator =	libs/conflib/sdg.cpp	/^sdgDistance&sdgDistance::operator=(const sdgDistance &orig)$/;"	f	class:conflib::sdgDistance
operator =	libs/conflib/sdg.cpp	/^sdgVolume&sdgVolume::operator=(const sdgVolume &orig)$/;"	f	class:conflib::sdgVolume
operator =	libs/map/CMapHeaderBase.cpp	/^CMapHeaderBase&CMapHeaderBase::operator=(const CMapHeaderBase &mapHeader)$/;"	f	class:CMapHeaderBase
operator =	libs/math/IndexOutOfBoundsException.cpp	/^IndexOutOfBoundsException&IndexOutOfBoundsException::operator=($/;"	f	class:mi::math::IndexOutOfBoundsException
operator =	libs/util/FileIo.cpp	/^FileIo&FileIo::operator=(const FileIo &fileIo)$/;"	f	class:FileIo
operator =	libs/util/StringIo.cpp	/^StringIo&StringIo::operator=(const StringIo &stringIo)$/;"	f	class:StringIo
operator ==	libs/chemlib/Constraint.cpp	/^bool Improper::operator==(const Improper &imp2) const$/;"	f	class:chemlib::Improper
operator ==	libs/chemlib/Constraint.cpp	/^bool Plane::operator==(const Plane &pln2) const$/;"	f	class:chemlib::Plane
operator ==	libs/chemlib/Constraint.cpp	/^bool Torsion::operator==(const Torsion &tor2) const$/;"	f	class:chemlib::Torsion
operator ==	libs/chemlib/Residue.cpp	/^bool ResidueListIterator::operator==(const ResidueListIterator &iter)$/;"	f	class:chemlib::ResidueListIterator
operator ==	libs/chemlib/SaveAtom.cpp	/^bool operator ==(SaveAtom a1, SaveAtom a2)$/;"	f	namespace:chemlib
operator ==	libs/chemlib/SaveAtom.cpp	/^bool operator ==(vector<SaveAtom> s1, vector<SaveAtom> s2)$/;"	f	namespace:chemlib
operator ==	libs/conflib/ConfFingerprint.cpp	/^bool ConfFingerprint::operator ==(const ConfFingerprint &rhs)$/;"	f	class:ConfFingerprint
operator ==	libs/conflib/sdg.cpp	/^bool sdgDistance::operator==(const sdgDistance &d2) const$/;"	f	class:conflib::sdgDistance
operator ==	libs/conflib/sdg.cpp	/^bool sdgVolume::operator==(const sdgVolume &vol2) const$/;"	f	class:conflib::sdgVolume
operator ==	libs/math/Matrix3.h	/^        bool Matrix3<Type>::operator==(const Matrix3<Type> &m1) const$/;"	f	class:mi::math::Matrix3
operator ==	libs/math/Matrix4.h	/^        bool Matrix4<Type>::operator==(const Matrix4<Type> &m1) const$/;"	f	class:mi::math::Matrix4
operator ==	libs/math/Tuple3.h	/^        bool Tuple3<Type>::operator==(const Tuple3<Type> &t1) const$/;"	f	class:mi::math::Tuple3
operator ==	libs/math/Tuple4.h	/^        bool Tuple4<Type>::operator==(const Tuple4<Type> &t1) const$/;"	f	class:mi::math::Tuple4
operator >>	apps/MIFit/jobs/BatchJobManager.cpp	/^QDataStream &operator>>(QDataStream &in, CustomJob &job)$/;"	f
operator >>	libs/math/Tuple3.h	/^        std::istream&operator>>(std::istream &stream, Tuple3<Type> &t1)$/;"	f	namespace:mi::math
operator >>	libs/math/Tuple4.h	/^        std::istream&operator>>(std::istream &stream, Tuple4<Type> &t1)$/;"	f	namespace:mi::math
operator Residue*	libs/chemlib/Residue.cpp	/^ResidueListIterator::operator Residue*() const$/;"	f	class:chemlib::ResidueListIterator
operator T**	libs/chemlib/Matrix.h	/^        operator T**() const {$/;"	f	class:TNT::Matrix
operator T**	libs/chemlib/Matrix.h	/^        operator T**() {$/;"	f	class:TNT::Matrix
operator []	apps/MIFit/ui/Displaylist.cpp	/^Molecule*Displaylist::operator [](int elem)$/;"	f	class:Displaylist
operator []	libs/chemlib/Matrix.h	/^        inline T*operator[](Subscript i)$/;"	f	class:TNT::Matrix
operator []	libs/chemlib/Matrix.h	/^        inline const T*operator[](Subscript i) const$/;"	f	class:TNT::Matrix
operator []	libs/math/Tuple3.h	/^        Type Tuple3<Type>::operator[](int index) const$/;"	f	class:mi::math::Tuple3
operator []	libs/math/Tuple3.h	/^        Type& Tuple3<Type>::operator[](int index)$/;"	f	class:mi::math::Tuple3
operator []	libs/math/Tuple4.h	/^        Type Tuple4<Type>::operator[](int index) const$/;"	f	class:mi::math::Tuple4
operator []	libs/math/Tuple4.h	/^        Type& Tuple4<Type>::operator[](int index)$/;"	f	class:mi::math::Tuple4
optimizeButton	apps/MIFit/ui/ui_dicteditorform.h	/^    QPushButton *optimizeButton;$/;"	m	class:Ui_DictEditorForm
optimizeIterations	apps/MIFit/ui/ui_dicteditorform.h	/^    QSpinBox *optimizeIterations;$/;"	m	class:Ui_DictEditorForm
order	libs/chemlib/CHIRALDICT.h	/^        int order;$/;"	m	class:chemlib::CHIRAL
order	libs/chemlib/CHIRALDICT.h	/^        int order;$/;"	m	class:chemlib::CHIRALDICT
order	libs/cmtz/mtzdata.h	/^		 MTZCOL *order[5];     \/**< sort order *\/$/;"	m	struct:__anon25
order_ends	apps/MIFit/core/RESIDUE.cpp	/^int order_ends(Residue* &res1, Residue* &res2, Residue *res)$/;"	f
orderbysize	libs/chemlib/mmCIF.cpp	/^bool orderbysize(const Bond *e1, const Bond *e2)$/;"	f	namespace:chemlib
ordering	apps/MIFit/ui/DictEditCanvas.cpp	/^bool ordering(const Bond &e1, const Bond &e2)$/;"	f
org	libs/jacgrid/grid.h	/^    float org[3];         \/* the origin of the grid i.e. coords of (0,0,0) *\/$/;"	m	class:gridT
org	libs/jacgrid/plane.h	/^    float org[3];      \/* origin of the plane *\/$/;"	m	class:JACPlane
org_ptr	libs/opengl/zlib/zutil.cpp	/^    voidpf org_ptr;$/;"	m	struct:ptr_table_s	file:
orientation	apps/MIFit/core/ViewPoint.cpp	/^const mi::math::Quaternion<float> &ViewPoint::orientation() const$/;"	f	class:ViewPoint
orig_ramadat	apps/MIFit/ui/RamaPlot.cpp	/^static OrigRamaData orig_ramadat[1];$/;"	v	file:
orl	libs/map/fftlib.cpp	/^    ftnint orl;$/;"	m	struct:__anon53	file:
orthgrid	libs/map/EMapBase.h	/^    bool orthgrid;$/;"	m	class:EMapBase
orthog	libs/math/crystmat.cpp	/^orthog(float a, float b, float c, float alpha, float beta, float gamma, float ut[3][3])$/;"	f
orthomatrix	libs/math/Matrices.cpp	/^void orthomatrix(double in[3][3], double out[3][3])$/;"	f
orthomatrix	libs/math/Matrices.cpp	/^void orthomatrix(float in[3][3], float out[3][3])$/;"	f
os	mifit.py	/^import os$/;"	i
osta	libs/map/fftlib.cpp	/^    char *osta;$/;"	m	struct:__anon53	file:
ounit	libs/map/fftlib.cpp	/^    ftnint ounit;$/;"	m	struct:__anon53	file:
out_of_memory	libs/map/wxWweave.cpp	/^static bool out_of_memory = false;$/;"	v	file:
outside_sphere	apps/MIFit/core/RESIDUE.cpp	/^bool outside_sphere(float p[3], float radius, float InclusionCenter[3])$/;"	f
overlayCamera	libs/opengl/StereoView.h	/^            Camera *overlayCamera;$/;"	m	class:mi::opengl::StereoView
overlayFrustum	libs/opengl/StereoView.h	/^            Frustum *overlayFrustum;$/;"	m	class:mi::opengl::StereoView
own	libs/cmtz/library_file.h	/^  unsigned int own : 1;$/;"	m	struct:CCP4::_CFileStruct
owner	libs/jacgrid/grid.h	/^    unsigned int *owner; \/* which atom is closest to grid point *\/$/;"	m	class:gridT
owner	libs/jacgrid/surface.h	/^    std::vector<unsigned int> owner;$/;"	m	class:surfaceT
p	libs/molopt/MIMolOpt.cpp	/^    double *p;$/;"	m	struct:trial	file:
p1	libs/math/PLINE.h	/^    APOINT p1;$/;"	m	class:PLINE
p2	libs/math/PLINE.h	/^    APOINT p2;$/;"	m	class:PLINE
pad	libs/opengl/zlib/inftrees.h	/^        uInt pad;       \/* pad structure to a power of 2 (4 bytes for *\/$/;"	m	union:inflate_huft_s::__anon32
page_2	apps/MIFit/ui/ui_PreferencesDialog.h	/^    QWidget *page_2;$/;"	m	class:Ui_PreferencesDialog
paint	apps/MIFit/ui/DictEditCanvas.cpp	/^    virtual void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget = 0)$/;"	f	class:DictEditMainItem
paint	apps/MIFit/ui/MIGLWidget.cpp	/^    virtual void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget = 0)$/;"	f	class:MainItem
paintGL	apps/MIFit/ui/GLOverviewCanvas.cpp	/^void GLOverviewCanvas::paintGL()$/;"	f	class:GLOverviewCanvas
paintGL	apps/MIFit/ui/graphlib.cpp	/^void GraphWindow::paintGL()$/;"	f	class:GraphWindow
palindex	apps/MIFit/core/Colors.cpp	/^int Colors::palindex[Colors_NUMBERPALETTE];$/;"	m	class:Colors	file:
palindex	apps/MIFit/core/Colors.h	/^    static int palindex[Colors_NUMBERPALETTE];$/;"	m	class:Colors
panelForViewExists	apps/MIFit/ui/ViewSyncedPanel.cpp	/^bool ViewSyncedPanel::panelForViewExists(MIGLWidget *view)$/;"	f	class:ViewSyncedPanel
panelToButtonCtrl	apps/MIFit/ui/ModelsView.cpp	/^ModelsView::PanelToButtonCtrlMap ModelsView::panelToButtonCtrl;$/;"	m	class:ModelsView	file:
panelToButtonCtrl	apps/MIFit/ui/ModelsView.h	/^    static PanelToButtonCtrlMap panelToButtonCtrl;$/;"	m	class:ModelsView
panelToLineEdit	apps/MIFit/ui/ModelsView.cpp	/^ModelsView::PanelToLineEditMap ModelsView::panelToLineEdit;$/;"	m	class:ModelsView	file:
panelToLineEdit	apps/MIFit/ui/ModelsView.h	/^    static PanelToLineEditMap panelToLineEdit;$/;"	m	class:ModelsView
panelToToolButton	apps/MIFit/ui/ModelsView.cpp	/^ModelsView::PanelToToolButtonMap ModelsView::panelToToolButton;$/;"	m	class:ModelsView	file:
panelToToolButton	apps/MIFit/ui/ModelsView.h	/^    static PanelToToolButtonMap panelToToolButton;$/;"	m	class:ModelsView
parent	apps/MIFit/ui/DictEditCanvas.h	/^    DictEditDialog *parent;$/;"	m	class:DictEditCanvas
parseArgs	apps/MIFit/jobs/BatchJob.cpp	/^QStringList BatchJob::parseArgs(const QString &program)$/;"	f	class:BatchJob
parseCoefficients	libs/map/EMapBase.cpp	/^bool parseCoefficients(const char *str, int &mapType)$/;"	f
path	apps/MIFit/ui/MIDialog.h	/^        std::string path;$/;"	m	struct:MIFileDialog::Data
path	apps/MIFit/ui/SaveModel.h	/^    std::string path;$/;"	m	class:SaveModel
pathName	libs/map/EMapBase.h	/^    std::string pathName;$/;"	m	class:EMapBase
pathlist	apps/MIFit/ui/MIDialog.h	/^        std::vector<std::string> pathlist;$/;"	m	struct:MIFileDialog::Data
pathname	apps/MIFit/core/Molecule.h	/^    std::string pathname;$/;"	m	class:Molecule
patt_name	libs/cmtz/ccp4_spg.h	/^  char patt_name[40];     \/* Patterson spacegroup name *\/$/;"	m	struct:CSym::ccp4_spacegroup_
pco	libs/jacgrid/surface.cpp	/^    float *pco;          \/* coordinates of unit probe at origin *\/$/;"	m	class:ProbeT	file:
pdbvec	apps/MIFit/core/pdbmatch.cpp	/^Residue *pdbvec(std::string &pentdir, const MIAtomList &CA, const MIAtomList &CB)$/;"	f
pdp11	libs/map/fftlib.cpp	192;"	d	file:
peak	libs/map/PEAK.h	/^typedef struct peak$/;"	s
pentamerModel	apps/MIFit/ui/CMolwViewScene.h	/^    Molecule *pentamerModel;$/;"	m	class:CMolwViewScene
perspective	apps/MIFit/core/ViewPoint.cpp	/^float ViewPoint::perspective() const$/;"	f	class:ViewPoint
perspective	libs/opengl/Frustum.h	/^            bool perspective;$/;"	m	class:mi::opengl::Frustum
perspective_	apps/MIFit/core/ViewPoint.h	/^    float perspective_;$/;"	m	class:ViewPoint
pgname	libs/cmtz/mtzdata.h	/^		 char pgname[11];      \/**< pointgroup name *\/$/;"	m	struct:__anon23
phase1Label	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QLabel *phase1Label;$/;"	m	class:Ui_PhaseFileLoadDialog
phase2Label	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QLabel *phase2Label;$/;"	m	class:Ui_PhaseFileLoadDialog
phi	apps/MIFit/core/RESIDUE.cpp	/^phi(const Residue *prev, const Residue *res)$/;"	f
phi	libs/cmtz/ccp4_types.h	/^                 double phi;           \/* angular component of *\/$/;"	m	struct:__anon19
phi	libs/map/CREFL.h	/^    float phi;$/;"	m	class:CREFL
phi	libs/umtz/library.h	/^                 double phi;           \/* angular component of *\/$/;"	m	struct:__anon58
phi1	apps/MIFit/ui/PhaseFileLoadDialog.h	/^        std::string phi1;$/;"	m	struct:PhaseFileLoadDialog::Data
phi2	apps/MIFit/ui/PhaseFileLoadDialog.h	/^        std::string phi2;$/;"	m	struct:PhaseFileLoadDialog::Data
phiLastSet	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^static bool phiLastSet = false;$/;"	v	file:
phi_userset	apps/MIFit/ui/PhaseFileLoadDialog.h	/^    bool phi_userset[2];$/;"	m	class:PhaseFileLoadDialog
phiend	libs/cmtz/mtzdata.h	/^		 float phiend;         \/**< end of phi relative to datum *\/$/;"	m	struct:bathead
phipsi_energy	libs/molopt/MIMolOpt.cpp	/^float MIMolOpt::phipsi_energy(float phi, float psi)$/;"	f	class:MIMolOpt
phirange	libs/cmtz/mtzdata.h	/^                 float phirange;       \/**< phi range *\/$/;"	m	struct:bathead
phistt	libs/cmtz/mtzdata.h	/^		 float phistt;         \/**< start of phi relative to datum *\/$/;"	m	struct:bathead
phixyz	libs/cmtz/mtzdata.h	/^		 float phixyz[2][3];   \/**< missetting angles at beginning and$/;"	m	struct:bathead
pi	apps/MIFit/core/Helix.cpp	389;"	d	file:
pi	apps/MIFit/core/RibbonSpan.cpp	10;"	d	file:
pick	apps/MIFit/ui/moc/moc_graphlib.cpp	/^void GraphWindow::pick(const GR_POINT & _t1)$/;"	f	class:GraphWindow
pick	libs/opengl/interact/MousePicker.cpp	/^std::vector<GLuint> MousePicker::pick(int x, int y, Frustum *frustum, Renderable *scene)$/;"	f	class:mi::opengl::interact::MousePicker
pickPointX	libs/opengl/Frustum.h	/^            int pickPointX;$/;"	m	class:mi::opengl::Frustum
pickPointY	libs/opengl/Frustum.h	/^            int pickPointY;$/;"	m	class:mi::opengl::Frustum
pickedAngle	apps/MIFit/ui/DictEditCanvas.h	/^    chemlib::ANGLE *pickedAngle;$/;"	m	class:DictEditCanvas
pickedAngle	apps/MIFit/ui/DictEditScene.h	/^    chemlib::ANGLE *pickedAngle;$/;"	m	class:DictEditScene
pickedBond	apps/MIFit/ui/DictEditCanvas.h	/^    chemlib::Bond *pickedBond;$/;"	m	class:DictEditCanvas
pickedBond	apps/MIFit/ui/DictEditScene.h	/^    chemlib::Bond *pickedBond;$/;"	m	class:DictEditScene
pickedChiral	apps/MIFit/ui/DictEditCanvas.h	/^    chemlib::CHIRAL *pickedChiral;$/;"	m	class:DictEditCanvas
pickedPlane	apps/MIFit/ui/DictEditCanvas.h	/^    chemlib::PLANE *pickedPlane;$/;"	m	class:DictEditCanvas
pickedPlane	apps/MIFit/ui/DictEditScene.h	/^    chemlib::PLANE *pickedPlane;$/;"	m	class:DictEditScene
pickedTorsion	apps/MIFit/ui/DictEditCanvas.h	/^    chemlib::TORSION *pickedTorsion;$/;"	m	class:DictEditCanvas
picking	libs/opengl/Frustum.h	/^            bool picking;$/;"	m	class:mi::opengl::Frustum
pickingEnabled	apps/MIFit/ui/GLRenderer.h	/^    bool pickingEnabled;$/;"	m	class:GLRenderer
plane	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QSpinBox *plane;$/;"	m	class:Ui_GLFormatEdit
planeFrom3Points	apps/MIFit/ui/CMolwViewScene.cpp	/^static void planeFrom3Points(const Vector3<float> &v1, const Vector3<float> &v2, const Vector3<float> &v3, double *plane)$/;"	f	file:
planeSlider	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QSlider *planeSlider;$/;"	m	class:Ui_RefinementOptionsDialog
planeSpinBox	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QDoubleSpinBox *planeSpinBox;$/;"	m	class:Ui_RefinementOptionsDialog
planeWeight	apps/MIFit/ui/RefinementOptionsDialog.h	/^        int planeWeight;$/;"	m	struct:RefinementOptionsDialog::Data
planedict	libs/chemlib/MIMolInfo.h	/^        std::vector<PLANEDICT> planedict; \/\/ mmCIF only$/;"	m	class:chemlib::MIMolInfo
planes	apps/MIFit/ui/DictEditCanvas.h	/^    std::map<int, chemlib::PLANE*> planes;$/;"	m	class:DictEditCanvas
planes	libs/chemlib/Dictionary.h	/^        std::vector<Plane> planes;$/;"	m	class:chemlib::LigDictionary
planes	libs/chemlib/MIMolInfo.h	/^        std::vector<PLANE> planes;   \/\/ mmCIF only$/;"	m	class:chemlib::MIMolInfo
planes	libs/ligand/LigDictEntry.h	/^    std::vector<chemlib::PLANEDICT> planes;$/;"	m	class:LigDictEntry
planes	libs/opengl/Frustum.h	/^            Plane **planes;$/;"	m	class:mi::opengl::Frustum
planesMatrix	libs/opengl/Frustum.h	/^            float *planesMatrix;$/;"	m	class:mi::opengl::Frustum
pname	libs/cmtz/mtzdata.h	/^		 char pname[65];       \/**< Project name *\/$/;"	m	struct:__anon22
pname	libs/umtz/mmtzlib.h	/^    char pname[65];$/;"	m	struct:mmtz_crystal_
point	libs/opengl/Frustum.cpp	/^    Vector3<float> point;$/;"	m	class:mi::opengl::Plane	file:
pointInFrustum	libs/opengl/Frustum.cpp	/^Frustum::CullingResult Frustum::pointInFrustum(Vector3<float> &position)$/;"	f	class:mi::opengl::Frustum
point_group	libs/cmtz/ccp4_spg.h	/^  char point_group[20];   \/* point group name *\/$/;"	m	struct:CSym::ccp4_spacegroup_
pointer	libs/chemlib/Matrix.h	/^        typedef         T*pointer;$/;"	t	class:TNT::Matrix
points	apps/MIFit/core/SurfaceSphere.h	/^    std::vector<APOINT> points;$/;"	m	class:SurfaceSphere
polyAla	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::polyAla()$/;"	f	class:MIGLWidget
polyAlaChain	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::polyAlaChain()$/;"	f	class:MIGLWidget
polys	libs/jacgrid/cell_table.h	/^    unsigned int polys[30];$/;"	m	struct:__anon30
pop	apps/MIFit/core/Stack.cpp	/^void Stack::pop()$/;"	f	class:Stack
populateList	apps/MIFit/ui/AtomColors.cpp	/^void AtomColors::populateList(const std::vector<std::string> &atomNames,$/;"	f	class:AtomColors
popupMenu	apps/MIFit/ui/DictEditCanvas.h	/^    QMenu *popupMenu;$/;"	m	class:DictEditCanvas
popup_menu	apps/MIFit/ui/MIGLWidget.h	/^    QMenu *popup_menu;$/;"	m	class:MIGLWidget
pos_	libs/chemlib/MIAtom.h	/^        mi::math::Vector3<float> pos_;$/;"	m	class:chemlib::MIAtom
position	libs/chemlib/MIAtom.h	/^        const mi::math::Vector3<float> &position() const$/;"	f	class:chemlib::MIAtom
position	libs/opengl/Light.h	/^            float *position;$/;"	m	class:mi::opengl::Light
position	libs/opengl/Viewpoint.h	/^            mi::math::Vector3<float> position;$/;"	m	class:mi::opengl::Viewpoint
preCameraRender	apps/MIFit/ui/CMolwViewScene.cpp	/^void CMolwViewScene::preCameraRender()$/;"	f	class:CMolwViewScene
preCameraRender	apps/MIFit/ui/DictEditScene.cpp	/^void DictEditScene::preCameraRender()$/;"	f	class:DictEditScene
predictedAsDifferenceMap	libs/map/EMapBase.h	/^    bool predictedAsDifferenceMap;$/;"	m	class:EMapBase
prefAngles	libs/chemlib/Residue.h	/^        const std::vector<ANGLE>&prefAngles() const$/;"	f	class:chemlib::Residue
prefBonds	libs/chemlib/Residue.h	/^        const std::vector<Bond>&prefBonds() const$/;"	f	class:chemlib::Residue
prefangles	libs/chemlib/Residue.h	/^        std::vector<ANGLE> prefangles;$/;"	m	class:chemlib::Residue
prefbonds	libs/chemlib/Residue.h	/^        std::vector<Bond> prefbonds;$/;"	m	class:chemlib::Residue
prepareAtomPicking	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::prepareAtomPicking()$/;"	f	class:MIGLWidget
prepareBondPicking	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::prepareBondPicking()$/;"	f	class:MIGLWidget
prepareLeftEye	libs/opengl/StereoView.cpp	/^Viewport*StereoView::prepareLeftEye(float cameraOffset, float frustumAsymmetry)$/;"	f	class:mi::opengl::StereoView
prepareRightEye	libs/opengl/StereoView.cpp	/^Viewport*StereoView::prepareRightEye(float cameraOffset, float frustumAsymmetry)$/;"	f	class:mi::opengl::StereoView
prependItem	apps/MIFit/ui/MIQTreeWidget.cpp	/^QTreeWidgetItem*MIQTreeWidget::prependItem(QTreeWidgetItem *parent,$/;"	f	class:MIQTreeWidget
prev	libs/chemlib/Residue.h	/^        Residue *prev() const$/;"	f	class:chemlib::Residue
prevConformerAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *prevConformerAction;$/;"	m	class:DictEditCanvas
prev_res	apps/MIFit/ui/MoleculeXmlHandler.h	/^    chemlib::Residue *prev_res;$/;"	m	class:MoleculeXmlHandler
prev_res	libs/chemlib/Residue.h	/^        Residue *prev_res;$/;"	m	class:chemlib::Residue
previousAct	apps/MIFit/ui/MIMainWindow.h	/^    QAction *previousAct;$/;"	m	class:MIMainWindow
previousX	libs/opengl/interact/MouseTranslator.h	/^                int previousX;$/;"	m	class:mi::opengl::interact::MouseTranslator
previousX	libs/opengl/interact/MouseZoomer.h	/^                int previousX;$/;"	m	class:mi::opengl::interact::MouseZoomer
previousX	libs/opengl/interact/SimpleMouseRotator.h	/^                int previousX;$/;"	m	class:mi::opengl::interact::SimpleMouseRotator
previousY	libs/opengl/interact/MouseTranslator.h	/^                int previousY;$/;"	m	class:mi::opengl::interact::MouseTranslator
previousY	libs/opengl/interact/MouseZoomer.h	/^                int previousY;$/;"	m	class:mi::opengl::interact::MouseZoomer
previousY	libs/opengl/interact/SimpleMouseRotator.h	/^                int previousY;$/;"	m	class:mi::opengl::interact::SimpleMouseRotator
printOpenGLErrors	libs/opengl/StereoView.cpp	/^static void printOpenGLErrors(const char *file, int line)$/;"	f	file:
printf	libs/util/FileIo.cpp	/^int FileIo::printf(const char *format, ...)$/;"	f	class:FileIo
printf	libs/util/StringIo.cpp	/^int StringIo::printf(const char *format, ...)$/;"	f	class:StringIo
priv	libs/cmtz/library_file.h	/^  void *priv;$/;"	m	struct:CCP4::_CFileStruct
process	apps/MIFit/jobs/BatchJob.h	/^    QProcess *process;$/;"	m	class:BatchJob
program	apps/MIFit/ui/CustomJobDialog.cpp	/^QString CustomJobDialog::program() const$/;"	f	class:CustomJobDialog
program_	apps/MIFit/jobs/BatchJob.h	/^    QString program_;$/;"	m	class:BatchJob
project	libs/math/Point3.h	/^        void Point3<Type>::project(const Point4<Type> &p1)$/;"	f	class:mi::math::Point3
project	libs/math/Point4.h	/^        void Point4<Type>::project(const Point4<Type> &p1)$/;"	f	class:mi::math::Point4
projection	libs/opengl/Frustum.h	/^            float *projection;$/;"	m	class:mi::opengl::Frustum
prompt	apps/MIFit/jobs/OpenJobResults.cpp	/^void OpenJobResults::prompt(const std::string &workdir, const std::string &jobName)$/;"	f	class:OpenJobResults
prompt	apps/MIFit/python/Console.cpp	/^void Console::prompt(const QString &prompt)$/;"	f	class:Console
promptForReplaceResidue	apps/MIFit/ui/MIGLWidget.cpp	/^bool MIGLWidget::promptForReplaceResidue(std::string &deft_str)$/;"	f	class:MIGLWidget
promptSaveIfModified	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::promptSaveIfModified()$/;"	f	class:ManageCrystals
promptSecondaryStructureOptions	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::promptSecondaryStructureOptions(const std::string &type)$/;"	f	class:MIGLWidget
propertiesAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *propertiesAction_;$/;"	m	class:ModelsTree	file:
propertyCommand	libs/opengl/interact/MouseZoomer.h	/^                PropertyCommand *propertyCommand;$/;"	m	class:mi::opengl::interact::MouseZoomer
ps1	apps/MIFit/python/PythonEngine.h	/^    static QString ps1;$/;"	m	class:PythonEngine
ps2	apps/MIFit/python/PythonEngine.h	/^    static QString ps2;$/;"	m	class:PythonEngine
pseudospline	libs/map/EMapBase.cpp	/^pseudospline(float m000, float m001, float m010, float m011, float m100, float m101, float m110, float m111, float dx1, float dy1, float dz1)$/;"	f	file:
psi	apps/MIFit/core/RESIDUE.cpp	/^psi(const Residue *res, const Residue *next)$/;"	f
psi_	libs/map/fftsub.cpp	/^double psi_(int p, int N, int k)$/;"	f
pstr	libs/cmtz/ccp4_types.h	/^typedef   char     *        pstr;$/;"	t
pstr	libs/umtz/library.h	/^typedef   char*pstr;$/;"	t
ptr	libs/chemlib/util.h	/^        void (T::*ptr)();$/;"	m	class:chemlib::void_mem_fun_ref_t
ptr	libs/chemlib/util.h	/^        void (T::*ptr)();$/;"	m	class:chemlib::void_mem_fun_t
ptr_table	libs/opengl/zlib/zutil.cpp	/^} ptr_table;$/;"	t	typeref:struct:ptr_table_s	file:
ptr_table_s	libs/opengl/zlib/zutil.cpp	/^typedef struct ptr_table_s$/;"	s	file:
putAtGroup	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QGroupBox *putAtGroup;$/;"	m	class:Ui_AddResidueDialog
put_80	libs/map/fftsub.cpp	/^void put_80(char *cptr, FILE *file)$/;"	f
pythonExe	apps/MIFit/jobs/BatchJobManager.cpp	/^QString BatchJobManager::pythonExe()$/;"	f	class:BatchJobManager
qCleanupResources_ui	apps/MIFit/ui/qrc_ui.cpp	/^int QT_MANGLE_NAMESPACE(qCleanupResources_ui)()$/;"	f
qInitResources_ui	apps/MIFit/ui/qrc_ui.cpp	/^int QT_MANGLE_NAMESPACE(qInitResources_ui)()$/;"	f
qcanvas_win	apps/MIFit/ui/GLRenderer.h	/^    QGLWidget *qcanvas_win;$/;"	m	class:GLRenderer
qprint	libs/umtz/library.c	/^void qprint (const char *message)$/;"	f
qt_meta_data_AddResidueDialog	apps/MIFit/ui/moc/moc_AddResidueDialog.cpp	/^static const uint qt_meta_data_AddResidueDialog[] = {$/;"	v	file:
qt_meta_data_Annotation	apps/MIFit/core/moc/moc_Annotation.cpp	/^static const uint qt_meta_data_Annotation[] = {$/;"	v	file:
qt_meta_data_Application	apps/MIFit/ui/moc/moc_Application.cpp	/^static const uint qt_meta_data_Application[] = {$/;"	v	file:
qt_meta_data_AtomColors	apps/MIFit/ui/moc/moc_AtomColors.cpp	/^static const uint qt_meta_data_AtomColors[] = {$/;"	v	file:
qt_meta_data_BValueColors	apps/MIFit/ui/moc/moc_BValueColors.cpp	/^static const uint qt_meta_data_BValueColors[] = {$/;"	v	file:
qt_meta_data_BatchJob	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^static const uint qt_meta_data_BatchJob[] = {$/;"	v	file:
qt_meta_data_BatchJobManager	apps/MIFit/jobs/moc/moc_BatchJobManager.cpp	/^static const uint qt_meta_data_BatchJobManager[] = {$/;"	v	file:
qt_meta_data_CMapHeaderBase	libs/map/moc/moc_CMapHeaderBase.cpp	/^static const uint qt_meta_data_CMapHeaderBase[] = {$/;"	v	file:
qt_meta_data_ContourOptionsWidget	apps/MIFit/ui/moc/moc_ContourOptionsWidget.cpp	/^static const uint qt_meta_data_ContourOptionsWidget[] = {$/;"	v	file:
qt_meta_data_CurrentMIGLWidgetAction	apps/MIFit/ui/moc/moc_CurrentMIGLWidgetAction.cpp	/^static const uint qt_meta_data_CurrentMIGLWidgetAction[] = {$/;"	v	file:
qt_meta_data_CursorArea	apps/MIFit/ui/moc/moc_CursorArea.cpp	/^static const uint qt_meta_data_CursorArea[] = {$/;"	v	file:
qt_meta_data_CustomJobDialog	apps/MIFit/ui/moc/moc_CustomJobDialog.cpp	/^static const uint qt_meta_data_CustomJobDialog[] = {$/;"	v	file:
qt_meta_data_CustomJobPreferences	apps/MIFit/ui/moc/moc_CustomJobPreferences.cpp	/^static const uint qt_meta_data_CustomJobPreferences[] = {$/;"	v	file:
qt_meta_data_DictEditCanvas	apps/MIFit/ui/moc/moc_DictEditCanvas.cpp	/^static const uint qt_meta_data_DictEditCanvas[] = {$/;"	v	file:
qt_meta_data_DictEditDialog	apps/MIFit/ui/moc/moc_DictEditDialog.cpp	/^static const uint qt_meta_data_DictEditDialog[] = {$/;"	v	file:
qt_meta_data_Displaylist	apps/MIFit/ui/moc/moc_Displaylist.cpp	/^static const uint qt_meta_data_Displaylist[] = {$/;"	v	file:
qt_meta_data_EMap	apps/MIFit/ui/moc/moc_EMap.cpp	/^static const uint qt_meta_data_EMap[] = {$/;"	v	file:
qt_meta_data_EMapBase	libs/map/moc/moc_EMapBase.cpp	/^static const uint qt_meta_data_EMapBase[] = {$/;"	v	file:
qt_meta_data_EnvironmentPreferences	apps/MIFit/ui/moc/moc_EnvironmentPreferences.cpp	/^static const uint qt_meta_data_EnvironmentPreferences[] = {$/;"	v	file:
qt_meta_data_GLFormatDialog	apps/MIFit/ui/moc/moc_GLFormatDialog.cpp	/^static const uint qt_meta_data_GLFormatDialog[] = {$/;"	v	file:
qt_meta_data_GLFormatEdit	apps/MIFit/ui/moc/moc_GLFormatEdit.cpp	/^static const uint qt_meta_data_GLFormatEdit[] = {$/;"	v	file:
qt_meta_data_GeneralPreferences	apps/MIFit/ui/moc/moc_GeneralPreferences.cpp	/^static const uint qt_meta_data_GeneralPreferences[] = {$/;"	v	file:
qt_meta_data_GenericDataDialog	apps/MIFit/ui/moc/moc_GenericDataDialog.cpp	/^static const uint qt_meta_data_GenericDataDialog[] = {$/;"	v	file:
qt_meta_data_GraphWindow	apps/MIFit/ui/moc/moc_graphlib.cpp	/^static const uint qt_meta_data_GraphWindow[] = {$/;"	v	file:
qt_meta_data_JobFinishedStatusLabel	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^static const uint qt_meta_data_JobFinishedStatusLabel[] = {$/;"	v	file:
qt_meta_data_JobsView	apps/MIFit/ui/moc/moc_JobsView.cpp	/^static const uint qt_meta_data_JobsView[] = {$/;"	v	file:
qt_meta_data_LSQFitDialog	apps/MIFit/ui/moc/moc_LSQFitDialog.cpp	/^static const uint qt_meta_data_LSQFitDialog[] = {$/;"	v	file:
qt_meta_data_LocalSocketScript	apps/MIFit/script/moc/moc_LocalSocketScript.cpp	/^static const uint qt_meta_data_LocalSocketScript[] = {$/;"	v	file:
qt_meta_data_MIBrowsePair	apps/MIFit/ui/moc/moc_MIBrowsePair.cpp	/^static const uint qt_meta_data_MIBrowsePair[] = {$/;"	v	file:
qt_meta_data_MIColorPickerDlg	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^static const uint qt_meta_data_MIColorPickerDlg[] = {$/;"	v	file:
qt_meta_data_MIColorToolButton	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^static const uint qt_meta_data_MIColorToolButton[] = {$/;"	v	file:
qt_meta_data_MIFitScriptObject	apps/MIFit/script/moc/moc_MIFitScriptObject.cpp	/^static const uint qt_meta_data_MIFitScriptObject[] = {$/;"	v	file:
qt_meta_data_MIGLWidget	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^static const uint qt_meta_data_MIGLWidget[] = {$/;"	v	file:
qt_meta_data_MIMainWindow	apps/MIFit/ui/moc/moc_MIMainWindow.cpp	/^static const uint qt_meta_data_MIMainWindow[] = {$/;"	v	file:
qt_meta_data_MIMolOpt	libs/molopt/moc/moc_MIMolOpt.cpp	/^static const uint qt_meta_data_MIMolOpt[] = {$/;"	v	file:
qt_meta_data_MIQDialog	apps/MIFit/ui/moc/moc_MIQDialog.cpp	/^static const uint qt_meta_data_MIQDialog[] = {$/;"	v	file:
qt_meta_data_MIQTreeWidget	apps/MIFit/ui/moc/moc_MIQTreeWidget.cpp	/^static const uint qt_meta_data_MIQTreeWidget[] = {$/;"	v	file:
qt_meta_data_ManageCrystals	apps/MIFit/ui/moc/moc_ManageCrystals.cpp	/^static const uint qt_meta_data_ManageCrystals[] = {$/;"	v	file:
qt_meta_data_ModelsView	apps/MIFit/ui/moc/moc_ModelsView.cpp	/^static const uint qt_meta_data_ModelsView[] = {$/;"	v	file:
qt_meta_data_Molecule	apps/MIFit/core/moc/moc_Molecule.cpp	/^static const uint qt_meta_data_Molecule[] = {$/;"	v	file:
qt_meta_data_PhaseFileLoadDialog	apps/MIFit/ui/moc/moc_PhaseFileLoadDialog.cpp	/^static const uint qt_meta_data_PhaseFileLoadDialog[] = {$/;"	v	file:
qt_meta_data_PreferencesDialog	apps/MIFit/ui/moc/moc_PreferencesDialog.cpp	/^static const uint qt_meta_data_PreferencesDialog[] = {$/;"	v	file:
qt_meta_data_RamaPlotMgr	apps/MIFit/ui/moc/moc_RamaPlot.cpp	/^static const uint qt_meta_data_RamaPlotMgr[] = {$/;"	v	file:
qt_meta_data_RefinementOptionsDialog	apps/MIFit/ui/moc/moc_RefinementOptionsDialog.cpp	/^static const uint qt_meta_data_RefinementOptionsDialog[] = {$/;"	v	file:
qt_meta_data_SelectCrystal	apps/MIFit/ui/moc/moc_SelectCrystal.cpp	/^static const uint qt_meta_data_SelectCrystal[] = {$/;"	v	file:
qt_meta_data_SmilesDialog	apps/MIFit/ui/moc/moc_SmilesDialog.cpp	/^static const uint qt_meta_data_SmilesDialog[] = {$/;"	v	file:
qt_meta_data_Stack	apps/MIFit/core/moc/moc_Stack.cpp	/^static const uint qt_meta_data_Stack[] = {$/;"	v	file:
qt_meta_data_Tools	apps/MIFit/ui/moc/moc_tools.cpp	/^static const uint qt_meta_data_Tools[] = {$/;"	v	file:
qt_meta_data_ViewController	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^static const uint qt_meta_data_ViewController[] = {$/;"	v	file:
qt_meta_data_ViewSyncedPanel	apps/MIFit/ui/moc/moc_ViewSyncedPanel.cpp	/^static const uint qt_meta_data_ViewSyncedPanel[] = {$/;"	v	file:
qt_meta_data_chemlib__MIMoleculeBase	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^static const uint qt_meta_data_chemlib__MIMoleculeBase[] = {$/;"	v	file:
qt_meta_stringdata_AddResidueDialog	apps/MIFit/ui/moc/moc_AddResidueDialog.cpp	/^static const char qt_meta_stringdata_AddResidueDialog[] = {$/;"	v	file:
qt_meta_stringdata_Annotation	apps/MIFit/core/moc/moc_Annotation.cpp	/^static const char qt_meta_stringdata_Annotation[] = {$/;"	v	file:
qt_meta_stringdata_Application	apps/MIFit/ui/moc/moc_Application.cpp	/^static const char qt_meta_stringdata_Application[] = {$/;"	v	file:
qt_meta_stringdata_AtomColors	apps/MIFit/ui/moc/moc_AtomColors.cpp	/^static const char qt_meta_stringdata_AtomColors[] = {$/;"	v	file:
qt_meta_stringdata_BValueColors	apps/MIFit/ui/moc/moc_BValueColors.cpp	/^static const char qt_meta_stringdata_BValueColors[] = {$/;"	v	file:
qt_meta_stringdata_BatchJob	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^static const char qt_meta_stringdata_BatchJob[] = {$/;"	v	file:
qt_meta_stringdata_BatchJobManager	apps/MIFit/jobs/moc/moc_BatchJobManager.cpp	/^static const char qt_meta_stringdata_BatchJobManager[] = {$/;"	v	file:
qt_meta_stringdata_CMapHeaderBase	libs/map/moc/moc_CMapHeaderBase.cpp	/^static const char qt_meta_stringdata_CMapHeaderBase[] = {$/;"	v	file:
qt_meta_stringdata_ContourOptionsWidget	apps/MIFit/ui/moc/moc_ContourOptionsWidget.cpp	/^static const char qt_meta_stringdata_ContourOptionsWidget[] = {$/;"	v	file:
qt_meta_stringdata_CurrentMIGLWidgetAction	apps/MIFit/ui/moc/moc_CurrentMIGLWidgetAction.cpp	/^static const char qt_meta_stringdata_CurrentMIGLWidgetAction[] = {$/;"	v	file:
qt_meta_stringdata_CursorArea	apps/MIFit/ui/moc/moc_CursorArea.cpp	/^static const char qt_meta_stringdata_CursorArea[] = {$/;"	v	file:
qt_meta_stringdata_CustomJobDialog	apps/MIFit/ui/moc/moc_CustomJobDialog.cpp	/^static const char qt_meta_stringdata_CustomJobDialog[] = {$/;"	v	file:
qt_meta_stringdata_CustomJobPreferences	apps/MIFit/ui/moc/moc_CustomJobPreferences.cpp	/^static const char qt_meta_stringdata_CustomJobPreferences[] = {$/;"	v	file:
qt_meta_stringdata_DictEditCanvas	apps/MIFit/ui/moc/moc_DictEditCanvas.cpp	/^static const char qt_meta_stringdata_DictEditCanvas[] = {$/;"	v	file:
qt_meta_stringdata_DictEditDialog	apps/MIFit/ui/moc/moc_DictEditDialog.cpp	/^static const char qt_meta_stringdata_DictEditDialog[] = {$/;"	v	file:
qt_meta_stringdata_Displaylist	apps/MIFit/ui/moc/moc_Displaylist.cpp	/^static const char qt_meta_stringdata_Displaylist[] = {$/;"	v	file:
qt_meta_stringdata_EMap	apps/MIFit/ui/moc/moc_EMap.cpp	/^static const char qt_meta_stringdata_EMap[] = {$/;"	v	file:
qt_meta_stringdata_EMapBase	libs/map/moc/moc_EMapBase.cpp	/^static const char qt_meta_stringdata_EMapBase[] = {$/;"	v	file:
qt_meta_stringdata_EnvironmentPreferences	apps/MIFit/ui/moc/moc_EnvironmentPreferences.cpp	/^static const char qt_meta_stringdata_EnvironmentPreferences[] = {$/;"	v	file:
qt_meta_stringdata_GLFormatDialog	apps/MIFit/ui/moc/moc_GLFormatDialog.cpp	/^static const char qt_meta_stringdata_GLFormatDialog[] = {$/;"	v	file:
qt_meta_stringdata_GLFormatEdit	apps/MIFit/ui/moc/moc_GLFormatEdit.cpp	/^static const char qt_meta_stringdata_GLFormatEdit[] = {$/;"	v	file:
qt_meta_stringdata_GeneralPreferences	apps/MIFit/ui/moc/moc_GeneralPreferences.cpp	/^static const char qt_meta_stringdata_GeneralPreferences[] = {$/;"	v	file:
qt_meta_stringdata_GenericDataDialog	apps/MIFit/ui/moc/moc_GenericDataDialog.cpp	/^static const char qt_meta_stringdata_GenericDataDialog[] = {$/;"	v	file:
qt_meta_stringdata_GraphWindow	apps/MIFit/ui/moc/moc_graphlib.cpp	/^static const char qt_meta_stringdata_GraphWindow[] = {$/;"	v	file:
qt_meta_stringdata_JobFinishedStatusLabel	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^static const char qt_meta_stringdata_JobFinishedStatusLabel[] = {$/;"	v	file:
qt_meta_stringdata_JobsView	apps/MIFit/ui/moc/moc_JobsView.cpp	/^static const char qt_meta_stringdata_JobsView[] = {$/;"	v	file:
qt_meta_stringdata_LSQFitDialog	apps/MIFit/ui/moc/moc_LSQFitDialog.cpp	/^static const char qt_meta_stringdata_LSQFitDialog[] = {$/;"	v	file:
qt_meta_stringdata_LocalSocketScript	apps/MIFit/script/moc/moc_LocalSocketScript.cpp	/^static const char qt_meta_stringdata_LocalSocketScript[] = {$/;"	v	file:
qt_meta_stringdata_MIBrowsePair	apps/MIFit/ui/moc/moc_MIBrowsePair.cpp	/^static const char qt_meta_stringdata_MIBrowsePair[] = {$/;"	v	file:
qt_meta_stringdata_MIColorPickerDlg	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^static const char qt_meta_stringdata_MIColorPickerDlg[] = {$/;"	v	file:
qt_meta_stringdata_MIColorToolButton	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^static const char qt_meta_stringdata_MIColorToolButton[] = {$/;"	v	file:
qt_meta_stringdata_MIFitScriptObject	apps/MIFit/script/moc/moc_MIFitScriptObject.cpp	/^static const char qt_meta_stringdata_MIFitScriptObject[] = {$/;"	v	file:
qt_meta_stringdata_MIGLWidget	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^static const char qt_meta_stringdata_MIGLWidget[] = {$/;"	v	file:
qt_meta_stringdata_MIMainWindow	apps/MIFit/ui/moc/moc_MIMainWindow.cpp	/^static const char qt_meta_stringdata_MIMainWindow[] = {$/;"	v	file:
qt_meta_stringdata_MIMolOpt	libs/molopt/moc/moc_MIMolOpt.cpp	/^static const char qt_meta_stringdata_MIMolOpt[] = {$/;"	v	file:
qt_meta_stringdata_MIQDialog	apps/MIFit/ui/moc/moc_MIQDialog.cpp	/^static const char qt_meta_stringdata_MIQDialog[] = {$/;"	v	file:
qt_meta_stringdata_MIQTreeWidget	apps/MIFit/ui/moc/moc_MIQTreeWidget.cpp	/^static const char qt_meta_stringdata_MIQTreeWidget[] = {$/;"	v	file:
qt_meta_stringdata_ManageCrystals	apps/MIFit/ui/moc/moc_ManageCrystals.cpp	/^static const char qt_meta_stringdata_ManageCrystals[] = {$/;"	v	file:
qt_meta_stringdata_ModelsView	apps/MIFit/ui/moc/moc_ModelsView.cpp	/^static const char qt_meta_stringdata_ModelsView[] = {$/;"	v	file:
qt_meta_stringdata_Molecule	apps/MIFit/core/moc/moc_Molecule.cpp	/^static const char qt_meta_stringdata_Molecule[] = {$/;"	v	file:
qt_meta_stringdata_PhaseFileLoadDialog	apps/MIFit/ui/moc/moc_PhaseFileLoadDialog.cpp	/^static const char qt_meta_stringdata_PhaseFileLoadDialog[] = {$/;"	v	file:
qt_meta_stringdata_PreferencesDialog	apps/MIFit/ui/moc/moc_PreferencesDialog.cpp	/^static const char qt_meta_stringdata_PreferencesDialog[] = {$/;"	v	file:
qt_meta_stringdata_RamaPlotMgr	apps/MIFit/ui/moc/moc_RamaPlot.cpp	/^static const char qt_meta_stringdata_RamaPlotMgr[] = {$/;"	v	file:
qt_meta_stringdata_RefinementOptionsDialog	apps/MIFit/ui/moc/moc_RefinementOptionsDialog.cpp	/^static const char qt_meta_stringdata_RefinementOptionsDialog[] = {$/;"	v	file:
qt_meta_stringdata_SelectCrystal	apps/MIFit/ui/moc/moc_SelectCrystal.cpp	/^static const char qt_meta_stringdata_SelectCrystal[] = {$/;"	v	file:
qt_meta_stringdata_SmilesDialog	apps/MIFit/ui/moc/moc_SmilesDialog.cpp	/^static const char qt_meta_stringdata_SmilesDialog[] = {$/;"	v	file:
qt_meta_stringdata_Stack	apps/MIFit/core/moc/moc_Stack.cpp	/^static const char qt_meta_stringdata_Stack[] = {$/;"	v	file:
qt_meta_stringdata_Tools	apps/MIFit/ui/moc/moc_tools.cpp	/^static const char qt_meta_stringdata_Tools[] = {$/;"	v	file:
qt_meta_stringdata_ViewController	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^static const char qt_meta_stringdata_ViewController[] = {$/;"	v	file:
qt_meta_stringdata_ViewSyncedPanel	apps/MIFit/ui/moc/moc_ViewSyncedPanel.cpp	/^static const char qt_meta_stringdata_ViewSyncedPanel[] = {$/;"	v	file:
qt_meta_stringdata_chemlib__MIMoleculeBase	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^static const char qt_meta_stringdata_chemlib__MIMoleculeBase[] = {$/;"	v	file:
qt_metacall	apps/MIFit/core/moc/moc_Annotation.cpp	/^int Annotation::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Annotation
qt_metacall	apps/MIFit/core/moc/moc_Molecule.cpp	/^int Molecule::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Molecule
qt_metacall	apps/MIFit/core/moc/moc_Stack.cpp	/^int Stack::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Stack
qt_metacall	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^int BatchJob::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:BatchJob
qt_metacall	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^int JobFinishedStatusLabel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:JobFinishedStatusLabel
qt_metacall	apps/MIFit/jobs/moc/moc_BatchJobManager.cpp	/^int BatchJobManager::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:BatchJobManager
qt_metacall	apps/MIFit/script/moc/moc_LocalSocketScript.cpp	/^int LocalSocketScript::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:LocalSocketScript
qt_metacall	apps/MIFit/script/moc/moc_MIFitScriptObject.cpp	/^int MIFitScriptObject::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIFitScriptObject
qt_metacall	apps/MIFit/ui/moc/moc_AddResidueDialog.cpp	/^int AddResidueDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AddResidueDialog
qt_metacall	apps/MIFit/ui/moc/moc_Application.cpp	/^int Application::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Application
qt_metacall	apps/MIFit/ui/moc/moc_AtomColors.cpp	/^int AtomColors::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AtomColors
qt_metacall	apps/MIFit/ui/moc/moc_BValueColors.cpp	/^int BValueColors::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:BValueColors
qt_metacall	apps/MIFit/ui/moc/moc_ContourOptionsWidget.cpp	/^int ContourOptionsWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ContourOptionsWidget
qt_metacall	apps/MIFit/ui/moc/moc_CurrentMIGLWidgetAction.cpp	/^int CurrentMIGLWidgetAction::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CurrentMIGLWidgetAction
qt_metacall	apps/MIFit/ui/moc/moc_CursorArea.cpp	/^int CursorArea::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CursorArea
qt_metacall	apps/MIFit/ui/moc/moc_CustomJobDialog.cpp	/^int CustomJobDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CustomJobDialog
qt_metacall	apps/MIFit/ui/moc/moc_CustomJobPreferences.cpp	/^int CustomJobPreferences::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CustomJobPreferences
qt_metacall	apps/MIFit/ui/moc/moc_DictEditCanvas.cpp	/^int DictEditCanvas::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DictEditCanvas
qt_metacall	apps/MIFit/ui/moc/moc_DictEditDialog.cpp	/^int DictEditDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DictEditDialog
qt_metacall	apps/MIFit/ui/moc/moc_Displaylist.cpp	/^int Displaylist::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Displaylist
qt_metacall	apps/MIFit/ui/moc/moc_EMap.cpp	/^int EMap::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EMap
qt_metacall	apps/MIFit/ui/moc/moc_EnvironmentPreferences.cpp	/^int EnvironmentPreferences::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EnvironmentPreferences
qt_metacall	apps/MIFit/ui/moc/moc_GLFormatDialog.cpp	/^int GLFormatDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GLFormatDialog
qt_metacall	apps/MIFit/ui/moc/moc_GLFormatEdit.cpp	/^int GLFormatEdit::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GLFormatEdit
qt_metacall	apps/MIFit/ui/moc/moc_GeneralPreferences.cpp	/^int GeneralPreferences::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GeneralPreferences
qt_metacall	apps/MIFit/ui/moc/moc_GenericDataDialog.cpp	/^int GenericDataDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GenericDataDialog
qt_metacall	apps/MIFit/ui/moc/moc_JobsView.cpp	/^int JobsView::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:JobsView
qt_metacall	apps/MIFit/ui/moc/moc_LSQFitDialog.cpp	/^int LSQFitDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:LSQFitDialog
qt_metacall	apps/MIFit/ui/moc/moc_MIBrowsePair.cpp	/^int MIBrowsePair::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIBrowsePair
qt_metacall	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^int MIColorPickerDlg::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIColorPickerDlg
qt_metacall	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^int MIColorToolButton::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIColorToolButton
qt_metacall	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^int MIGLWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIGLWidget
qt_metacall	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^int ViewController::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ViewController
qt_metacall	apps/MIFit/ui/moc/moc_MIMainWindow.cpp	/^int MIMainWindow::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIMainWindow
qt_metacall	apps/MIFit/ui/moc/moc_MIQDialog.cpp	/^int MIQDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIQDialog
qt_metacall	apps/MIFit/ui/moc/moc_MIQTreeWidget.cpp	/^int MIQTreeWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIQTreeWidget
qt_metacall	apps/MIFit/ui/moc/moc_ManageCrystals.cpp	/^int ManageCrystals::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ManageCrystals
qt_metacall	apps/MIFit/ui/moc/moc_ModelsView.cpp	/^int ModelsView::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ModelsView
qt_metacall	apps/MIFit/ui/moc/moc_PhaseFileLoadDialog.cpp	/^int PhaseFileLoadDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PhaseFileLoadDialog
qt_metacall	apps/MIFit/ui/moc/moc_PreferencesDialog.cpp	/^int PreferencesDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PreferencesDialog
qt_metacall	apps/MIFit/ui/moc/moc_RamaPlot.cpp	/^int RamaPlotMgr::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:RamaPlotMgr
qt_metacall	apps/MIFit/ui/moc/moc_RefinementOptionsDialog.cpp	/^int RefinementOptionsDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:RefinementOptionsDialog
qt_metacall	apps/MIFit/ui/moc/moc_SelectCrystal.cpp	/^int SelectCrystal::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SelectCrystal
qt_metacall	apps/MIFit/ui/moc/moc_SmilesDialog.cpp	/^int SmilesDialog::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SmilesDialog
qt_metacall	apps/MIFit/ui/moc/moc_ViewSyncedPanel.cpp	/^int ViewSyncedPanel::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ViewSyncedPanel
qt_metacall	apps/MIFit/ui/moc/moc_graphlib.cpp	/^int GraphWindow::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GraphWindow
qt_metacall	apps/MIFit/ui/moc/moc_tools.cpp	/^int Tools::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Tools
qt_metacall	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^int chemlib::MIMoleculeBase::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:chemlib::MIMoleculeBase
qt_metacall	libs/map/moc/moc_CMapHeaderBase.cpp	/^int CMapHeaderBase::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CMapHeaderBase
qt_metacall	libs/map/moc/moc_EMapBase.cpp	/^int EMapBase::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EMapBase
qt_metacall	libs/molopt/moc/moc_MIMolOpt.cpp	/^int MIMolOpt::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIMolOpt
qt_metacast	apps/MIFit/core/moc/moc_Annotation.cpp	/^void *Annotation::qt_metacast(const char *_clname)$/;"	f	class:Annotation
qt_metacast	apps/MIFit/core/moc/moc_Molecule.cpp	/^void *Molecule::qt_metacast(const char *_clname)$/;"	f	class:Molecule
qt_metacast	apps/MIFit/core/moc/moc_Stack.cpp	/^void *Stack::qt_metacast(const char *_clname)$/;"	f	class:Stack
qt_metacast	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^void *BatchJob::qt_metacast(const char *_clname)$/;"	f	class:BatchJob
qt_metacast	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^void *JobFinishedStatusLabel::qt_metacast(const char *_clname)$/;"	f	class:JobFinishedStatusLabel
qt_metacast	apps/MIFit/jobs/moc/moc_BatchJobManager.cpp	/^void *BatchJobManager::qt_metacast(const char *_clname)$/;"	f	class:BatchJobManager
qt_metacast	apps/MIFit/script/moc/moc_LocalSocketScript.cpp	/^void *LocalSocketScript::qt_metacast(const char *_clname)$/;"	f	class:LocalSocketScript
qt_metacast	apps/MIFit/script/moc/moc_MIFitScriptObject.cpp	/^void *MIFitScriptObject::qt_metacast(const char *_clname)$/;"	f	class:MIFitScriptObject
qt_metacast	apps/MIFit/ui/moc/moc_AddResidueDialog.cpp	/^void *AddResidueDialog::qt_metacast(const char *_clname)$/;"	f	class:AddResidueDialog
qt_metacast	apps/MIFit/ui/moc/moc_Application.cpp	/^void *Application::qt_metacast(const char *_clname)$/;"	f	class:Application
qt_metacast	apps/MIFit/ui/moc/moc_AtomColors.cpp	/^void *AtomColors::qt_metacast(const char *_clname)$/;"	f	class:AtomColors
qt_metacast	apps/MIFit/ui/moc/moc_BValueColors.cpp	/^void *BValueColors::qt_metacast(const char *_clname)$/;"	f	class:BValueColors
qt_metacast	apps/MIFit/ui/moc/moc_ContourOptionsWidget.cpp	/^void *ContourOptionsWidget::qt_metacast(const char *_clname)$/;"	f	class:ContourOptionsWidget
qt_metacast	apps/MIFit/ui/moc/moc_CurrentMIGLWidgetAction.cpp	/^void *CurrentMIGLWidgetAction::qt_metacast(const char *_clname)$/;"	f	class:CurrentMIGLWidgetAction
qt_metacast	apps/MIFit/ui/moc/moc_CursorArea.cpp	/^void *CursorArea::qt_metacast(const char *_clname)$/;"	f	class:CursorArea
qt_metacast	apps/MIFit/ui/moc/moc_CustomJobDialog.cpp	/^void *CustomJobDialog::qt_metacast(const char *_clname)$/;"	f	class:CustomJobDialog
qt_metacast	apps/MIFit/ui/moc/moc_CustomJobPreferences.cpp	/^void *CustomJobPreferences::qt_metacast(const char *_clname)$/;"	f	class:CustomJobPreferences
qt_metacast	apps/MIFit/ui/moc/moc_DictEditCanvas.cpp	/^void *DictEditCanvas::qt_metacast(const char *_clname)$/;"	f	class:DictEditCanvas
qt_metacast	apps/MIFit/ui/moc/moc_DictEditDialog.cpp	/^void *DictEditDialog::qt_metacast(const char *_clname)$/;"	f	class:DictEditDialog
qt_metacast	apps/MIFit/ui/moc/moc_Displaylist.cpp	/^void *Displaylist::qt_metacast(const char *_clname)$/;"	f	class:Displaylist
qt_metacast	apps/MIFit/ui/moc/moc_EMap.cpp	/^void *EMap::qt_metacast(const char *_clname)$/;"	f	class:EMap
qt_metacast	apps/MIFit/ui/moc/moc_EnvironmentPreferences.cpp	/^void *EnvironmentPreferences::qt_metacast(const char *_clname)$/;"	f	class:EnvironmentPreferences
qt_metacast	apps/MIFit/ui/moc/moc_GLFormatDialog.cpp	/^void *GLFormatDialog::qt_metacast(const char *_clname)$/;"	f	class:GLFormatDialog
qt_metacast	apps/MIFit/ui/moc/moc_GLFormatEdit.cpp	/^void *GLFormatEdit::qt_metacast(const char *_clname)$/;"	f	class:GLFormatEdit
qt_metacast	apps/MIFit/ui/moc/moc_GeneralPreferences.cpp	/^void *GeneralPreferences::qt_metacast(const char *_clname)$/;"	f	class:GeneralPreferences
qt_metacast	apps/MIFit/ui/moc/moc_GenericDataDialog.cpp	/^void *GenericDataDialog::qt_metacast(const char *_clname)$/;"	f	class:GenericDataDialog
qt_metacast	apps/MIFit/ui/moc/moc_JobsView.cpp	/^void *JobsView::qt_metacast(const char *_clname)$/;"	f	class:JobsView
qt_metacast	apps/MIFit/ui/moc/moc_LSQFitDialog.cpp	/^void *LSQFitDialog::qt_metacast(const char *_clname)$/;"	f	class:LSQFitDialog
qt_metacast	apps/MIFit/ui/moc/moc_MIBrowsePair.cpp	/^void *MIBrowsePair::qt_metacast(const char *_clname)$/;"	f	class:MIBrowsePair
qt_metacast	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^void *MIColorPickerDlg::qt_metacast(const char *_clname)$/;"	f	class:MIColorPickerDlg
qt_metacast	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^void *MIColorToolButton::qt_metacast(const char *_clname)$/;"	f	class:MIColorToolButton
qt_metacast	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^void *MIGLWidget::qt_metacast(const char *_clname)$/;"	f	class:MIGLWidget
qt_metacast	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^void *ViewController::qt_metacast(const char *_clname)$/;"	f	class:ViewController
qt_metacast	apps/MIFit/ui/moc/moc_MIMainWindow.cpp	/^void *MIMainWindow::qt_metacast(const char *_clname)$/;"	f	class:MIMainWindow
qt_metacast	apps/MIFit/ui/moc/moc_MIQDialog.cpp	/^void *MIQDialog::qt_metacast(const char *_clname)$/;"	f	class:MIQDialog
qt_metacast	apps/MIFit/ui/moc/moc_MIQTreeWidget.cpp	/^void *MIQTreeWidget::qt_metacast(const char *_clname)$/;"	f	class:MIQTreeWidget
qt_metacast	apps/MIFit/ui/moc/moc_ManageCrystals.cpp	/^void *ManageCrystals::qt_metacast(const char *_clname)$/;"	f	class:ManageCrystals
qt_metacast	apps/MIFit/ui/moc/moc_ModelsView.cpp	/^void *ModelsView::qt_metacast(const char *_clname)$/;"	f	class:ModelsView
qt_metacast	apps/MIFit/ui/moc/moc_PhaseFileLoadDialog.cpp	/^void *PhaseFileLoadDialog::qt_metacast(const char *_clname)$/;"	f	class:PhaseFileLoadDialog
qt_metacast	apps/MIFit/ui/moc/moc_PreferencesDialog.cpp	/^void *PreferencesDialog::qt_metacast(const char *_clname)$/;"	f	class:PreferencesDialog
qt_metacast	apps/MIFit/ui/moc/moc_RamaPlot.cpp	/^void *RamaPlotMgr::qt_metacast(const char *_clname)$/;"	f	class:RamaPlotMgr
qt_metacast	apps/MIFit/ui/moc/moc_RefinementOptionsDialog.cpp	/^void *RefinementOptionsDialog::qt_metacast(const char *_clname)$/;"	f	class:RefinementOptionsDialog
qt_metacast	apps/MIFit/ui/moc/moc_SelectCrystal.cpp	/^void *SelectCrystal::qt_metacast(const char *_clname)$/;"	f	class:SelectCrystal
qt_metacast	apps/MIFit/ui/moc/moc_SmilesDialog.cpp	/^void *SmilesDialog::qt_metacast(const char *_clname)$/;"	f	class:SmilesDialog
qt_metacast	apps/MIFit/ui/moc/moc_ViewSyncedPanel.cpp	/^void *ViewSyncedPanel::qt_metacast(const char *_clname)$/;"	f	class:ViewSyncedPanel
qt_metacast	apps/MIFit/ui/moc/moc_graphlib.cpp	/^void *GraphWindow::qt_metacast(const char *_clname)$/;"	f	class:GraphWindow
qt_metacast	apps/MIFit/ui/moc/moc_tools.cpp	/^void *Tools::qt_metacast(const char *_clname)$/;"	f	class:Tools
qt_metacast	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^void *chemlib::MIMoleculeBase::qt_metacast(const char *_clname)$/;"	f	class:chemlib::MIMoleculeBase
qt_metacast	libs/map/moc/moc_CMapHeaderBase.cpp	/^void *CMapHeaderBase::qt_metacast(const char *_clname)$/;"	f	class:CMapHeaderBase
qt_metacast	libs/map/moc/moc_EMapBase.cpp	/^void *EMapBase::qt_metacast(const char *_clname)$/;"	f	class:EMapBase
qt_metacast	libs/molopt/moc/moc_MIMolOpt.cpp	/^void *MIMolOpt::qt_metacast(const char *_clname)$/;"	f	class:MIMolOpt
qt_resource_data	apps/MIFit/ui/qrc_ui.cpp	/^static const unsigned char qt_resource_data[] = {$/;"	v	file:
qt_resource_name	apps/MIFit/ui/qrc_ui.cpp	/^static const unsigned char qt_resource_name[] = {$/;"	v	file:
qt_resource_struct	apps/MIFit/ui/qrc_ui.cpp	/^static const unsigned char qt_resource_struct[] = {$/;"	v	file:
qt_static_metacall	apps/MIFit/core/moc/moc_Annotation.cpp	/^void Annotation::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Annotation
qt_static_metacall	apps/MIFit/core/moc/moc_Molecule.cpp	/^void Molecule::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Molecule
qt_static_metacall	apps/MIFit/core/moc/moc_Stack.cpp	/^void Stack::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Stack
qt_static_metacall	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^void BatchJob::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:BatchJob
qt_static_metacall	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^void JobFinishedStatusLabel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:JobFinishedStatusLabel
qt_static_metacall	apps/MIFit/jobs/moc/moc_BatchJobManager.cpp	/^void BatchJobManager::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:BatchJobManager
qt_static_metacall	apps/MIFit/script/moc/moc_LocalSocketScript.cpp	/^void LocalSocketScript::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:LocalSocketScript
qt_static_metacall	apps/MIFit/script/moc/moc_MIFitScriptObject.cpp	/^void MIFitScriptObject::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIFitScriptObject
qt_static_metacall	apps/MIFit/ui/moc/moc_AddResidueDialog.cpp	/^void AddResidueDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AddResidueDialog
qt_static_metacall	apps/MIFit/ui/moc/moc_Application.cpp	/^void Application::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Application
qt_static_metacall	apps/MIFit/ui/moc/moc_AtomColors.cpp	/^void AtomColors::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:AtomColors
qt_static_metacall	apps/MIFit/ui/moc/moc_BValueColors.cpp	/^void BValueColors::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:BValueColors
qt_static_metacall	apps/MIFit/ui/moc/moc_ContourOptionsWidget.cpp	/^void ContourOptionsWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ContourOptionsWidget
qt_static_metacall	apps/MIFit/ui/moc/moc_CurrentMIGLWidgetAction.cpp	/^void CurrentMIGLWidgetAction::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CurrentMIGLWidgetAction
qt_static_metacall	apps/MIFit/ui/moc/moc_CursorArea.cpp	/^void CursorArea::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CursorArea
qt_static_metacall	apps/MIFit/ui/moc/moc_CustomJobDialog.cpp	/^void CustomJobDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CustomJobDialog
qt_static_metacall	apps/MIFit/ui/moc/moc_CustomJobPreferences.cpp	/^void CustomJobPreferences::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CustomJobPreferences
qt_static_metacall	apps/MIFit/ui/moc/moc_DictEditCanvas.cpp	/^void DictEditCanvas::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DictEditCanvas
qt_static_metacall	apps/MIFit/ui/moc/moc_DictEditDialog.cpp	/^void DictEditDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:DictEditDialog
qt_static_metacall	apps/MIFit/ui/moc/moc_Displaylist.cpp	/^void Displaylist::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Displaylist
qt_static_metacall	apps/MIFit/ui/moc/moc_EMap.cpp	/^void EMap::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EMap
qt_static_metacall	apps/MIFit/ui/moc/moc_EnvironmentPreferences.cpp	/^void EnvironmentPreferences::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EnvironmentPreferences
qt_static_metacall	apps/MIFit/ui/moc/moc_GLFormatDialog.cpp	/^void GLFormatDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GLFormatDialog
qt_static_metacall	apps/MIFit/ui/moc/moc_GLFormatEdit.cpp	/^void GLFormatEdit::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GLFormatEdit
qt_static_metacall	apps/MIFit/ui/moc/moc_GeneralPreferences.cpp	/^void GeneralPreferences::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GeneralPreferences
qt_static_metacall	apps/MIFit/ui/moc/moc_GenericDataDialog.cpp	/^void GenericDataDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GenericDataDialog
qt_static_metacall	apps/MIFit/ui/moc/moc_JobsView.cpp	/^void JobsView::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:JobsView
qt_static_metacall	apps/MIFit/ui/moc/moc_LSQFitDialog.cpp	/^void LSQFitDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:LSQFitDialog
qt_static_metacall	apps/MIFit/ui/moc/moc_MIBrowsePair.cpp	/^void MIBrowsePair::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIBrowsePair
qt_static_metacall	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^void MIColorPickerDlg::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIColorPickerDlg
qt_static_metacall	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^void MIColorToolButton::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIColorToolButton
qt_static_metacall	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^void MIGLWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIGLWidget
qt_static_metacall	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^void ViewController::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ViewController
qt_static_metacall	apps/MIFit/ui/moc/moc_MIMainWindow.cpp	/^void MIMainWindow::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIMainWindow
qt_static_metacall	apps/MIFit/ui/moc/moc_MIQDialog.cpp	/^void MIQDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIQDialog
qt_static_metacall	apps/MIFit/ui/moc/moc_MIQTreeWidget.cpp	/^void MIQTreeWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIQTreeWidget
qt_static_metacall	apps/MIFit/ui/moc/moc_ManageCrystals.cpp	/^void ManageCrystals::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ManageCrystals
qt_static_metacall	apps/MIFit/ui/moc/moc_ModelsView.cpp	/^void ModelsView::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ModelsView
qt_static_metacall	apps/MIFit/ui/moc/moc_PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PhaseFileLoadDialog
qt_static_metacall	apps/MIFit/ui/moc/moc_PreferencesDialog.cpp	/^void PreferencesDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:PreferencesDialog
qt_static_metacall	apps/MIFit/ui/moc/moc_RamaPlot.cpp	/^void RamaPlotMgr::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:RamaPlotMgr
qt_static_metacall	apps/MIFit/ui/moc/moc_RefinementOptionsDialog.cpp	/^void RefinementOptionsDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:RefinementOptionsDialog
qt_static_metacall	apps/MIFit/ui/moc/moc_SelectCrystal.cpp	/^void SelectCrystal::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SelectCrystal
qt_static_metacall	apps/MIFit/ui/moc/moc_SmilesDialog.cpp	/^void SmilesDialog::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SmilesDialog
qt_static_metacall	apps/MIFit/ui/moc/moc_ViewSyncedPanel.cpp	/^void ViewSyncedPanel::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:ViewSyncedPanel
qt_static_metacall	apps/MIFit/ui/moc/moc_graphlib.cpp	/^void GraphWindow::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:GraphWindow
qt_static_metacall	apps/MIFit/ui/moc/moc_tools.cpp	/^void Tools::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Tools
qt_static_metacall	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^void chemlib::MIMoleculeBase::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:chemlib::MIMoleculeBase
qt_static_metacall	libs/map/moc/moc_CMapHeaderBase.cpp	/^void CMapHeaderBase::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:CMapHeaderBase
qt_static_metacall	libs/map/moc/moc_EMapBase.cpp	/^void EMapBase::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:EMapBase
qt_static_metacall	libs/molopt/moc/moc_MIMolOpt.cpp	/^void MIMolOpt::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MIMolOpt
quad	apps/MIFit/ui/GLRenderer.h	/^    std::map<void*, GLUquadric*> quad;$/;"	m	class:GLRenderer
r	apps/MIFit/ui/LSQFitDialog.h	/^    double r[3][3];$/;"	m	class:LSQFitDialog
r	libs/cmtz/ccp4_types.h	/^typedef struct { double r;             \/* radial and *\/$/;"	m	struct:__anon19
r	libs/cmtz/ccp4_types.h	/^typedef struct { double r;             \/* real component and *\/$/;"	m	struct:__anon18
r	libs/map/EMapBase.cpp	/^    real r, i;$/;"	m	struct:__anon48	file:
r	libs/map/MAP_POINT.h	/^    float r;$/;"	m	class:MAP_POINT
r	libs/map/fftlib.cpp	/^    doublereal r, i;$/;"	m	struct:__anon50	file:
r	libs/map/fftlib.cpp	/^    real r, i;$/;"	m	struct:__anon49	file:
r	libs/map/fftlib.cpp	/^    real r;$/;"	m	union:Multitype	file:
r	libs/umtz/library.h	/^typedef struct { double r;             \/* radial and *\/$/;"	m	struct:__anon58
r	libs/umtz/library.h	/^typedef struct { double r;             \/* real component and *\/$/;"	m	struct:__anon57
r00	apps/MIFit/ui/LSQFitDialog.h	/^        float r00;$/;"	m	struct:LSQFitDialog::Data
r01	apps/MIFit/ui/LSQFitDialog.h	/^        float r01;$/;"	m	struct:LSQFitDialog::Data
r02	apps/MIFit/ui/LSQFitDialog.h	/^        float r02;$/;"	m	struct:LSQFitDialog::Data
r10	apps/MIFit/ui/LSQFitDialog.h	/^        float r10;$/;"	m	struct:LSQFitDialog::Data
r11	apps/MIFit/ui/LSQFitDialog.h	/^        float r11;$/;"	m	struct:LSQFitDialog::Data
r12	apps/MIFit/ui/LSQFitDialog.h	/^        float r12;$/;"	m	struct:LSQFitDialog::Data
r20	apps/MIFit/ui/LSQFitDialog.h	/^        float r20;$/;"	m	struct:LSQFitDialog::Data
r21	apps/MIFit/ui/LSQFitDialog.h	/^        float r21;$/;"	m	struct:LSQFitDialog::Data
r22	apps/MIFit/ui/LSQFitDialog.h	/^        float r22;$/;"	m	struct:LSQFitDialog::Data
r2cftk_	libs/map/fftlib.cpp	/^int r2cftk_(integer *n, integer *m, real *x0, real *y0, real *x1, real *y1, integer *dim)$/;"	f
r3cftk_	libs/map/fftlib.cpp	/^int r3cftk_(integer *n, integer *m, real *x0, real *y0, real *x1, real *y1, real *x2, real *y2, integer *dim)$/;"	f
r4cftk_	libs/map/fftlib.cpp	/^int r4cftk_(integer *n, integer *m, real *x0, real *y0, real *x1, real *y1, real *x2, real *y2, real *x3, real *y3, integer *dim)$/;"	f
r5cftk_	libs/map/fftlib.cpp	/^int r5cftk_(integer *n, integer *m, real *x0, real *y0, real *x1, real *y1, real *x2, real *y2, real *x3, real *y3, real *x4, real *y4,$/;"	f
r8cftk_	libs/map/fftlib.cpp	/^int r8cftk_(integer *n, integer *m, real *x0, real *y0, real *x1, real *y1, real *x2, real *y2, real *x3, real *y3, real *x4, real *y4, real *x5,$/;"	f
raddeg	libs/map/fftsub.cpp	/^static double raddeg;$/;"	v	file:
radius	apps/MIFit/core/SurfaceSphere.h	/^    float radius;$/;"	m	class:SurfaceSphere
radius	libs/opengl/Circle.h	/^            float radius;$/;"	m	class:mi::opengl::Circle
radius	libs/opengl/interact/MouseArcBall.h	/^                float radius;$/;"	m	class:mi::opengl::interact::MouseArcBall
radiusLabel	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QLabel *radiusLabel;$/;"	m	class:Ui_ContourOptionsWidget
radiusSlider	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QSlider *radiusSlider;$/;"	m	class:Ui_ContourOptionsWidget
radiusSpinBox	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QSpinBox *radiusSpinBox;$/;"	m	class:Ui_ContourOptionsWidget
radius_type	libs/chemlib/MIAtom.h	/^        unsigned char radius_type() const$/;"	f	class:chemlib::MIAtom
radius_type_	libs/chemlib/MIAtom.h	/^        unsigned char radius_type_;$/;"	m	class:chemlib::MIAtom
ramaDock	apps/MIFit/ui/MIMainWindow.h	/^    QDockWidget *ramaDock;$/;"	m	class:MIMainWindow
ramaPlotMgr	apps/MIFit/ui/MIMainWindow.h	/^    RamaPlotMgr *ramaPlotMgr;$/;"	m	class:MIMainWindow
ramadat	apps/MIFit/ui/RamaPlot.h	/^    RamaDataBase *ramadat[8];$/;"	m	class:RamaPlotMgr
random	libs/math/Quaternion.h	/^        Quaternion<Type> Quaternion<Type>::random(Random &rng)$/;"	f	class:mi::math::Quaternion
random	libs/math/Quaternion.h	/^        Quaternion<Type> Quaternion<Type>::random(Random &rng, double angle)$/;"	f	class:mi::math::Quaternion
randomize	libs/map/sfcalc.cpp	/^int randomize(Residue *res, float maxdev)$/;"	f
rchain	apps/MIFit/core/pdbmatch.cpp	/^    char rchain;$/;"	m	class:hit	file:
rcompare	libs/map/EMapBase.cpp	/^static int rcompare(const void *i, const void *j)$/;"	f	file:
re	libs/map/fft.h	/^    float re;$/;"	m	struct:fcomplex
reRender	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::reRender()$/;"	f	class:DictEditCanvas
read	libs/cmtz/library_file.h	/^  unsigned int read : 1;$/;"	m	struct:CCP4::_CFileStruct
read	libs/opengl/zlib/infutil.h	/^    Bytef *read;        \/* window read pointer *\/$/;"	m	struct:inflate_blocks_state
readLine	libs/util/FileIo.cpp	/^size_t FileIo::readLine(std::string &line)$/;"	f	class:FileIo
readLine	libs/util/StringIo.cpp	/^size_t StringIo::readLine(std::string &line)$/;"	f	class:StringIo
readLowerSequence	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::readLowerSequence(const std::string &file)$/;"	f	class:MIGLWidget
readLowerSequenceWithPrompt	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::readLowerSequenceWithPrompt()$/;"	f	class:MIGLWidget
readSettings	apps/MIFit/ui/GLFormatEdit.cpp	/^QGLFormat GLFormatEdit::readSettings(const QSettings &settings)$/;"	f	class:GLFormatEdit
readViewPointSettings	apps/MIFit/ui/MIGLWidget.cpp	/^    void readViewPointSettings(ViewPoint *viewpoint, ViewPointSettings *viewpointSettings)$/;"	f	namespace:__anon11
read_colors	apps/MIFit/core/RESIDUE.cpp	/^int read_colors(const Residue *res, char *buf, int nbuf)$/;"	f
read_radii	apps/MIFit/core/RESIDUE.cpp	/^int read_radii(const Residue *res, char *buf, int nbuf)$/;"	f
read_scattering_factors	libs/map/sfcalc.cpp	/^int read_scattering_factors(char ***name, int **lname, char ***rname, double **a1, double **a2, double **a3, double **a4,$/;"	f
read_sf	libs/map/fftsub.cpp	/^void read_sf(float *x, int nx, int ny, int nz, float scale, float temp, CREFL *refl, int nrefl, int usepsi)$/;"	f
readers	libs/chemlib/MIMolIOBase.h	/^        ReaderList readers;$/;"	m	class:chemlib::MIMolIOBase
real	libs/map/EMapBase.cpp	/^typedef float real;$/;"	t	file:
real	libs/map/fftlib.cpp	/^typedef float real;$/;"	t	file:
realft_	libs/map/fftlib.cpp	/^int realft_(real *even, real *odd, integer *n, integer *dim)$/;"	f
recentFileActs	apps/MIFit/ui/MIMainWindow.h	/^    QAction *recentFileActs[MaxRecentFiles];$/;"	m	class:MIMainWindow
recenter	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::recenter(Residue *residue, MIAtom *atom)$/;"	f	class:MIGLWidget
red	apps/MIFit/core/ATOMLABEL.cpp	/^unsigned char ATOMLABEL::red() const$/;"	f	class:ATOMLABEL
red	apps/MIFit/core/ATOMLABEL.cpp	/^void ATOMLABEL::red(unsigned char value)$/;"	f	class:ATOMLABEL
red	apps/MIFit/core/Colors.h	/^    unsigned char red;$/;"	m	class:PaletteColor
red_	apps/MIFit/core/ATOMLABEL.h	/^    unsigned char red_;$/;"	m	class:ATOMLABEL
redraw	apps/MIFit/ui/graphlib.cpp	/^void GraphWindow::redraw()$/;"	f	class:GraphWindow
ref	libs/cmtz/mtzdata.h	/^		 float *ref;           \/**< data array *\/$/;"	m	struct:__anon20
refCounts	apps/MIFit/ui/Displaylist.h	/^    static DisplaylistRefCountMap refCounts;$/;"	m	class:Displaylist
refCounts	libs/chemlib/MIAtom.cpp	/^MIAtom::AtomRefCountMap MIAtom::refCounts;$/;"	m	class:chemlib::MIAtom	file:
refCounts	libs/chemlib/MIAtom.h	/^        static AtomRefCountMap refCounts;$/;"	m	class:chemlib::MIAtom
refCounts	libs/chemlib/MIMoleculeBase.cpp	/^MIMoleculeBase::MoleculeRefCountMap MIMoleculeBase::refCounts;$/;"	m	class:chemlib::MIMoleculeBase	file:
refCounts	libs/chemlib/MIMoleculeBase.h	/^        static MoleculeRefCountMap refCounts;$/;"	m	class:chemlib::MIMoleculeBase
refCounts	libs/chemlib/Monomer.cpp	/^Monomer::MonomerRefCountMap Monomer::refCounts;$/;"	m	class:chemlib::Monomer	file:
refCounts	libs/chemlib/Monomer.h	/^        static MonomerRefCountMap refCounts;$/;"	m	class:chemlib::Monomer
refCounts	libs/util/FileIo.cpp	/^FileIo::FilePointerRefCountMap FileIo::refCounts;$/;"	m	class:FileIo	file:
refCounts	libs/util/FileIo.h	/^    static FilePointerRefCountMap refCounts;$/;"	m	class:FileIo
refCounts	libs/util/StringIo.cpp	/^StringIo::DataRefCountMap StringIo::refCounts;$/;"	m	class:StringIo	file:
refCounts	libs/util/StringIo.h	/^    static DataRefCountMap refCounts;$/;"	m	class:StringIo
reference	libs/chemlib/Matrix.h	/^        typedef         T&reference;$/;"	t	class:TNT::Matrix
reference	libs/opengl/RelativeViewpoint.h	/^            Viewpoint *reference;$/;"	m	class:mi::opengl::RelativeViewpoint
refi_menu	apps/MIFit/ui/MIMainWindow.h	/^    QMenu *refi_menu;$/;"	m	class:MIMainWindow
refineConformer	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::refineConformer()$/;"	f	class:MIGLWidget
refineDependantActions	apps/MIFit/ui/MIMainWindow.h	/^    DependantActions *refineDependantActions;$/;"	m	class:MIMainWindow
refineRange	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::refineRange()$/;"	f	class:MIGLWidget
refineRegionAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *refineRegionAction;$/;"	m	class:MIGLWidget
refineResidueAction	apps/MIFit/ui/MIMainWindow.h	/^    QAction *refineResidueAction;$/;"	m	class:MIMainWindow
refineTargetLocked	libs/molopt/MIMolOpt.h	/^    bool refineTargetLocked;$/;"	m	class:MIMolOpt
refineWhileFit	apps/MIFit/ui/RefinementOptionsDialog.h	/^        bool refineWhileFit;$/;"	m	struct:RefinementOptionsDialog::Data
refineWhileFittingCheckBox	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QCheckBox *refineWhileFittingCheckBox;$/;"	m	class:Ui_RefinementOptionsDialog
refl	libs/map/sfcalc.cpp	/^CREFL *refl;$/;"	v
refls	libs/map/EMapBase.h	/^    std::vector<CREFL> refls;$/;"	m	class:EMapBase
refls_stholmax	libs/map/EMapBase.h	/^    float refls_stholmin, refls_stholmax;$/;"	m	class:EMapBase
refls_stholmin	libs/map/EMapBase.h	/^    float refls_stholmin, refls_stholmax;$/;"	m	class:EMapBase
refreshChains	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::refreshChains(Molecule *model)$/;"	f	class:ModelsTree
refs_in_memory	libs/cmtz/mtzdata.h	/^                 int refs_in_memory;   \/**< whether reflections are held in memory *\/$/;"	m	struct:__anon25
region	apps/MIFit/ui/RamaPlot.cpp	/^unsigned int OrigRamaData::region(float phi, float psi)$/;"	f	class:OrigRamaData
region	apps/MIFit/ui/RamaPlot.cpp	/^unsigned int RichardsonRamaData::region(float phi, float psi)$/;"	f	class:RichardsonRamaData
registerReader	libs/chemlib/MIMolIO.cpp	/^void MIMolIOBase::registerReader(Reader *reader)$/;"	f	class:chemlib::MIMolIOBase
registerWriter	libs/chemlib/MIMolIO.cpp	/^void MIMolIOBase::registerWriter(Writer *writer)$/;"	f	class:chemlib::MIMolIOBase
regno	examples/smilesdb.py	/^regno = '12345'$/;"	v
regular_maptype	libs/map/EMapBase.cpp	/^static bool regular_maptype[MAP_TYPE_COUNT] = {true, true, true, false, true, true,$/;"	v	file:
reindexAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *reindexAction_;$/;"	m	class:ModelsTree	file:
reject	apps/MIFit/ui/DictEditDialog.cpp	/^void DictEditDialog::reject()$/;"	f	class:DictEditDialog
relativePoint	libs/math/Grid.h	/^            Point3<Type> relativePoint;$/;"	m	class:mi::math::Grid
relativeStartQuat	libs/opengl/interact/MouseArcBall.h	/^                mi::math::Quaternion<float> relativeStartQuat;$/;"	m	class:mi::opengl::interact::MouseArcBall
relativeToViewpoint	libs/opengl/interact/MouseArcBall.h	/^                mi::opengl::Viewpoint *relativeToViewpoint;$/;"	m	class:mi::opengl::interact::MouseArcBall
relativeToViewpoint	libs/opengl/interact/MouseTranslator.h	/^                Viewpoint *relativeToViewpoint;$/;"	m	class:mi::opengl::interact::MouseTranslator
remove	apps/MIFit/jobs/BatchJob.cpp	/^void JobFinishedStatusLabel::remove()$/;"	f	class:JobFinishedStatusLabel
removeAll	apps/MIFit/core/Stack.cpp	/^void Stack::removeAll(MIAtom *atom)$/;"	f	class:Stack
removeAll	apps/MIFit/core/Stack.cpp	/^void Stack::removeAll(MIMoleculeBase *model)$/;"	f	class:Stack
removeAll	apps/MIFit/core/Stack.cpp	/^void Stack::removeAll(Residue *res)$/;"	f	class:Stack
removeAtom	libs/chemlib/Monomer.h	/^        bool removeAtom(MIAtom *a)$/;"	f	class:chemlib::Monomer
removeAtomAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *removeAtomAction;$/;"	m	class:DictEditCanvas
removeAtomFromPlane	apps/MIFit/ui/DictEditCanvas.cpp	/^bool DictEditCanvas::removeAtomFromPlane(MIAtom *a, bool atomNotToBeDeleted)$/;"	f	class:DictEditCanvas
removeAtomsAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *removeAtomsAction;$/;"	m	class:DictEditCanvas
removeBondAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *removeBondAction;$/;"	m	class:DictEditCanvas
removeButton	apps/MIFit/ui/ui_CustomJobPreferences.h	/^    QPushButton *removeButton;$/;"	m	class:Ui_CustomJobPreferences
removeButton	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QPushButton *removeButton;$/;"	m	class:Ui_LSQFitDialog
removeChiralAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *removeChiralAction;$/;"	m	class:DictEditCanvas
removeFromList	libs/chemlib/Residue.cpp	/^Residue*Residue::removeFromList(Residue *toResidue)$/;"	f	class:chemlib::Residue
removeHydrogensAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *removeHydrogensAction;$/;"	m	class:DictEditCanvas
removePlaneAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *removePlaneAction;$/;"	m	class:DictEditCanvas
removePlaneAtomAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *removePlaneAtomAction;$/;"	m	class:DictEditCanvas
removePlaneAtomsAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *removePlaneAtomsAction;$/;"	m	class:DictEditCanvas
removeType	libs/chemlib/MIAtom.h	/^        void removeType(unsigned int type)$/;"	f	class:chemlib::MIAtom
renameAtomAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *renameAtomAction;$/;"	m	class:DictEditCanvas
renameResidueAtomsToUnique	libs/chemlib/atom_util.cpp	/^void renameResidueAtomsToUnique(const Monomer *res)$/;"	f	namespace:chemlib
render	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.cpp	/^void CMolwViewAnnotationPickingRenderable::render()$/;"	f	class:CMolwViewAnnotationPickingRenderable
render	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.cpp	/^void CMolwViewAnnotationRenderable::render()$/;"	f	class:CMolwViewAnnotationRenderable
render	apps/MIFit/ui/CMolwViewAtomPickingRenderable.cpp	/^void CMolwViewAtomPickingRenderable::render()$/;"	f	class:CMolwViewAtomPickingRenderable
render	apps/MIFit/ui/CMolwViewAtomPickingRenderable.cpp	/^void CMolwViewAtomRenderable::render()$/;"	f	class:CMolwViewAtomRenderable
render	apps/MIFit/ui/CMolwViewBondPickingRenderable.cpp	/^void CMolwViewBondPickingRenderable::render()$/;"	f	class:CMolwViewBondPickingRenderable
render	apps/MIFit/ui/CMolwViewBondPickingRenderable.cpp	/^void CMolwViewBondRenderable::render()$/;"	f	class:CMolwViewBondRenderable
render	apps/MIFit/ui/CMolwViewScene.cpp	/^void CMolwViewScene::render()$/;"	f	class:CMolwViewScene
render	apps/MIFit/ui/CMolwViewSlabPickingRenderable.cpp	/^void CMolwViewSlabPickingRenderable::render()$/;"	f	class:CMolwViewSlabPickingRenderable
render	apps/MIFit/ui/CMolwViewSlabPickingRenderable.cpp	/^void CMolwViewSlabRenderable::render()$/;"	f	class:CMolwViewSlabRenderable
render	apps/MIFit/ui/DictEditAnglePickingRenderable.cpp	/^void DictEditAnglePickingRenderable::render()$/;"	f	class:DictEditAnglePickingRenderable
render	apps/MIFit/ui/DictEditAnglePickingRenderable.cpp	/^void DictEditAngleRenderable::render()$/;"	f	class:DictEditAngleRenderable
render	apps/MIFit/ui/DictEditAnnotationPickingRenderable.cpp	/^void DictEditAnnotationPickingRenderable::render()$/;"	f	class:DictEditAnnotationPickingRenderable
render	apps/MIFit/ui/DictEditAnnotationPickingRenderable.cpp	/^void DictEditAnnotationRenderable::render()$/;"	f	class:DictEditAnnotationRenderable
render	apps/MIFit/ui/DictEditAtomPickingRenderable.cpp	/^void DictEditAtomPickingRenderable::render()$/;"	f	class:DictEditAtomPickingRenderable
render	apps/MIFit/ui/DictEditAtomPickingRenderable.cpp	/^void DictEditAtomRenderable::render()$/;"	f	class:DictEditAtomRenderable
render	apps/MIFit/ui/DictEditBondPickingRenderable.cpp	/^void DictEditBondPickingRenderable::render()$/;"	f	class:DictEditBondPickingRenderable
render	apps/MIFit/ui/DictEditBondPickingRenderable.cpp	/^void DictEditBondRenderable::render()$/;"	f	class:DictEditBondRenderable
render	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::render()$/;"	f	class:DictEditCanvas
render	apps/MIFit/ui/DictEditScene.cpp	/^void DictEditScene::render()$/;"	f	class:DictEditScene
render	libs/opengl/Arc.cpp	/^void Arc::render()$/;"	f	class:mi::opengl::Arc
render	libs/opengl/Axes.cpp	/^void Axes::render()$/;"	f	class:mi::opengl::Axes
render	libs/opengl/Camera.cpp	/^void Camera::render()$/;"	f	class:mi::opengl::Camera
render	libs/opengl/Circle.cpp	/^void Circle::render()$/;"	f	class:mi::opengl::Circle
render	libs/opengl/Frustum.cpp	/^void Frustum::render(Viewport &viewport)$/;"	f	class:mi::opengl::Frustum
render	libs/opengl/Frustum.cpp	/^void Frustum::render(Viewport &viewport, float offset)$/;"	f	class:mi::opengl::Frustum
render	libs/opengl/Light.cpp	/^void Light::render()$/;"	f	class:mi::opengl::Light
render	libs/opengl/Object3d.cpp	/^void Object3d::render()$/;"	f	class:mi::opengl::Object3d
render	libs/opengl/Sphere.cpp	/^void Sphere::render()$/;"	f	class:mi::opengl::Sphere
render	libs/opengl/StereoView.cpp	/^void StereoView::render(Renderable &renderable)$/;"	f	class:mi::opengl::StereoView
render	libs/opengl/StereoView.cpp	/^void StereoView::render(Scene &scene)$/;"	f	class:mi::opengl::StereoView
render	libs/opengl/Viewpoint.cpp	/^void Viewpoint::render()$/;"	f	class:mi::opengl::Viewpoint
render	libs/opengl/Viewport.cpp	/^void Viewport::render()$/;"	f	class:mi::opengl::Viewport
render	libs/opengl/interact/ArcBallFeedback.cpp	/^void ArcBallFeedback::render()$/;"	f	class:mi::opengl::interact::ArcBallFeedback
render	libs/opengl/interact/TargetFeedback.cpp	/^void TargetFeedback::render()$/;"	f	class:mi::opengl::interact::TargetFeedback
render	libs/opengl/interact/TranslationFeedback.cpp	/^void TranslationFeedback::render()$/;"	f	class:mi::opengl::interact::TranslationFeedback
renderFog	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::renderFog()$/;"	f	class:GLRenderer
renderLight	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::renderLight()$/;"	f	class:GLRenderer
renderLineThicknessMenu_	apps/MIFit/ui/MIMainWindow.h	/^    QMenu *renderLineThicknessMenu_;$/;"	m	class:MIMainWindow
renderOverlay	apps/MIFit/ui/CMolwViewScene.cpp	/^void CMolwViewScene::renderOverlay()$/;"	f	class:CMolwViewScene
renderOverlay	apps/MIFit/ui/DictEditScene.cpp	/^void DictEditScene::renderOverlay()$/;"	f	class:DictEditScene
renderText	libs/opengl/Text.cpp	/^void Text::renderText(float x, float y, const QString &text)$/;"	f	class:mi::opengl::Text
render_menu	apps/MIFit/ui/MIMainWindow.h	/^    QMenu *render_menu;$/;"	m	class:MIMainWindow
renderer	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.h	/^    GLRenderer *renderer;$/;"	m	class:CMolwViewAnnotationPickingRenderable
renderer	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.h	/^    GLRenderer *renderer;$/;"	m	class:CMolwViewAnnotationRenderable
renderer	apps/MIFit/ui/CMolwViewAtomPickingRenderable.h	/^    GLRenderer *renderer;$/;"	m	class:CMolwViewAtomPickingRenderable
renderer	apps/MIFit/ui/CMolwViewAtomPickingRenderable.h	/^    GLRenderer *renderer;$/;"	m	class:CMolwViewAtomRenderable
renderer	apps/MIFit/ui/CMolwViewBondPickingRenderable.h	/^    GLRenderer *renderer;$/;"	m	class:CMolwViewBondPickingRenderable
renderer	apps/MIFit/ui/CMolwViewBondPickingRenderable.h	/^    GLRenderer *renderer;$/;"	m	class:CMolwViewBondRenderable
renderer	apps/MIFit/ui/CMolwViewScene.h	/^    GLRenderer *renderer;$/;"	m	class:CMolwViewScene
renderer	apps/MIFit/ui/DictEditAnglePickingRenderable.h	/^    GLRenderer *renderer;$/;"	m	class:DictEditAnglePickingRenderable
renderer	apps/MIFit/ui/DictEditAnglePickingRenderable.h	/^    GLRenderer *renderer;$/;"	m	class:DictEditAngleRenderable
renderer	apps/MIFit/ui/DictEditAnnotationPickingRenderable.h	/^    GLRenderer *renderer;$/;"	m	class:DictEditAnnotationPickingRenderable
renderer	apps/MIFit/ui/DictEditAnnotationPickingRenderable.h	/^    GLRenderer *renderer;$/;"	m	class:DictEditAnnotationRenderable
renderer	apps/MIFit/ui/DictEditAtomPickingRenderable.h	/^    GLRenderer *renderer;$/;"	m	class:DictEditAtomPickingRenderable
renderer	apps/MIFit/ui/DictEditAtomPickingRenderable.h	/^    GLRenderer *renderer;$/;"	m	class:DictEditAtomRenderable
renderer	apps/MIFit/ui/DictEditBondPickingRenderable.h	/^    GLRenderer *renderer;$/;"	m	class:DictEditBondPickingRenderable
renderer	apps/MIFit/ui/DictEditBondPickingRenderable.h	/^    GLRenderer *renderer;$/;"	m	class:DictEditBondRenderable
renderer	apps/MIFit/ui/DictEditScene.h	/^    GLRenderer *renderer;$/;"	m	class:DictEditScene
renumberChain	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::renumberChain(Residue *chain, int n)$/;"	f	class:chemlib::MIMoleculeBase
replaceAndFitAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *replaceAndFitAction;$/;"	m	class:MIGLWidget
replaceAndFitResidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::replaceAndFitResidue(const char *residueType)$/;"	f	class:MIGLWidget
replaceAndFitResidueWithPrompt	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::replaceAndFitResidueWithPrompt()$/;"	f	class:MIGLWidget
replaceResidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::replaceResidue(const char *residueType)$/;"	f	class:MIGLWidget
replaceResidueWithPrompt	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::replaceResidueWithPrompt()$/;"	f	class:MIGLWidget
res	libs/chemlib/ANGLE.h	/^        const Residue *res;$/;"	m	class:chemlib::ANGLE
res	libs/chemlib/Constraint.h	/^        const Monomer *res;               \/\/The residue the bond is from$/;"	m	class:chemlib::Angle
res	libs/chemlib/MIMolInfo.h	/^        Residue *res;                   \/\/ could make a vector, prob not worth the trouble$/;"	m	class:chemlib::MIMolInfo
res	libs/chemlib/PLANE.h	/^        const Residue *res;$/;"	m	class:chemlib::PLANE
res	libs/chemlib/TORSION.h	/^        const Residue *res;$/;"	m	class:chemlib::TORSION
res	libs/ligand/LigDictEntry.h	/^    chemlib::Residue *res;$/;"	m	class:LigDictEntry
rescalc	libs/map/rescalc.cpp	/^float rescalc(int ih, int ik, int il, float A, float B, float C, float ALPHA, float BETA, float GAMMA, int init)$/;"	f
reserveAtoms	libs/chemlib/Monomer.h	/^        void reserveAtoms(int natoms)$/;"	f	class:chemlib::Monomer
reserved	libs/opengl/zlib/zlib.h	/^    uLong reserved;     \/* reserved for future use *\/$/;"	m	struct:z_stream_s
reset	apps/MIFit/ui/GLFormatEdit.cpp	/^void GLFormatEdit::reset()$/;"	f	class:GLFormatEdit
reset	libs/math/MersenneTwister.h	/^            void reset()$/;"	f	class:mi::math::MersenneTwister
reset	libs/opengl/Axis.cpp	/^void Axis::reset()$/;"	f	class:mi::opengl::Axis
resetButton	apps/MIFit/ui/ui_ManageCrystals.h	/^    QPushButton *resetButton;$/;"	m	class:Ui_ManageCrystals
resetButton	apps/MIFit/ui/ui_dicteditorform.h	/^    QPushButton *resetButton;$/;"	m	class:Ui_DictEditorForm
resetDelta	libs/chemlib/MIAtom.h	/^        void resetDelta()$/;"	f	class:chemlib::MIAtom
resetGaussian	libs/math/Random.h	/^            void resetGaussian()$/;"	f	class:mi::math::Random
resetPushButton	apps/MIFit/ui/ui_AtomColors.h	/^    QPushButton *resetPushButton;$/;"	m	class:Ui_AtomColors
resetToQtDefault	apps/MIFit/ui/GLFormatDialog.cpp	/^void GLFormatDialog::resetToQtDefault()$/;"	f	class:GLFormatDialog
resetToQtDefault	apps/MIFit/ui/ui_GLFormatDialog.h	/^    QPushButton *resetToQtDefault;$/;"	m	class:Ui_GLFormatDialog
resetView	libs/opengl/StereoView.cpp	/^void StereoView::resetView(int flags)$/;"	f	class:mi::opengl::StereoView
resetWeight	libs/chemlib/MIAtom.h	/^        void resetWeight()$/;"	f	class:chemlib::MIAtom
resetatomderivatives	libs/molopt/MIMolOpt.cpp	/^int MIMolOpt::resetatomderivatives(MIAtom *atoms[], int natoms)$/;"	f	class:MIMolOpt
resetderivatives	libs/conflib/LigRefiner.cpp	/^int LigRefiner::resetderivatives()$/;"	f	class:LigRefiner
resetderivatives	libs/molopt/MIMolOpt.cpp	/^int MIMolOpt::resetderivatives()$/;"	f	class:MIMolOpt
resid	apps/MIFit/core/RESIDUE.cpp	/^string resid(const Residue *res)$/;"	f
residue	apps/MIFit/core/ATOMLABEL.cpp	/^const Monomer *ATOMLABEL::residue() const$/;"	f	class:ATOMLABEL
residue	apps/MIFit/core/Stack.h	/^    chemlib::Residue *residue;$/;"	m	struct:__anon3
residue	apps/MIFit/ui/ModelsView.cpp	/^    Residue *residue;$/;"	m	class:AtomsTree	file:
residue	apps/MIFit/ui/MoleculeXmlHandler.h	/^    chemlib::Residue *residue;$/;"	m	class:MoleculeXmlHandler
residue	apps/MIFit/ui/TreeData.h	/^    chemlib::Residue *residue;$/;"	m	class:TreeData
residue	libs/chemlib/DictResidue.cpp	/^Residue*DictResidue::residue()$/;"	f	class:DictResidue
residue	libs/chemlib/DictResidue.cpp	/^const Residue*DictResidue::residue() const$/;"	f	class:DictResidue
residueList	apps/MIFit/ui/MoleculeXmlHandler.h	/^    chemlib::Residue *residueList;$/;"	m	class:MoleculeXmlHandler
residueOffset	apps/MIFit/ui/AddResidueDialog.cpp	/^AddResidueDialog::ResidueOffset AddResidueDialog::residueOffset() const$/;"	f	class:AddResidueDialog
residueToChainData	apps/MIFit/ui/ModelsView.cpp	/^    ResidueToDataMap residueToChainData;$/;"	m	class:ModelsTree	file:
residueToData	apps/MIFit/ui/ModelsView.cpp	/^    ResidueToDataMap residueToData;$/;"	m	class:ResiduesTree	file:
residueType	apps/MIFit/ui/AddResidueDialog.cpp	/^QString AddResidueDialog::residueType() const$/;"	f	class:AddResidueDialog
residueType	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QComboBox *residueType;$/;"	m	class:Ui_AddResidueDialog
residueTypeLabel	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QLabel *residueTypeLabel;$/;"	m	class:Ui_AddResidueDialog
residue_	apps/MIFit/core/ATOMLABEL.h	/^    const chemlib::Monomer *residue_;$/;"	m	class:ATOMLABEL
residue_from_atom	libs/chemlib/mol_util.cpp	/^Residue *residue_from_atom(Residue *res, MIAtom *a)$/;"	f	namespace:chemlib
residue_from_name	libs/chemlib/mol_util.cpp	/^Residue *residue_from_name(Residue *res, const char *resid, const char c)$/;"	f	namespace:chemlib
residues	libs/chemlib/Ligand.h	/^        std::vector<Monomer*> residues; \/\/Residue sequence$/;"	m	class:chemlib::Ligand
residues	libs/chemlib/MIMoleculeBase.h	/^        Residue *residues;$/;"	m	class:chemlib::MIMoleculeBase
residuesBegin	libs/chemlib/MIMoleculeBase.cpp	/^ResidueListIterator MIMoleculeBase::residuesBegin()$/;"	f	class:chemlib::MIMoleculeBase
residuesDeleted	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::residuesDeleted(MIMoleculeBase *model)$/;"	f	class:ModelsTree
residuesDeleted	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^void chemlib::MIMoleculeBase::residuesDeleted(chemlib::MIMoleculeBase * _t1)$/;"	f	class:chemlib::MIMoleculeBase
residuesEnd	libs/chemlib/MIMoleculeBase.cpp	/^ResidueListIterator MIMoleculeBase::residuesEnd()$/;"	f	class:chemlib::MIMoleculeBase
residuesToBeDeleted	apps/MIFit/core/Stack.cpp	/^void Stack::residuesToBeDeleted(MIMoleculeBase *mol, std::vector<Residue*> &residues)$/;"	f	class:Stack
residuesToBeDeleted	apps/MIFit/ui/Displaylist.cpp	/^void Displaylist::residuesToBeDeleted(MIMoleculeBase *mol, std::vector<Residue*> &residues)$/;"	f	class:Displaylist
residuesToBeDeleted	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::residuesToBeDeleted(MIMoleculeBase*, std::vector<Residue*> &residues)$/;"	f	class:ModelsTree
residuesToBeDeleted	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::residuesToBeDeleted(MIMoleculeBase*, std::vector<Residue*> &residues)$/;"	f	class:ResiduesTree
residuesToBeDeleted	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^void chemlib::MIMoleculeBase::residuesToBeDeleted(chemlib::MIMoleculeBase * _t1, std::vector<chemlib::Residue*> & _t2)$/;"	f	class:chemlib::MIMoleculeBase
residuesToBeDeleted	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::residuesToBeDeleted(MIMoleculeBase *mol, std::vector<Residue*> &residues)$/;"	f	class:MIMolOpt
residuesTree	apps/MIFit/ui/ModelsView.cpp	/^    ResiduesTree *residuesTree;$/;"	m	class:ModelsTree	file:
residuesTree	apps/MIFit/ui/ModelsView.cpp	/^    ResiduesTree *residuesTree;$/;"	m	class:ModelsViewPanel	file:
resizeEvent	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::resizeEvent(QResizeEvent *evt)$/;"	f	class:DictEditCanvas
resizeEvent	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::resizeEvent(QResizeEvent *evt)$/;"	f	class:MIGLWidget
resizeEvent	apps/MIFit/ui/ModelsView.cpp	/^void ModelsView::resizeEvent(QResizeEvent *event)$/;"	f	class:ModelsView
resizeGL	apps/MIFit/ui/GLOverviewCanvas.cpp	/^void GLOverviewCanvas::resizeGL(int width, int height)$/;"	f	class:GLOverviewCanvas
resizeGL	apps/MIFit/ui/graphlib.cpp	/^void GraphWindow::resizeGL(int w, int h)$/;"	f	class:GraphWindow
resmax	apps/MIFit/ui/PhaseFileLoadDialog.h	/^        float resmax;$/;"	m	struct:PhaseFileLoadDialog::Data
resmax	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QDoubleSpinBox *resmax;$/;"	m	class:Ui_PhaseFileLoadDialog
resmax	libs/cmtz/mtzdata.h	/^                 float resmax;         \/**< High resolution limit *\/$/;"	m	struct:__anon22
resmax	libs/map/CMapHeaderBase.h	/^    float resmax, resmin;$/;"	m	class:CMapHeaderBase
resmax_out	libs/cmtz/mtzdata.h	/^                 float resmax_out;     \/**< output file max res *\/$/;"	m	struct:__anon25
resmax_userset	apps/MIFit/ui/PhaseFileLoadDialog.h	/^    bool resmax_userset;$/;"	m	class:PhaseFileLoadDialog
resmin	apps/MIFit/ui/PhaseFileLoadDialog.h	/^        float resmin;$/;"	m	struct:PhaseFileLoadDialog::Data
resmin	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QDoubleSpinBox *resmin;$/;"	m	class:Ui_PhaseFileLoadDialog
resmin	libs/cmtz/mtzdata.h	/^                 float resmin;         \/**< Low resolution limit *\/$/;"	m	struct:__anon22
resmin	libs/map/CMapHeaderBase.h	/^    float resmax, resmin;$/;"	m	class:CMapHeaderBase
resmin_out	libs/cmtz/mtzdata.h	/^                 float resmin_out;     \/**< output file min res *\/$/;"	m	struct:__anon25
resmin_userset	apps/MIFit/ui/PhaseFileLoadDialog.h	/^    bool resmin_userset;$/;"	m	class:PhaseFileLoadDialog
resname	libs/chemlib/MIMolDictionary.cpp	/^    char resname[MAXNAME];$/;"	m	class:chemlib::ANGLEDICT	file:
resname	libs/chemlib/MIMolDictionary.cpp	/^    char resname[MAXNAME];$/;"	m	class:chemlib::BondDICT	file:
resname	libs/chemlib/MIMolDictionary.cpp	/^    char resname[MAXNAME];$/;"	m	class:chemlib::SYNONYM	file:
resnum	libs/chemlib/itertest.cxx	/^    int resnum;$/;"	m	class:RESIDUE	file:
restrainCAsCheckBox	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QCheckBox *restrainCAsCheckBox;$/;"	m	class:Ui_RefinementOptionsDialog
restrainEndsCheckBox	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QCheckBox *restrainEndsCheckBox;$/;"	m	class:Ui_RefinementOptionsDialog
restylize	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::restylize()$/;"	f	class:ModelsTree
restype	libs/chemlib/CHIRALDICT.h	/^        char restype[MAXNAME];$/;"	m	class:chemlib::CHIRALDICT
restype	libs/chemlib/PLANE.h	/^        char restype[MAXNAME];$/;"	m	class:chemlib::PLANEDICT
restype	libs/chemlib/TORSION.h	/^        char restype[MAXNAME];$/;"	m	class:chemlib::TORSDICT
result	apps/MIFit/ui/MIColorPickerDlg.h	/^    int result;$/;"	m	class:MIColorPickerDlg
retranslateUi	apps/MIFit/ui/ui_AddResidueDialog.h	/^    void retranslateUi(QDialog *AddResidueDialog)$/;"	f	class:Ui_AddResidueDialog
retranslateUi	apps/MIFit/ui/ui_AtomColors.h	/^    void retranslateUi(QDialog *AtomColors)$/;"	f	class:Ui_AtomColors
retranslateUi	apps/MIFit/ui/ui_BValueColors.h	/^    void retranslateUi(QDialog *BValueColors)$/;"	f	class:Ui_BValueColors
retranslateUi	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    void retranslateUi(QWidget *ContourOptions)$/;"	f	class:Ui_ContourOptionsWidget
retranslateUi	apps/MIFit/ui/ui_CustomJobDialog.h	/^    void retranslateUi(QDialog *CustomJobDialog)$/;"	f	class:Ui_CustomJobDialog
retranslateUi	apps/MIFit/ui/ui_CustomJobPreferences.h	/^    void retranslateUi(QWidget *CustomJobPreferences)$/;"	f	class:Ui_CustomJobPreferences
retranslateUi	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    void retranslateUi(QWidget *EnvironmentPreferences)$/;"	f	class:Ui_EnvironmentPreferences
retranslateUi	apps/MIFit/ui/ui_GLFormatDialog.h	/^    void retranslateUi(QDialog *GLFormatDialog)$/;"	f	class:Ui_GLFormatDialog
retranslateUi	apps/MIFit/ui/ui_GLFormatEdit.h	/^    void retranslateUi(QDialog *GLFormatEdit)$/;"	f	class:Ui_GLFormatEdit
retranslateUi	apps/MIFit/ui/ui_GeneralPreferences.h	/^    void retranslateUi(QWidget *GeneralPreferences)$/;"	f	class:Ui_GeneralPreferences
retranslateUi	apps/MIFit/ui/ui_LSQFitDialog.h	/^    void retranslateUi(QDialog *LSQFitDialog)$/;"	f	class:Ui_LSQFitDialog
retranslateUi	apps/MIFit/ui/ui_ManageCrystals.h	/^    void retranslateUi(QDialog *ManageCrystals)$/;"	f	class:Ui_ManageCrystals
retranslateUi	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    void retranslateUi(QDialog *PhaseFileLoadDialog)$/;"	f	class:Ui_PhaseFileLoadDialog
retranslateUi	apps/MIFit/ui/ui_PreferencesDialog.h	/^    void retranslateUi(QDialog *PreferencesDialog)$/;"	f	class:Ui_PreferencesDialog
retranslateUi	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    void retranslateUi(QDialog *RefinementOptionsDialog)$/;"	f	class:Ui_RefinementOptionsDialog
retranslateUi	apps/MIFit/ui/ui_SelectCrystal.h	/^    void retranslateUi(QDialog *SelectCrystal)$/;"	f	class:Ui_SelectCrystal
retranslateUi	apps/MIFit/ui/ui_SmilesDialog.h	/^    void retranslateUi(QDialog *SmilesDialog)$/;"	f	class:Ui_SmilesDialog
retranslateUi	apps/MIFit/ui/ui_dicteditorform.h	/^    void retranslateUi(QWidget *DictEditorForm)$/;"	f	class:Ui_DictEditorForm
revertPushButton	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QPushButton *revertPushButton;$/;"	m	class:Ui_ContourOptionsWidget
revertToSavedModel	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::revertToSavedModel(int choice)$/;"	f	class:MIGLWidget
revertToSavedModelWithPrompt	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::revertToSavedModelWithPrompt()$/;"	f	class:MIGLWidget
rewind	libs/util/FileIo.cpp	/^void FileIo::rewind()$/;"	f	class:FileIo
rewind	libs/util/StringIo.cpp	/^void StringIo::rewind()$/;"	f	class:StringIo
rgb	apps/MIFit/core/Helix.h	/^    unsigned char rgb[4];$/;"	m	class:Helix
rgbSize	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QSpinBox *rgbSize;$/;"	m	class:Ui_GLFormatEdit
rgba	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QCheckBox *rgba;$/;"	m	class:Ui_GLFormatEdit
rho	libs/map/PEAK.h	/^    int rho;$/;"	m	struct:peak
rhocoefs	libs/map/EMapBase.cpp	/^static void rhocoefs(MIAtom *atom, Residue *res, int nx, int ny, int nz, CMapHeaderBase *mh, float *ae, float *be, float *boxrad, float *dmax)$/;"	f	file:
ribbon_coloring	apps/MIFit/core/Molecule.h	/^    int ribbon_coloring;$/;"	m	class:Molecule
ribbon_flip	apps/MIFit/core/RibbonSpan.cpp	/^static bool ribbon_flip[4] = {false, false, false, false}; \/\/ Control for ribbon flipping to avoid 180 twists$/;"	v	file:
ribbon_norms	apps/MIFit/core/RibbonSpan.h	/^    double ribbon_norms[RibbonSpan_MP*RibbonSpan_MS][3];$/;"	m	class:RibbonSpan
ribbon_pts	apps/MIFit/core/RibbonSpan.h	/^    double ribbon_pts[RibbonSpan_MP*RibbonSpan_MS][3];$/;"	m	class:RibbonSpan
ribbonatoms	apps/MIFit/core/Molecule.h	/^    std::deque<chemlib::MIAtom*> ribbonatoms;$/;"	m	class:Molecule
richardson_general_allowed_sizes	apps/MIFit/ui/rama.h	/^unsigned int richardson_general_allowed_sizes[] = {$/;"	v
richardson_general_allowed_x	apps/MIFit/ui/rama.h	/^float *richardson_general_allowed_x[] = {$/;"	v
richardson_general_allowed_x1	apps/MIFit/ui/rama.h	/^float richardson_general_allowed_x1[] =  {$/;"	v
richardson_general_allowed_x2	apps/MIFit/ui/rama.h	/^float richardson_general_allowed_x2[] =  {$/;"	v
richardson_general_allowed_x3	apps/MIFit/ui/rama.h	/^float richardson_general_allowed_x3[] =  {$/;"	v
richardson_general_allowed_x4	apps/MIFit/ui/rama.h	/^float richardson_general_allowed_x4[] =  {$/;"	v
richardson_general_allowed_x5	apps/MIFit/ui/rama.h	/^float richardson_general_allowed_x5[] =  {$/;"	v
richardson_general_allowed_x6	apps/MIFit/ui/rama.h	/^float richardson_general_allowed_x6[] =  {$/;"	v
richardson_general_allowed_x7	apps/MIFit/ui/rama.h	/^float richardson_general_allowed_x7[] =  {$/;"	v
richardson_general_allowed_y	apps/MIFit/ui/rama.h	/^float *richardson_general_allowed_y[] = {$/;"	v
richardson_general_allowed_y1	apps/MIFit/ui/rama.h	/^float richardson_general_allowed_y1[] =  {$/;"	v
richardson_general_allowed_y2	apps/MIFit/ui/rama.h	/^float richardson_general_allowed_y2[] =  {$/;"	v
richardson_general_allowed_y3	apps/MIFit/ui/rama.h	/^float richardson_general_allowed_y3[] =  {$/;"	v
richardson_general_allowed_y4	apps/MIFit/ui/rama.h	/^float richardson_general_allowed_y4[] =  {$/;"	v
richardson_general_allowed_y5	apps/MIFit/ui/rama.h	/^float richardson_general_allowed_y5[] =  {$/;"	v
richardson_general_allowed_y6	apps/MIFit/ui/rama.h	/^float richardson_general_allowed_y6[] =  {$/;"	v
richardson_general_allowed_y7	apps/MIFit/ui/rama.h	/^float richardson_general_allowed_y7[] =  {$/;"	v
richardson_general_data	apps/MIFit/ui/rama.h	/^const char *richardson_general_data[180] = {$/;"	v
richardson_general_preferred_sizes	apps/MIFit/ui/rama.h	/^unsigned int richardson_general_preferred_sizes[] = {$/;"	v
richardson_general_preferred_x	apps/MIFit/ui/rama.h	/^float *richardson_general_preferred_x[] = {$/;"	v
richardson_general_preferred_x1	apps/MIFit/ui/rama.h	/^float richardson_general_preferred_x1[] =  {$/;"	v
richardson_general_preferred_x2	apps/MIFit/ui/rama.h	/^float richardson_general_preferred_x2[] =  {$/;"	v
richardson_general_preferred_x3	apps/MIFit/ui/rama.h	/^float richardson_general_preferred_x3[] =  {$/;"	v
richardson_general_preferred_x4	apps/MIFit/ui/rama.h	/^float richardson_general_preferred_x4[] =  {$/;"	v
richardson_general_preferred_y	apps/MIFit/ui/rama.h	/^float *richardson_general_preferred_y[] = {$/;"	v
richardson_general_preferred_y1	apps/MIFit/ui/rama.h	/^float richardson_general_preferred_y1[] =  {$/;"	v
richardson_general_preferred_y2	apps/MIFit/ui/rama.h	/^float richardson_general_preferred_y2[] =  {$/;"	v
richardson_general_preferred_y3	apps/MIFit/ui/rama.h	/^float richardson_general_preferred_y3[] =  {$/;"	v
richardson_general_preferred_y4	apps/MIFit/ui/rama.h	/^float richardson_general_preferred_y4[] =  {$/;"	v
richardson_gly_allowed_sizes	apps/MIFit/ui/rama.h	/^unsigned int richardson_gly_allowed_sizes[] = {$/;"	v
richardson_gly_allowed_x	apps/MIFit/ui/rama.h	/^float *richardson_gly_allowed_x[] = {$/;"	v
richardson_gly_allowed_x1	apps/MIFit/ui/rama.h	/^float richardson_gly_allowed_x1[] =  {$/;"	v
richardson_gly_allowed_x2	apps/MIFit/ui/rama.h	/^float richardson_gly_allowed_x2[] =  {$/;"	v
richardson_gly_allowed_x3	apps/MIFit/ui/rama.h	/^float richardson_gly_allowed_x3[] =  {$/;"	v
richardson_gly_allowed_x4	apps/MIFit/ui/rama.h	/^float richardson_gly_allowed_x4[] =  {$/;"	v
richardson_gly_allowed_y	apps/MIFit/ui/rama.h	/^float *richardson_gly_allowed_y[] = {$/;"	v
richardson_gly_allowed_y1	apps/MIFit/ui/rama.h	/^float richardson_gly_allowed_y1[] =  {$/;"	v
richardson_gly_allowed_y2	apps/MIFit/ui/rama.h	/^float richardson_gly_allowed_y2[] =  {$/;"	v
richardson_gly_allowed_y3	apps/MIFit/ui/rama.h	/^float richardson_gly_allowed_y3[] =  {$/;"	v
richardson_gly_allowed_y4	apps/MIFit/ui/rama.h	/^float richardson_gly_allowed_y4[] =  {$/;"	v
richardson_gly_data	apps/MIFit/ui/rama.h	/^const char *richardson_gly_data[180] = {$/;"	v
richardson_gly_preferred_sizes	apps/MIFit/ui/rama.h	/^unsigned int richardson_gly_preferred_sizes[] = {$/;"	v
richardson_gly_preferred_x	apps/MIFit/ui/rama.h	/^float *richardson_gly_preferred_x[] = {$/;"	v
richardson_gly_preferred_x1	apps/MIFit/ui/rama.h	/^float richardson_gly_preferred_x1[] =  {$/;"	v
richardson_gly_preferred_x2	apps/MIFit/ui/rama.h	/^float richardson_gly_preferred_x2[] =  {$/;"	v
richardson_gly_preferred_x3	apps/MIFit/ui/rama.h	/^float richardson_gly_preferred_x3[] =  {$/;"	v
richardson_gly_preferred_x4	apps/MIFit/ui/rama.h	/^float richardson_gly_preferred_x4[] =  {$/;"	v
richardson_gly_preferred_x5	apps/MIFit/ui/rama.h	/^float richardson_gly_preferred_x5[] =  {$/;"	v
richardson_gly_preferred_x6	apps/MIFit/ui/rama.h	/^float richardson_gly_preferred_x6[] =  {$/;"	v
richardson_gly_preferred_y	apps/MIFit/ui/rama.h	/^float *richardson_gly_preferred_y[] = {$/;"	v
richardson_gly_preferred_y1	apps/MIFit/ui/rama.h	/^float richardson_gly_preferred_y1[] =  {$/;"	v
richardson_gly_preferred_y2	apps/MIFit/ui/rama.h	/^float richardson_gly_preferred_y2[] =  {$/;"	v
richardson_gly_preferred_y3	apps/MIFit/ui/rama.h	/^float richardson_gly_preferred_y3[] =  {$/;"	v
richardson_gly_preferred_y4	apps/MIFit/ui/rama.h	/^float richardson_gly_preferred_y4[] =  {$/;"	v
richardson_gly_preferred_y5	apps/MIFit/ui/rama.h	/^float richardson_gly_preferred_y5[] =  {$/;"	v
richardson_gly_preferred_y6	apps/MIFit/ui/rama.h	/^float richardson_gly_preferred_y6[] =  {$/;"	v
richardson_prepro_allowed_sizes	apps/MIFit/ui/rama.h	/^unsigned int richardson_prepro_allowed_sizes[] = {$/;"	v
richardson_prepro_allowed_x	apps/MIFit/ui/rama.h	/^float *richardson_prepro_allowed_x[] = {$/;"	v
richardson_prepro_allowed_x1	apps/MIFit/ui/rama.h	/^float richardson_prepro_allowed_x1[] =  {$/;"	v
richardson_prepro_allowed_x2	apps/MIFit/ui/rama.h	/^float richardson_prepro_allowed_x2[] =  {$/;"	v
richardson_prepro_allowed_x3	apps/MIFit/ui/rama.h	/^float richardson_prepro_allowed_x3[] =  {$/;"	v
richardson_prepro_allowed_x4	apps/MIFit/ui/rama.h	/^float richardson_prepro_allowed_x4[] =  {$/;"	v
richardson_prepro_allowed_x5	apps/MIFit/ui/rama.h	/^float richardson_prepro_allowed_x5[] =  {$/;"	v
richardson_prepro_allowed_x6	apps/MIFit/ui/rama.h	/^float richardson_prepro_allowed_x6[] =  {$/;"	v
richardson_prepro_allowed_x7	apps/MIFit/ui/rama.h	/^float richardson_prepro_allowed_x7[] =  {$/;"	v
richardson_prepro_allowed_x8	apps/MIFit/ui/rama.h	/^float richardson_prepro_allowed_x8[] =  {$/;"	v
richardson_prepro_allowed_y	apps/MIFit/ui/rama.h	/^float *richardson_prepro_allowed_y[] = {$/;"	v
richardson_prepro_allowed_y1	apps/MIFit/ui/rama.h	/^float richardson_prepro_allowed_y1[] =  {$/;"	v
richardson_prepro_allowed_y2	apps/MIFit/ui/rama.h	/^float richardson_prepro_allowed_y2[] =  {$/;"	v
richardson_prepro_allowed_y3	apps/MIFit/ui/rama.h	/^float richardson_prepro_allowed_y3[] =  {$/;"	v
richardson_prepro_allowed_y4	apps/MIFit/ui/rama.h	/^float richardson_prepro_allowed_y4[] =  {$/;"	v
richardson_prepro_allowed_y5	apps/MIFit/ui/rama.h	/^float richardson_prepro_allowed_y5[] =  {$/;"	v
richardson_prepro_allowed_y6	apps/MIFit/ui/rama.h	/^float richardson_prepro_allowed_y6[] =  {$/;"	v
richardson_prepro_allowed_y7	apps/MIFit/ui/rama.h	/^float richardson_prepro_allowed_y7[] =  {$/;"	v
richardson_prepro_allowed_y8	apps/MIFit/ui/rama.h	/^float richardson_prepro_allowed_y8[] =  {$/;"	v
richardson_prepro_data	apps/MIFit/ui/rama.h	/^const char *richardson_prepro_data[180] = {$/;"	v
richardson_prepro_preferred_sizes	apps/MIFit/ui/rama.h	/^unsigned int richardson_prepro_preferred_sizes[] = {$/;"	v
richardson_prepro_preferred_x	apps/MIFit/ui/rama.h	/^float *richardson_prepro_preferred_x[] = {$/;"	v
richardson_prepro_preferred_x1	apps/MIFit/ui/rama.h	/^float richardson_prepro_preferred_x1[] =  {$/;"	v
richardson_prepro_preferred_x2	apps/MIFit/ui/rama.h	/^float richardson_prepro_preferred_x2[] =  {$/;"	v
richardson_prepro_preferred_x3	apps/MIFit/ui/rama.h	/^float richardson_prepro_preferred_x3[] =  {$/;"	v
richardson_prepro_preferred_x4	apps/MIFit/ui/rama.h	/^float richardson_prepro_preferred_x4[] =  {$/;"	v
richardson_prepro_preferred_y	apps/MIFit/ui/rama.h	/^float *richardson_prepro_preferred_y[] = {$/;"	v
richardson_prepro_preferred_y1	apps/MIFit/ui/rama.h	/^float richardson_prepro_preferred_y1[] =  {$/;"	v
richardson_prepro_preferred_y2	apps/MIFit/ui/rama.h	/^float richardson_prepro_preferred_y2[] =  {$/;"	v
richardson_prepro_preferred_y3	apps/MIFit/ui/rama.h	/^float richardson_prepro_preferred_y3[] =  {$/;"	v
richardson_prepro_preferred_y4	apps/MIFit/ui/rama.h	/^float richardson_prepro_preferred_y4[] =  {$/;"	v
richardson_pro_allowed_sizes	apps/MIFit/ui/rama.h	/^unsigned int richardson_pro_allowed_sizes[] = {$/;"	v
richardson_pro_allowed_x	apps/MIFit/ui/rama.h	/^float *richardson_pro_allowed_x[] = {$/;"	v
richardson_pro_allowed_x1	apps/MIFit/ui/rama.h	/^float richardson_pro_allowed_x1[] =  {$/;"	v
richardson_pro_allowed_x2	apps/MIFit/ui/rama.h	/^float richardson_pro_allowed_x2[] =  {$/;"	v
richardson_pro_allowed_y	apps/MIFit/ui/rama.h	/^float *richardson_pro_allowed_y[] = {$/;"	v
richardson_pro_allowed_y1	apps/MIFit/ui/rama.h	/^float richardson_pro_allowed_y1[] =  {$/;"	v
richardson_pro_allowed_y2	apps/MIFit/ui/rama.h	/^float richardson_pro_allowed_y2[] =  {$/;"	v
richardson_pro_data	apps/MIFit/ui/rama.h	/^const char *richardson_pro_data[180] = {$/;"	v
richardson_pro_preferred_sizes	apps/MIFit/ui/rama.h	/^unsigned int richardson_pro_preferred_sizes[] = {$/;"	v
richardson_pro_preferred_x	apps/MIFit/ui/rama.h	/^float *richardson_pro_preferred_x[] = {$/;"	v
richardson_pro_preferred_x1	apps/MIFit/ui/rama.h	/^float richardson_pro_preferred_x1[] =  {$/;"	v
richardson_pro_preferred_x2	apps/MIFit/ui/rama.h	/^float richardson_pro_preferred_x2[] =  {$/;"	v
richardson_pro_preferred_x3	apps/MIFit/ui/rama.h	/^float richardson_pro_preferred_x3[] =  {$/;"	v
richardson_pro_preferred_x4	apps/MIFit/ui/rama.h	/^float richardson_pro_preferred_x4[] =  {$/;"	v
richardson_pro_preferred_y	apps/MIFit/ui/rama.h	/^float *richardson_pro_preferred_y[] = {$/;"	v
richardson_pro_preferred_y1	apps/MIFit/ui/rama.h	/^float richardson_pro_preferred_y1[] =  {$/;"	v
richardson_pro_preferred_y2	apps/MIFit/ui/rama.h	/^float richardson_pro_preferred_y2[] =  {$/;"	v
richardson_pro_preferred_y3	apps/MIFit/ui/rama.h	/^float richardson_pro_preferred_y3[] =  {$/;"	v
richardson_pro_preferred_y4	apps/MIFit/ui/rama.h	/^float richardson_pro_preferred_y4[] =  {$/;"	v
richardson_ramadata	apps/MIFit/ui/RamaPlot.cpp	/^static RichardsonRamaData richardson_ramadata[8];$/;"	v	file:
rightFooter	apps/MIFit/ui/MIMainWindow.h	/^    QLabel *rightFooter;$/;"	m	class:MIMainWindow
rightViewport	libs/opengl/StereoView.h	/^            Viewport *rightViewport;$/;"	m	class:mi::opengl::StereoView
rightpoint	libs/opengl/Object3d.h	/^            float rightpoint;$/;"	m	class:mi::opengl::Object3d
ring_system	libs/chemlib/ANGLE.h	/^        int ring_system;$/;"	m	class:chemlib::ANGLE
ring_system	libs/chemlib/Bond.h	/^        int ring_system;                \/\/Index of the ring system, -1 for acyclic bonds$/;"	m	class:chemlib::Bond
ring_system	libs/chemlib/Constraint.h	/^        int ring_system;                \/\/Index of the ring system, -1 for acyclic angles$/;"	m	class:chemlib::Angle
ring_system	libs/chemlib/MIAtom.h	/^        int ring_system() const$/;"	f	class:chemlib::MIAtom
ring_system	libs/chemlib/TORSION.h	/^        int ring_system;$/;"	m	class:chemlib::TORSION
ring_system_	libs/chemlib/MIAtom.h	/^        int ring_system_; \/\/ Index of the ring system, -1 for acyclic atoms$/;"	m	class:chemlib::MIAtom
ringsystems	libs/chemlib/Ligand.h	/^        std::vector<RingSystem> ringsystems;$/;"	m	class:chemlib::Ligand
rint	libs/cmtz/library_utils.c	/^double rint(double x) { $/;"	f
rint	libs/math/mi_math.h	/^inline double rint(double v)$/;"	f
rmax	libs/map/fftsub.cpp	/^static float a, b, c, alpha, beta, gama, rmin, rmax, vol;$/;"	v	file:
rmin	libs/map/fftsub.cpp	/^static float a, b, c, alpha, beta, gama, rmin, rmax, vol;$/;"	v	file:
rms	apps/MIFit/ui/LSQFitDialog.h	/^    double rms;$/;"	m	class:LSQFitDialog
rmsText	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QLineEdit *rmsText;$/;"	m	class:Ui_LSQFitDialog
rnd_uni	libs/molopt/MIMolOpt.cpp	/^float rnd_uni(long *idum)$/;"	f
rootId	apps/MIFit/ui/DisplayView.cpp	/^    QTreeWidgetItem *rootId;$/;"	m	class:DisplayTree	file:
rootId	apps/MIFit/ui/JobsView.cpp	/^    QTreeWidgetItem *rootId;$/;"	m	class:JobsTree	file:
rootId	apps/MIFit/ui/ModelsView.cpp	/^    QTreeWidgetItem *rootId;$/;"	m	class:AtomsTree	file:
rootId	apps/MIFit/ui/ModelsView.cpp	/^    QTreeWidgetItem *rootId;$/;"	m	class:ModelsTree	file:
rootId	apps/MIFit/ui/ModelsView.cpp	/^    QTreeWidgetItem *rootId;$/;"	m	class:ResiduesTree	file:
rot	libs/cmtz/ccp4_spg.h	/^  float rot[3][3];$/;"	m	struct:CSym::ccp4_symop_
rotandtrn_to_mat4	libs/cmtz/ccp4_parser.c	/^void rotandtrn_to_mat4(float rsm[4][4], const ccp4_symop symop) {$/;"	f
rotandtrn_to_symop	libs/cmtz/ccp4_parser.c	/^char *rotandtrn_to_symop(char *symchs_begin, char *symchs_end, const ccp4_symop symop)$/;"	f
rotate	apps/MIFit/core/ViewPoint.cpp	/^void ViewPoint::rotate(float rx, float ry, float rz)$/;"	f	class:ViewPoint
rotate	apps/MIFit/core/rotate.cpp	/^rotate($/;"	f
rotate	libs/math/Quaternion.h	/^        Vector3<Type> Quaternion<Type>::rotate(const Vector3<Type> &v1) const$/;"	f	class:mi::math::Quaternion
rotate	libs/math/crystmat.cpp	/^void rotate(float *xp, float *yp, float *zp, float mat[4][3])$/;"	f
rotate	libs/math/crystmat.cpp	/^void rotate(float v[3], float mat[4][3])$/;"	f
rotate	libs/opengl/Axis.cpp	/^void Axis::rotate(Quaternion<float> &rotation)$/;"	f	class:mi::opengl::Axis
rotate	libs/opengl/Viewpoint.cpp	/^void Viewpoint::rotate(Quaternion<float> &rotation)$/;"	f	class:mi::opengl::Viewpoint
rotate	libs/opengl/interact/MouseArcBall.cpp	/^void MouseArcBall::rotate(int x, int y)$/;"	f	class:mi::opengl::interact::MouseArcBall
rotate	libs/opengl/interact/SimpleMouseRotator.cpp	/^void SimpleMouseRotator::rotate(int x, int y)$/;"	f	class:mi::opengl::interact::SimpleMouseRotator
rotateAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *rotateAction;$/;"	m	class:MIGLWidget
rotateVector	libs/opengl/QuatUtil.cpp	/^void QuatUtil::rotateVector(Quaternion<float> q, Vector3<float> &source, Vector3<float> &destination)$/;"	f	class:mi::opengl::QuatUtil
rotateVector	libs/opengl/QuatUtil.cpp	/^void QuatUtil::rotateVector(const Quaternion<float> &q, Vector3<float> &v)$/;"	f	class:mi::opengl::QuatUtil
rotation	libs/opengl/Viewpoint.h	/^            mi::math::Quaternion<float> rotation;$/;"	m	class:mi::opengl::Viewpoint
rotationX	libs/math/Matrix3.h	/^        void Matrix3<Type>::rotationX(Type angle)$/;"	f	class:mi::math::Matrix3
rotationX	libs/math/Matrix4.h	/^        void Matrix4<Type>::rotationX(Type angle)$/;"	f	class:mi::math::Matrix4
rotationY	libs/math/Matrix3.h	/^        void Matrix3<Type>::rotationY(Type angle)$/;"	f	class:mi::math::Matrix3
rotationY	libs/math/Matrix4.h	/^        void Matrix4<Type>::rotationY(Type angle)$/;"	f	class:mi::math::Matrix4
rotationZ	libs/math/Matrix3.h	/^        void Matrix3<Type>::rotationZ(Type angle)$/;"	f	class:mi::math::Matrix3
rotationZ	libs/math/Matrix4.h	/^        void Matrix4<Type>::rotationZ(Type angle)$/;"	f	class:mi::math::Matrix4
rotlsqfit	apps/MIFit/core/rotlsq.cpp	/^rotlsqfit($/;"	f
row_	libs/chemlib/Matrix.h	/^        T **row_;$/;"	m	class:TNT::Matrix
rowm1_	libs/chemlib/Matrix.h	/^        T **rowm1_;$/;"	m	class:TNT::Matrix
rpcftk_	libs/map/fftlib.cpp	/^int rpcftk_(integer *n, integer *m, integer *p, integer *r, real *x, real *y, integer *dim)$/;"	f
rsym	libs/map/fftsub.cpp	/^static int rsym[3][4][MISymmop::MAXSYMMOPS];$/;"	v	file:
rsymft_	libs/map/fftlib.cpp	/^int rsymft_(real *x, integer *n, integer *dim)$/;"	f
rtypes	libs/map/sfcalc_data.h	/^char **rtypes;$/;"	v
rubber_x1	apps/MIFit/ui/graphlib.h	/^    float rubber_x1, rubber_x2, rubber_y1, rubber_y2;$/;"	m	class:GraphWindow
rubber_x2	apps/MIFit/ui/graphlib.h	/^    float rubber_x1, rubber_x2, rubber_y1, rubber_y2;$/;"	m	class:GraphWindow
rubber_y1	apps/MIFit/ui/graphlib.h	/^    float rubber_x1, rubber_x2, rubber_y1, rubber_y2;$/;"	m	class:GraphWindow
rubber_y2	apps/MIFit/ui/graphlib.h	/^    float rubber_x1, rubber_x2, rubber_y1, rubber_y2;$/;"	m	class:GraphWindow
runPythonScript	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::runPythonScript(const std::string &file)$/;"	f	class:MIMainWindow
s	libs/map/fftlib.cpp	1442;"	d	file:
s	libs/map/fftlib.cpp	1789;"	d	file:
s	libs/opengl/Text.cpp	/^        GLfloat s[2];$/;"	m	struct:__anon45::CharData	file:
s_link	apps/MIFit/core/Molecule.h	/^    int s_link;$/;"	m	class:Molecule
s_main	apps/MIFit/core/Molecule.h	/^    int s_main;$/;"	m	class:Molecule
s_nonprotein	apps/MIFit/core/Molecule.h	/^    int s_nonprotein;$/;"	m	class:Molecule
s_radiustype	apps/MIFit/core/Molecule.h	/^    int s_radiustype;$/;"	m	class:Molecule
s_sides	apps/MIFit/core/Molecule.h	/^    int s_sides;$/;"	m	class:Molecule
s_waters	apps/MIFit/core/Molecule.h	/^    int s_waters;$/;"	m	class:Molecule
saddr	libs/jacgrid/isosurface.cpp	8;"	d	file:
sampleBuffers	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QCheckBox *sampleBuffers;$/;"	m	class:Ui_GLFormatEdit
sampleBuffersSize	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QSpinBox *sampleBuffersSize;$/;"	m	class:Ui_GLFormatEdit
save	apps/MIFit/core/ViewPointIO.cpp	/^void ViewPointIO::save(ViewPoint &vp, CArchive &ar)$/;"	f	class:ViewPointIO
save	apps/MIFit/ui/BValueColors.h	/^        bool save;$/;"	m	struct:BValueColors::ColorValues
save	apps/MIFit/ui/MapSettings.cpp	/^void MapSettings::save(const MapSettingsBase& settings)$/;"	f	class:MapSettings
saveAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *saveAction;$/;"	m	class:MIGLWidget
saveAs	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::saveAs(const std::string &name)$/;"	f	class:ManageCrystals
saveButton	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QPushButton *saveButton;$/;"	m	class:Ui_CustomJobDialog
saveCheckBox	apps/MIFit/ui/ui_AtomColors.h	/^    QCheckBox *saveCheckBox;$/;"	m	class:Ui_AtomColors
saveCheckBox	apps/MIFit/ui/ui_BValueColors.h	/^    QCheckBox *saveCheckBox;$/;"	m	class:Ui_BValueColors
saveCrystal	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::saveCrystal(bool deleteOldCrystal)$/;"	f	class:ManageCrystals
saveCrystalAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *saveCrystalAction_;$/;"	m	class:ModelsTree	file:
saveDict	apps/MIFit/ui/Application.cpp	/^void Application::saveDict()$/;"	f	class:Application
saveJobMenu	apps/MIFit/jobs/BatchJobManager.cpp	/^void BatchJobManager::saveJobMenu(QMenu *menu)$/;"	f	class:BatchJobManager
saveJobMenu	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::saveJobMenu()$/;"	f	class:MIMainWindow
saveLayout	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::saveLayout()$/;"	f	class:MIMainWindow
saveOnCloseCheckBox	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QCheckBox *saveOnCloseCheckBox;$/;"	m	class:Ui_GeneralPreferences
savePreferences	apps/MIFit/ui/ContourOptionsWidget.cpp	/^void ContourOptionsWidget::savePreferences()$/;"	f	class:ContourOptionsWidget
savePreferences	apps/MIFit/ui/CustomJobPreferences.cpp	/^void CustomJobPreferences::savePreferences()$/;"	f	class:CustomJobPreferences
savePreferences	apps/MIFit/ui/EnvironmentPreferences.cpp	/^void EnvironmentPreferences::savePreferences()$/;"	f	class:EnvironmentPreferences
savePreferences	apps/MIFit/ui/GeneralPreferences.cpp	/^void GeneralPreferences::savePreferences()$/;"	f	class:GeneralPreferences
savePreferences	apps/MIFit/ui/PreferencesDialog.cpp	/^void PreferencesDialog::savePreferences()$/;"	f	class:PreferencesDialog
saveSettings	apps/MIFit/ui/AddResidueDialog.cpp	/^void AddResidueDialog::saveSettings()$/;"	f	class:AddResidueDialog
saveStyle	apps/MIFit/ui/MapSettings.cpp	/^void MapSettings::saveStyle(int i, const MapSettingsBase& settings)$/;"	f	class:MapSettings
saveSymmAtoms	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::saveSymmAtoms()$/;"	f	class:MIGLWidget
saveToMenu	apps/MIFit/ui/CustomJobDialog.cpp	/^void CustomJobDialog::saveToMenu()$/;"	f	class:CustomJobDialog
saveToMenuButton	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QPushButton *saveToMenuButton;$/;"	m	class:Ui_CustomJobDialog
save_id	apps/MIFit/ui/MIGLWidget.cpp	/^static long save_id = 1;$/;"	v	file:
savecolors	apps/MIFit/core/Molecule.h	/^    std::vector<short> savecolors;$/;"	m	class:Molecule
savefits	apps/MIFit/ui/MIGLWidget.h	/^    chemlib::GeomSaver savefits;$/;"	m	class:MIGLWidget
sc11	libs/map/CMapHeaderBase.h	/^    float sc11, sc22, sc33, sc12, sc13, sc23; \/* anisotropic scaling factors *\/$/;"	m	class:CMapHeaderBase
sc12	libs/map/CMapHeaderBase.h	/^    float sc11, sc22, sc33, sc12, sc13, sc23; \/* anisotropic scaling factors *\/$/;"	m	class:CMapHeaderBase
sc13	libs/map/CMapHeaderBase.h	/^    float sc11, sc22, sc33, sc12, sc13, sc23; \/* anisotropic scaling factors *\/$/;"	m	class:CMapHeaderBase
sc22	libs/map/CMapHeaderBase.h	/^    float sc11, sc22, sc33, sc12, sc13, sc23; \/* anisotropic scaling factors *\/$/;"	m	class:CMapHeaderBase
sc23	libs/map/CMapHeaderBase.h	/^    float sc11, sc22, sc33, sc12, sc13, sc23; \/* anisotropic scaling factors *\/$/;"	m	class:CMapHeaderBase
sc33	libs/map/CMapHeaderBase.h	/^    float sc11, sc22, sc33, sc12, sc13, sc23; \/* anisotropic scaling factors *\/$/;"	m	class:CMapHeaderBase
scale	apps/MIFit/core/ViewPoint.cpp	/^qreal ViewPoint::scale() const$/;"	f	class:ViewPoint
scale	apps/MIFit/core/ViewPoint.h	/^    qreal scale;$/;"	m	class:ViewSave
scale	libs/chemlib/MIAtom.h	/^        void scale(float s)$/;"	f	class:chemlib::MIAtom
scale	libs/map/CMapHeaderBase.h	/^    double scale; \/* scale on density *\/$/;"	m	class:CMapHeaderBase
scale	libs/map/EMapBase.h	/^    float scale;$/;"	m	class:EMapBase
scale	libs/math/Tuple3.h	/^        void Tuple3<Type>::scale(Type s)$/;"	f	class:mi::math::Tuple3
scale	libs/math/Tuple3.h	/^        void Tuple3<Type>::scale(Type s, const Tuple3<Type> &t)$/;"	f	class:mi::math::Tuple3
scale	libs/math/Tuple4.h	/^        void Tuple4<Type>::scale(Type s)$/;"	f	class:mi::math::Tuple4
scale	libs/math/Tuple4.h	/^        void Tuple4<Type>::scale(Type s, const Tuple4<Type> &t)$/;"	f	class:mi::math::Tuple4
scaleEnd	apps/MIFit/ui/MIGLWidget.cpp	/^        qreal scaleEnd;$/;"	m	class:__anon10::ViewPointAnimation	file:
scaleStart	apps/MIFit/ui/MIGLWidget.cpp	/^        qreal scaleStart;$/;"	m	class:__anon10::ViewPointAnimation	file:
scale_	apps/MIFit/core/ViewPoint.h	/^    qreal scale_;   \/\/ multiply by this factor.$/;"	m	class:ViewPoint
scale_stack	apps/MIFit/ui/graphlib.h	/^    std::vector<double> scale_stack;$/;"	m	class:GraphWindow
scaleaniso	libs/map/sfcalc.cpp	/^int scaleaniso(CREFL refl[], int nrefl, CMapHeaderBase *mh)$/;"	f
scaling	libs/math/Matrix4.h	/^        void Matrix4<Type>::scaling(Type x, Type y, Type z)$/;"	f	class:mi::math::Matrix4
scaling	libs/math/Matrix4.h	/^        void Matrix4<Type>::scaling(const Vector3<Type> &vector)$/;"	f	class:mi::math::Matrix4
scaling	libs/opengl/interact/MouseTranslator.h	/^                float scaling;$/;"	m	class:mi::opengl::interact::MouseTranslator
scaling	libs/opengl/interact/MouseZoomer.h	/^                float scaling;$/;"	m	class:mi::opengl::interact::MouseZoomer
scanCrystalsDirectory	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::scanCrystalsDirectory()$/;"	f	class:ManageCrystals
scanCrystalsDirectory	apps/MIFit/ui/SelectCrystal.cpp	/^void SelectCrystal::scanCrystalsDirectory()$/;"	f	class:SelectCrystal
scan_atom	apps/MIFit/core/pdbmatch.cpp	/^static MIAtom *scan_atom(const char *linebuf)$/;"	f	file:
scan_symmops	libs/map/CMapHeaderBase.cpp	/^int CMapHeaderBase::scan_symmops(const char *buf, float symop[3][4][MISymmop::MAXSYMMOPS], char opstring[MISymmop::MAXSYMMOPS][MISymmop::MAXSTRING])$/;"	f	class:CMapHeaderBase
scanax	libs/cmtz/mtzdata.h	/^		 float scanax[3];      \/**< rotation axis in lab frame *\/$/;"	m	struct:bathead
scanrow	libs/map/EMapBase.cpp	/^unsigned int scanrow(char *buf, char strings[MAXLOOP][81])$/;"	f
scene	apps/MIFit/ui/DictEditCanvas.h	/^    DictEditScene *scene;$/;"	m	class:DictEditCanvas
scene	apps/MIFit/ui/MIGLWidget.h	/^    CMolwViewScene *scene;$/;"	m	class:MIGLWidget
scompare	libs/map/fftsub.cpp	/^int scompare(const void *in, const void *jn)$/;"	f
scompare	libs/map/sfcalc.cpp	/^int scompare(void *in, void *jn)$/;"	f
score	libs/molopt/MIMolOpt.cpp	/^    double score;$/;"	m	struct:trial	file:
score	libs/molopt/MIMolOpt.cpp	/^void score(trial &t, MIAtomList &atoms, float cx, float cy, float cz, EMapBase *emap)$/;"	f
score_full	libs/molopt/MIMolOpt.cpp	/^static void score_full(trial &t, MIAtomList &atoms, float cx, float cy, float cz, \/* center of atoms *\/$/;"	f	file:
score_torsion	libs/molopt/MIMolOpt.cpp	/^static void score_torsion(trial &t, MIAtomList atoms, MIMoleculeBase *model, EMapBase *emap,$/;"	f	file:
scorestep	libs/molopt/MIMolOpt.cpp	/^float MIMolOpt::scorestep(Bond *bonds, ANGLE *angles, PLANE *planes, Bond *cons, Bond *bumps, MIAtomList atoms, int \/* count *\/)$/;"	f	class:MIMolOpt
scratch	libs/cmtz/library_file.h	/^  unsigned int scratch : 1 , : 3;$/;"	m	struct:CCP4::_CFileStruct
scratch_surface	libs/jacgrid/isosurface.cpp	/^static const surfaceT *scratch_surface;$/;"	v	file:
screenCenter	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QRadioButton *screenCenter;$/;"	m	class:Ui_AddResidueDialog
scriptPort	apps/MIFit/ui/MIMainWindow.cpp	/^QString MIMainWindow::scriptPort() const$/;"	f	class:MIMainWindow
scriptPort	mifit.py	/^def scriptPort():$/;"	f
script_LocalSocketScript_h	apps/MIFit/script/LocalSocketScript.h	2;"	d
script_MIFitScriptObject_h	apps/MIFit/script/MIFitScriptObject.h	2;"	d
sdbfac	libs/cmtz/mtzdata.h	/^		 float sdbfac;         \/**< sd bbfac *\/$/;"	m	struct:bathead
sdbscale	libs/cmtz/mtzdata.h	/^		 float sdbscale;       \/**< sd bscale *\/$/;"	m	struct:bathead
sdgDistance	libs/conflib/sdg.cpp	/^sdgDistance::sdgDistance(MIAtom &a1, MIAtom &a2, double ideal_dist, bool isRange)$/;"	f	class:conflib::sdgDistance
sdgDistance	libs/conflib/sdg.cpp	/^sdgDistance::sdgDistance(MIAtom &a1, MIAtom &a2, double lower, double upper, bool isRange)$/;"	f	class:conflib::sdgDistance
sdgDistance	libs/conflib/sdg.cpp	/^sdgDistance::sdgDistance(const sdgDistance &orig)$/;"	f	class:conflib::sdgDistance
sdgDistance	libs/conflib/sdg.h	/^    class sdgDistance$/;"	c	namespace:conflib
sdgEngine	libs/conflib/sdg.cpp	/^sdgEngine::sdgEngine(vector<sdgDistance> &dists, vector<sdgVolume> &vols, const vector<MIAtom*> &atoms)$/;"	f	class:conflib::sdgEngine
sdgEngine	libs/conflib/sdg.h	/^    class sdgEngine$/;"	c	namespace:conflib
sdgGenMolStruct	libs/conflib/CoordGenerator.cpp	/^void CoordGenerator::sdgGenMolStruct()$/;"	f	class:CoordGenerator
sdgGenerateCoordinates	libs/conflib/confgen.cpp	/^void sdgGenerateCoordinates(Ligand *lig)$/;"	f	namespace:conflib
sdgRefine	libs/conflib/CoordGenerator.cpp	/^double CoordGenerator::sdgRefine()$/;"	f	class:CoordGenerator
sdgRefine	libs/conflib/confgen.cpp	/^void sdgRefine(Ligand *lig)$/;"	f	namespace:conflib
sdgVolume	libs/conflib/sdg.cpp	/^sdgVolume::sdgVolume(MIAtom &center, MIAtom &a1, MIAtom &a2, MIAtom &a3, double ideal_volume)$/;"	f	class:conflib::sdgVolume
sdgVolume	libs/conflib/sdg.cpp	/^sdgVolume::sdgVolume(MIAtom &center, MIAtom &a1, MIAtom &a2, MIAtom &a3, double ideal_volume, int openEnd)$/;"	f	class:conflib::sdgVolume
sdgVolume	libs/conflib/sdg.cpp	/^sdgVolume::sdgVolume(MIAtom &center, MIAtom &a1, MIAtom &a2, MIAtom &a3, double lower, double upper, int openEnd)$/;"	f	class:conflib::sdgVolume
sdgVolume	libs/conflib/sdg.cpp	/^sdgVolume::sdgVolume(const sdgVolume &orig)$/;"	f	class:conflib::sdgVolume
sdgVolume	libs/conflib/sdg.h	/^    class sdgVolume$/;"	c	namespace:conflib
sdg_params	libs/conflib/sdg_parms.h	/^    namespace sdg_params$/;"	n	namespace:conflib
sdiad_	libs/map/fftlib.cpp	/^int sdiad_(real *x, real *y, integer *n, integer *dim)$/;"	f
search_flag	libs/chemlib/MIAtom.h	/^        int search_flag() const$/;"	f	class:chemlib::MIAtom
search_flag_	libs/chemlib/MIAtom.h	/^        int search_flag_; \/\/ Flag used in ring detection and aromaticity searches$/;"	m	class:chemlib::MIAtom
searchbonds	libs/chemlib/MIMoleculeBase.cpp	/^int MIMoleculeBase::searchbonds()$/;"	f	class:chemlib::MIMoleculeBase
searchbonds	libs/chemlib/MIMoleculeBase.cpp	/^int MIMoleculeBase::searchbonds(MIAtomList *atoms)$/;"	f	class:chemlib::MIMoleculeBase
secStruc_ribbon	apps/MIFit/core/Molecule.h	/^    bool secStruc_ribbon;$/;"	m	class:Molecule
secStruc_schematic	apps/MIFit/core/Molecule.h	/^    bool secStruc_schematic;$/;"	m	class:Molecule
sec_colors	apps/MIFit/core/Colors.cpp	/^int Colors::sec_colors[] = {MAGENTA, RED, BLUE, GREEN};$/;"	m	class:Colors	file:
sec_colors	apps/MIFit/core/Colors.h	/^    static int sec_colors[];$/;"	m	class:Colors
secstr	libs/chemlib/Monomer.h	/^        char secstr() const$/;"	f	class:chemlib::Monomer
secstr_	libs/chemlib/Monomer.h	/^        char secstr_;$/;"	m	class:chemlib::Monomer
secstrcolor	apps/MIFit/core/ColorUtil.cpp	/^short secstrcolor(char ss)$/;"	f
section	libs/map/EMapBase.h	/^    std::vector<float> section;$/;"	m	class:EMapBase
seed	libs/math/MersenneTwister.h	/^            unsigned int seed;$/;"	m	class:mi::math::MersenneTwister
seek	libs/util/FileIo.cpp	/^int FileIo::seek(long offset, int whence)$/;"	f	class:FileIo
seek	libs/util/StringIo.cpp	/^int StringIo::seek(long offset, int whence)$/;"	f	class:StringIo
segment	libs/map/wxWweave.cpp	/^int EMapBase::segment(double *x1, double *y1, double *x2, double *y2, int i, int j,$/;"	f	class:EMapBase
select	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::select(Molecule *model, Residue *residue, MIAtom *atom, bool label)$/;"	f	class:MIGLWidget
selectBuffer	libs/opengl/interact/MousePicker.h	/^                GLuint *selectBuffer;$/;"	m	class:mi::opengl::interact::MousePicker
selectBufferLength	libs/opengl/interact/MousePicker.h	/^                int selectBufferLength;$/;"	m	class:mi::opengl::interact::MousePicker
selectCrystalRadioButton	apps/MIFit/ui/ui_SelectCrystal.h	/^    QRadioButton *selectCrystalRadioButton;$/;"	m	class:Ui_SelectCrystal
selectedResidueMarkerRadius	apps/MIFit/ui/GLOverviewCanvas.h	/^    float selectedResidueMarkerRadius;$/;"	m	class:GLOverviewCanvas
selectedResidueMarkerResolution	apps/MIFit/ui/GLOverviewCanvas.h	/^    float selectedResidueMarkerResolution;$/;"	m	class:GLOverviewCanvas
selectionChanged	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::selectionChanged(Molecule*, Residue *residue, MIAtom *atom)$/;"	f	class:ModelsTree
selectionChanged	apps/MIFit/ui/moc/moc_Displaylist.cpp	/^void Displaylist::selectionChanged(Molecule * _t1, chemlib::Residue * _t2, chemlib::MIAtom * _t3)$/;"	f	class:Displaylist
seqpos	libs/chemlib/Monomer.h	/^        unsigned int seqpos() const$/;"	f	class:chemlib::Monomer
seqpos_	libs/chemlib/Monomer.h	/^        unsigned int seqpos_;$/;"	m	class:chemlib::Monomer
set	apps/MIFit/core/RenderStyle.cpp	/^void RenderStyle::set(const RenderStyle &style)$/;"	f	class:RenderStyle
set	libs/chemlib/Matrix.h	/^        void set(const T &val)$/;"	f	class:TNT::Matrix
set	libs/cmtz/mtzdata.h	/^		 MTZSET **set;         \/**< datasets *\/$/;"	m	struct:__anon22
set	libs/math/Matrix3.h	/^        void Matrix3<Type>::set(Type mm00, Type mm01, Type mm02,$/;"	f	class:mi::math::Matrix3
set	libs/math/Matrix3.h	/^        void Matrix3<Type>::set(const Matrix3<Type> &m1)$/;"	f	class:mi::math::Matrix3
set	libs/math/Matrix3.h	/^        void Matrix3<Type>::set(const Quaternion<Type> &q1)$/;"	f	class:mi::math::Matrix3
set	libs/math/Matrix3.h	/^        void Matrix3<Type>::set(const Type v[])$/;"	f	class:mi::math::Matrix3
set	libs/math/Matrix4.h	/^        void Matrix4<Type>::set(Type m00, Type m01, Type m02, Type m03,$/;"	f	class:mi::math::Matrix4
set	libs/math/Matrix4.h	/^        void Matrix4<Type>::set(const Matrix4<Type> &m1)$/;"	f	class:mi::math::Matrix4
set	libs/math/Matrix4.h	/^        void Matrix4<Type>::set(const Quaternion<Type> &q1)$/;"	f	class:mi::math::Matrix4
set	libs/math/Matrix4.h	/^        void Matrix4<Type>::set(const Type v[])$/;"	f	class:mi::math::Matrix4
set	libs/math/Quaternion.h	/^        void Quaternion<Type>::set(Type x, Type y, Type z, Type w)$/;"	f	class:mi::math::Quaternion
set	libs/math/Quaternion.h	/^        void Quaternion<Type>::set(const Matrix3<Type> &m1)$/;"	f	class:mi::math::Quaternion
set	libs/math/Quaternion.h	/^        void Quaternion<Type>::set(const Matrix4<Type> &m1)$/;"	f	class:mi::math::Quaternion
set	libs/math/Quaternion.h	/^        void Quaternion<Type>::set(const Tuple4<Type> &t1)$/;"	f	class:mi::math::Quaternion
set	libs/math/Quaternion.h	/^        void Quaternion<Type>::set(const Vector3<Type> &axis, Type angle)$/;"	f	class:mi::math::Quaternion
set	libs/math/Quaternion.h	/^        void Quaternion<Type>::set(const Vector3<Type> &sourceVector, const Vector3<Type> &targetVector)$/;"	f	class:mi::math::Quaternion
set	libs/math/Tuple3.h	/^        void Tuple3<Type>::set(Type x, Type y, Type z)$/;"	f	class:mi::math::Tuple3
set	libs/math/Tuple3.h	/^        void Tuple3<Type>::set(const Tuple3<Type> &t1)$/;"	f	class:mi::math::Tuple3
set	libs/math/Tuple4.h	/^        void Tuple4<Type>::set(Type x, Type y, Type z, Type w)$/;"	f	class:mi::math::Tuple4
set	libs/math/Tuple4.h	/^        void Tuple4<Type>::set(const Tuple4<Type> &t1)$/;"	f	class:mi::math::Tuple4
set	libs/opengl/Axis.cpp	/^void Axis::set(const Axis &otherAxis)$/;"	f	class:mi::opengl::Axis
set	libs/opengl/Frustum.cpp	/^void Plane::set(Vector3<float> &normal, Vector3<float> &point)$/;"	f	class:mi::opengl::Plane
set	libs/opengl/Frustum.cpp	/^void Plane::set(Vector3<float> &v1, Vector3<float> &v2, Vector3<float> &v3)$/;"	f	class:mi::opengl::Plane
set	libs/opengl/Viewpoint.cpp	/^void Viewpoint::set(const Viewpoint &viewpoint)$/;"	f	class:mi::opengl::Viewpoint
set	libs/opengl/Viewport.cpp	/^void Viewport::set(int x, int y, int width, int height)$/;"	f	class:mi::opengl::Viewport
set00	libs/math/Matrix3.h	/^        void Matrix3<Type>::set00(const Type &value)$/;"	f	class:mi::math::Matrix3
set00	libs/math/Matrix4.h	/^        void Matrix4<Type>::set00(const Type &value)$/;"	f	class:mi::math::Matrix4
set01	libs/math/Matrix3.h	/^        void Matrix3<Type>::set01(const Type &value)$/;"	f	class:mi::math::Matrix3
set01	libs/math/Matrix4.h	/^        void Matrix4<Type>::set01(const Type &value)$/;"	f	class:mi::math::Matrix4
set02	libs/math/Matrix3.h	/^        void Matrix3<Type>::set02(const Type &value)$/;"	f	class:mi::math::Matrix3
set02	libs/math/Matrix4.h	/^        void Matrix4<Type>::set02(const Type &value)$/;"	f	class:mi::math::Matrix4
set03	libs/math/Matrix4.h	/^        void Matrix4<Type>::set03(const Type &value)$/;"	f	class:mi::math::Matrix4
set10	libs/math/Matrix3.h	/^        void Matrix3<Type>::set10(const Type &value)$/;"	f	class:mi::math::Matrix3
set10	libs/math/Matrix4.h	/^        void Matrix4<Type>::set10(const Type &value)$/;"	f	class:mi::math::Matrix4
set11	libs/math/Matrix3.h	/^        void Matrix3<Type>::set11(const Type &value)$/;"	f	class:mi::math::Matrix3
set11	libs/math/Matrix4.h	/^        void Matrix4<Type>::set11(const Type &value)$/;"	f	class:mi::math::Matrix4
set12	libs/math/Matrix3.h	/^        void Matrix3<Type>::set12(const Type &value)$/;"	f	class:mi::math::Matrix3
set12	libs/math/Matrix4.h	/^        void Matrix4<Type>::set12(const Type &value)$/;"	f	class:mi::math::Matrix4
set13	libs/math/Matrix4.h	/^        void Matrix4<Type>::set13(const Type &value)$/;"	f	class:mi::math::Matrix4
set20	libs/math/Matrix3.h	/^        void Matrix3<Type>::set20(const Type &value)$/;"	f	class:mi::math::Matrix3
set20	libs/math/Matrix4.h	/^        void Matrix4<Type>::set20(const Type &value)$/;"	f	class:mi::math::Matrix4
set21	libs/math/Matrix3.h	/^        void Matrix3<Type>::set21(const Type &value)$/;"	f	class:mi::math::Matrix3
set21	libs/math/Matrix4.h	/^        void Matrix4<Type>::set21(const Type &value)$/;"	f	class:mi::math::Matrix4
set22	libs/math/Matrix3.h	/^        void Matrix3<Type>::set22(const Type &value)$/;"	f	class:mi::math::Matrix3
set22	libs/math/Matrix4.h	/^        void Matrix4<Type>::set22(const Type &value)$/;"	f	class:mi::math::Matrix4
set23	libs/math/Matrix4.h	/^        void Matrix4<Type>::set23(const Type &value)$/;"	f	class:mi::math::Matrix4
set30	libs/math/Matrix4.h	/^        void Matrix4<Type>::set30(const Type &value)$/;"	f	class:mi::math::Matrix4
set31	libs/math/Matrix4.h	/^        void Matrix4<Type>::set31(const Type &value)$/;"	f	class:mi::math::Matrix4
set32	libs/math/Matrix4.h	/^        void Matrix4<Type>::set32(const Type &value)$/;"	f	class:mi::math::Matrix4
set33	libs/math/Matrix4.h	/^        void Matrix4<Type>::set33(const Type &value)$/;"	f	class:mi::math::Matrix4
setActiveMIGLWidget	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::setActiveMIGLWidget(MIGLWidget *w)$/;"	f	class:MIMainWindow
setActiveSubWindow	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::setActiveSubWindow(QWidget *window)$/;"	f	class:MIMainWindow
setAltloc	libs/chemlib/MIAtom.h	/^        void setAltloc(char c)$/;"	f	class:chemlib::MIAtom
setAmbientColor	libs/opengl/Light.cpp	/^void Light::setAmbientColor(float color0, float color1, float color2, float color3)$/;"	f	class:mi::opengl::Light
setAmountToDimNonactiveModels	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setAmountToDimNonactiveModels(float percent)$/;"	f	class:GLRenderer
setAmountToDimNonactiveModels	apps/MIFit/ui/ViewPointSettings.cpp	/^void ViewPointSettings::setAmountToDimNonactiveModels(float percent)$/;"	f	class:ViewPointSettings
setAngle	libs/opengl/Circle.cpp	/^void Circle::setAngle(float angle)$/;"	f	class:mi::opengl::Circle
setAngle	libs/opengl/interact/SimpleMouseRotator.cpp	/^void SimpleMouseRotator::setAngle(float angle)$/;"	f	class:mi::opengl::interact::SimpleMouseRotator
setAngleAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *setAngleAction;$/;"	m	class:DictEditCanvas
setAntialiasLines	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setAntialiasLines(bool antialiasLines)$/;"	f	class:GLRenderer
setArguments	apps/MIFit/jobs/BatchJob.cpp	/^void BatchJob::setArguments(const QString &arguments)$/;"	f	class:BatchJob
setArguments	apps/MIFit/jobs/BatchJob.h	/^    void setArguments(const QStringList &arguments)$/;"	f	class:BatchJob
setArguments	apps/MIFit/ui/CustomJobDialog.cpp	/^void CustomJobDialog::setArguments(const QString &arguments)$/;"	f	class:CustomJobDialog
setAsDefaultIo	libs/util/FileIo.cpp	/^void FileIo::setAsDefaultIo()$/;"	f	class:FileIo
setAsDefaultIo	libs/util/StringIo.cpp	/^void StringIo::setAsDefaultIo()$/;"	f	class:StringIo
setAtom1	libs/chemlib/ANGLE.h	/^        void setAtom1(MIAtom *atom)$/;"	f	class:chemlib::ANGLE
setAtom1	libs/chemlib/Bond.h	/^        void setAtom1(MIAtom *atom)$/;"	f	class:chemlib::Bond
setAtom1	libs/chemlib/CHIRALDICT.h	/^        void setAtom1(MIAtom *atom)$/;"	f	class:chemlib::CHIRAL
setAtom1	libs/chemlib/Constraint.h	/^        void setAtom1(MIAtom *atom)$/;"	f	class:chemlib::Angle
setAtom1	libs/chemlib/Constraint.h	/^        void setAtom1(MIAtom *atom)$/;"	f	class:chemlib::BondLength
setAtom1	libs/chemlib/Constraint.h	/^        void setAtom1(MIAtom *atom)$/;"	f	class:chemlib::Bump
setAtom1	libs/chemlib/TORSION.h	/^        void setAtom1(MIAtom *atom)$/;"	f	class:chemlib::TORSION
setAtom2	libs/chemlib/ANGLE.h	/^        void setAtom2(MIAtom *atom)$/;"	f	class:chemlib::ANGLE
setAtom2	libs/chemlib/Bond.h	/^        void setAtom2(MIAtom *atom)$/;"	f	class:chemlib::Bond
setAtom2	libs/chemlib/CHIRALDICT.h	/^        void setAtom2(MIAtom *atom)$/;"	f	class:chemlib::CHIRAL
setAtom2	libs/chemlib/Constraint.h	/^        void setAtom2(MIAtom *atom)$/;"	f	class:chemlib::Angle
setAtom2	libs/chemlib/Constraint.h	/^        void setAtom2(MIAtom *atom)$/;"	f	class:chemlib::BondLength
setAtom2	libs/chemlib/Constraint.h	/^        void setAtom2(MIAtom *atom)$/;"	f	class:chemlib::Bump
setAtom2	libs/chemlib/TORSION.h	/^        void setAtom2(MIAtom *atom)$/;"	f	class:chemlib::TORSION
setAtom3	libs/chemlib/ANGLE.h	/^        void setAtom3(MIAtom *atom)$/;"	f	class:chemlib::ANGLE
setAtom3	libs/chemlib/CHIRALDICT.h	/^        void setAtom3(MIAtom *atom)$/;"	f	class:chemlib::CHIRAL
setAtom3	libs/chemlib/Constraint.h	/^        void setAtom3(MIAtom *atom)$/;"	f	class:chemlib::Angle
setAtom3	libs/chemlib/TORSION.h	/^        void setAtom3(MIAtom *atom)$/;"	f	class:chemlib::TORSION
setAtom4	libs/chemlib/TORSION.h	/^        void setAtom4(MIAtom *atom)$/;"	f	class:chemlib::TORSION
setAtomBValueAndOccupancy	apps/MIFit/core/Molecule.cpp	/^void Molecule::setAtomBValueAndOccupancy(MIAtom *atom, float bvalue, float occ)$/;"	f	class:Molecule
setAtomBall	apps/MIFit/core/RenderStyle.cpp	/^void RenderStyle::setAtomBall(bool on)$/;"	f	class:RenderStyle
setAtomColor	apps/MIFit/core/Molecule.cpp	/^void Molecule::setAtomColor(MIAtom *atom, int color)$/;"	f	class:Molecule
setAtomLabelColor	apps/MIFit/core/Molecule.cpp	/^void Molecule::setAtomLabelColor(ATOMLABEL *label, unsigned char red, unsigned char green, unsigned char blue)$/;"	f	class:Molecule
setAtomLabelText	apps/MIFit/core/Molecule.cpp	/^void Molecule::setAtomLabelText(ATOMLABEL *label, const char *text)$/;"	f	class:Molecule
setAtomLabelVisible	apps/MIFit/core/Molecule.cpp	/^void Molecule::setAtomLabelVisible(ATOMLABEL *label, bool visible)$/;"	f	class:Molecule
setAtomicnumber	libs/chemlib/MIAtom.h	/^        void setAtomicnumber(short n)$/;"	f	class:chemlib::MIAtom
setAtomnumber	libs/chemlib/MIAtom.h	/^        void setAtomnumber(int n)$/;"	f	class:chemlib::MIAtom
setAtoms	libs/chemlib/Monomer.cpp	/^void Monomer::setAtoms(const MIAtomList &a)$/;"	f	class:chemlib::Monomer
setAtomsBValueAndOccupancy	apps/MIFit/core/Molecule.cpp	/^void Molecule::setAtomsBValueAndOccupancy(MIAtomList atoms, float bvalue, float occ)$/;"	f	class:Molecule
setAtomsColor	apps/MIFit/core/Molecule.cpp	/^void Molecule::setAtomsColor(MIAtomList atoms, int color)$/;"	f	class:Molecule
setAtomsTree	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::setAtomsTree(AtomsTree *tree)$/;"	f	class:ModelsTree
setAtomsTree	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::setAtomsTree(AtomsTree *tree)$/;"	f	class:ResiduesTree
setAxes	libs/opengl/interact/MouseTranslator.cpp	/^void MouseTranslator::setAxes(const Axis &axes)$/;"	f	class:mi::opengl::interact::MouseTranslator
setBValue	libs/chemlib/MIAtom.h	/^        void setBValue(float bvalue)$/;"	f	class:chemlib::MIAtom
setBackClip	apps/MIFit/core/ViewPoint.cpp	/^void ViewPoint::setBackClip(qreal b)$/;"	f	class:ViewPoint
setBallPercent	apps/MIFit/core/RenderStyle.cpp	/^void RenderStyle::setBallPercent(float percent)$/;"	f	class:RenderStyle
setBondCylinder	apps/MIFit/core/RenderStyle.cpp	/^void RenderStyle::setBondCylinder(bool on)$/;"	f	class:RenderStyle
setBondLengthAction	apps/MIFit/ui/DictEditCanvas.h	/^    QAction *setBondLengthAction;$/;"	m	class:DictEditCanvas
setBondLine	apps/MIFit/core/RenderStyle.cpp	/^void RenderStyle::setBondLine(bool on)$/;"	f	class:RenderStyle
setBondLineWidth	apps/MIFit/core/RenderStyle.cpp	/^void RenderStyle::setBondLineWidth(float width)$/;"	f	class:RenderStyle
setButtonColor	apps/MIFit/ui/GenericDataDialog.cpp	/^void setButtonColor(QAbstractButton *button, const QColor &color)$/;"	f	namespace:__anon15
setCamera	apps/MIFit/ui/CMolwViewAtomPickingRenderable.cpp	/^void CMolwViewAtomPickingRenderable::setCamera(Camera *camera)$/;"	f	class:CMolwViewAtomPickingRenderable
setCamera	apps/MIFit/ui/CMolwViewBondPickingRenderable.cpp	/^void CMolwViewBondPickingRenderable::setCamera(Camera *camera)$/;"	f	class:CMolwViewBondPickingRenderable
setCamera	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setCamera(Camera *camera)$/;"	f	class:GLRenderer
setCamera	libs/opengl/StereoView.cpp	/^void StereoView::setCamera(Camera *camera)$/;"	f	class:mi::opengl::StereoView
setCenter	apps/MIFit/core/ViewPoint.cpp	/^void ViewPoint::setCenter(const mi::math::Vector3<float> &pos)$/;"	f	class:ViewPoint
setCenterEnd	apps/MIFit/ui/MIGLWidget.cpp	/^    void ViewPointAnimation::setCenterEnd(const Vector3<float> &center)$/;"	f	class:__anon10::ViewPointAnimation
setChain	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::setChain(Residue *chain)$/;"	f	class:ResiduesTree
setChainColor	apps/MIFit/core/Molecule.cpp	/^void Molecule::setChainColor(Residue *chain, int color, int colorMethod)$/;"	f	class:Molecule
setChainId	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::setChainId(Residue *chain, char c)$/;"	f	class:chemlib::MIMoleculeBase
setCharge	libs/chemlib/MIAtom.h	/^        void setCharge(float c)$/;"	f	class:chemlib::MIAtom
setCoefficients	libs/opengl/Frustum.cpp	/^void Plane::setCoefficients(float a, float b, float c, float d)$/;"	f	class:mi::opengl::Plane
setColor	apps/MIFit/core/Annotation.cpp	/^void Annotation::setColor(PaletteColor color)$/;"	f	class:Annotation
setColor	apps/MIFit/core/Molecule.cpp	/^void Molecule::setColor(int color, int colorMethod)$/;"	f	class:Molecule
setColor	apps/MIFit/ui/AtomColors.cpp	/^void AtomColors::setColor(int c)$/;"	f	class:AtomColors
setColor	apps/MIFit/ui/BValueColors.cpp	/^void BValueColors::setColor(QToolButton *valueControl, int c)$/;"	f	class:BValueColors
setColor	apps/MIFit/ui/ContourOptionsWidget.cpp	/^void ContourOptionsWidget::setColor(QToolButton *valueControl, int c)$/;"	f	class:ContourOptionsWidget
setColor	apps/MIFit/ui/MIColorPickerDlg.h	/^    void setColor(const QColor &cc)$/;"	f	class:MIColorToolButton
setColor	libs/chemlib/MIAtom.h	/^        void setColor(short c)$/;"	f	class:chemlib::MIAtom
setColumn	libs/math/Matrix3.h	/^        void Matrix3<Type>::setColumn(int column, const Vector3<Type> &v)$/;"	f	class:mi::math::Matrix3
setColumn	libs/math/Matrix4.h	/^        void Matrix4<Type>::setColumn(int column, const Vector4<Type> &v)$/;"	f	class:mi::math::Matrix4
setCommandLine	apps/MIFit/jobs/BatchJob.cpp	/^void BatchJob::setCommandLine(const QString &command)$/;"	f	class:BatchJob
setConfomer	libs/chemlib/Monomer.h	/^        void setConfomer(unsigned short i)$/;"	f	class:chemlib::Monomer
setControlSize	libs/opengl/interact/MouseArcBall.cpp	/^void MouseArcBall::setControlSize(int x, int y)$/;"	f	class:mi::opengl::interact::MouseArcBall
setCorners	apps/MIFit/ui/CMolwViewScene.cpp	/^void CMolwViewScene::setCorners(Vector3<float> *corners)$/;"	f	class:CMolwViewScene
setCorners	apps/MIFit/ui/CMolwViewSlabPickingRenderable.cpp	/^void CMolwViewSlabPickingRenderable::setCorners(Vector3<float> *corners)$/;"	f	class:CMolwViewSlabPickingRenderable
setCorners	apps/MIFit/ui/CMolwViewSlabPickingRenderable.cpp	/^void CMolwViewSlabRenderable::setCorners(Vector3<float> *corners)$/;"	f	class:CMolwViewSlabRenderable
setCrossEyed	libs/opengl/StereoView.cpp	/^void StereoView::setCrossEyed(bool crossEyed)$/;"	f	class:mi::opengl::StereoView
setCurrentAtom	apps/MIFit/ui/ModelsView.cpp	/^void AtomsTree::setCurrentAtom(MIAtom *atom)$/;"	f	class:AtomsTree
setCurrentChain	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::setCurrentChain(Residue *residue)$/;"	f	class:ModelsTree
setCurrentFile	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::setCurrentFile(const std::string &fname)$/;"	f	class:MIMainWindow
setCurrentFormat	apps/MIFit/ui/GLFormatDialog.cpp	/^void GLFormatDialog::setCurrentFormat(const QGLFormat &format)$/;"	f	class:GLFormatDialog
setCurrentIndex	libs/math/Grid.h	/^        void Grid<Type>::setCurrentIndex(Point3<Type> &point)$/;"	f	class:mi::math::Grid
setCurrentIndex	libs/math/PeriodicGrid.h	/^        void PeriodicGrid<Type>::setCurrentIndex(Point3<Type> &point)$/;"	f	class:mi::math::PeriodicGrid
setCurrentResidue	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::setCurrentResidue(Residue *residue)$/;"	f	class:ResiduesTree
setCurrentVector	libs/opengl/interact/MouseArcBall.cpp	/^void MouseArcBall::setCurrentVector(int x, int y)$/;"	f	class:mi::opengl::interact::MouseArcBall
setCursor	apps/MIFit/ui/CursorArea.cpp	/^void CursorArea::setCursor(const QString &shape)$/;"	f	class:CursorArea
setDataFile	apps/MIFit/ui/CustomJobDialog.cpp	/^void CustomJobDialog::setDataFile(const QString &dataFile)$/;"	f	class:CustomJobDialog
setDefaultIo	libs/util/io.cpp	/^void io::setDefaultIo(io *defaultIo)$/;"	f	class:io
setDepthCuedColors	apps/MIFit/ui/ViewPointSettings.cpp	/^void ViewPointSettings::setDepthCuedColors(bool on)$/;"	f	class:ViewPointSettings
setDepthCuedLineWidth	apps/MIFit/ui/ViewPointSettings.cpp	/^void ViewPointSettings::setDepthCuedLineWidth(bool on)$/;"	f	class:ViewPointSettings
setDetail	libs/opengl/Circle.cpp	/^void Circle::setDetail(int detail)$/;"	f	class:mi::opengl::Circle
setDiffuseColor	libs/opengl/Light.cpp	/^void Light::setDiffuseColor(float color0, float color1, float color2, float color3)$/;"	f	class:mi::opengl::Light
setDimNonactiveModels	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setDimNonactiveModels(bool dimNonactiveModels)$/;"	f	class:GLRenderer
setDimNonactiveModels	apps/MIFit/ui/ViewPointSettings.cpp	/^void ViewPointSettings::setDimNonactiveModels(bool on)$/;"	f	class:ViewPointSettings
setDistanceToTarget	libs/opengl/interact/MouseArcBallOrbitor.cpp	/^void MouseArcBallOrbitor::setDistanceToTarget(float distanceToTarget)$/;"	f	class:mi::opengl::interact::MouseArcBallOrbitor
setDivisions	libs/opengl/Arc.cpp	/^void Arc::setDivisions(int divisions)$/;"	f	class:mi::opengl::Arc
setDoGenerateConstraints	libs/ligand/LigPostProcessor.cpp	/^void LigPostProcessor::setDoGenerateConstraints(bool on)$/;"	f	class:LigPostProcessor
setDoGenerateCoordinates	libs/ligand/LigPostProcessor.cpp	/^void LigPostProcessor::setDoGenerateCoordinates(bool on)$/;"	f	class:LigPostProcessor
setDoGuessBondOrders	libs/ligand/LigPostProcessor.cpp	/^void LigPostProcessor::setDoGuessBondOrders(bool on)$/;"	f	class:LigPostProcessor
setDotsColor	apps/MIFit/core/Molecule.cpp	/^void Molecule::setDotsColor(int color)$/;"	f	class:Molecule
setElement	libs/math/Matrix3.h	/^        void Matrix3<Type>::setElement(int row, int column, Type value)$/;"	f	class:mi::math::Matrix3
setElement	libs/math/Matrix4.h	/^        void Matrix4<Type>::setElement(int row, int column, Type value)$/;"	f	class:mi::math::Matrix4
setEye	libs/opengl/Camera.cpp	/^void Camera::setEye(const Vector3<float> &eye)$/;"	f	class:mi::opengl::Camera
setEyeSeparation	libs/opengl/StereoView.cpp	/^void StereoView::setEyeSeparation(float eyeSeparation)$/;"	f	class:mi::opengl::StereoView
setFarClipping	libs/opengl/Frustum.cpp	/^void Frustum::setFarClipping(float farClipping)$/;"	f	class:mi::opengl::Frustum
setFieldOfView	libs/opengl/Frustum.cpp	/^void Frustum::setFieldOfView(float fieldOfView)$/;"	f	class:mi::opengl::Frustum
setFlags	libs/chemlib/Monomer.h	/^        void setFlags(unsigned short i)$/;"	f	class:chemlib::Monomer
setFocalLength	libs/opengl/Frustum.cpp	/^void Frustum::setFocalLength(float focalLength)$/;"	f	class:mi::opengl::Frustum
setFocusResidue	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::setFocusResidue(Residue *res, bool recenter, bool deleted)$/;"	f	class:MIGLWidget
setFogEnabled	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setFogEnabled(bool on)$/;"	f	class:GLRenderer
setFogEnd	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setFogEnd(float z)$/;"	f	class:GLRenderer
setFogStart	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setFogStart(float z)$/;"	f	class:GLRenderer
setFontSize	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.cpp	/^void CMolwViewAnnotationPickingRenderable::setFontSize(int size)$/;"	f	class:CMolwViewAnnotationPickingRenderable
setFontSize	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setFontSize(int fontSize)$/;"	f	class:GLRenderer
setFontSize	libs/opengl/Axes.cpp	/^void Axes::setFontSize(int fontSize)$/;"	f	class:mi::opengl::Axes
setFormat	apps/MIFit/ui/GLFormatEdit.cpp	/^void GLFormatEdit::setFormat(const QGLFormat &format)$/;"	f	class:GLFormatEdit
setFrom	libs/opengl/Arc.cpp	/^void Arc::setFrom(Vector3<float> &from)$/;"	f	class:mi::opengl::Arc
setFrom	libs/opengl/interact/ArcBallFeedback.cpp	/^void ArcBallFeedback::setFrom(Vector3<float> &from)$/;"	f	class:mi::opengl::interact::ArcBallFeedback
setFrom	libs/opengl/interact/TranslationFeedback.cpp	/^void TranslationFeedback::setFrom(const Vector3<float> &from)$/;"	f	class:mi::opengl::interact::TranslationFeedback
setFromAxisAngle	libs/math/Quaternion.h	/^        void Quaternion<Type>::setFromAxisAngle(Type x, Type y, Type z, Type angle)$/;"	f	class:mi::math::Quaternion
setFromEulerAngles	libs/math/Quaternion.h	/^        void Quaternion<Type>::setFromEulerAngles(Type xAngle, Type yAngle, Type zAngle)$/;"	f	class:mi::math::Quaternion
setFromMatrix	libs/math/Quaternion.h	/^        void Quaternion<Type>::setFromMatrix(Type m00, Type m01, Type m02, Type \/* m03 *\/,$/;"	f	class:mi::math::Quaternion
setFrontClip	apps/MIFit/core/ViewPoint.cpp	/^void ViewPoint::setFrontClip(qreal f)$/;"	f	class:ViewPoint
setFrustum	apps/MIFit/ui/CMolwViewAtomPickingRenderable.cpp	/^void CMolwViewAtomPickingRenderable::setFrustum(Frustum *frustum)$/;"	f	class:CMolwViewAtomPickingRenderable
setFrustum	apps/MIFit/ui/CMolwViewBondPickingRenderable.cpp	/^void CMolwViewBondPickingRenderable::setFrustum(Frustum *frustum)$/;"	f	class:CMolwViewBondPickingRenderable
setFrustum	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setFrustum(Frustum *frustum)$/;"	f	class:GLRenderer
setFrustum	libs/opengl/StereoView.cpp	/^void StereoView::setFrustum(Frustum *frustum)$/;"	f	class:mi::opengl::StereoView
setFrustumOffset	libs/opengl/Frustum.cpp	/^void Frustum::setFrustumOffset(float frustumAsymmetry)$/;"	f	class:mi::opengl::Frustum
setGeom	libs/chemlib/MIAtom.h	/^        void setGeom(int i)$/;"	f	class:chemlib::MIAtom
setGlUnitsPerPixel	libs/opengl/Axes.cpp	/^void Axes::setGlUnitsPerPixel(float glUnitsPerPixel)$/;"	f	class:mi::opengl::Axes
setHardwareStereo	libs/opengl/StereoView.cpp	/^void StereoView::setHardwareStereo(bool hardwareStereo)$/;"	f	class:mi::opengl::StereoView
setHardwareStereoAvailable	apps/MIFit/ui/Application.h	/^    void setHardwareStereoAvailable(bool t)$/;"	f	class:Application
setHcount	libs/chemlib/MIAtom.h	/^        void setHcount(int i)$/;"	f	class:chemlib::MIAtom
setHeight	libs/opengl/Frustum.cpp	/^void Frustum::setHeight(float height)$/;"	f	class:mi::opengl::Frustum
setHidden	apps/MIFit/core/Annotation.cpp	/^void Annotation::setHidden(bool hidden)$/;"	f	class:Annotation
setHideHydrogens	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setHideHydrogens(bool on)$/;"	f	class:GLRenderer
setHorizontalAxis	libs/opengl/interact/SimpleMouseRotator.cpp	/^void SimpleMouseRotator::setHorizontalAxis(Vector3<float> &horizontalAxis)$/;"	f	class:mi::opengl::interact::SimpleMouseRotator
setHybrid	libs/chemlib/MIAtom.h	/^        void setHybrid(int i)$/;"	f	class:chemlib::MIAtom
setIdentity	apps/MIFit/ui/GLOverviewCanvas.cpp	/^void GLOverviewCanvas::setIdentity(float rotation[])$/;"	f	class:GLOverviewCanvas
setIdentity	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setIdentity(float rotation[])$/;"	f	class:GLRenderer
setIdentity	libs/math/Matrix3.h	/^        void Matrix3<Type>::setIdentity()$/;"	f	class:mi::math::Matrix3
setIdentity	libs/math/Matrix4.h	/^        void Matrix4<Type>::setIdentity()$/;"	f	class:mi::math::Matrix4
setImageSeparation	libs/opengl/StereoView.cpp	/^void StereoView::setImageSeparation(float imageSeparation)$/;"	f	class:mi::opengl::StereoView
setInvertRotation	libs/opengl/interact/MouseArcBall.cpp	/^void MouseArcBall::setInvertRotation(bool invertRotation)$/;"	f	class:mi::opengl::interact::MouseArcBall
setIsaromatic	libs/chemlib/MIAtom.h	/^        void setIsaromatic(int i)$/;"	f	class:chemlib::MIAtom
setIscyclic	libs/chemlib/MIAtom.h	/^        void setIscyclic(int i)$/;"	f	class:chemlib::MIAtom
setJobId	apps/MIFit/jobs/BatchJob.cpp	/^void BatchJob::setJobId()$/;"	f	class:BatchJob
setJobMenu	apps/MIFit/script/MIFitScriptObject.cpp	/^void MIFitScriptObject::setJobMenu(QMenu *jobMenu)$/;"	f	class:MIFitScriptObject
setJobName	apps/MIFit/jobs/BatchJob.h	/^    void setJobName(const QString &jobName)$/;"	f	class:BatchJob
setJobName	apps/MIFit/ui/CustomJobDialog.cpp	/^void CustomJobDialog::setJobName(const QString &jobName)$/;"	f	class:CustomJobDialog
setJobWorkDir	apps/MIFit/script/MIFitScriptObject.cpp	/^void MIFitScriptObject::setJobWorkDir(const QString &jobId, const QString &workDir)$/;"	f	class:MIFitScriptObject
setJobWorkDir	mifit.py	/^def setJobWorkDir(dir):$/;"	f
setJoinBondsOfSameColor	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setJoinBondsOfSameColor(bool on)$/;"	f	class:GLRenderer
setLength	libs/math/Vector3.h	/^        void Vector3<Type>::setLength(Type length)$/;"	f	class:mi::math::Vector3
setLength	libs/math/Vector4.h	/^        void Vector4<Type>::setLength(Type length)$/;"	f	class:mi::math::Vector4
setLength	libs/opengl/Axes.cpp	/^void Axes::setLength(int length)$/;"	f	class:mi::opengl::Axes
setLength	libs/opengl/interact/TargetFeedback.cpp	/^void TargetFeedback::setLength(float length)$/;"	f	class:mi::opengl::interact::TargetFeedback
setLength	libs/opengl/interact/TranslationFeedback.cpp	/^void TranslationFeedback::setLength(float length)$/;"	f	class:mi::opengl::interact::TranslationFeedback
setLineWidthDepthCued	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setLineWidthDepthCued(bool lineWidthDepthCued)$/;"	f	class:GLRenderer
setMapMax	apps/MIFit/ui/ContourOptionsWidget.cpp	/^void ContourOptionsWidget::setMapMax(float mapMax)$/;"	f	class:ContourOptionsWidget
setMapMin	apps/MIFit/ui/ContourOptionsWidget.cpp	/^void ContourOptionsWidget::setMapMin(float mapMin)$/;"	f	class:ContourOptionsWidget
setMass	libs/chemlib/MIAtom.h	/^        void setMass(int m)$/;"	f	class:chemlib::MIAtom
setMessage	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::setMessage(const QString &message)$/;"	f	class:MIGLWidget
setModel	apps/MIFit/ui/ModelsView.cpp	/^void AtomsTree::setModel(Molecule *model)$/;"	f	class:AtomsTree
setModel	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::setModel(Molecule *model)$/;"	f	class:ResiduesTree
setModelFile	apps/MIFit/ui/CustomJobDialog.cpp	/^void CustomJobDialog::setModelFile(const QString &modelFile)$/;"	f	class:CustomJobDialog
setModelMode	apps/MIFit/ui/CustomJobDialog.cpp	/^void CustomJobDialog::setModelMode(CustomJobDialog::ModelMode mode)$/;"	f	class:CustomJobDialog
setModels	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.cpp	/^void CMolwViewAnnotationPickingRenderable::setModels(Displaylist *displaylist)$/;"	f	class:CMolwViewAnnotationPickingRenderable
setModels	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.cpp	/^void CMolwViewAnnotationRenderable::setModels(Displaylist *displaylist)$/;"	f	class:CMolwViewAnnotationRenderable
setModels	apps/MIFit/ui/CMolwViewAtomPickingRenderable.cpp	/^void CMolwViewAtomPickingRenderable::setModels(Displaylist *displaylist)$/;"	f	class:CMolwViewAtomPickingRenderable
setModels	apps/MIFit/ui/CMolwViewAtomPickingRenderable.cpp	/^void CMolwViewAtomRenderable::setModels(Displaylist *displaylist)$/;"	f	class:CMolwViewAtomRenderable
setMolecule	apps/MIFit/ui/CMolwViewBondPickingRenderable.cpp	/^void CMolwViewBondPickingRenderable::setMolecule(Molecule *molecule)$/;"	f	class:CMolwViewBondPickingRenderable
setName	libs/chemlib/MIAtom.h	/^        void setName(const char *name)$/;"	f	class:chemlib::MIAtom
setName	libs/chemlib/Monomer.h	/^        void setName(const std::string &n)$/;"	f	class:chemlib::Monomer
setName	libs/math/Grid.h	/^        void Grid<Type>::setName(const std::string &newName)$/;"	f	class:mi::math::Grid
setName	libs/math/PeriodicGrid.h	/^        void PeriodicGrid<Type>::setName(const std::string &newName)$/;"	f	class:mi::math::PeriodicGrid
setName1	libs/chemlib/Monomer.h	/^        void setName1(char c)$/;"	f	class:chemlib::Monomer
setNearClipping	libs/opengl/Frustum.cpp	/^void Frustum::setNearClipping(float nearClipping)$/;"	f	class:mi::opengl::Frustum
setNearestValue	libs/math/Grid.h	/^        void Grid<Type>::setNearestValue(Point3<Type> &point, float value)$/;"	f	class:mi::math::Grid
setNearestValue	libs/math/PeriodicGrid.h	/^        void PeriodicGrid<Type>::setNearestValue(Point3<Type> &point, float value)$/;"	f	class:mi::math::PeriodicGrid
setNext	libs/chemlib/Residue.h	/^        void setNext(Residue *r)$/;"	f	class:chemlib::Residue
setOcc	libs/chemlib/MIAtom.h	/^        void setOcc(float occ)$/;"	f	class:chemlib::MIAtom
setOrder	libs/chemlib/Bond.h	/^        void setOrder(unsigned char order)$/;"	f	class:chemlib::Bond
setPage	apps/MIFit/ui/PreferencesDialog.cpp	/^void PreferencesDialog::setPage(int index)$/;"	f	class:PreferencesDialog
setPerspective	apps/MIFit/core/ViewPoint.cpp	/^void ViewPoint::setPerspective(float p)$/;"	f	class:ViewPoint
setPerspective	libs/opengl/Frustum.cpp	/^void Frustum::setPerspective(bool perspective)$/;"	f	class:mi::opengl::Frustum
setPickingEnabled	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setPickingEnabled(bool value)$/;"	f	class:GLRenderer
setPlace	libs/opengl/interact/MouseArcBall.cpp	/^void MouseArcBall::setPlace(const Point3<float> &center, float radius)$/;"	f	class:mi::opengl::interact::MouseArcBall
setPosition	libs/chemlib/MIAtom.h	/^        void setPosition(float x, float y, float z)$/;"	f	class:chemlib::MIAtom
setPosition	libs/chemlib/Monomer.h	/^        void setPosition(float x, float y)$/;"	f	class:chemlib::Monomer
setPosition	libs/opengl/Light.cpp	/^void Light::setPosition(Vector4<float> &position)$/;"	f	class:mi::opengl::Light
setPosition	libs/opengl/Viewpoint.cpp	/^void Viewpoint::setPosition(const Vector3<float> &position)$/;"	f	class:mi::opengl::Viewpoint
setPosition	libs/opengl/ViewportRelativeViewpoint.cpp	/^void ViewportRelativeViewpoint::setPosition(Viewport *viewport, Frustum *frustum, float x, float y)$/;"	f	class:mi::opengl::ViewportRelativeViewpoint
setPrefAngles	libs/chemlib/Residue.h	/^        void setPrefAngles(const std::vector<ANGLE> &angles)$/;"	f	class:chemlib::Residue
setPrefBonds	libs/chemlib/Residue.h	/^        void setPrefBonds(const std::vector<Bond> &bonds)$/;"	f	class:chemlib::Residue
setPrev	libs/chemlib/Residue.h	/^        void setPrev(Residue *r)$/;"	f	class:chemlib::Residue
setProgram	apps/MIFit/jobs/BatchJob.h	/^    void setProgram(const QString &program)$/;"	f	class:BatchJob
setProgram	apps/MIFit/ui/CustomJobDialog.cpp	/^void CustomJobDialog::setProgram(const QString &program)$/;"	f	class:CustomJobDialog
setQGLWidget	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setQGLWidget(QGLWidget *qcanvas_win)$/;"	f	class:GLRenderer
setRadius	libs/opengl/Circle.cpp	/^void Circle::setRadius(float radius)$/;"	f	class:mi::opengl::Circle
setRadius	libs/opengl/interact/ArcBallFeedback.cpp	/^void ArcBallFeedback::setRadius(float radius)$/;"	f	class:mi::opengl::interact::ArcBallFeedback
setRadius	libs/opengl/interact/MouseArcBall.cpp	/^void MouseArcBall::setRadius(float radius)$/;"	f	class:mi::opengl::interact::MouseArcBall
setRelativeToViewpoint	libs/opengl/interact/MouseArcBall.cpp	/^void MouseArcBall::setRelativeToViewpoint(Viewpoint *relativeToViewpoint)$/;"	f	class:mi::opengl::interact::MouseArcBall
setRenderLineThickness	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::setRenderLineThickness(int thickness)$/;"	f	class:MIMainWindow
setRenderStyle	apps/MIFit/ui/CMolwViewAtomPickingRenderable.cpp	/^void CMolwViewAtomPickingRenderable::setRenderStyle(RenderStyle renderStyle)$/;"	f	class:CMolwViewAtomPickingRenderable
setRenderStyle	apps/MIFit/ui/CMolwViewBondPickingRenderable.cpp	/^void CMolwViewBondPickingRenderable::setRenderStyle(RenderStyle renderStyle)$/;"	f	class:CMolwViewBondPickingRenderable
setRenderStyle	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setRenderStyle(const RenderStyle &style)$/;"	f	class:GLRenderer
setResidue	apps/MIFit/ui/ModelsView.cpp	/^void AtomsTree::setResidue(Residue *residue)$/;"	f	class:AtomsTree
setResidueColor	apps/MIFit/core/Molecule.cpp	/^void Molecule::setResidueColor(Residue *residue, int color, int colorMethod)$/;"	f	class:Molecule
setResidueNames	libs/chemlib/MIMoleculeBase.cpp	/^void MIMoleculeBase::setResidueNames(std::vector<Residue*> &residues, const std::string &name)$/;"	f	class:chemlib::MIMoleculeBase
setResiduesColor	apps/MIFit/core/Molecule.cpp	/^void Molecule::setResiduesColor(std::vector<Residue*> &residues, int color, int colorMethod)$/;"	f	class:Molecule
setResiduesTree	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::setResiduesTree(ResiduesTree *tree)$/;"	f	class:ModelsTree
setRotation	libs/opengl/RelativeViewpoint.cpp	/^void RelativeViewpoint::setRotation(Quaternion<float> &rotation)$/;"	f	class:mi::opengl::RelativeViewpoint
setRotation	libs/opengl/Viewpoint.cpp	/^void Viewpoint::setRotation(const Quaternion<float> &rotation)$/;"	f	class:mi::opengl::Viewpoint
setRow	libs/math/Matrix3.h	/^        void Matrix3<Type>::setRow(int row, const Vector3<Type> &v)$/;"	f	class:mi::math::Matrix3
setRow	libs/math/Matrix4.h	/^        void Matrix4<Type>::setRow(int row, const Vector4<Type> &v)$/;"	f	class:mi::math::Matrix4
setScale	apps/MIFit/core/ViewPoint.cpp	/^void ViewPoint::setScale(qreal s)$/;"	f	class:ViewPoint
setScaleEnd	apps/MIFit/ui/MIGLWidget.cpp	/^    void ViewPointAnimation::setScaleEnd(qreal scale)$/;"	f	class:__anon10::ViewPointAnimation
setScaling	libs/opengl/interact/MouseTranslator.cpp	/^void MouseTranslator::setScaling(float angle)$/;"	f	class:mi::opengl::interact::MouseTranslator
setScaling	libs/opengl/interact/MouseZoomer.cpp	/^void MouseZoomer::setScaling(float value)$/;"	f	class:mi::opengl::interact::MouseZoomer
setScriptPort	mifit.py	/^def setScriptPort(id):$/;"	f
setSecstr	libs/chemlib/Monomer.h	/^        void setSecstr(char c)$/;"	f	class:chemlib::Monomer
setSeed	libs/math/MersenneTwister.h	/^            virtual void setSeed(unsigned int seed)$/;"	f	class:mi::math::MersenneTwister
setSeqpos	libs/chemlib/Monomer.h	/^        void setSeqpos(unsigned int i)$/;"	f	class:chemlib::Monomer
setShowBondOrders	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setShowBondOrders(bool on)$/;"	f	class:GLRenderer
setSize	apps/MIFit/core/ViewPoint.cpp	/^void ViewPoint::setSize(int width, int height)$/;"	f	class:ViewPoint
setSize	apps/MIFit/ui/DictEditCanvas.cpp	/^    void setSize(const QSizeF &size)$/;"	f	class:DictEditMainItem
setSize	apps/MIFit/ui/MIGLWidget.cpp	/^    void setSize(const QSizeF &size)$/;"	f	class:MainItem
setSize	libs/opengl/StereoView.cpp	/^void StereoView::setSize(int width, int height)$/;"	f	class:mi::opengl::StereoView
setSlab	apps/MIFit/core/ViewPoint.cpp	/^void ViewPoint::setSlab(float frontClip, float backClip)$/;"	f	class:ViewPoint
setSpecularColor	libs/opengl/Light.cpp	/^void Light::setSpecularColor(float color0, float color1, float color2, float color3)$/;"	f	class:mi::opengl::Light
setStereo	libs/opengl/StereoView.cpp	/^void StereoView::setStereo(bool stereo)$/;"	f	class:mi::opengl::StereoView
setStickPercent	apps/MIFit/core/RenderStyle.cpp	/^void RenderStyle::setStickPercent(float percent)$/;"	f	class:RenderStyle
setStringSelection	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^static void setStringSelection(QComboBox *cb, const std::string &str)$/;"	f	file:
setSuccess	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::setSuccess(bool value)$/;"	f	class:LSQFitDialog
setSymmAtomsVisible	apps/MIFit/core/Molecule.cpp	/^void Molecule::setSymmAtomsVisible(bool value)$/;"	f	class:Molecule
setSymmop	libs/chemlib/MIAtom.h	/^        void setSymmop(int i)$/;"	f	class:chemlib::MIAtom
setTarget	libs/opengl/interact/TargetFeedback.cpp	/^void TargetFeedback::setTarget(const Vector3<float> &target)$/;"	f	class:mi::opengl::interact::TargetFeedback
setTargetSize	apps/MIFit/ui/CMolwViewScene.cpp	/^void CMolwViewScene::setTargetSize(float size)$/;"	f	class:CMolwViewScene
setText	apps/MIFit/core/Annotation.cpp	/^void Annotation::setText(const std::string &text)$/;"	f	class:Annotation
setTo	libs/opengl/Arc.cpp	/^void Arc::setTo(Vector3<float> &to)$/;"	f	class:mi::opengl::Arc
setTo	libs/opengl/interact/ArcBallFeedback.cpp	/^void ArcBallFeedback::setTo(Vector3<float> &to)$/;"	f	class:mi::opengl::interact::ArcBallFeedback
setTo	libs/opengl/interact/TranslationFeedback.cpp	/^void TranslationFeedback::setTo(const Vector3<float> &to)$/;"	f	class:mi::opengl::interact::TranslationFeedback
setTorsionAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *setTorsionAction;$/;"	m	class:MIGLWidget
setTruncateWidth	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::setTruncateWidth(int width)$/;"	f	class:ModelsTree
setType	libs/chemlib/MIAtom.h	/^        void setType(unsigned int type)$/;"	f	class:chemlib::MIAtom
setType	libs/chemlib/Monomer.h	/^        void setType(const std::string &t)$/;"	f	class:chemlib::Monomer
setValue	libs/math/Grid.h	/^        void Grid<Type>::setValue(int *index, float value)$/;"	f	class:mi::math::Grid
setValue	libs/math/Grid.h	/^        void Grid<Type>::setValue(int a, int b, int c, float value)$/;"	f	class:mi::math::Grid
setValue	libs/math/PeriodicGrid.h	/^        void PeriodicGrid<Type>::setValue(int *index, float value)$/;"	f	class:mi::math::PeriodicGrid
setValue	libs/math/PeriodicGrid.h	/^        void PeriodicGrid<Type>::setValue(int a, int b, int c, float value)$/;"	f	class:mi::math::PeriodicGrid
setValue	libs/opengl/interact/FieldOfViewZoomCommand.cpp	/^void FieldOfViewZoomCommand::setValue(float value)$/;"	f	class:mi::opengl::interact::FieldOfViewZoomCommand
setVerticalAxis	libs/opengl/interact/SimpleMouseRotator.cpp	/^void SimpleMouseRotator::setVerticalAxis(Vector3<float> &verticalAxis)$/;"	f	class:mi::opengl::interact::SimpleMouseRotator
setView	apps/MIFit/core/ViewPoint.cpp	/^void ViewPoint::setView(const Matrix4<float> &m)$/;"	f	class:ViewPoint
setView	apps/MIFit/core/ViewPoint.cpp	/^void ViewPoint::setView(const Quaternion<float> &q)$/;"	f	class:ViewPoint
setView	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::setView(MIGLWidget *view)$/;"	f	class:DisplayTree
setView	apps/MIFit/ui/ModelsView.cpp	/^void AtomsTree::setView(MIGLWidget *view)$/;"	f	class:AtomsTree
setView	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::setView(MIGLWidget *view)$/;"	f	class:ModelsTree
setView	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::setView(MIGLWidget *view)$/;"	f	class:ResiduesTree
setViewEnd	apps/MIFit/ui/MIGLWidget.cpp	/^    void ViewPointAnimation::setViewEnd(const Quaternion<float> &view)$/;"	f	class:__anon10::ViewPointAnimation
setViewPanel	apps/MIFit/ui/ViewSyncedPanel.cpp	/^void ViewSyncedPanel::setViewPanel(MIGLWidget *view)$/;"	f	class:ViewSyncedPanel
setViewVector	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::setViewVector(const Vector3<float> &viewVector)$/;"	f	class:GLRenderer
setViewpoint	apps/MIFit/ui/CMolwViewSlabPickingRenderable.cpp	/^void CMolwViewSlabPickingRenderable::setViewpoint(const Viewpoint &viewpoint)$/;"	f	class:CMolwViewSlabPickingRenderable
setViewpoint	apps/MIFit/ui/CMolwViewSlabPickingRenderable.cpp	/^void CMolwViewSlabRenderable::setViewpoint(const Viewpoint &viewpoint)$/;"	f	class:CMolwViewSlabRenderable
setViewpointLineThickness	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::setViewpointLineThickness(int thickness)$/;"	f	class:MIGLWidget
setViewport	apps/MIFit/ui/CMolwViewScene.cpp	/^void CMolwViewScene::setViewport(Viewport *viewport)$/;"	f	class:CMolwViewScene
setViewport	apps/MIFit/ui/DictEditScene.cpp	/^void DictEditScene::setViewport(Viewport *viewport)$/;"	f	class:DictEditScene
setVisible	apps/MIFit/core/Stack.cpp	/^void Stack::setVisible(bool visible)$/;"	f	class:Stack
setWorkingDirectory	apps/MIFit/jobs/BatchJob.cpp	/^void BatchJob::setWorkingDirectory(const QString &dir)$/;"	f	class:BatchJob
setWorkingDirectory	apps/MIFit/ui/CustomJobDialog.cpp	/^void CustomJobDialog::setWorkingDirectory(const QString &dir)$/;"	f	class:CustomJobDialog
setX	libs/chemlib/MIAtom.h	/^        void setX(float x)$/;"	f	class:chemlib::MIAtom
setX	libs/math/Tuple3.h	/^        void Tuple3<Type>::setX(Type value)$/;"	f	class:mi::math::Tuple3
setY	libs/chemlib/MIAtom.h	/^        void setY(float y)$/;"	f	class:chemlib::MIAtom
setY	libs/math/Tuple3.h	/^        void Tuple3<Type>::setY(Type value)$/;"	f	class:mi::math::Tuple3
setZ	libs/chemlib/MIAtom.h	/^        void setZ(float z)$/;"	f	class:chemlib::MIAtom
setZ	libs/math/Tuple3.h	/^        void Tuple3<Type>::setZ(Type value)$/;"	f	class:mi::math::Tuple3
setZero	libs/math/Matrix3.h	/^        void Matrix3<Type>::setZero()$/;"	f	class:mi::math::Matrix3
setZero	libs/math/Matrix4.h	/^        void Matrix4<Type>::setZero()$/;"	f	class:mi::math::Matrix4
set_chain_id	libs/chemlib/Monomer.h	/^        void set_chain_id(unsigned short i)$/;"	f	class:chemlib::Monomer
set_formal_charge	libs/chemlib/MIAtom.h	/^        void set_formal_charge(int i)$/;"	f	class:chemlib::MIAtom
set_ixyz	libs/map/wxWweave.cpp	297;"	d	file:
set_linkage_type	libs/chemlib/Monomer.h	/^        void set_linkage_type(unsigned short i)$/;"	f	class:chemlib::Monomer
set_radius_type	libs/chemlib/MIAtom.h	/^        void set_radius_type(unsigned char c)$/;"	f	class:chemlib::MIAtom
set_ring_system	libs/chemlib/MIAtom.h	/^        void set_ring_system(int i)$/;"	f	class:chemlib::MIAtom
set_search_flag	libs/chemlib/MIAtom.h	/^        void set_search_flag(int i)$/;"	f	class:chemlib::MIAtom
set_smallest_aromatic_ring	libs/chemlib/MIAtom.h	/^        void set_smallest_aromatic_ring(int i)$/;"	f	class:chemlib::MIAtom
setid	libs/cmtz/mtzdata.h	/^typedef struct { int setid;            \/**< Dataset id *\/$/;"	m	struct:__anon21
setradiustype	apps/MIFit/core/Molecule.cpp	/^static void setradiustype(MIAtom *a, int type, std::string atoms)$/;"	f	file:
settings	libs/map/EMapBase.h	/^    MapSettingsBase *settings;$/;"	m	class:EMapBase
setupJobMenu	apps/MIFit/jobs/BatchJobManager.cpp	/^void BatchJobManager::setupJobMenu(QMenu *menu)$/;"	f	class:BatchJobManager
setupUi	apps/MIFit/ui/ui_AddResidueDialog.h	/^    void setupUi(QDialog *AddResidueDialog)$/;"	f	class:Ui_AddResidueDialog
setupUi	apps/MIFit/ui/ui_AtomColors.h	/^    void setupUi(QDialog *AtomColors)$/;"	f	class:Ui_AtomColors
setupUi	apps/MIFit/ui/ui_BValueColors.h	/^    void setupUi(QDialog *BValueColors)$/;"	f	class:Ui_BValueColors
setupUi	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    void setupUi(QWidget *ContourOptions)$/;"	f	class:Ui_ContourOptionsWidget
setupUi	apps/MIFit/ui/ui_CustomJobDialog.h	/^    void setupUi(QDialog *CustomJobDialog)$/;"	f	class:Ui_CustomJobDialog
setupUi	apps/MIFit/ui/ui_CustomJobPreferences.h	/^    void setupUi(QWidget *CustomJobPreferences)$/;"	f	class:Ui_CustomJobPreferences
setupUi	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    void setupUi(QWidget *EnvironmentPreferences)$/;"	f	class:Ui_EnvironmentPreferences
setupUi	apps/MIFit/ui/ui_GLFormatDialog.h	/^    void setupUi(QDialog *GLFormatDialog)$/;"	f	class:Ui_GLFormatDialog
setupUi	apps/MIFit/ui/ui_GLFormatEdit.h	/^    void setupUi(QDialog *GLFormatEdit)$/;"	f	class:Ui_GLFormatEdit
setupUi	apps/MIFit/ui/ui_GeneralPreferences.h	/^    void setupUi(QWidget *GeneralPreferences)$/;"	f	class:Ui_GeneralPreferences
setupUi	apps/MIFit/ui/ui_LSQFitDialog.h	/^    void setupUi(QDialog *LSQFitDialog)$/;"	f	class:Ui_LSQFitDialog
setupUi	apps/MIFit/ui/ui_ManageCrystals.h	/^    void setupUi(QDialog *ManageCrystals)$/;"	f	class:Ui_ManageCrystals
setupUi	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    void setupUi(QDialog *PhaseFileLoadDialog)$/;"	f	class:Ui_PhaseFileLoadDialog
setupUi	apps/MIFit/ui/ui_PreferencesDialog.h	/^    void setupUi(QDialog *PreferencesDialog)$/;"	f	class:Ui_PreferencesDialog
setupUi	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    void setupUi(QDialog *RefinementOptionsDialog)$/;"	f	class:Ui_RefinementOptionsDialog
setupUi	apps/MIFit/ui/ui_SelectCrystal.h	/^    void setupUi(QDialog *SelectCrystal)$/;"	f	class:Ui_SelectCrystal
setupUi	apps/MIFit/ui/ui_SmilesDialog.h	/^    void setupUi(QDialog *SmilesDialog)$/;"	f	class:Ui_SmilesDialog
setupUi	apps/MIFit/ui/ui_dicteditorform.h	/^    void setupUi(QWidget *DictEditorForm)$/;"	f	class:Ui_DictEditorForm
sfFFT	libs/map/EMapBase.cpp	/^int EMapBase::sfFFT(Residue *res, float &scale)$/;"	f	class:EMapBase
sfatom	libs/map/sfcalc.cpp	/^int sfatom(const MIAtom &atom, CREFL refl[], int nrefl, CMapHeaderBase *mh)$/;"	f
sfcalc	libs/map/sfcalc.cpp	/^int sfcalc(Residue *res, CREFL refl[], int nrefl, CMapHeaderBase *mh, int init)$/;"	f
sfcalcAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *sfcalcAction_;$/;"	m	class:ModelsTree	file:
sfcalcatom	libs/map/sfcalc.cpp	/^int sfcalcatom(MIAtom *atoms[], int natoms, CREFL refl[], int nrefl, CMapHeaderBase *mh, int init)$/;"	f
sfinit	libs/map/sfcalc.cpp	/^sfinit()$/;"	f
sgi	libs/cmtz/ccp4_sysdep.h	42;"	d
sgi	libs/map/fftlib.cpp	193;"	d	file:
sgi	libs/umtz/library.h	135;"	d
sh	apps/MIFit/core/Annotation.h	/^    int sx, sy, sz, sw, sh, yadd;$/;"	m	class:Annotation
shelxDir	mifit.py	/^    shelxDir = os.environ['SHELX_DIR']$/;"	v
shelxDir	mifit.py	/^shelxDir = None$/;"	v
shelxHomeButton	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QPushButton *shelxHomeButton;$/;"	m	class:Ui_EnvironmentPreferences
shelxHomeLineEdit	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QLineEdit *shelxHomeLineEdit;$/;"	m	class:Ui_EnvironmentPreferences
shortint	libs/map/fftlib.cpp	/^typedef short int shortint;$/;"	t	file:
shortlogical	libs/map/fftlib.cpp	/^typedef short int shortlogical;$/;"	t	file:
showAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *showAction_;$/;"	m	class:ModelsTree	file:
showAngles	apps/MIFit/ui/ui_dicteditorform.h	/^    QCheckBox *showAngles;$/;"	m	class:Ui_DictEditorForm
showAtomLabels	apps/MIFit/ui/CMolwViewScene.h	/^    bool showAtomLabels;$/;"	m	class:CMolwViewScene
showAtomLabels	apps/MIFit/ui/DictEditScene.h	/^    bool showAtomLabels;$/;"	m	class:DictEditScene
showAtomLabels	apps/MIFit/ui/ui_dicteditorform.h	/^    QCheckBox *showAtomLabels;$/;"	m	class:Ui_DictEditorForm
showBondOrders	apps/MIFit/ui/GLRenderer.h	/^    bool showBondOrders;$/;"	m	class:GLRenderer
showBonds	apps/MIFit/ui/ui_dicteditorform.h	/^    QCheckBox *showBonds;$/;"	m	class:Ui_DictEditorForm
showBox_0	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QCheckBox *showBox_0;$/;"	m	class:Ui_ContourOptionsWidget
showBox_1	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QCheckBox *showBox_1;$/;"	m	class:Ui_ContourOptionsWidget
showBox_2	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QCheckBox *showBox_2;$/;"	m	class:Ui_ContourOptionsWidget
showBox_3	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QCheckBox *showBox_3;$/;"	m	class:Ui_ContourOptionsWidget
showBox_4	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QCheckBox *showBox_4;$/;"	m	class:Ui_ContourOptionsWidget
showChirals	apps/MIFit/ui/ui_dicteditorform.h	/^    QCheckBox *showChirals;$/;"	m	class:Ui_DictEditorForm
showControls	apps/MIFit/ui/CustomJobDialog.cpp	/^void CustomJobDialog::showControls()$/;"	f	class:CustomJobDialog
showHydrogens	apps/MIFit/ui/ui_dicteditorform.h	/^    QCheckBox *showHydrogens;$/;"	m	class:Ui_DictEditorForm
showPlanes	apps/MIFit/ui/ui_dicteditorform.h	/^    QCheckBox *showPlanes;$/;"	m	class:Ui_DictEditorForm
showPreferences	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::showPreferences(int page)$/;"	f	class:MIMainWindow
showSymmetryAsBackbone	apps/MIFit/ui/CMolwViewScene.h	/^    bool showSymmetryAsBackbone;$/;"	m	class:CMolwViewScene
showUnitCell	apps/MIFit/ui/CMolwViewScene.h	/^    bool showUnitCell;$/;"	m	class:CMolwViewScene
showUnitCell	apps/MIFit/ui/MIGLWidget.h	/^    bool showUnitCell;$/;"	m	class:MIGLWidget
show_allowed	apps/MIFit/ui/RamaPlot.h	/^    bool show_allowed;$/;"	m	class:RamaPlotMgr
show_menu	apps/MIFit/ui/MIMainWindow.h	/^    QMenu *show_menu;$/;"	m	class:MIMainWindow
side_menu	apps/MIFit/ui/MIMainWindow.h	/^    QMenu *side_menu;$/;"	m	class:MIMainWindow
sigma	libs/map/CREFL.h	/^    float sigma;$/;"	m	class:CREFL
sigmaAngle	apps/MIFit/ui/RefinementOptionsDialog.h	/^        float sigmaAngle;$/;"	m	struct:RefinementOptionsDialog::Data
sigmaBond	apps/MIFit/ui/RefinementOptionsDialog.h	/^        float sigmaBond;$/;"	m	struct:RefinementOptionsDialog::Data
sigmaBump	apps/MIFit/ui/RefinementOptionsDialog.h	/^        float sigmaBump;$/;"	m	struct:RefinementOptionsDialog::Data
sigmaPlane	apps/MIFit/ui/RefinementOptionsDialog.h	/^        float sigmaPlane;$/;"	m	struct:RefinementOptionsDialog::Data
sigmaTorsion	apps/MIFit/ui/RefinementOptionsDialog.h	/^        float sigmaTorsion;$/;"	m	struct:RefinementOptionsDialog::Data
sigmaangle	libs/chemlib/MIMolDictionary.h	/^        float sigmaangle;$/;"	m	class:chemlib::MIMolDictionary
sigmabond	libs/chemlib/MIMolDictionary.h	/^        float sigmabond;$/;"	m	class:chemlib::MIMolDictionary
sigmabump	libs/chemlib/MIMolDictionary.h	/^        float sigmabump;$/;"	m	class:chemlib::MIMolDictionary
sigmaplane	libs/chemlib/MIMolDictionary.h	/^        float sigmaplane;$/;"	m	class:chemlib::MIMolDictionary
sigmatorsion	libs/chemlib/MIMolDictionary.h	/^        float sigmatorsion;$/;"	m	class:chemlib::MIMolDictionary
sign	apps/MIFit/ui/MIGLWidget.h	62;"	d
signalJobChanged	apps/MIFit/jobs/BatchJob.cpp	/^void BatchJob::signalJobChanged()$/;"	f	class:BatchJob
silent_mode	apps/MIFit/ui/Application.h	/^    bool silent_mode;$/;"	m	class:Application
sim	libs/map/fftsub.cpp	/^float sim(float x)$/;"	f
singleletter	libs/chemlib/mol_util.cpp	/^char singleletter(const char *t)$/;"	f	namespace:chemlib
size	apps/MIFit/core/ATOMLABEL.cpp	/^int ATOMLABEL::size() const$/;"	f	class:ATOMLABEL
size	apps/MIFit/core/ATOMLABEL.cpp	/^void ATOMLABEL::size(int value)$/;"	f	class:ATOMLABEL
size	apps/MIFit/core/Stack.cpp	/^int Stack::size()$/;"	f	class:Stack
size	apps/MIFit/core/clusterList.h	/^    size_t size()$/;"	f	class:ClusterList
size	apps/MIFit/ui/DictEditCanvas.cpp	/^    QSizeF size;$/;"	m	class:DictEditMainItem	file:
size	apps/MIFit/ui/MIGLWidget.cpp	/^    QSizeF size;$/;"	m	class:MainItem	file:
size	libs/chemlib/Matrix.h	/^        Subscript size() const$/;"	f	class:TNT::Matrix
size	libs/cmtz/ccp4_array.h	/^  int size, capacity;$/;"	m	struct:ccp4array_base_
size	libs/jacgrid/grid.h	/^    float size[3];        \/* length of entire grid in each dimension *\/$/;"	m	class:gridT
size	libs/umtz/umtzlib.h	/^    int size, capacity;$/;"	m	struct:umtz_list_
sizeChanged	apps/MIFit/core/moc/moc_Stack.cpp	/^void Stack::sizeChanged()$/;"	f	class:Stack
sizeHint	apps/MIFit/ui/GLOverviewCanvas.cpp	/^QSize GLOverviewCanvas::sizeHint() const$/;"	f	class:GLOverviewCanvas
sizeHint	apps/MIFit/ui/MIColorPickerDlg.h	/^    QSize sizeHint() const$/;"	f	class:MIColorToolButton
sizeHint	apps/MIFit/ui/MIGLWidget.h	/^    virtual QSize sizeHint() const$/;"	f	class:MIGLWidget
size_	apps/MIFit/core/ATOMLABEL.h	/^    int size_;$/;"	m	class:ATOMLABEL
size_type	libs/chemlib/Matrix.h	/^        typedef Subscript size_type;$/;"	t	class:TNT::Matrix
slabPickingRenderable	apps/MIFit/ui/MIGLWidget.h	/^    CMolwViewSlabPickingRenderable *slabPickingRenderable;$/;"	m	class:MIGLWidget
slabRenderable	apps/MIFit/ui/CMolwViewSlabPickingRenderable.h	/^    CMolwViewSlabRenderable *slabRenderable;$/;"	m	class:CMolwViewSlabPickingRenderable
smallest_aromatic_ring	libs/chemlib/ANGLE.h	/^        int smallest_aromatic_ring;$/;"	m	class:chemlib::ANGLE
smallest_aromatic_ring	libs/chemlib/Bond.h	/^        int smallest_aromatic_ring;     \/\/Size of smallest aromatic ring in which the bond is contained$/;"	m	class:chemlib::Bond
smallest_aromatic_ring	libs/chemlib/Constraint.h	/^        int smallest_aromatic_ring;     \/\/Size of smallest aromatic ring which has the angle$/;"	m	class:chemlib::Angle
smallest_aromatic_ring	libs/chemlib/MIAtom.h	/^        int smallest_aromatic_ring() const$/;"	f	class:chemlib::MIAtom
smallest_aromatic_ring	libs/chemlib/TORSION.h	/^        int smallest_aromatic_ring;$/;"	m	class:chemlib::TORSION
smallest_aromatic_ring_	libs/chemlib/MIAtom.h	/^        int smallest_aromatic_ring_; \/\/ Size of smallest aromatic ring in which the atom is contained$/;"	m	class:chemlib::MIAtom
smallest_ring_size	libs/chemlib/ANGLE.h	/^        int smallest_ring_size;$/;"	m	class:chemlib::ANGLE
smallest_ring_size	libs/chemlib/Bond.h	/^        int smallest_ring_size;         \/\/Size of smallest ring in which the bond is contained$/;"	m	class:chemlib::Bond
smallest_ring_size	libs/chemlib/Constraint.h	/^        int smallest_ring_size;         \/\/Size of smallest ring in which the angle is contained$/;"	m	class:chemlib::Angle
smallest_ring_size	libs/chemlib/TORSION.h	/^        int smallest_ring_size;$/;"	m	class:chemlib::TORSION
smallest_saturated_ring	libs/chemlib/TORSION.h	/^        int smallest_saturated_ring;$/;"	m	class:chemlib::TORSION
smi	libs/map/fftsub.cpp	/^int smi(float *am, long int*, long int *n, long int *nfail)$/;"	f
smiles	apps/MIFit/ui/SmilesDialog.h	/^        std::string smiles;$/;"	m	struct:SmilesDialog::Data
smilesDatabaseButton	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QPushButton *smilesDatabaseButton;$/;"	m	class:Ui_EnvironmentPreferences
smilesDatabaseLineEdit	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QLineEdit *smilesDatabaseLineEdit;$/;"	m	class:Ui_EnvironmentPreferences
smilesLineEdit	apps/MIFit/ui/ui_SmilesDialog.h	/^    QLineEdit *smilesLineEdit;$/;"	m	class:Ui_SmilesDialog
smilesRadioButton	apps/MIFit/ui/ui_SmilesDialog.h	/^    QRadioButton *smilesRadioButton;$/;"	m	class:Ui_SmilesDialog
smiles_string	examples/smilesdb.py	/^smiles_string = 'Cc1ncc(COP(O)(O)=O)c(C=O)c1O'$/;"	v
so	libs/cmtz/mtzdata.h	/^		 float so[3];          \/**< source vector *\/$/;"	m	struct:bathead
socketId	mifit.py	/^    socketId = os.environ['MIFIT_SOCKET_ID']$/;"	v
socketId	mifit.py	/^socketId = None$/;"	v
solidSurfCommonActionGroup	apps/MIFit/ui/MIGLWidget.h	/^    const QActionGroup *solidSurfCommonActionGroup() const$/;"	f	class:MIGLWidget
solidSurfMenuAction	apps/MIFit/ui/MIGLWidget.cpp	/^QAction*MIGLWidget::solidSurfMenuAction() const$/;"	f	class:MIGLWidget
solidSurfMenuAction	apps/MIFit/ui/MIMainWindow.h	/^    QAction *solidSurfMenuAction;$/;"	m	class:MIMainWindow
solidSurfaceActionTriggered	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::solidSurfaceActionTriggered(QAction *action)$/;"	f	class:MIGLWidget
solidSurfaceCommand	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::solidSurfaceCommand(int id, std::vector<Molecule*> &mols, std::vector<unsigned int> &selected)$/;"	f	class:MIGLWidget
solidsurfActionGroup	apps/MIFit/ui/MIGLWidget.h	/^    QActionGroup *solidsurfActionGroup;$/;"	m	class:MIGLWidget
solidsurfActions	apps/MIFit/ui/MIGLWidget.h	/^    QAction *solidsurfActions[10];$/;"	m	class:MIGLWidget
solidsurfCommonActionGroup	apps/MIFit/ui/MIGLWidget.h	/^    QActionGroup *solidsurfCommonActionGroup;$/;"	m	class:MIGLWidget
solidsurf_current_surface	apps/MIFit/ui/MIGLWidget.h	/^    unsigned int solidsurf_current_surface;$/;"	m	class:MIGLWidget
solidsurf_menu_action	apps/MIFit/ui/MIGLWidget.cpp	/^    QAction* solidsurf_menu_action(QMenu *menu, QActionGroup *group, int actionId, const char *text)$/;"	f	namespace:__anon10
solidsurf_popup_menu	apps/MIFit/ui/MIGLWidget.h	/^    QMenu *solidsurf_popup_menu;$/;"	m	class:MIGLWidget
solv	libs/map/fftsub.cpp	/^int solv(float *am, float *v, float *dv, float *diag, long int *nm, long int *nv, float *sig)$/;"	f
sortChainsAction_	apps/MIFit/ui/ModelsView.cpp	/^    QAction *sortChainsAction_;$/;"	m	class:ModelsTree	file:
sortFileNameByTime	apps/MIFit/jobs/OpenJobResults.cpp	/^void sortFileNameByTime(QStringList &names)$/;"	f	namespace:__anon16
sort_batches	libs/cmtz/cmtzlib.c	/^MTZBAT *sort_batches(MTZBAT *batch, int numbat)$/;"	f
sort_element	apps/MIFit/ui/surf.cpp	/^struct sort_element$/;"	s	file:
source	apps/MIFit/core/Molecule.h	/^    std::string source;$/;"	m	class:Molecule
source	apps/MIFit/ui/LSQFitDialog.h	/^    chemlib::Residue *source;$/;"	m	class:MATCH
source	libs/cmtz/mtzdata.h	/^		 float source[3];      \/**< idealised source vector *\/$/;"	m	struct:bathead
source	libs/cmtz/mtzdata.h	/^                 unsigned int source;  \/**< column index in input file *\/$/;"	m	struct:__anon20
sourceComboBox	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QComboBox *sourceComboBox;$/;"	m	class:Ui_LSQFitDialog
sourceListWidget	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QListWidget *sourceListWidget;$/;"	m	class:Ui_LSQFitDialog
sourceModel	apps/MIFit/ui/LSQFitDialog.h	/^        std::string sourceModel;$/;"	m	struct:LSQFitDialog::Data
sourceTextCtrl	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QLineEdit *sourceTextCtrl;$/;"	m	class:Ui_LSQFitDialog
sourceres	apps/MIFit/ui/LSQFitDialog.h	/^    chemlib::Residue *targetres, *sourceres;$/;"	m	class:LSQFitDialog
spaceGroup	apps/MIFit/ui/ui_ManageCrystals.h	/^    QLineEdit *spaceGroup;$/;"	m	class:Ui_ManageCrystals
spaceGroupLineEdit	apps/MIFit/ui/ui_SelectCrystal.h	/^    QLineEdit *spaceGroupLineEdit;$/;"	m	class:Ui_SelectCrystal
spacegroupList	apps/MIFit/script/MIFitScriptObject.cpp	/^QStringList MIFitScriptObject::spacegroupList()$/;"	f	class:MIFitScriptObject
spacegroupList	mifit.py	/^def spacegroupList():$/;"	f
spacerItem	apps/MIFit/ui/ui_dicteditorform.h	/^    QSpacerItem *spacerItem;$/;"	m	class:Ui_DictEditorForm
spacing	apps/MIFit/core/SURFDOT.cpp	/^float spacing = -1.0F;$/;"	v
spacing	apps/MIFit/core/SurfaceSphere.h	/^    float spacing;$/;"	m	class:SurfaceSphere
spacing	libs/map/InterpBox.h	/^    float spacing;$/;"	m	class:InterpBox
sparc	libs/map/fftlib.cpp	194;"	d	file:
spcgrp	libs/cmtz/mtzdata.h	/^typedef struct { int spcgrp;           \/**< spacegroup number *\/$/;"	m	struct:__anon23
spcgrpname	libs/cmtz/mtzdata.h	/^		 char spcgrpname[MAXSPGNAMELENGTH+1];  \/**< spacegroup name *\/$/;"	m	struct:__anon23
specifyParametersRadioButton	apps/MIFit/ui/ui_SelectCrystal.h	/^    QRadioButton *specifyParametersRadioButton;$/;"	m	class:Ui_SelectCrystal
specularColor	libs/opengl/Light.h	/^            float *specularColor;$/;"	m	class:mi::opengl::Light
spg_ccp4_num	libs/cmtz/ccp4_spg.h	/^  int spg_ccp4_num;       \/* CCP4 spacegroup number *\/$/;"	m	struct:CSym::ccp4_spacegroup_
spg_num	libs/cmtz/ccp4_spg.h	/^  int spg_num;            \/* true spacegroup number *\/$/;"	m	struct:CSym::ccp4_spacegroup_
spgpname	libs/map/CMapHeaderBase.h	/^    std::string spgpname;$/;"	m	class:CMapHeaderBase
spgpno	libs/map/CMapHeaderBase.h	/^    int spgpno;$/;"	m	class:CMapHeaderBase
sphereInFrustum	libs/opengl/Frustum.cpp	/^Frustum::CullingResult Frustum::sphereInFrustum(Vector3<float> &position, float radius)$/;"	f	class:mi::opengl::Frustum
sphereMethodRadioButton	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QRadioButton *sphereMethodRadioButton;$/;"	m	class:Ui_ContourOptionsWidget
sphereoidX	apps/MIFit/ui/GLRenderer.cpp	1617;"	d	file:
sphereoidZ	apps/MIFit/ui/GLRenderer.cpp	1618;"	d	file:
srfboxsize	apps/MIFit/core/Molecule.h	/^    float srfboxsize;$/;"	m	class:Molecule
srfdotsper	apps/MIFit/core/Molecule.h	/^    float srfdotsper;$/;"	m	class:Molecule
srfp_	libs/map/fftlib.cpp	/^int srfp_(integer *pts, integer *pmax, integer *twogrp, integer *factor, integer *sym, integer *psym, integer *unsym, logical *error)$/;"	f
stackItem	apps/MIFit/ui/DictEditCanvas.h	/^    QGraphicsObject *stackItem;$/;"	m	class:DictEditCanvas
stackItem	apps/MIFit/ui/MIGLWidget.h	/^    QGraphicsObject *stackItem;$/;"	m	class:MIGLWidget
stackedLayout	apps/MIFit/ui/ViewSyncedPanel.h	/^    QStackedLayout* stackedLayout;$/;"	m	class:ViewSyncedPanel
stackedWidget	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QStackedWidget *stackedWidget;$/;"	m	class:Ui_CustomJobDialog
stackedWidget	apps/MIFit/ui/ui_PreferencesDialog.h	/^    QStackedWidget *stackedWidget;$/;"	m	class:Ui_PreferencesDialog
stamp_loc	libs/cmtz/library_file.h	/^  size_t stamp_loc;$/;"	m	struct:CCP4::_CFileStruct
stardent	libs/umtz/library.h	92;"	d
start	apps/MIFit/python/PythonEngine.cpp	/^void PythonEngine::start()$/;"	f	class:PythonEngine
startElement	apps/MIFit/ui/MoleculeXmlHandler.cpp	/^bool MoleculeXmlHandler::startElement(const QString &namespaceURI,$/;"	f	class:MoleculeXmlHandler
startOfModel	apps/MIFit/ui/ui_AddResidueDialog.h	/^    QRadioButton *startOfModel;$/;"	m	class:Ui_AddResidueDialog
startPosition	libs/opengl/interact/MouseTranslator.h	/^                mi::math::Vector3<float> *startPosition;$/;"	m	class:mi::opengl::interact::MouseTranslator
startQuat	libs/opengl/interact/MouseArcBallOrbitor.h	/^                mi::math::Quaternion<float> startQuat;$/;"	m	class:mi::opengl::interact::MouseArcBallOrbitor
startValue	libs/opengl/interact/MouseZoomer.h	/^                float startValue;$/;"	m	class:mi::opengl::interact::MouseZoomer
startVector	libs/opengl/interact/MouseArcBall.h	/^                mi::math::Vector3<float> *startVector;$/;"	m	class:mi::opengl::interact::MouseArcBall
started	apps/MIFit/python/PythonEngine.h	/^    bool started;$/;"	m	class:PythonEngine
startsWith	libs/util/util.cpp	/^bool startsWith(const std::string &str, const char *substr)$/;"	f
startsWith	libs/util/util.cpp	/^bool startsWith(const std::string &str, const std::string &substr)$/;"	f
state	libs/opengl/zlib/zlib.h	/^    struct internal_state FAR *state; \/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:z_stream_s::FAR
staticMetaObject	apps/MIFit/core/moc/moc_Annotation.cpp	/^const QMetaObject Annotation::staticMetaObject = {$/;"	m	class:Annotation	file:
staticMetaObject	apps/MIFit/core/moc/moc_Molecule.cpp	/^const QMetaObject Molecule::staticMetaObject = {$/;"	m	class:Molecule	file:
staticMetaObject	apps/MIFit/core/moc/moc_Stack.cpp	/^const QMetaObject Stack::staticMetaObject = {$/;"	m	class:Stack	file:
staticMetaObject	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^const QMetaObject BatchJob::staticMetaObject = {$/;"	m	class:BatchJob	file:
staticMetaObject	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^const QMetaObject JobFinishedStatusLabel::staticMetaObject = {$/;"	m	class:JobFinishedStatusLabel	file:
staticMetaObject	apps/MIFit/jobs/moc/moc_BatchJobManager.cpp	/^const QMetaObject BatchJobManager::staticMetaObject = {$/;"	m	class:BatchJobManager	file:
staticMetaObject	apps/MIFit/script/moc/moc_LocalSocketScript.cpp	/^const QMetaObject LocalSocketScript::staticMetaObject = {$/;"	m	class:LocalSocketScript	file:
staticMetaObject	apps/MIFit/script/moc/moc_MIFitScriptObject.cpp	/^const QMetaObject MIFitScriptObject::staticMetaObject = {$/;"	m	class:MIFitScriptObject	file:
staticMetaObject	apps/MIFit/ui/moc/moc_AddResidueDialog.cpp	/^const QMetaObject AddResidueDialog::staticMetaObject = {$/;"	m	class:AddResidueDialog	file:
staticMetaObject	apps/MIFit/ui/moc/moc_Application.cpp	/^const QMetaObject Application::staticMetaObject = {$/;"	m	class:Application	file:
staticMetaObject	apps/MIFit/ui/moc/moc_AtomColors.cpp	/^const QMetaObject AtomColors::staticMetaObject = {$/;"	m	class:AtomColors	file:
staticMetaObject	apps/MIFit/ui/moc/moc_BValueColors.cpp	/^const QMetaObject BValueColors::staticMetaObject = {$/;"	m	class:BValueColors	file:
staticMetaObject	apps/MIFit/ui/moc/moc_ContourOptionsWidget.cpp	/^const QMetaObject ContourOptionsWidget::staticMetaObject = {$/;"	m	class:ContourOptionsWidget	file:
staticMetaObject	apps/MIFit/ui/moc/moc_CurrentMIGLWidgetAction.cpp	/^const QMetaObject CurrentMIGLWidgetAction::staticMetaObject = {$/;"	m	class:CurrentMIGLWidgetAction	file:
staticMetaObject	apps/MIFit/ui/moc/moc_CursorArea.cpp	/^const QMetaObject CursorArea::staticMetaObject = {$/;"	m	class:CursorArea	file:
staticMetaObject	apps/MIFit/ui/moc/moc_CustomJobDialog.cpp	/^const QMetaObject CustomJobDialog::staticMetaObject = {$/;"	m	class:CustomJobDialog	file:
staticMetaObject	apps/MIFit/ui/moc/moc_CustomJobPreferences.cpp	/^const QMetaObject CustomJobPreferences::staticMetaObject = {$/;"	m	class:CustomJobPreferences	file:
staticMetaObject	apps/MIFit/ui/moc/moc_DictEditCanvas.cpp	/^const QMetaObject DictEditCanvas::staticMetaObject = {$/;"	m	class:DictEditCanvas	file:
staticMetaObject	apps/MIFit/ui/moc/moc_DictEditDialog.cpp	/^const QMetaObject DictEditDialog::staticMetaObject = {$/;"	m	class:DictEditDialog	file:
staticMetaObject	apps/MIFit/ui/moc/moc_Displaylist.cpp	/^const QMetaObject Displaylist::staticMetaObject = {$/;"	m	class:Displaylist	file:
staticMetaObject	apps/MIFit/ui/moc/moc_EMap.cpp	/^const QMetaObject EMap::staticMetaObject = {$/;"	m	class:EMap	file:
staticMetaObject	apps/MIFit/ui/moc/moc_EnvironmentPreferences.cpp	/^const QMetaObject EnvironmentPreferences::staticMetaObject = {$/;"	m	class:EnvironmentPreferences	file:
staticMetaObject	apps/MIFit/ui/moc/moc_GLFormatDialog.cpp	/^const QMetaObject GLFormatDialog::staticMetaObject = {$/;"	m	class:GLFormatDialog	file:
staticMetaObject	apps/MIFit/ui/moc/moc_GLFormatEdit.cpp	/^const QMetaObject GLFormatEdit::staticMetaObject = {$/;"	m	class:GLFormatEdit	file:
staticMetaObject	apps/MIFit/ui/moc/moc_GeneralPreferences.cpp	/^const QMetaObject GeneralPreferences::staticMetaObject = {$/;"	m	class:GeneralPreferences	file:
staticMetaObject	apps/MIFit/ui/moc/moc_GenericDataDialog.cpp	/^const QMetaObject GenericDataDialog::staticMetaObject = {$/;"	m	class:GenericDataDialog	file:
staticMetaObject	apps/MIFit/ui/moc/moc_JobsView.cpp	/^const QMetaObject JobsView::staticMetaObject = {$/;"	m	class:JobsView	file:
staticMetaObject	apps/MIFit/ui/moc/moc_LSQFitDialog.cpp	/^const QMetaObject LSQFitDialog::staticMetaObject = {$/;"	m	class:LSQFitDialog	file:
staticMetaObject	apps/MIFit/ui/moc/moc_MIBrowsePair.cpp	/^const QMetaObject MIBrowsePair::staticMetaObject = {$/;"	m	class:MIBrowsePair	file:
staticMetaObject	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^const QMetaObject MIColorPickerDlg::staticMetaObject = {$/;"	m	class:MIColorPickerDlg	file:
staticMetaObject	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^const QMetaObject MIColorToolButton::staticMetaObject = {$/;"	m	class:MIColorToolButton	file:
staticMetaObject	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^const QMetaObject MIGLWidget::staticMetaObject = {$/;"	m	class:MIGLWidget	file:
staticMetaObject	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^const QMetaObject ViewController::staticMetaObject = {$/;"	m	class:ViewController	file:
staticMetaObject	apps/MIFit/ui/moc/moc_MIMainWindow.cpp	/^const QMetaObject MIMainWindow::staticMetaObject = {$/;"	m	class:MIMainWindow	file:
staticMetaObject	apps/MIFit/ui/moc/moc_MIQDialog.cpp	/^const QMetaObject MIQDialog::staticMetaObject = {$/;"	m	class:MIQDialog	file:
staticMetaObject	apps/MIFit/ui/moc/moc_MIQTreeWidget.cpp	/^const QMetaObject MIQTreeWidget::staticMetaObject = {$/;"	m	class:MIQTreeWidget	file:
staticMetaObject	apps/MIFit/ui/moc/moc_ManageCrystals.cpp	/^const QMetaObject ManageCrystals::staticMetaObject = {$/;"	m	class:ManageCrystals	file:
staticMetaObject	apps/MIFit/ui/moc/moc_ModelsView.cpp	/^const QMetaObject ModelsView::staticMetaObject = {$/;"	m	class:ModelsView	file:
staticMetaObject	apps/MIFit/ui/moc/moc_PhaseFileLoadDialog.cpp	/^const QMetaObject PhaseFileLoadDialog::staticMetaObject = {$/;"	m	class:PhaseFileLoadDialog	file:
staticMetaObject	apps/MIFit/ui/moc/moc_PreferencesDialog.cpp	/^const QMetaObject PreferencesDialog::staticMetaObject = {$/;"	m	class:PreferencesDialog	file:
staticMetaObject	apps/MIFit/ui/moc/moc_RamaPlot.cpp	/^const QMetaObject RamaPlotMgr::staticMetaObject = {$/;"	m	class:RamaPlotMgr	file:
staticMetaObject	apps/MIFit/ui/moc/moc_RefinementOptionsDialog.cpp	/^const QMetaObject RefinementOptionsDialog::staticMetaObject = {$/;"	m	class:RefinementOptionsDialog	file:
staticMetaObject	apps/MIFit/ui/moc/moc_SelectCrystal.cpp	/^const QMetaObject SelectCrystal::staticMetaObject = {$/;"	m	class:SelectCrystal	file:
staticMetaObject	apps/MIFit/ui/moc/moc_SmilesDialog.cpp	/^const QMetaObject SmilesDialog::staticMetaObject = {$/;"	m	class:SmilesDialog	file:
staticMetaObject	apps/MIFit/ui/moc/moc_ViewSyncedPanel.cpp	/^const QMetaObject ViewSyncedPanel::staticMetaObject = {$/;"	m	class:ViewSyncedPanel	file:
staticMetaObject	apps/MIFit/ui/moc/moc_graphlib.cpp	/^const QMetaObject GraphWindow::staticMetaObject = {$/;"	m	class:GraphWindow	file:
staticMetaObject	apps/MIFit/ui/moc/moc_tools.cpp	/^const QMetaObject Tools::staticMetaObject = {$/;"	m	class:Tools	file:
staticMetaObject	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^const QMetaObject chemlib::MIMoleculeBase::staticMetaObject = {$/;"	m	class:chemlib::MIMoleculeBase	file:
staticMetaObject	libs/map/moc/moc_CMapHeaderBase.cpp	/^const QMetaObject CMapHeaderBase::staticMetaObject = {$/;"	m	class:CMapHeaderBase	file:
staticMetaObject	libs/map/moc/moc_EMapBase.cpp	/^const QMetaObject EMapBase::staticMetaObject = {$/;"	m	class:EMapBase	file:
staticMetaObject	libs/molopt/moc/moc_MIMolOpt.cpp	/^const QMetaObject MIMolOpt::staticMetaObject = {$/;"	m	class:MIMolOpt	file:
staticMetaObjectExtraData	apps/MIFit/core/moc/moc_Annotation.cpp	/^const QMetaObjectExtraData Annotation::staticMetaObjectExtraData = {$/;"	m	class:Annotation	file:
staticMetaObjectExtraData	apps/MIFit/core/moc/moc_Molecule.cpp	/^const QMetaObjectExtraData Molecule::staticMetaObjectExtraData = {$/;"	m	class:Molecule	file:
staticMetaObjectExtraData	apps/MIFit/core/moc/moc_Stack.cpp	/^const QMetaObjectExtraData Stack::staticMetaObjectExtraData = {$/;"	m	class:Stack	file:
staticMetaObjectExtraData	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^const QMetaObjectExtraData BatchJob::staticMetaObjectExtraData = {$/;"	m	class:BatchJob	file:
staticMetaObjectExtraData	apps/MIFit/jobs/moc/moc_BatchJob.cpp	/^const QMetaObjectExtraData JobFinishedStatusLabel::staticMetaObjectExtraData = {$/;"	m	class:JobFinishedStatusLabel	file:
staticMetaObjectExtraData	apps/MIFit/jobs/moc/moc_BatchJobManager.cpp	/^const QMetaObjectExtraData BatchJobManager::staticMetaObjectExtraData = {$/;"	m	class:BatchJobManager	file:
staticMetaObjectExtraData	apps/MIFit/script/moc/moc_LocalSocketScript.cpp	/^const QMetaObjectExtraData LocalSocketScript::staticMetaObjectExtraData = {$/;"	m	class:LocalSocketScript	file:
staticMetaObjectExtraData	apps/MIFit/script/moc/moc_MIFitScriptObject.cpp	/^const QMetaObjectExtraData MIFitScriptObject::staticMetaObjectExtraData = {$/;"	m	class:MIFitScriptObject	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_AddResidueDialog.cpp	/^const QMetaObjectExtraData AddResidueDialog::staticMetaObjectExtraData = {$/;"	m	class:AddResidueDialog	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_Application.cpp	/^const QMetaObjectExtraData Application::staticMetaObjectExtraData = {$/;"	m	class:Application	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_AtomColors.cpp	/^const QMetaObjectExtraData AtomColors::staticMetaObjectExtraData = {$/;"	m	class:AtomColors	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_BValueColors.cpp	/^const QMetaObjectExtraData BValueColors::staticMetaObjectExtraData = {$/;"	m	class:BValueColors	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_ContourOptionsWidget.cpp	/^const QMetaObjectExtraData ContourOptionsWidget::staticMetaObjectExtraData = {$/;"	m	class:ContourOptionsWidget	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_CurrentMIGLWidgetAction.cpp	/^const QMetaObjectExtraData CurrentMIGLWidgetAction::staticMetaObjectExtraData = {$/;"	m	class:CurrentMIGLWidgetAction	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_CursorArea.cpp	/^const QMetaObjectExtraData CursorArea::staticMetaObjectExtraData = {$/;"	m	class:CursorArea	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_CustomJobDialog.cpp	/^const QMetaObjectExtraData CustomJobDialog::staticMetaObjectExtraData = {$/;"	m	class:CustomJobDialog	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_CustomJobPreferences.cpp	/^const QMetaObjectExtraData CustomJobPreferences::staticMetaObjectExtraData = {$/;"	m	class:CustomJobPreferences	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_DictEditCanvas.cpp	/^const QMetaObjectExtraData DictEditCanvas::staticMetaObjectExtraData = {$/;"	m	class:DictEditCanvas	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_DictEditDialog.cpp	/^const QMetaObjectExtraData DictEditDialog::staticMetaObjectExtraData = {$/;"	m	class:DictEditDialog	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_Displaylist.cpp	/^const QMetaObjectExtraData Displaylist::staticMetaObjectExtraData = {$/;"	m	class:Displaylist	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_EMap.cpp	/^const QMetaObjectExtraData EMap::staticMetaObjectExtraData = {$/;"	m	class:EMap	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_EnvironmentPreferences.cpp	/^const QMetaObjectExtraData EnvironmentPreferences::staticMetaObjectExtraData = {$/;"	m	class:EnvironmentPreferences	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_GLFormatDialog.cpp	/^const QMetaObjectExtraData GLFormatDialog::staticMetaObjectExtraData = {$/;"	m	class:GLFormatDialog	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_GLFormatEdit.cpp	/^const QMetaObjectExtraData GLFormatEdit::staticMetaObjectExtraData = {$/;"	m	class:GLFormatEdit	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_GeneralPreferences.cpp	/^const QMetaObjectExtraData GeneralPreferences::staticMetaObjectExtraData = {$/;"	m	class:GeneralPreferences	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_GenericDataDialog.cpp	/^const QMetaObjectExtraData GenericDataDialog::staticMetaObjectExtraData = {$/;"	m	class:GenericDataDialog	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_JobsView.cpp	/^const QMetaObjectExtraData JobsView::staticMetaObjectExtraData = {$/;"	m	class:JobsView	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_LSQFitDialog.cpp	/^const QMetaObjectExtraData LSQFitDialog::staticMetaObjectExtraData = {$/;"	m	class:LSQFitDialog	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_MIBrowsePair.cpp	/^const QMetaObjectExtraData MIBrowsePair::staticMetaObjectExtraData = {$/;"	m	class:MIBrowsePair	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^const QMetaObjectExtraData MIColorPickerDlg::staticMetaObjectExtraData = {$/;"	m	class:MIColorPickerDlg	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_MIColorPickerDlg.cpp	/^const QMetaObjectExtraData MIColorToolButton::staticMetaObjectExtraData = {$/;"	m	class:MIColorToolButton	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^const QMetaObjectExtraData MIGLWidget::staticMetaObjectExtraData = {$/;"	m	class:MIGLWidget	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^const QMetaObjectExtraData ViewController::staticMetaObjectExtraData = {$/;"	m	class:ViewController	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_MIMainWindow.cpp	/^const QMetaObjectExtraData MIMainWindow::staticMetaObjectExtraData = {$/;"	m	class:MIMainWindow	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_MIQDialog.cpp	/^const QMetaObjectExtraData MIQDialog::staticMetaObjectExtraData = {$/;"	m	class:MIQDialog	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_MIQTreeWidget.cpp	/^const QMetaObjectExtraData MIQTreeWidget::staticMetaObjectExtraData = {$/;"	m	class:MIQTreeWidget	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_ManageCrystals.cpp	/^const QMetaObjectExtraData ManageCrystals::staticMetaObjectExtraData = {$/;"	m	class:ManageCrystals	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_ModelsView.cpp	/^const QMetaObjectExtraData ModelsView::staticMetaObjectExtraData = {$/;"	m	class:ModelsView	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_PhaseFileLoadDialog.cpp	/^const QMetaObjectExtraData PhaseFileLoadDialog::staticMetaObjectExtraData = {$/;"	m	class:PhaseFileLoadDialog	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_PreferencesDialog.cpp	/^const QMetaObjectExtraData PreferencesDialog::staticMetaObjectExtraData = {$/;"	m	class:PreferencesDialog	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_RamaPlot.cpp	/^const QMetaObjectExtraData RamaPlotMgr::staticMetaObjectExtraData = {$/;"	m	class:RamaPlotMgr	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_RefinementOptionsDialog.cpp	/^const QMetaObjectExtraData RefinementOptionsDialog::staticMetaObjectExtraData = {$/;"	m	class:RefinementOptionsDialog	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_SelectCrystal.cpp	/^const QMetaObjectExtraData SelectCrystal::staticMetaObjectExtraData = {$/;"	m	class:SelectCrystal	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_SmilesDialog.cpp	/^const QMetaObjectExtraData SmilesDialog::staticMetaObjectExtraData = {$/;"	m	class:SmilesDialog	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_ViewSyncedPanel.cpp	/^const QMetaObjectExtraData ViewSyncedPanel::staticMetaObjectExtraData = {$/;"	m	class:ViewSyncedPanel	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_graphlib.cpp	/^const QMetaObjectExtraData GraphWindow::staticMetaObjectExtraData = {$/;"	m	class:GraphWindow	file:
staticMetaObjectExtraData	apps/MIFit/ui/moc/moc_tools.cpp	/^const QMetaObjectExtraData Tools::staticMetaObjectExtraData = {$/;"	m	class:Tools	file:
staticMetaObjectExtraData	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^const QMetaObjectExtraData chemlib::MIMoleculeBase::staticMetaObjectExtraData = {$/;"	m	class:chemlib::MIMoleculeBase	file:
staticMetaObjectExtraData	libs/map/moc/moc_CMapHeaderBase.cpp	/^const QMetaObjectExtraData CMapHeaderBase::staticMetaObjectExtraData = {$/;"	m	class:CMapHeaderBase	file:
staticMetaObjectExtraData	libs/map/moc/moc_EMapBase.cpp	/^const QMetaObjectExtraData EMapBase::staticMetaObjectExtraData = {$/;"	m	class:EMapBase	file:
staticMetaObjectExtraData	libs/molopt/moc/moc_MIMolOpt.cpp	/^const QMetaObjectExtraData MIMolOpt::staticMetaObjectExtraData = {$/;"	m	class:MIMolOpt	file:
statusBar	apps/MIFit/jobs/BatchJob.h	/^    QStatusBar *statusBar;$/;"	m	class:JobFinishedStatusLabel
stdrefl_	libs/map/stdrefl.cpp	/^\/* Subroutine *\/ int stdrefl_(long int *ih, long int *ik, long int *il, long int *mult, float *eps, long int *mk, long int *iflg, long int *iflg2, long int *iss,$/;"	f
stencil	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QCheckBox *stencil;$/;"	m	class:Ui_GLFormatEdit
stencilSize	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QSpinBox *stencilSize;$/;"	m	class:Ui_GLFormatEdit
stereo	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QCheckBox *stereo;$/;"	m	class:Ui_GLFormatEdit
stereo	libs/chemlib/Bond.h	/^        char stereo;$/;"	m	class:chemlib::Bond
stereo	libs/opengl/StereoView.h	/^            bool stereo;$/;"	m	class:mi::opengl::StereoView
stereoCamera	libs/opengl/StereoView.h	/^            Camera *stereoCamera;$/;"	m	class:mi::opengl::StereoView
stereoView	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.h	/^    mi::opengl::StereoView *stereoView;$/;"	m	class:CMolwViewAnnotationPickingRenderable
stereoView	apps/MIFit/ui/CMolwViewAtomPickingRenderable.h	/^    mi::opengl::StereoView *stereoView;$/;"	m	class:CMolwViewAtomPickingRenderable
stereoView	apps/MIFit/ui/CMolwViewBondPickingRenderable.h	/^    mi::opengl::StereoView *stereoView;$/;"	m	class:CMolwViewBondPickingRenderable
stereoView	apps/MIFit/ui/CMolwViewSlabPickingRenderable.h	/^    mi::opengl::StereoView *stereoView;$/;"	m	class:CMolwViewSlabPickingRenderable
stereoView	apps/MIFit/ui/DictEditAnglePickingRenderable.h	/^    mi::opengl::StereoView *stereoView;$/;"	m	class:DictEditAnglePickingRenderable
stereoView	apps/MIFit/ui/DictEditAnnotationPickingRenderable.h	/^    mi::opengl::StereoView *stereoView;$/;"	m	class:DictEditAnnotationPickingRenderable
stereoView	apps/MIFit/ui/DictEditAtomPickingRenderable.h	/^    mi::opengl::StereoView *stereoView;$/;"	m	class:DictEditAtomPickingRenderable
stereoView	apps/MIFit/ui/DictEditBondPickingRenderable.h	/^    mi::opengl::StereoView *stereoView;$/;"	m	class:DictEditBondPickingRenderable
stereoView	apps/MIFit/ui/DictEditCanvas.h	/^    mi::opengl::StereoView *stereoView;$/;"	m	class:DictEditCanvas
stereoView	apps/MIFit/ui/MIGLWidget.h	/^    mi::opengl::StereoView *stereoView;$/;"	m	class:MIGLWidget
sthol	libs/map/CREFL.h	/^    float sthol;$/;"	m	class:CREFL
sthol	libs/map/rescalc.cpp	/^float sthol(int ih, int ik, int il, float A, float B, float C, float ALPHA, float BETA, float GAMMA, int init)$/;"	f
stick	apps/MIFit/core/RenderStyle.cpp	/^const RenderStyle *RenderStyle::stick = NULL;$/;"	m	class:RenderStyle	file:
stick	apps/MIFit/core/RenderStyle.h	/^    static const RenderStyle *stick;$/;"	m	class:RenderStyle
stickPercent	apps/MIFit/core/RenderStyle.h	/^    float stickPercent;$/;"	m	class:RenderStyle
store	apps/MIFit/core/Cfiles.h	/^    enum Mode { store = 0, load = 1 };$/;"	e	enum:CArchive::Mode
store	libs/opengl/QuatUtil.cpp	/^void QuatUtil::store(Quaternion<float> q, float *buffer)$/;"	f	class:mi::opengl::QuatUtil
str_index	libs/map/fftsub.cpp	/^int str_index(char *str1, char *str2)$/;"	f
stream	libs/cmtz/library_file.h	/^  FILE *stream;$/;"	m	struct:CCP4::_CFileStruct
strerror	libs/cmtz/ccp4_sysdep.h	57;"	d
strerror	libs/umtz/library.h	159;"	d
stringReplaceAll	libs/opengl/Object3d.cpp	/^string stringReplaceAll(string s, string target, string replacement)$/;"	f	namespace:mi::opengl
stringSplit	apps/MIFit/ui/MIDialog.cpp	/^static void stringSplit(std::string str,$/;"	f	file:
stringSplit	apps/MIFit/ui/graphlib.cpp	/^static void stringSplit(std::string str, std::string delim, std::vector<std::string> &results)$/;"	f	file:
stringSplit	libs/opengl/Object3d.cpp	/^void stringSplit(string str, string delim, vector<string> &results)$/;"	f	namespace:mi::opengl
stringTrim	libs/opengl/Object3d.cpp	/^string stringTrim(string &s, const string &drop = " ")$/;"	f	namespace:mi::opengl
strkeq	libs/chemlib/PDB.cpp	98;"	d	file:
strlength	libs/cmtz/ccp4_parser.h	/^  int    strlength;     \/* Number of characters in whole token (strings only) *\/$/;"	m	struct:CCP4::__anon26
strmatch	libs/cmtz/ccp4_parser.c	/^int strmatch (const char *str1, const char *str2)$/;"	f
strncasecmp	apps/MIFit/ui/Application.cpp	41;"	d	file:
strncasecmp	apps/MIFit/ui/MIGLWidget.cpp	26;"	d	file:
strncasecmp	apps/MIFlex/miflex.cpp	16;"	d	file:
strncasecmp	libs/chemlib/mol_util.cpp	15;"	d	file:
strncasecmp	libs/chemlib/util.cpp	/^int strncasecmp(const char *s1, const char *s2, unsigned int n)$/;"	f	namespace:chemlib
strncasecmp	libs/map/EMapBase.cpp	31;"	d	file:
strnicmp	apps/MIFit/core/ColorUtil.cpp	/^strnicmp(const char *s1, const char *s2, int n)$/;"	f	file:
strnicmp	apps/MIFit/ui/MIGLWidget.cpp	24;"	d	file:
strtolower	libs/cmtz/ccp4_parser.c	/^char *strtolower (char *str1, const char *str2)$/;"	f
strtoupper	libs/cmtz/ccp4_parser.c	/^char *strtoupper (char *str1, const char *str2)$/;"	f
style	apps/MIFit/core/ATOMLABEL.cpp	/^int ATOMLABEL::style() const$/;"	f	class:ATOMLABEL
style	apps/MIFit/core/ATOMLABEL.cpp	/^void ATOMLABEL::style(int value)$/;"	f	class:ATOMLABEL
style	apps/MIFit/ui/GLRenderer.h	/^    RenderStyle style;$/;"	m	class:GLRenderer
style_	apps/MIFit/core/ATOMLABEL.h	/^    mutable int style_;$/;"	m	class:ATOMLABEL
stylizeAtom	apps/MIFit/ui/ModelsView.cpp	/^void AtomsTree::stylizeAtom(MIAtom *atom)$/;"	f	class:AtomsTree
stylizeChain	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::stylizeChain(Residue *residue)$/;"	f	class:ModelsTree
stylizeCrystal	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::stylizeCrystal(CMapHeaderBase *mapHeader)$/;"	f	class:ModelsTree
stylizeItem	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::stylizeItem(QTreeWidgetItem *item, ATOMLABEL *label)$/;"	f	class:DisplayTree
stylizeItem	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::stylizeItem(QTreeWidgetItem *item, Annotation *annotation)$/;"	f	class:DisplayTree
stylizeItem	apps/MIFit/ui/JobsView.cpp	/^void JobsView::stylizeItem(QTreeWidgetItem *id, BatchJob *job)$/;"	f	class:JobsView
stylizeMap	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::stylizeMap(EMap *map)$/;"	f	class:ModelsTree
stylizeModel	apps/MIFit/ui/ModelsView.cpp	/^void ModelsTree::stylizeModel(Molecule *model)$/;"	f	class:ModelsTree
stylizeResidue	apps/MIFit/ui/ModelsView.cpp	/^void ResiduesTree::stylizeResidue(Residue *residue)$/;"	f	class:ResiduesTree
stylizeSurfaceItem	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::stylizeSurfaceItem(QTreeWidgetItem *item, Molecule *model)$/;"	f	class:DisplayTree
sub	libs/opengl/zlib/infcodes.cpp	/^    } sub;              \/* submode *\/$/;"	m	struct:inflate_codes_state	typeref:union:inflate_codes_state::__anon39	file:
sub	libs/opengl/zlib/inflate.cpp	/^    } sub;      \/* submode *\/$/;"	m	struct:internal_state	typeref:union:internal_state::__anon43	file:
sub	libs/opengl/zlib/infutil.h	/^    } sub;              \/* submode *\/$/;"	m	struct:inflate_blocks_state	typeref:union:inflate_blocks_state::__anon35
subtract	libs/math/Matrix3.h	/^        void Matrix3<Type>::subtract(Type scalar)$/;"	f	class:mi::math::Matrix3
subtract	libs/math/Matrix3.h	/^        void Matrix3<Type>::subtract(Type scalar, const Matrix3<Type> &m1)$/;"	f	class:mi::math::Matrix3
subtract	libs/math/Matrix3.h	/^        void Matrix3<Type>::subtract(const Matrix3<Type> &m1)$/;"	f	class:mi::math::Matrix3
subtract	libs/math/Matrix3.h	/^        void Matrix3<Type>::subtract(const Matrix3<Type> &m1, const Matrix3<Type> &m2)$/;"	f	class:mi::math::Matrix3
subtract	libs/math/Matrix4.h	/^        void Matrix4<Type>::subtract(Type scalar)$/;"	f	class:mi::math::Matrix4
subtract	libs/math/Matrix4.h	/^        void Matrix4<Type>::subtract(Type scalar, const Matrix4<Type> &m1)$/;"	f	class:mi::math::Matrix4
subtract	libs/math/Matrix4.h	/^        void Matrix4<Type>::subtract(const Matrix4<Type> &m1)$/;"	f	class:mi::math::Matrix4
subtract	libs/math/Matrix4.h	/^        void Matrix4<Type>::subtract(const Matrix4<Type> &m1, const Matrix4<Type> &m2)$/;"	f	class:mi::math::Matrix4
subtract	libs/math/Tuple3.h	/^        void Tuple3<Type>::subtract(const Tuple3<Type> &t1)$/;"	f	class:mi::math::Tuple3
subtract	libs/math/Tuple3.h	/^        void Tuple3<Type>::subtract(const Tuple3<Type> &t1, const Tuple3<Type> &t2)$/;"	f	class:mi::math::Tuple3
subtract	libs/math/Tuple4.h	/^        void Tuple4<Type>::subtract(const Tuple4<Type> &t1)$/;"	f	class:mi::math::Tuple4
subtract	libs/math/Tuple4.h	/^        void Tuple4<Type>::subtract(const Tuple4<Type> &t1, const Tuple4<Type> &t2)$/;"	f	class:mi::math::Tuple4
success	apps/MIFit/ui/LSQFitDialog.h	/^    bool success;$/;"	m	class:LSQFitDialog
sum	apps/MIFit/core/pdbmatch.cpp	/^    int sum;$/;"	m	class:hit	file:
sun	libs/map/fftlib.cpp	195;"	d	file:
sun	libs/umtz/library.h	147;"	d
sun2	libs/map/fftlib.cpp	196;"	d	file:
sun3	libs/map/fftlib.cpp	197;"	d	file:
sun4	libs/map/fftlib.cpp	198;"	d	file:
surface	apps/MIFit/ui/TreeData.h	/^    Molecule *surface;$/;"	m	class:TreeData
surface	libs/jacgrid/isosurface.cpp	/^static surfaceT *surface;$/;"	v	file:
surfaceChanged	apps/MIFit/core/moc/moc_Molecule.cpp	/^void Molecule::surfaceChanged(Molecule * _t1)$/;"	f	class:Molecule
surfaceChanged	apps/MIFit/ui/DisplayView.cpp	/^void DisplayTree::surfaceChanged(Molecule *model)$/;"	f	class:DisplayTree
surfaceChanged	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::surfaceChanged(Molecule*)$/;"	f	class:MIGLWidget
surfaceSpheres	apps/MIFit/core/SURFDOT.cpp	/^SurfaceSphere surfaceSpheres[NTYPES];$/;"	v
surfaceT	libs/jacgrid/surface.cpp	/^surfaceT::surfaceT()$/;"	f	class:surfaceT
surfaceT	libs/jacgrid/surface.cpp	/^surfaceT::surfaceT(unsigned int verts, unsigned int polys)$/;"	f	class:surfaceT
surfaceT	libs/jacgrid/surface.h	/^class surfaceT$/;"	c
surfaces	apps/MIFit/ui/surf.cpp	/^    std::vector<MISurface*> surfaces;$/;"	m	class:SuperSurface	file:
sw	apps/MIFit/core/Annotation.h	/^    int sx, sy, sz, sw, sh, yadd;$/;"	m	class:Annotation
swap	libs/chemlib/Residue.cpp	/^void ResidueListIterator::swap(ResidueListIterator &other)$/;"	f	class:chemlib::ResidueListIterator
swapBuffers	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::swapBuffers()$/;"	f	class:GLRenderer
swapInterval	apps/MIFit/ui/ui_GLFormatEdit.h	/^    QSpinBox *swapInterval;$/;"	m	class:Ui_GLFormatEdit
switchLayoutDirection	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::switchLayoutDirection()$/;"	f	class:MIMainWindow
sx	apps/MIFit/core/Annotation.h	/^    int sx, sy, sz, sw, sh, yadd;$/;"	m	class:Annotation
sy	apps/MIFit/core/Annotation.h	/^    int sx, sy, sz, sw, sh, yadd;$/;"	m	class:Annotation
sym	libs/cmtz/mtzdata.h	/^		 float sym[192][4][4]; \/**< symmetry operations $/;"	m	struct:__anon23
symbol_Hall	libs/cmtz/ccp4_spg.h	/^  char symbol_Hall[40];   \/* Hall symbol *\/$/;"	m	struct:CSym::ccp4_spacegroup_
symbol_old	libs/cmtz/ccp4_spg.h	/^  char symbol_old[20];    \/* old spacegroup name *\/$/;"	m	struct:CSym::ccp4_spacegroup_
symbol_xHM	libs/cmtz/ccp4_spg.h	/^  char symbol_xHM[20];    \/* Extended Hermann Mauguin symbol  *\/$/;"	m	struct:CSym::ccp4_spacegroup_
syminfo	libs/map/CMapHeaderBase.cpp	/^char syminfo[][28] =$/;"	v
symm	apps/MIFit/core/RESIDUE.cpp	/^void symm(float x, float y, float z, float *xp, float *yp, float *zp, float mat[3][4])$/;"	f
symm	libs/map/MINATOM.h	/^    int symm;$/;"	m	struct:minatom
symmAtomsVisible	apps/MIFit/core/Molecule.cpp	/^bool Molecule::symmAtomsVisible() const$/;"	f	class:Molecule
symmOps	apps/MIFit/ui/ui_ManageCrystals.h	/^    QTextEdit *symmOps;$/;"	m	class:Ui_ManageCrystals
symmResiduesBegin	libs/chemlib/MIMoleculeBase.cpp	/^ResidueListIterator MIMoleculeBase::symmResiduesBegin()$/;"	f	class:chemlib::MIMoleculeBase
symmResiduesEnd	libs/chemlib/MIMoleculeBase.cpp	/^ResidueListIterator MIMoleculeBase::symmResiduesEnd()$/;"	f	class:chemlib::MIMoleculeBase
symm_center	apps/MIFit/core/Molecule.h	/^    float symm_center[3];$/;"	m	class:Molecule
symm_mh	libs/map/CMapHeaderBase.cpp	/^void CMapHeaderBase::symm_mh(float x, float y, float z, float *xp, float *yp, float *zp, int jth)$/;"	f	class:CMapHeaderBase
symm_mh	libs/map/EMapBase.cpp	/^static int symm_mh(float x, float y, float z, float *xp, float *yp, float *zp, CMapHeaderBase *mh, int jth)$/;"	f	file:
symm_radius	apps/MIFit/core/Molecule.h	/^    float symm_radius;$/;"	m	class:Molecule
symmatoms_visible	apps/MIFit/core/Molecule.h	/^    bool symmatoms_visible;$/;"	m	class:Molecule
symmetryBonds	libs/chemlib/MIMoleculeBase.h	/^        std::vector<Bond> symmetryBonds;$/;"	m	class:chemlib::MIMoleculeBase
symmetryToBeCleared	apps/MIFit/ui/Displaylist.cpp	/^void Displaylist::symmetryToBeCleared(MIMoleculeBase *mol)$/;"	f	class:Displaylist
symmetryToBeCleared	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::symmetryToBeCleared(MIMoleculeBase *mol)$/;"	f	class:MIGLWidget
symmetryToBeCleared	libs/chemlib/moc/moc_MIMoleculeBase.cpp	/^void chemlib::MIMoleculeBase::symmetryToBeCleared(chemlib::MIMoleculeBase * _t1)$/;"	f	class:chemlib::MIMoleculeBase
symmop	libs/chemlib/MIAtom.h	/^        int symmop() const$/;"	f	class:chemlib::MIAtom
symmop_	libs/chemlib/MIAtom.h	/^        int symmop_;$/;"	m	class:chemlib::MIAtom
symmtrim	libs/map/EMapBase.cpp	/^char *symmtrim(char *line)$/;"	f
symop	libs/cmtz/ccp4_spg.h	/^  ccp4_symop *symop;      \/* symmetry matrices *\/$/;"	m	struct:CSym::ccp4_spacegroup_
symop_to_mat4	libs/cmtz/ccp4_parser.c	/^const char *symop_to_mat4(const char *symchs_begin, const char *symchs_end, float *rot)$/;"	f
symop_to_mat4_err	libs/cmtz/ccp4_parser.c	/^int symop_to_mat4_err(const char *symop)$/;"	f
symop_to_rotandtrn	libs/cmtz/ccp4_parser.c	/^ccp4_symop symop_to_rotandtrn(const char *symchs_begin, const char *symchs_end) {$/;"	f
symops	libs/map/CMapHeaderBase.h	/^    float symops[3][4][MISymmop::MAXSYMMOPS];$/;"	m	class:CMapHeaderBase
symtyp	libs/cmtz/mtzdata.h	/^		 char symtyp;          \/**< lattice type (P,A,B,C,I,F,R) *\/$/;"	m	struct:__anon23
sync	libs/cmtz/library_file.h	/^  unsigned int sync : 1, : 6;$/;"	m	struct:CCP4::_CFileStruct
sys	examples/smilesdb.py	/^import sys$/;"	i
system	libs/cmtz/library_err.c	/^  char system[32];$/;"	m	struct:error_system	file:
system_nerr	libs/cmtz/library_err.c	/^  int system_nerr;$/;"	m	struct:error_system	file:
sz	apps/MIFit/core/Annotation.h	/^    int sx, sy, sz, sw, sh, yadd;$/;"	m	class:Annotation
t	libs/opengl/Text.cpp	/^        GLfloat t[2];$/;"	m	struct:__anon45::CharData	file:
t_	libs/map/fftsub.cpp	885;"	d	file:
table	libs/opengl/zlib/infutil.h	/^            uInt table;         \/* table lengths (14 bits) *\/$/;"	m	struct:inflate_blocks_state::__anon35::__anon36
table	libs/opengl/zlib/zutil.cpp	/^local ptr_table table[MAX_PTR];$/;"	v
tags	apps/MIFit/core/xmlarchive.h	/^    std::vector<std::string> tags;$/;"	m	class:XMLArchive
tail	libs/chemlib/MIMolInfo.h	/^        std::vector<std::string> tail; \/\/ PDB only$/;"	m	class:chemlib::MIMolInfo
takestep	libs/molopt/MIMolOpt.cpp	/^int MIMolOpt::takestep(int seed)$/;"	f	class:MIMolOpt
tarea	libs/jacgrid/linalg.h	/^inline float tarea(const float *a, const float *b, const float *c)$/;"	f
target	apps/MIFit/ui/LSQFitDialog.h	/^    chemlib::Residue *target;$/;"	m	class:MATCH
target	libs/opengl/interact/TargetFeedback.h	/^                mi::math::Vector3<float> target;$/;"	m	class:mi::opengl::interact::TargetFeedback
targetComboBox	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QComboBox *targetComboBox;$/;"	m	class:Ui_LSQFitDialog
targetFeedback	apps/MIFit/ui/CMolwViewScene.h	/^    mi::opengl::interact::TargetFeedback *targetFeedback;$/;"	m	class:CMolwViewScene
targetFeedback	apps/MIFit/ui/DictEditScene.h	/^    mi::opengl::interact::TargetFeedback *targetFeedback;$/;"	m	class:DictEditScene
targetFeedback	apps/MIFit/ui/MIGLWidget.h	/^    mi::opengl::interact::TargetFeedback *targetFeedback;$/;"	m	class:MIGLWidget
targetFeedbackSize	apps/MIFit/ui/CMolwViewScene.h	/^    float targetFeedbackSize;$/;"	m	class:CMolwViewScene
targetListWidget	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QListWidget *targetListWidget;$/;"	m	class:Ui_LSQFitDialog
targetModel	apps/MIFit/ui/LSQFitDialog.h	/^        std::string targetModel;$/;"	m	struct:LSQFitDialog::Data
targetTextCtrl	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QLineEdit *targetTextCtrl;$/;"	m	class:Ui_LSQFitDialog
targetres	apps/MIFit/ui/LSQFitDialog.h	/^    chemlib::Residue *targetres, *sourceres;$/;"	m	class:LSQFitDialog
tb	libs/opengl/zlib/infutil.h	/^            inflate_huft *tb;   \/* bit length decoding tree *\/$/;"	m	struct:inflate_blocks_state::__anon35::__anon36
tell	libs/util/FileIo.cpp	/^long FileIo::tell()$/;"	f	class:FileIo
tell	libs/util/StringIo.cpp	/^long StringIo::tell()$/;"	f	class:StringIo
testPyQt	apps/MIFit/jobs/BatchJobManager.cpp	/^    bool testPyQt(QString pythonPath)$/;"	f	namespace:__anon17
textureBuffer	libs/opengl/Sphere.h	/^            float *textureBuffer;$/;"	m	class:mi::opengl::Sphere
textureId	libs/opengl/Text.cpp	/^        GLuint textureId;$/;"	m	struct:__anon45::CharData	file:
textures	libs/opengl/Text.cpp	/^    QList<GLuint> textures;$/;"	m	struct:mi::opengl::TextPrivate	file:
theta	libs/cmtz/mtzdata.h	/^		 float theta[2];       \/**< detector tilt angle *\/$/;"	m	struct:bathead
this_slice	libs/jacgrid/isosurface.cpp	/^static unsigned int *this_slice, *last_slice;$/;"	v	file:
three	libs/chemlib/mol_util.cpp	/^static char three[][4] = {"ALA", "CYS", "ASP", "GLU", "PHE",$/;"	m	namespace:chemlib	file:
threshold	libs/jacgrid/isosurface.cpp	/^static float threshold;$/;"	v	file:
tileAct	apps/MIFit/ui/MIMainWindow.h	/^    QAction *tileAct;$/;"	m	class:MIMainWindow
time	apps/MIFit/ui/MIGLWidget.h	/^    QTime time;$/;"	m	class:MIGLWidget
time	apps/MIFit/ui/SaveModel.h	/^    std::string time;$/;"	m	class:SaveModel
time1	libs/cmtz/mtzdata.h	/^		 float time1;          \/**< start time *\/$/;"	m	struct:bathead
time2	libs/cmtz/mtzdata.h	/^		 float time2;          \/**< stop time *\/$/;"	m	struct:bathead
timerEvent	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::timerEvent(QTimerEvent*)$/;"	f	class:MIGLWidget
title	apps/MIFit/ui/graphlib.h	/^    std::string title;$/;"	m	class:GraphWindow
title	apps/MIFit/ui/ui_ManageCrystals.h	/^    QLineEdit *title;$/;"	m	class:Ui_ManageCrystals
title	libs/cmtz/mtzdata.h	/^		 char title[71];       \/**< batch title *\/$/;"	m	struct:bathead
title	libs/cmtz/mtzdata.h	/^		 char title[71];       \/**< title of mtz structure *\/$/;"	m	struct:__anon25
title	libs/map/CMapHeaderBase.h	/^    std::string title;$/;"	m	class:CMapHeaderBase
titlesize	apps/MIFit/ui/graphlib.h	/^    int titlesize;     \/* not currently implemented *\/$/;"	m	class:GraphWindow
tmpElement	apps/MIFit/ui/MoleculeXmlHandler.h	/^    char tmpElement[20];$/;"	m	class:MoleculeXmlHandler
to	libs/opengl/Arc.h	/^            mi::math::Vector3<float> to;$/;"	m	class:mi::opengl::Arc
toArray	libs/opengl/Viewport.cpp	/^int*Viewport::toArray()$/;"	f	class:mi::opengl::Viewport
toDegrees	libs/math/mi_math.h	/^inline double toDegrees(double radians)$/;"	f
toErrorDescription	apps/MIFit/ui/DisplayView.cpp	/^std::string toErrorDescription(const std::string &s)$/;"	f
toRadians	libs/math/mi_math.h	/^inline double toRadians(double degrees)$/;"	f
toString	libs/math/Matrix3.h	/^        std::string Matrix3<Type>::toString() const$/;"	f	class:mi::math::Matrix3
toString	libs/math/Matrix4.h	/^        std::string Matrix4<Type>::toString() const$/;"	f	class:mi::math::Matrix4
toStringList	apps/MIFit/core/Stack.cpp	/^QStringList Stack::toStringList() const$/;"	f	class:Stack
toTable	apps/MIFit/ui/GLFormatDialog.cpp	/^QString toTable(const QList<StringPair> &data)$/;"	f	namespace:__anon8
toggleAtomHidden	apps/MIFit/core/Molecule.cpp	/^void Molecule::toggleAtomHidden(MIAtom *atom)$/;"	f	class:Molecule
toggleAtomsHidden	apps/MIFit/core/Molecule.cpp	/^void Molecule::toggleAtomsHidden(MIAtomList &atoms)$/;"	f	class:Molecule
toggleChainHidden	apps/MIFit/core/Molecule.cpp	/^void Molecule::toggleChainHidden(Residue *chain)$/;"	f	class:Molecule
toggleHardwareStereo	apps/MIFit/ui/Application.cpp	/^void Application::toggleHardwareStereo()$/;"	f	class:Application
toggleResidueHidden	apps/MIFit/core/Molecule.cpp	/^void Molecule::toggleResidueHidden(Residue *residue)$/;"	f	class:Molecule
toggleResiduesHidden	apps/MIFit/core/Molecule.cpp	/^void Molecule::toggleResiduesHidden(std::vector<Residue*> &residues)$/;"	f	class:Molecule
toggleStereo	apps/MIFit/ui/Application.cpp	/^void Application::toggleStereo()$/;"	f	class:Application
token	libs/cmtz/ccp4_parser.h	/^  CCP4PARSERTOKEN *token; \/* Array of tokens *\/$/;"	m	struct:CCP4::__anon27
tolerance	libs/chemlib/ANGLE.h	/^        float tolerance;$/;"	m	class:chemlib::ANGLE
tolerance	libs/chemlib/Bond.h	/^        float tolerance;$/;"	m	class:chemlib::Bond
tolerance	libs/chemlib/Constraint.h	/^        float tolerance;$/;"	m	class:chemlib::Angle
tolerance	libs/chemlib/Constraint.h	/^        float tolerance;$/;"	m	class:chemlib::BondLength
tolerance	libs/chemlib/Constraint.h	/^        float tolerance;$/;"	m	class:chemlib::Bump
tolerance	libs/chemlib/PLANE.h	/^        float tolerance;$/;"	m	class:chemlib::PLANE
tolerance	libs/chemlib/TORSION.h	/^        float tolerance;$/;"	m	class:chemlib::TORSION
tool_bar	apps/MIFit/ui/MIMainWindow.h	/^    QToolBar *tool_bar;$/;"	m	class:MIMainWindow
topView	apps/MIFit/ui/CMolwViewScene.h	/^    bool topView;$/;"	m	class:CMolwViewScene
toppoint	libs/opengl/Object3d.h	/^            float toppoint;$/;"	m	class:mi::opengl::Object3d
tordict	libs/chemlib/MIMolInfo.h	/^        std::vector<TORSDICT> tordict;   \/\/ mmCIF only$/;"	m	class:chemlib::MIMolInfo
torsionArrow	apps/MIFit/ui/CMolwViewScene.h	/^    std::vector<PLINE> torsionArrow;$/;"	m	class:CMolwViewScene
torsionSlider	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QSlider *torsionSlider;$/;"	m	class:Ui_RefinementOptionsDialog
torsionSpinBox	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QDoubleSpinBox *torsionSpinBox;$/;"	m	class:Ui_RefinementOptionsDialog
torsionWeight	apps/MIFit/ui/RefinementOptionsDialog.h	/^        int torsionWeight;$/;"	m	struct:RefinementOptionsDialog::Data
torsions	libs/chemlib/Dictionary.h	/^        std::vector<Torsion> torsions;$/;"	m	class:chemlib::LigDictionary
torsions	libs/chemlib/MIMolInfo.h	/^        std::vector<TORSION> torsions; \/\/ mmCIF only$/;"	m	class:chemlib::MIMolInfo
torsions	libs/ligand/LigDictEntry.h	/^    std::vector<chemlib::TORSDICT> torsions;$/;"	m	class:LigDictEntry
total_in	libs/opengl/zlib/zlib.h	/^    uLong total_in;     \/* total nb of input bytes read so far *\/$/;"	m	struct:z_stream_s
total_out	libs/opengl/zlib/zlib.h	/^    uLong total_out;    \/* total nb of bytes output so far *\/$/;"	m	struct:z_stream_s
tql2	apps/MIFit/core/eigen.cpp	/^void tql2(matrix z, vector d, vector e, double eps, int n)$/;"	f
transform	libs/math/Matrix3.h	/^        void Matrix3<Type>::transform(Tuple3<Type> &vec) const$/;"	f	class:mi::math::Matrix3
transform	libs/math/Matrix3.h	/^        void Matrix3<Type>::transform(const Tuple3<Type> &vec, Tuple3<Type> &vecOut) const$/;"	f	class:mi::math::Matrix3
transform	libs/math/Matrix4.h	/^        void Matrix4<Type>::transform(Tuple3<Type> &vec) const$/;"	f	class:mi::math::Matrix4
transform	libs/math/Matrix4.h	/^        void Matrix4<Type>::transform(Tuple4<Type> &vec) const$/;"	f	class:mi::math::Matrix4
transform	libs/math/Matrix4.h	/^        void Matrix4<Type>::transform(const Tuple3<Type> &vec, Tuple3<Type> &vecOut) const$/;"	f	class:mi::math::Matrix4
transform	libs/math/Matrix4.h	/^        void Matrix4<Type>::transform(const Tuple4<Type> &vec, Tuple4<Type> &vecOut) const$/;"	f	class:mi::math::Matrix4
transform	libs/math/crystmat.cpp	/^transform(float ut[3][3], float *x, float *y, float *z)$/;"	f
transformVector	libs/opengl/Viewpoint.cpp	/^void Viewpoint::transformVector(Vector3<float> &vector)$/;"	f	class:mi::opengl::Viewpoint
translate	libs/chemlib/MIAtom.h	/^        void translate(float x, float y, float z)$/;"	f	class:chemlib::MIAtom
translate	libs/opengl/Axis.cpp	/^void Axis::translate(Vector3<float> &translation)$/;"	f	class:mi::opengl::Axis
translate	libs/opengl/Viewpoint.cpp	/^void Viewpoint::translate(Vector3<float> &translation)$/;"	f	class:mi::opengl::Viewpoint
translate	libs/opengl/interact/MouseTranslator.cpp	/^void MouseTranslator::translate(int x, int y)$/;"	f	class:mi::opengl::interact::MouseTranslator
translateAction	apps/MIFit/ui/MIGLWidget.h	/^    QAction *translateAction;$/;"	m	class:MIGLWidget
translation	libs/math/Matrix4.h	/^        void Matrix4<Type>::translation(Type x, Type y, Type z)$/;"	f	class:mi::math::Matrix4
translation	libs/math/Matrix4.h	/^        void Matrix4<Type>::translation(const Vector3<Type> &vector)$/;"	f	class:mi::math::Matrix4
transpose	libs/chemlib/Matrix.h	/^    Matrix<T> transpose(const Matrix<T> &A)$/;"	f	namespace:TNT
transpose	libs/math/Matrix3.h	/^        void Matrix3<Type>::transpose()$/;"	f	class:mi::math::Matrix3
transpose	libs/math/Matrix3.h	/^        void Matrix3<Type>::transpose(const Matrix3<Type> &m1)$/;"	f	class:mi::math::Matrix3
transpose	libs/math/Matrix4.h	/^        void Matrix4<Type>::transpose()$/;"	f	class:mi::math::Matrix4
transpose	libs/math/Matrix4.h	/^        void Matrix4<Type>::transpose(const Matrix4<Type> &m1)$/;"	f	class:mi::math::Matrix4
tred2	apps/MIFit/core/eigen.cpp	/^void tred2(matrix a, matrix z, vector d, vector e, double tol, int n)$/;"	f
tree	libs/opengl/zlib/infcodes.cpp	/^            inflate_huft *tree; \/* pointer into tree *\/$/;"	m	struct:inflate_codes_state::__anon39::__anon40	file:
treeDataRegistry	apps/MIFit/ui/TreeData.cpp	/^std::set<TreeData*> treeDataRegistry;$/;"	v
trees	libs/opengl/zlib/infutil.h	/^        } trees;        \/* if DTREE, decoding info for trees *\/$/;"	m	union:inflate_blocks_state::__anon35	typeref:struct:inflate_blocks_state::__anon35::__anon36
trial	libs/molopt/MIMolOpt.cpp	/^struct trial$/;"	s	file:
trial_compare	libs/molopt/MIMolOpt.cpp	/^static bool trial_compare(const trial &lt, const trial &rt)$/;"	f	file:
triangles	libs/jacgrid/surface.h	/^    std::vector<unsigned int> triangles; \/* list of vertices to be connected *\/$/;"	m	class:surfaceT
tripleletter	libs/chemlib/mol_util.cpp	/^const char *tripleletter(const char t)$/;"	f	namespace:chemlib
trn	libs/cmtz/ccp4_spg.h	/^  float trn[3];$/;"	m	struct:CSym::ccp4_symop_
truncateLeft	apps/MIFit/ui/ModelsView.cpp	/^std::string ModelsTree::truncateLeft(const std::string &name, int shorter)$/;"	f	class:ModelsTree
truncateRight	apps/MIFit/ui/ModelsView.cpp	/^std::string ModelsTree::truncateRight(const std::string &name, int shorter)$/;"	f	class:ModelsTree
truncateWidth	apps/MIFit/ui/ModelsView.cpp	/^    int truncateWidth;$/;"	m	class:ModelsTree	file:
truth	libs/map/EMapBase.cpp	/^static const char *truth(bool t)$/;"	f	file:
tvolume	libs/jacgrid/surface.cpp	/^static inline float tvolume(const float *a, const float *b, const float *c, const float *d)$/;"	f	file:
tx	libs/map/MINATOM.h	/^    float tx, ty, tz;$/;"	m	struct:minatom
ty	libs/map/MINATOM.h	/^    float tx, ty, tz;$/;"	m	struct:minatom
type	libs/chemlib/Bond.h	/^        char type;$/;"	m	class:chemlib::Bond
type	libs/chemlib/MIAtom.h	/^        unsigned int type() const$/;"	f	class:chemlib::MIAtom
type	libs/chemlib/Monomer.h	/^        const std::string type() const$/;"	f	class:chemlib::Monomer
type	libs/chemlib/TORSION.h	/^        char type[11];$/;"	m	class:chemlib::TORSDICT
type	libs/chemlib/TORSION.h	/^        char type[11];$/;"	m	class:chemlib::TORSION
type	libs/cmtz/mtzdata.h	/^		 char type[3];         \/**< column type *\/$/;"	m	struct:__anon20
type	libs/jacgrid/grid.h	/^    unsigned int *type;  \/* 0, CONTACT_SURFACE or REENTRANT_SURFACE *\/$/;"	m	class:gridT
type	libs/map/MINATOM.h	/^    char type;$/;"	m	struct:minatom
type	libs/map/fftlib.cpp	/^    int type;$/;"	m	struct:Vardesc	file:
type	libs/umtz/mmtzlib.h	/^    char type[2];$/;"	m	struct:mmtz_column_
type1	apps/MIFit/ui/PhaseFileLoadDialog.h	/^        std::string type1;$/;"	m	struct:PhaseFileLoadDialog::Data
type2	apps/MIFit/ui/PhaseFileLoadDialog.h	/^        std::string type2;$/;"	m	struct:PhaseFileLoadDialog::Data
type_	libs/chemlib/MIAtom.h	/^        unsigned int type_;$/;"	m	class:chemlib::MIAtom
type_	libs/chemlib/Monomer.h	/^        std::string type_;$/;"	m	class:chemlib::Monomer
tz	libs/map/MINATOM.h	/^    float tx, ty, tz;$/;"	m	struct:minatom
u	libs/map/fftlib.cpp	1444;"	d	file:
u	libs/map/fftlib.cpp	1788;"	d	file:
u370	libs/map/fftlib.cpp	199;"	d	file:
u3b	libs/map/fftlib.cpp	200;"	d	file:
u3b2	libs/map/fftlib.cpp	201;"	d	file:
u3b5	libs/map/fftlib.cpp	202;"	d	file:
uInt	libs/opengl/zlib/zconf.h	/^typedef unsigned int uInt;    \/* 16 bits or more *\/$/;"	t
uInt	libs/opengl/zlib/zconf.h	36;"	d
uIntf	libs/opengl/zlib/zconf.h	/^typedef uInt FAR uIntf;$/;"	t
uIntf	libs/opengl/zlib/zconf.h	41;"	d
uLong	libs/opengl/zlib/zconf.h	/^typedef unsigned long uLong;  \/* 32 bits or more *\/$/;"	t
uLong	libs/opengl/zlib/zconf.h	37;"	d
uLongf	libs/opengl/zlib/zconf.h	/^typedef uLong FAR uLongf;$/;"	t
uLongf	libs/opengl/zlib/zconf.h	42;"	d
uch	libs/opengl/zlib/zutil.h	/^typedef unsigned char uch;$/;"	t
uchf	libs/opengl/zlib/zutil.h	/^typedef uch FAR uchf;$/;"	t
ui	apps/MIFit/ui/AddResidueDialog.h	/^    Ui::AddResidueDialog *ui;$/;"	m	class:AddResidueDialog
ui	apps/MIFit/ui/CustomJobPreferences.h	/^    Ui::CustomJobPreferences *ui;$/;"	m	class:CustomJobPreferences
uint16	libs/cmtz/ccp4_types.h	/^typedef unsigned short uint16;$/;"	t
uint16	libs/umtz/library.h	/^typedef unsigned short uint16;$/;"	t
uint32	libs/cmtz/ccp4_types.h	/^typedef unsigned int uint32;$/;"	t
uint32	libs/cmtz/ccp4_types.h	/^typedef unsigned long uint32;$/;"	t
uint32	libs/umtz/library.h	/^typedef unsigned int uint32;$/;"	t
uint32	libs/umtz/library.h	/^typedef unsigned long uint32;$/;"	t
uint8	libs/cmtz/ccp4_types.h	/^typedef unsigned char uint8;$/;"	t
uint8	libs/umtz/library.h	/^typedef unsigned char uint8;$/;"	t
uinv	libs/math/crystmat.cpp	/^void uinv(float mat[3][3], float imat[3][3])$/;"	f
uinvd	libs/math/crystmat.cpp	/^void uinvd(double mat[3][3], double imat[3][3])$/;"	f
ulg	libs/opengl/zlib/zutil.h	/^typedef unsigned long ulg;$/;"	t
umat	libs/cmtz/mtzdata.h	/^		 float umat[9];        \/**< orientation matrix U in Fortranic order,$/;"	m	struct:bathead
umtz_add_bats	libs/umtz/umtzlib.c	/^void umtz_add_bats( umtzfile* file, const char* cdata, const int* idata, const float* fdata )$/;"	f
umtz_add_head	libs/umtz/umtzlib.c	/^void umtz_add_head( umtzfile* file, const char* hdr )$/;"	f
umtz_add_hist	libs/umtz/umtzlib.c	/^void umtz_add_hist( umtzfile* file, const char* hdr )$/;"	f
umtz_add_row	libs/umtz/umtzlib.c	/^void umtz_add_row( umtzfile* file, const float* fdata )$/;"	f
umtz_bat	libs/umtz/umtzlib.h	/^} umtz_bat;$/;"	t	typeref:struct:umtz_bat_
umtz_bat_	libs/umtz/umtzlib.h	/^typedef struct umtz_bat_$/;"	s
umtz_cell_metric	libs/umtz/umtzlib.c	/^void umtz_cell_metric( const float* cell, float* metric )$/;"	f
umtz_close	libs/umtz/umtzlib.c	/^void umtz_close( umtzfile* file )$/;"	f
umtz_copy_pad	libs/umtz/umtzlib.c	/^void umtz_copy_pad( char* d, const char* s, const int rec_len  )$/;"	f
umtz_first_bats	libs/umtz/umtzlib.c	/^umtz_bat* umtz_first_bats( const umtzfile* file )$/;"	f
umtz_first_head	libs/umtz/umtzlib.c	/^umtz_hdr* umtz_first_head( const umtzfile* file )$/;"	f
umtz_first_hist	libs/umtz/umtzlib.c	/^umtz_hdr* umtz_first_hist( const umtzfile* file )$/;"	f
umtz_get_cell	libs/umtz/umtzlib.c	/^void umtz_get_cell( const umtzfile* file, const int ixtl, float* cell )$/;"	f
umtz_get_row	libs/umtz/umtzlib.c	/^void umtz_get_row( const umtzfile* file, float* fdata )$/;"	f
umtz_hdr	libs/umtz/umtzlib.h	/^} umtz_hdr;$/;"	t	typeref:struct:umtz_hdr_
umtz_hdr_	libs/umtz/umtzlib.h	/^typedef struct umtz_hdr_$/;"	s
umtz_ismnf	libs/umtz/umtzlib.c	/^int umtz_ismnf( const umtzfile* file, float f )$/;"	f
umtz_keymatch	libs/umtz/umtzlib.c	/^int umtz_keymatch( const char* hdr, const char* key )$/;"	f
umtz_last_bats	libs/umtz/umtzlib.c	/^umtz_bat* umtz_last_bats( const umtzfile* file )$/;"	f
umtz_last_head	libs/umtz/umtzlib.c	/^umtz_hdr* umtz_last_head( const umtzfile* file )$/;"	f
umtz_last_hist	libs/umtz/umtzlib.c	/^umtz_hdr* umtz_last_hist( const umtzfile* file )$/;"	f
umtz_list	libs/umtz/umtzlib.h	/^} umtz_list;$/;"	t	typeref:struct:umtz_list_
umtz_list_	libs/umtz/umtzlib.h	/^typedef struct umtz_list_$/;"	s
umtz_make_rec	libs/umtz/umtzlib.c	/^void umtz_make_rec( umtz_list* l, const int rec_len )$/;"	f
umtz_mnf	libs/umtz/umtzlib.c	/^float umtz_mnf( const umtzfile* file ) { return file->mnf; }$/;"	f
umtz_num_bats	libs/umtz/umtzlib.c	/^int umtz_num_bats( const umtzfile* file ) { return file->batches.size; }$/;"	f
umtz_num_cols	libs/umtz/umtzlib.c	/^int umtz_num_cols( const umtzfile* file ) { return file->ncol; }$/;"	f
umtz_num_head	libs/umtz/umtzlib.c	/^int umtz_num_head( const umtzfile* file ) { return file->headers.size; }$/;"	f
umtz_num_head_type	libs/umtz/umtzlib.c	/^int umtz_num_head_type( const umtzfile* file, char* head )$/;"	f
umtz_num_hist	libs/umtz/umtzlib.c	/^int umtz_num_hist( const umtzfile* file ) { return file->history.size; }$/;"	f
umtz_num_rows	libs/umtz/umtzlib.c	/^int umtz_num_rows( const umtzfile* file ) { return file->nrow; }$/;"	f
umtz_open	libs/umtz/umtzlib.c	/^umtzfile* umtz_open( const char* filename, const char* cmode )$/;"	f
umtz_rewrite_headers_legacy	libs/umtz/umtzlib.c	/^void umtz_rewrite_headers_legacy( umtzfile* file )$/;"	f
umtz_rewrite_headers_ranges	libs/umtz/umtzlib.c	/^void umtz_rewrite_headers_ranges( umtzfile* file )$/;"	f
umtz_seek_row	libs/umtz/umtzlib.c	/^void umtz_seek_row( const umtzfile* file, const int n )$/;"	f
umtzfile	libs/umtz/umtzlib.h	/^} umtzfile;$/;"	t	typeref:struct:umtzfile_
umtzfile_	libs/umtz/umtzlib.h	/^typedef struct umtzfile_$/;"	s
uncompress	libs/opengl/zlib/zconf.h	31;"	d
undoable	apps/MIFit/core/Molecule.h	/^    bool undoable;$/;"	m	class:Molecule
unique	libs/chemlib/GeomSaver.cpp	/^unsigned int GeomSaver::unique()$/;"	f	class:chemlib::GeomSaver
unit	libs/jacgrid/grid.h	/^    float unit[3];        \/* length of a single edge in each dimension*\/$/;"	m	class:gridT
unit	libs/jacgrid/plane.h	/^    float unit;        \/* length of the size of a square *\/$/;"	m	class:JACPlane
unitCell	apps/MIFit/ui/ui_ManageCrystals.h	/^    QLineEdit *unitCell;$/;"	m	class:Ui_ManageCrystals
unitCellLineEdit	apps/MIFit/ui/ui_SelectCrystal.h	/^    QLineEdit *unitCellLineEdit;$/;"	m	class:Ui_SelectCrystal
unix	libs/map/fftlib.cpp	203;"	d	file:
unlabelAtom	apps/MIFit/core/Molecule.cpp	/^void Molecule::unlabelAtom(MIAtom *atom)$/;"	f	class:Molecule
unlockRefineTarget	libs/molopt/MIMolOpt.cpp	/^void MIMolOpt::unlockRefineTarget()$/;"	f	class:MIMolOpt
unsymm_mh	libs/map/CMapHeaderBase.cpp	/^void CMapHeaderBase::unsymm_mh(float x, float y, float z, float *xp, float *yp, float *zp, int jth)$/;"	f	class:CMapHeaderBase
untransformVector	libs/opengl/Viewpoint.cpp	/^void Viewpoint::untransformVector(Vector3<float> &vector)$/;"	f	class:mi::opengl::Viewpoint
update	apps/MIFit/ui/CurrentMIGLWidgetAction.cpp	/^void CurrentMIGLWidgetAction::update()$/;"	f	class:CurrentMIGLWidgetAction
update	apps/MIFit/ui/JobsView.cpp	/^void JobsView::update(BatchJobManager *batchJobManager)$/;"	f	class:JobsView
updateAtomLabels	apps/MIFit/core/Molecule.cpp	/^void Molecule::updateAtomLabels()$/;"	f	class:Molecule
updateButtons	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::updateButtons()$/;"	f	class:LSQFitDialog
updateButtons	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::updateButtons()$/;"	f	class:ManageCrystals
updateCheckBoxes	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::updateCheckBoxes(unsigned int num)$/;"	f	class:PhaseFileLoadDialog
updateCurrentTime	apps/MIFit/ui/MIGLWidget.cpp	/^    void ViewPointAnimation::updateCurrentTime(int currentTime)$/;"	f	class:__anon10::ViewPointAnimation
updateDefaults	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^void PhaseFileLoadDialog::updateDefaults(unsigned int mapNum)$/;"	f	class:PhaseFileLoadDialog
updateDetails	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::updateDetails()$/;"	f	class:ManageCrystals
updateDotSurfMenu	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::updateDotSurfMenu()$/;"	f	class:MIGLWidget
updateFileMenu	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::updateFileMenu()$/;"	f	class:MIMainWindow
updateFixChainOptions	apps/MIFit/core/Molecule.cpp	/^void Molecule::updateFixChainOptions(bool *breakByDiscontinuity, bool *breakByNonpeptide)$/;"	f	class:Molecule
updateFixChainOptions	libs/chemlib/MIMoleculeBase.h	/^        virtual void updateFixChainOptions(bool* \/* breakByDiscontinuity *\/,$/;"	f	class:chemlib::MIMoleculeBase
updateFrustum	libs/opengl/Frustum.cpp	/^void Frustum::updateFrustum(Viewport &viewport)$/;"	f	class:mi::opengl::Frustum
updateIsRefining	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::updateIsRefining(bool isRefining)$/;"	f	class:MIMainWindow
updateMatrix	apps/MIFit/ui/LSQFitDialog.cpp	/^void LSQFitDialog::updateMatrix()$/;"	f	class:LSQFitDialog
updateMenuList	apps/MIFit/ui/CustomJobPreferences.cpp	/^void CustomJobPreferences::updateMenuList()$/;"	f	class:CustomJobPreferences
updateMenus	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::updateMenus()$/;"	f	class:MIMainWindow
updateNavigator	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::updateNavigator()$/;"	f	class:MIMainWindow
updatePlanes	libs/opengl/Frustum.cpp	/^void Frustum::updatePlanes()$/;"	f	class:mi::opengl::Frustum
updatePopupMenu	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::updatePopupMenu()$/;"	f	class:MIGLWidget
updateRamachandranPlot	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::updateRamachandranPlot()$/;"	f	class:MIGLWidget
updateRecentFileActions	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::updateRecentFileActions()$/;"	f	class:MIMainWindow
updateRemoveButton	apps/MIFit/ui/CustomJobPreferences.cpp	/^void CustomJobPreferences::updateRemoveButton()$/;"	f	class:CustomJobPreferences
updateRenderMenu	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::updateRenderMenu()$/;"	f	class:MIMainWindow
updateSaveButton	apps/MIFit/ui/CustomJobDialog.cpp	/^void CustomJobDialog::updateSaveButton()$/;"	f	class:CustomJobDialog
updateShowMenu	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::updateShowMenu()$/;"	f	class:MIMainWindow
updateSolidsurfMenu	apps/MIFit/ui/MIGLWidget.cpp	/^void MIGLWidget::updateSolidsurfMenu()$/;"	f	class:MIGLWidget
updateSpacegroupDetails	apps/MIFit/ui/ManageCrystals.cpp	/^void ManageCrystals::updateSpacegroupDetails()$/;"	f	class:ManageCrystals
updateSymmetryAndCell	libs/map/CMapHeaderBase.cpp	/^void CMapHeaderBase::updateSymmetryAndCell(const CMapHeaderBase &mh)$/;"	f	class:CMapHeaderBase
updateSyncView	apps/MIFit/ui/ModelsView.cpp	/^void ModelsView::updateSyncView(bool state)$/;"	f	class:ModelsView
updateTextScale	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.cpp	/^void CMolwViewAnnotationPickingRenderable::updateTextScale(float glUnitsPerPixel)$/;"	f	class:CMolwViewAnnotationPickingRenderable
updateTextScale	apps/MIFit/ui/DictEditAnnotationPickingRenderable.cpp	/^void DictEditAnnotationPickingRenderable::updateTextScale(float glUnitsPerPixel)$/;"	f	class:DictEditAnnotationPickingRenderable
updateTextScale	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::updateTextScale(float glUnitsPerPixel)$/;"	f	class:GLRenderer
updateToolBar	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::updateToolBar()$/;"	f	class:MIMainWindow
updateViewDependentSettings	apps/MIFit/ui/DictEditCanvas.cpp	/^void DictEditCanvas::updateViewDependentSettings()$/;"	f	class:DictEditCanvas
updateWindowMenu	apps/MIFit/ui/MIMainWindow.cpp	/^void MIMainWindow::updateWindowMenu()$/;"	f	class:MIMainWindow
useClockwiseFrontFaces	apps/MIFit/ui/GLRenderer.cpp	/^static const bool useClockwiseFrontFaces = false;$/;"	v	file:
useDefaultColor	apps/MIFit/core/ATOMLABEL.cpp	/^bool ATOMLABEL::useDefaultColor() const$/;"	f	class:ATOMLABEL
useDefaultColor	apps/MIFit/core/ATOMLABEL.cpp	/^void ATOMLABEL::useDefaultColor(bool value)$/;"	f	class:ATOMLABEL
useDefaultColor_	apps/MIFit/core/ATOMLABEL.h	/^    bool useDefaultColor_;$/;"	m	class:ATOMLABEL
useDefaultSize	apps/MIFit/core/ATOMLABEL.cpp	/^bool ATOMLABEL::useDefaultSize() const$/;"	f	class:ATOMLABEL
useDefaultSize	apps/MIFit/core/ATOMLABEL.cpp	/^void ATOMLABEL::useDefaultSize(bool value)$/;"	f	class:ATOMLABEL
useDefaultSize_	apps/MIFit/core/ATOMLABEL.h	/^    bool useDefaultSize_;$/;"	m	class:ATOMLABEL
useDefaultStyle	apps/MIFit/core/ATOMLABEL.cpp	/^bool ATOMLABEL::useDefaultStyle() const$/;"	f	class:ATOMLABEL
useDefaultStyle	apps/MIFit/core/ATOMLABEL.cpp	/^void ATOMLABEL::useDefaultStyle(bool value)$/;"	f	class:ATOMLABEL
useDefaultStyle_	apps/MIFit/core/ATOMLABEL.h	/^    bool useDefaultStyle_;$/;"	m	class:ATOMLABEL
useLeftHandedRotation	libs/math/Matrix3.h	/^            static const bool useLeftHandedRotation;$/;"	m	class:mi::math::Matrix3
useLeftHandedRotation	libs/math/Matrix3.h	/^        const bool Matrix3<Type>::useLeftHandedRotation = false;$/;"	m	class:mi::math::Matrix3
use_aniso	libs/map/CMapHeaderBase.h	/^    int use_bulksolvent, use_aniso;$/;"	m	class:CMapHeaderBase
use_bulksolvent	libs/map/CMapHeaderBase.h	/^    int use_bulksolvent, use_aniso;$/;"	m	class:CMapHeaderBase
userSettingsDir	apps/MIFit/ui/Application.h	/^    std::string userSettingsDir;$/;"	m	class:Application
ush	libs/opengl/zlib/zutil.h	/^typedef unsigned short ush;$/;"	t
ushf	libs/opengl/zlib/zutil.h	/^typedef ush FAR ushf;$/;"	t
util_FileIo_h	libs/util/FileIo.h	2;"	d
util_StringIo_h	libs/util/StringIo.h	2;"	d
util_io_h	libs/util/io.h	2;"	d
v	apps/MIFit/ui/LSQFitDialog.h	/^    double v[3];$/;"	m	class:LSQFitDialog
v	apps/MIFit/ui/surf.cpp	/^    unsigned int v[3];$/;"	m	struct:sort_element	file:
v0	apps/MIFit/ui/LSQFitDialog.h	/^        float v0;$/;"	m	struct:LSQFitDialog::Data
v1	apps/MIFit/ui/LSQFitDialog.h	/^        float v1;$/;"	m	struct:LSQFitDialog::Data
v2	apps/MIFit/ui/LSQFitDialog.h	/^        float v2;$/;"	m	struct:LSQFitDialog::Data
v_	libs/chemlib/Matrix.h	/^        T *v_;$/;"	m	class:TNT::Matrix
validTreeData	apps/MIFit/ui/TreeData.cpp	/^bool validTreeData(TreeData *data)$/;"	f
validateTimeout	apps/MIFit/ui/CustomJobDialog.cpp	/^void CustomJobDialog::validateTimeout()$/;"	f	class:CustomJobDialog
value	apps/MIFit/ui/GenericDataDialog.cpp	/^QVariant GenericDataDialog::value(int index) const$/;"	f	class:GenericDataDialog
value	libs/cmtz/ccp4_parser.h	/^  double value;         \/* Equivalent numerical value *\/$/;"	m	struct:CCP4::__anon26
valueLineEdit	apps/MIFit/ui/ui_SelectCrystal.h	/^    QLineEdit *valueLineEdit;$/;"	m	class:Ui_SelectCrystal
value_type	libs/chemlib/Matrix.h	/^        typedef         T value_type;$/;"	t	class:TNT::Matrix
values	libs/math/Tuple.h	/^            Type values[dimension];$/;"	m	class:mi::math::Tuple
values_	apps/MIFit/ui/GenericDataDialog.h	/^    QList<QVariant> values_;$/;"	m	class:GenericDataDialog
vars	libs/map/fftlib.cpp	/^    Vardesc **vars;$/;"	m	struct:Namelist	file:
vax	libs/map/fftlib.cpp	204;"	d	file:
vaxF2ieeeF	libs/cmtz/library_file.c	/^static void vaxF2ieeeF(union float_uint_uchar *buffer, const unsigned int size)$/;"	f	file:
vaxF2ieeeF	libs/umtz/library.c	/^static void vaxF2ieeeF(union float_uint_uchar buffer[], int size)$/;"	f	file:
vboxLayout	apps/MIFit/ui/ui_dicteditorform.h	/^    QVBoxLayout *vboxLayout;$/;"	m	class:Ui_DictEditorForm
vcent	libs/jacgrid/linalg.h	/^inline void vcent(float *a, const float *b, const float *c, const float *d)$/;"	f
vdif	libs/jacgrid/linalg.h	/^inline void vdif(float *a, const float *b, const float *c)$/;"	f
vec	libs/math/LSQMatrix.h	/^    float vec[3];$/;"	m	class:LSQMatrix
vecmat	apps/MIFit/ui/GLRenderer.cpp	/^void GLRenderer::vecmat(float a[3], float mat[3][3], float b[3])$/;"	f	class:GLRenderer
vector	apps/MIFit/core/eigen.cpp	/^typedef double*vector;$/;"	t	file:
vectorangle	libs/math/Matrices.cpp	/^float vectorangle(float v1[3], float v2[3])$/;"	f
verbose	apps/MIFit/ui/RefinementOptionsDialog.h	/^        bool verbose;$/;"	m	struct:RefinementOptionsDialog::Data
verbose	libs/opengl/zlib/zutil.cpp	35;"	d	file:
verboseMessagesCheckBox	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QCheckBox *verboseMessagesCheckBox;$/;"	m	class:Ui_RefinementOptionsDialog
version	apps/MIFit/script/MIFitScriptObject.cpp	/^QString MIFitScriptObject::version()$/;"	f	class:MIFitScriptObject
version	mifit.py	/^def version():$/;"	f
version_string	libs/map/EMapBase.h	/^    std::string version_string;$/;"	m	class:EMapBase
vertexBuffer	libs/opengl/Arc.h	/^            float *vertexBuffer;$/;"	m	class:mi::opengl::Arc
vertexBuffer	libs/opengl/Sphere.h	/^            float *vertexBuffer;$/;"	m	class:mi::opengl::Sphere
vertexCount	libs/opengl/Sphere.h	/^            int vertexCount;$/;"	m	class:mi::opengl::Sphere
vertexIndex	libs/opengl/Arc.h	/^            int vertexIndex;$/;"	m	class:mi::opengl::Arc
vertexsets	libs/opengl/Object3d.h	/^            std::vector<std::vector<float> > vertexsets;$/;"	m	class:mi::opengl::Object3d
vertexsetsnorms	libs/opengl/Object3d.h	/^            std::vector<std::vector<float> > vertexsetsnorms;$/;"	m	class:mi::opengl::Object3d
vertexsetstexs	libs/opengl/Object3d.h	/^            std::vector<std::vector<float> > vertexsetstexs;$/;"	m	class:mi::opengl::Object3d
verticalAxis	libs/opengl/interact/SimpleMouseRotator.h	/^                mi::math::Vector3<float> verticalAxis;$/;"	m	class:mi::opengl::interact::SimpleMouseRotator
verticalLayout	apps/MIFit/ui/ui_AtomColors.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_AtomColors
verticalLayout	apps/MIFit/ui/ui_GLFormatDialog.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_GLFormatDialog
verticalLayout	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_GeneralPreferences
verticalLayout	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_LSQFitDialog
verticalLayout	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_PhaseFileLoadDialog
verticalLayout	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_RefinementOptionsDialog
verticalLayout	apps/MIFit/ui/ui_SelectCrystal.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_SelectCrystal
verticalLayout	apps/MIFit/ui/ui_SmilesDialog.h	/^    QVBoxLayout *verticalLayout;$/;"	m	class:Ui_SmilesDialog
verticalLayout_2	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_ContourOptionsWidget
verticalLayout_2	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_GeneralPreferences
verticalLayout_2	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_LSQFitDialog
verticalLayout_2	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QVBoxLayout *verticalLayout_2;$/;"	m	class:Ui_PhaseFileLoadDialog
verticalLayout_3	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_ContourOptionsWidget
verticalLayout_3	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_GeneralPreferences
verticalLayout_3	apps/MIFit/ui/ui_LSQFitDialog.h	/^    QVBoxLayout *verticalLayout_3;$/;"	m	class:Ui_LSQFitDialog
verticalLayout_4	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QVBoxLayout *verticalLayout_4;$/;"	m	class:Ui_GeneralPreferences
verticalSpacer	apps/MIFit/ui/ui_BValueColors.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_BValueColors
verticalSpacer	apps/MIFit/ui/ui_ContourOptionsWidget.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_ContourOptionsWidget
verticalSpacer	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_CustomJobDialog
verticalSpacer	apps/MIFit/ui/ui_CustomJobPreferences.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_CustomJobPreferences
verticalSpacer	apps/MIFit/ui/ui_EnvironmentPreferences.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_EnvironmentPreferences
verticalSpacer	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_GeneralPreferences
verticalSpacer	apps/MIFit/ui/ui_PhaseFileLoadDialog.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_PhaseFileLoadDialog
verticalSpacer	apps/MIFit/ui/ui_RefinementOptionsDialog.h	/^    QSpacerItem *verticalSpacer;$/;"	m	class:Ui_RefinementOptionsDialog
verticalSpacer_2	apps/MIFit/ui/ui_CustomJobPreferences.h	/^    QSpacerItem *verticalSpacer_2;$/;"	m	class:Ui_CustomJobPreferences
verticalSpacer_3	apps/MIFit/ui/ui_CustomJobPreferences.h	/^    QSpacerItem *verticalSpacer_3;$/;"	m	class:Ui_CustomJobPreferences
vertices	apps/MIFit/ui/BondRenderer.h	/^    QVector<QVector3D> vertices;$/;"	m	class:BondRenderer
vertices	libs/jacgrid/surface.h	/^    std::vector<float> vertices;         \/* the coords of a vertex (global surf points here) *\/$/;"	m	class:surfaceT
verts	libs/jacgrid/cell_table.h	/^    unsigned int verts[8];$/;"	m	struct:__anon30
view	apps/MIFit/core/ViewPoint.h	/^    mi::math::Quaternion<float> view;$/;"	m	class:ViewPoint
view	apps/MIFit/core/ViewPoint.h	/^    mi::math::Quaternion<float> view;$/;"	m	class:ViewSave
view	apps/MIFit/ui/DisplayView.cpp	/^    MIGLWidget *view;$/;"	m	class:DisplayTree	file:
view	apps/MIFit/ui/ModelsView.cpp	/^    MIGLWidget *view;$/;"	m	class:AtomsTree	file:
view	apps/MIFit/ui/ModelsView.cpp	/^    MIGLWidget *view;$/;"	m	class:ModelsTree	file:
view	apps/MIFit/ui/ModelsView.cpp	/^    MIGLWidget *view;$/;"	m	class:ResiduesTree	file:
viewActivated	apps/MIFit/ui/ViewSyncedPanel.cpp	/^void ViewSyncedPanel::viewActivated(MIGLWidget *view)$/;"	f	class:ViewSyncedPanel
viewActivated	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^void ViewController::viewActivated(MIGLWidget * _t1)$/;"	f	class:ViewController
viewDeactivated	apps/MIFit/ui/ViewSyncedPanel.cpp	/^void ViewSyncedPanel::viewDeactivated(MIGLWidget *view)$/;"	f	class:ViewSyncedPanel
viewDeactivated	apps/MIFit/ui/moc/moc_MIGLWidget.cpp	/^void ViewController::viewDeactivated(MIGLWidget * _t1)$/;"	f	class:ViewController
viewEnd	apps/MIFit/ui/MIGLWidget.cpp	/^        Quaternion<float> viewEnd;$/;"	m	class:__anon10::ViewPointAnimation	file:
viewMenu	apps/MIFit/ui/MIMainWindow.h	/^    QMenu *viewMenu;$/;"	m	class:MIMainWindow
viewStart	apps/MIFit/ui/MIGLWidget.cpp	/^        Quaternion<float> viewStart;$/;"	m	class:__anon10::ViewPointAnimation	file:
viewToPanel	apps/MIFit/ui/ViewSyncedPanel.h	/^    ViewToPanelMap viewToPanel;$/;"	m	class:ViewSyncedPanel
viewVector	apps/MIFit/ui/GLRenderer.h	/^    mi::math::Vector3<float> viewVector;$/;"	m	class:GLRenderer
viewVectorSet	apps/MIFit/ui/GLRenderer.h	/^    bool viewVectorSet;$/;"	m	class:GLRenderer
view_menu	apps/MIFit/ui/MIMainWindow.h	/^    QMenu *view_menu;$/;"	m	class:MIMainWindow
viewpoint	apps/MIFit/ui/CMolwViewScene.h	/^    ViewPoint *viewpoint;$/;"	m	class:CMolwViewScene
viewpoint	apps/MIFit/ui/CMolwViewSlabPickingRenderable.h	/^    mi::opengl::Viewpoint *viewpoint;$/;"	m	class:CMolwViewSlabRenderable
viewpoint	apps/MIFit/ui/DictEditScene.h	/^    mi::opengl::Viewpoint *viewpoint;$/;"	m	class:DictEditScene
viewpoint	apps/MIFit/ui/MIGLWidget.cpp	/^        ViewPoint *viewpoint;$/;"	m	class:__anon10::ViewPointAnimation	file:
viewpoint	apps/MIFit/ui/MIGLWidget.h	/^    ViewPoint *viewpoint;$/;"	m	class:MIGLWidget
viewpoint	libs/opengl/interact/MouseArcBall.h	/^                mi::opengl::Viewpoint *viewpoint;$/;"	m	class:mi::opengl::interact::MouseArcBall
viewpoint	libs/opengl/interact/MouseTranslator.h	/^                Viewpoint *viewpoint;$/;"	m	class:mi::opengl::interact::MouseTranslator
viewpoint	libs/opengl/interact/SimpleMouseRotator.h	/^                Viewpoint *viewpoint;$/;"	m	class:mi::opengl::interact::SimpleMouseRotator
viewpointCenterMarkerRadius	apps/MIFit/ui/GLOverviewCanvas.h	/^    float viewpointCenterMarkerRadius;$/;"	m	class:GLOverviewCanvas
viewpointSettings	apps/MIFit/ui/CMolwViewScene.h	/^    ViewPointSettings *viewpointSettings;$/;"	m	class:CMolwViewScene
viewpointSettings	apps/MIFit/ui/MIGLWidget.h	/^    ViewPointSettings *viewpointSettings;$/;"	m	class:MIGLWidget
viewport	apps/MIFit/ui/CMolwViewScene.h	/^    mi::opengl::Viewport *viewport;$/;"	m	class:CMolwViewScene
viewport	apps/MIFit/ui/DictEditScene.h	/^    mi::opengl::Viewport *viewport;$/;"	m	class:DictEditScene
viewport	apps/MIFit/ui/GLOverviewCanvas.h	/^    mi::opengl::Viewport *viewport;$/;"	m	class:GLOverviewCanvas
viewport	libs/opengl/StereoView.h	/^            Viewport *viewport;$/;"	m	class:mi::opengl::StereoView
visibilityChanged	apps/MIFit/core/moc/moc_Stack.cpp	/^void Stack::visibilityChanged(bool _t1)$/;"	f	class:Stack
visible	apps/MIFit/core/ATOMLABEL.cpp	/^void ATOMLABEL::visible(bool on)$/;"	f	class:ATOMLABEL
visible	apps/MIFit/core/Molecule.h	/^    int visible;$/;"	m	class:Molecule
visible	libs/map/EMapBase.h	/^    bool visible;$/;"	m	class:EMapBase
visible_	apps/MIFit/core/ATOMLABEL.h	/^    bool visible_;$/;"	m	class:ATOMLABEL
visible_	apps/MIFit/core/Stack.h	/^    bool visible_;$/;"	m	class:Stack
vm	libs/chemlib/PLANE.h	/^        float vm[3];$/;"	m	class:chemlib::PLANE
vm1_	libs/chemlib/Matrix.h	/^        T *vm1_ ;   \/\/ these point to the same data, but are 1-based$/;"	m	class:TNT::Matrix
vmidp	libs/jacgrid/linalg.h	/^inline void vmidp(float *a, const float *b, const float *c)$/;"	f
vnorm	libs/jacgrid/linalg.h	/^inline void vnorm(float *x)$/;"	f
void_mem_fun	libs/chemlib/util.h	/^    void_mem_fun_t<T> void_mem_fun(void (T::*funct)())$/;"	f	namespace:chemlib
void_mem_fun_ref	libs/chemlib/util.h	/^    void_mem_fun_ref_t<T> void_mem_fun_ref(void (T::*_funct)())$/;"	f	namespace:chemlib
void_mem_fun_ref_t	libs/chemlib/util.h	/^        explicit void_mem_fun_ref_t(void(T::*funct)()) : ptr(funct)$/;"	f	class:chemlib::void_mem_fun_ref_t
void_mem_fun_ref_t	libs/chemlib/util.h	/^    class void_mem_fun_ref_t : public std::unary_function<T, void>$/;"	c	namespace:chemlib
void_mem_fun_t	libs/chemlib/util.h	/^        explicit void_mem_fun_t(void(T::*funct)()) : ptr(funct)$/;"	f	class:chemlib::void_mem_fun_t
void_mem_fun_t	libs/chemlib/util.h	/^    class void_mem_fun_t : public std::unary_function<T*, void>$/;"	c	namespace:chemlib
voidp	libs/opengl/zlib/zconf.h	/^typedef Byte*voidp;$/;"	t
voidp	libs/opengl/zlib/zconf.h	/^typedef void*voidp;$/;"	t
voidp	libs/opengl/zlib/zconf.h	44;"	d
voidpf	libs/opengl/zlib/zconf.h	/^typedef Byte FAR*voidpf;$/;"	t
voidpf	libs/opengl/zlib/zconf.h	/^typedef void FAR*voidpf;$/;"	t
voidpf	libs/opengl/zlib/zconf.h	43;"	d
vol	libs/map/fftsub.cpp	/^static float a, b, c, alpha, beta, gama, rmin, rmax, vol;$/;"	v	file:
vprintf	libs/util/FileIo.cpp	/^int FileIo::vprintf(const char *format, va_list argp)$/;"	f	class:FileIo
vprintf	libs/util/StringIo.cpp	/^int StringIo::vprintf(const char* \/* format *\/, va_list \/* argp *\/)$/;"	f	class:StringIo
vset	libs/jacgrid/linalg.h	/^inline void vset(float *a, const float *b)$/;"	f
vsnprintf	libs/util/util.cpp	13;"	d	file:
vsum	libs/jacgrid/linalg.h	/^inline void vsum(float *a, const float *b, const float *c)$/;"	f
vtB	libs/chemlib/valence.h	/^        const unsigned int vtB = 3;$/;"	m	namespace:chemlib::ValenceType
vtC	libs/chemlib/valence.h	/^        const unsigned int vtC = 4;$/;"	m	namespace:chemlib::ValenceType
vtH	libs/chemlib/valence.h	/^        const unsigned int vtH = 1;$/;"	m	namespace:chemlib::ValenceType
vtI	libs/chemlib/valence.h	/^        const unsigned int vtI = 7;$/;"	m	namespace:chemlib::ValenceType
vtN	libs/chemlib/valence.h	/^        const unsigned int vtN = 6;$/;"	m	namespace:chemlib::ValenceType
vtO	libs/chemlib/valence.h	/^        const unsigned int vtO = 2;$/;"	m	namespace:chemlib::ValenceType
vtS	libs/chemlib/valence.h	/^        const unsigned int vtS = 5;$/;"	m	namespace:chemlib::ValenceType
w	apps/MIFit/core/SURFDOT.h	/^    unsigned short w;$/;"	m	class:SURFDOT
w	libs/math/Tuple4.h	/^            Type w;$/;"	m	class:mi::math::Tuple4
warning	apps/MIFit/ui/MoleculeXmlHandler.cpp	/^bool MoleculeXmlHandler::warning(const QXmlParseException &exception)$/;"	f	class:MoleculeXmlHandler
was	libs/opengl/zlib/inflate.cpp	/^            uLong was;          \/* computed check value *\/$/;"	m	struct:internal_state::__anon43::__anon44	file:
wavel	libs/umtz/mmtzlib.h	/^    float wavel;$/;"	m	struct:mmtz_dataset_
wavelength	libs/cmtz/mtzdata.h	/^		 float wavelength;     \/**< Dataset wavelength *\/$/;"	m	struct:__anon21
wbits	libs/opengl/zlib/inflate.cpp	/^    uInt wbits;         \/* log2(window size)  (8..15, defaults to 15) *\/$/;"	m	struct:internal_state	file:
weight	libs/chemlib/MIAtom.h	/^        float weight() const$/;"	f	class:chemlib::MIAtom
weight_	libs/chemlib/MIAtom.h	/^        float weight_;$/;"	m	class:chemlib::MIAtom
what	libs/math/IndexOutOfBoundsException.cpp	/^const char*IndexOutOfBoundsException::what() const$/;"	f	class:mi::math::IndexOutOfBoundsException
what	libs/opengl/zlib/inftrees.h	/^        } what;$/;"	m	union:inflate_huft_s::__anon32	typeref:struct:inflate_huft_s::__anon32::__anon33
wheelEvent	apps/MIFit/ui/DictEditCanvas.cpp	/^    virtual void wheelEvent(QGraphicsSceneWheelEvent *event)$/;"	f	class:DictEditMainItem
white	apps/MIFit/ui/GLRenderer.cpp	/^static float white[4] = { 1.0f, 1.0f, 1.0f, 1.0f };$/;"	v	file:
width	apps/MIFit/core/ViewPoint.cpp	/^int ViewPoint::width() const$/;"	f	class:ViewPoint
width	apps/MIFit/ui/GLRenderer.h	/^    int width;$/;"	m	class:GLRenderer
width	apps/MIFit/ui/graphlib.h	/^    int width;$/;"	m	class:GR_POINT
width	libs/opengl/Text.cpp	/^        uint width;$/;"	m	struct:__anon45::CharData	file:
width	libs/opengl/Viewport.h	/^            int width;$/;"	m	class:mi::opengl::Viewport
width_	apps/MIFit/core/ViewPoint.h	/^    int width_, height_; \/\/ viewport size; screen coords.$/;"	m	class:ViewPoint
window	libs/opengl/zlib/infutil.h	/^    Bytef *window;      \/* sliding window *\/$/;"	m	struct:inflate_blocks_state
windowMapper	apps/MIFit/ui/MIMainWindow.h	/^    QSignalMapper *windowMapper;$/;"	m	class:MIMainWindow
windowMenu	apps/MIFit/ui/MIMainWindow.h	/^    QMenu *windowMenu;$/;"	m	class:MIMainWindow
windowToSphereCoordinates	libs/opengl/interact/MouseArcBall.cpp	/^void MouseArcBall::windowToSphereCoordinates(Vector3<float> &vect)$/;"	f	class:mi::opengl::interact::MouseArcBall
word	libs/cmtz/ccp4_parser.h	/^  char   word[5];       \/* First four characters of token *\/$/;"	m	struct:CCP4::__anon26
word	libs/opengl/zlib/inftrees.h	/^    } word;             \/*  16-bit, 8 bytes for 32-bit int's) *\/$/;"	m	struct:inflate_huft_s	typeref:union:inflate_huft_s::__anon32
working	apps/MIFit/ui/DictEditCanvas.h	/^    bool working;$/;"	m	class:DictEditCanvas
workingDirLineEdit	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QLineEdit *workingDirLineEdit;$/;"	m	class:Ui_CustomJobDialog
workingDirPushButton	apps/MIFit/ui/ui_CustomJobDialog.h	/^    QPushButton *workingDirPushButton;$/;"	m	class:Ui_CustomJobDialog
workingDirectory	apps/MIFit/jobs/BatchJob.cpp	/^QString BatchJob::workingDirectory() const$/;"	f	class:BatchJob
workingDirectory	apps/MIFit/jobs/BatchJobManager.cpp	/^    QString workingDirectory;$/;"	m	struct:CustomJob	file:
workingDirectory	apps/MIFit/ui/CustomJobDialog.cpp	/^QString CustomJobDialog::workingDirectory() const$/;"	f	class:CustomJobDialog
workingDirectory_	apps/MIFit/jobs/BatchJob.h	/^    QString workingDirectory_;$/;"	m	class:BatchJob
wplane	libs/map/fftsub.cpp	/^void wplane(float *x, int nx, int ny, float *p, int mx, int my, int x0, int y_0, int level)$/;"	f
write	apps/MIFit/python/PythonEngine.cpp	/^void PythonEngine::write(const char *text)$/;"	f	class:PythonEngine
write	libs/cmtz/library_file.h	/^  unsigned int write : 1;$/;"	m	struct:CCP4::_CFileStruct
write	libs/opengl/zlib/infutil.h	/^    Bytef *write;       \/* window write pointer *\/$/;"	m	struct:inflate_blocks_state
writeCurrentModel	apps/MIFit/script/MIFitScriptObject.cpp	/^bool MIFitScriptObject::writeCurrentModel(const QString &file)$/;"	f	class:MIFitScriptObject
writeCurrentModel	mifit.py	/^def writeCurrentModel(file):$/;"	f
writeSettings	apps/MIFit/ui/GLFormatEdit.cpp	/^void GLFormatEdit::writeSettings(QSettings &settings, const QGLFormat &format)$/;"	f	class:GLFormatEdit
writeViewPointSettings	apps/MIFit/ui/MIGLWidget.cpp	/^    void writeViewPointSettings(ViewPoint *viewpoint, ViewPointSettings *viewpointSettings)$/;"	f	namespace:__anon11
writeln	apps/MIFit/python/PythonEngine.cpp	/^void PythonEngine::writeln(const char *text)$/;"	f	class:PythonEngine
writers	libs/chemlib/MIMolIOBase.h	/^        WriterList writers;$/;"	m	class:chemlib::MIMolIOBase
x	apps/MIFit/core/SURFDOT.h	/^    float x;$/;"	m	class:SURFDOT
x	apps/MIFit/ui/graphlib.h	/^    float x, y;$/;"	m	class:GR_POINT
x	libs/chemlib/MIAtom.h	/^        float x() const$/;"	f	class:chemlib::MIAtom
x	libs/chemlib/Monomer.h	/^        float x() const$/;"	f	class:chemlib::Monomer
x	libs/chemlib/SaveAtom.h	/^        float x, y, z;$/;"	m	class:chemlib::SaveAtom
x	libs/map/MAP_POINT.h	/^    float x;$/;"	m	class:MAP_POINT
x	libs/map/sfcalc.cpp	/^float x;$/;"	v
x	libs/math/APOINT.h	/^    float x;$/;"	m	class:APOINT
x	libs/math/Tuple3.h	/^            Type x;$/;"	m	class:mi::math::Tuple3
x	libs/math/Tuple4.h	/^            Type x;$/;"	m	class:mi::math::Tuple4
x	libs/opengl/Axis.h	/^            mi::math::Vector3<float> x;$/;"	m	class:mi::opengl::Axis
x	libs/opengl/Viewport.h	/^            int x;$/;"	m	class:mi::opengl::Viewport
x1	libs/math/LINE.h	/^    float x1;$/;"	m	class:LINE
x2	libs/math/LINE.h	/^    float x2;$/;"	m	class:LINE
xAngle	libs/chemlib/CifData.h	/^    int xAngle;$/;"	m	class:AngleKeyIndices
xAngle	libs/chemlib/CifData.h	/^    int xAngle;$/;"	m	class:TorsionKeyIndices
xAngle	libs/chemlib/CifData.h	/^    int xAngle;$/;"	m	class:TorsionValueKeyIndices
xAtom	libs/chemlib/CifData.h	/^    int xAtom;$/;"	m	class:ChiralAtomKeyIndices
xAtom	libs/chemlib/CifData.h	/^    int xAtom;$/;"	m	class:PlaneAtomKeyIndices
xAtom	libs/chemlib/CifData.h	/^    int xAtom;$/;"	m	class:PlaneKeyIndices
xAtom1	libs/chemlib/CifData.h	/^    int xAtom1;$/;"	m	class:AngleKeyIndices
xAtom1	libs/chemlib/CifData.h	/^    int xAtom1;$/;"	m	class:BondKeyIndices
xAtom1	libs/chemlib/CifData.h	/^    int xAtom1;$/;"	m	class:ChiralKeyIndices
xAtom1	libs/chemlib/CifData.h	/^    int xAtom1;$/;"	m	class:TorsionKeyIndices
xAtom2	libs/chemlib/CifData.h	/^    int xAtom2;$/;"	m	class:AngleKeyIndices
xAtom2	libs/chemlib/CifData.h	/^    int xAtom2;$/;"	m	class:BondKeyIndices
xAtom2	libs/chemlib/CifData.h	/^    int xAtom2;$/;"	m	class:ChiralKeyIndices
xAtom2	libs/chemlib/CifData.h	/^    int xAtom2;$/;"	m	class:TorsionKeyIndices
xAtom3	libs/chemlib/CifData.h	/^    int xAtom3;$/;"	m	class:AngleKeyIndices
xAtom3	libs/chemlib/CifData.h	/^    int xAtom3;$/;"	m	class:ChiralKeyIndices
xAtom3	libs/chemlib/CifData.h	/^    int xAtom3;$/;"	m	class:TorsionKeyIndices
xAtom4	libs/chemlib/CifData.h	/^    int xAtom4;$/;"	m	class:TorsionKeyIndices
xAtomCount	libs/chemlib/CifData.h	/^    int xAtomCount;$/;"	m	class:PlaneKeyIndices
xCenter	libs/chemlib/CifData.h	/^    int xCenter;$/;"	m	class:ChiralKeyIndices
xCharge	libs/chemlib/CifData.h	/^    int xCharge;$/;"	m	class:AtomKeyIndices
xConfig	libs/chemlib/CifData.h	/^    int xConfig;$/;"	m	class:ChiralKeyIndices
xDegree	libs/chemlib/CifData.h	/^    int xDegree;                            \/\/# of atoms attached to chrl center$/;"	m	class:ChiralKeyIndices
xDescLevel	libs/chemlib/CifData.h	/^    int xDescLevel;$/;"	m	class:HeaderKeyIndices
xDist	libs/chemlib/CifData.h	/^    int xDist;$/;"	m	class:AngleKeyIndices
xDist	libs/chemlib/CifData.h	/^    int xDist;$/;"	m	class:TorsionValueKeyIndices
xDistTolerance	libs/chemlib/CifData.h	/^    int xDistTolerance;$/;"	m	class:AngleKeyIndices
xDistTolerance	libs/chemlib/CifData.h	/^    int xDistTolerance;$/;"	m	class:TorsionValueKeyIndices
xHvyAtomCount	libs/chemlib/CifData.h	/^    int xHvyAtomCount;$/;"	m	class:PlaneKeyIndices
xHvyDegree	libs/chemlib/CifData.h	/^    int xHvyDegree;                         \/\/# of attached non-hydrogen atoms$/;"	m	class:ChiralKeyIndices
xLength	libs/chemlib/CifData.h	/^    int xLength;$/;"	m	class:BondKeyIndices
xName	libs/chemlib/CifData.h	/^    int xName;$/;"	m	class:AtomKeyIndices
xName	libs/chemlib/CifData.h	/^    int xName;$/;"	m	class:ChiralAtomKeyIndices
xName	libs/chemlib/CifData.h	/^    int xName;$/;"	m	class:ChiralKeyIndices
xName	libs/chemlib/CifData.h	/^    int xName;$/;"	m	class:PlaneAtomKeyIndices
xName	libs/chemlib/CifData.h	/^    int xName;$/;"	m	class:PlaneKeyIndices
xName	libs/chemlib/CifData.h	/^    int xName;$/;"	m	class:TorsionKeyIndices
xName	libs/chemlib/CifData.h	/^    int xName;$/;"	m	class:TorsionValueKeyIndices
xOffset	apps/MIFit/core/ATOMLABEL.cpp	/^int ATOMLABEL::xOffset() const$/;"	f	class:ATOMLABEL
xOffset	apps/MIFit/core/ATOMLABEL.cpp	/^void ATOMLABEL::xOffset(int offset)$/;"	f	class:ATOMLABEL
xOffset	libs/opengl/Text.cpp	/^    GLint xOffset;$/;"	m	struct:mi::opengl::TextPrivate	file:
xOrder	libs/chemlib/CifData.h	/^    int xOrder;$/;"	m	class:BondKeyIndices
xPeriod	libs/chemlib/CifData.h	/^    int xPeriod;$/;"	m	class:TorsionKeyIndices
xRes	libs/chemlib/CifData.h	/^    int xRes;$/;"	m	class:AngleKeyIndices
xRes	libs/chemlib/CifData.h	/^    int xRes;$/;"	m	class:AtomKeyIndices
xRes	libs/chemlib/CifData.h	/^    int xRes;$/;"	m	class:BondKeyIndices
xRes	libs/chemlib/CifData.h	/^    int xRes;$/;"	m	class:ChiralAtomKeyIndices
xRes	libs/chemlib/CifData.h	/^    int xRes;$/;"	m	class:ChiralKeyIndices
xRes	libs/chemlib/CifData.h	/^    int xRes;$/;"	m	class:PlaneAtomKeyIndices
xRes	libs/chemlib/CifData.h	/^    int xRes;$/;"	m	class:PlaneKeyIndices
xRes	libs/chemlib/CifData.h	/^    int xRes;$/;"	m	class:TorsionKeyIndices
xRes	libs/chemlib/CifData.h	/^    int xRes;$/;"	m	class:TorsionValueKeyIndices
xSymbol	libs/chemlib/CifData.h	/^    int xSymbol;$/;"	m	class:AtomKeyIndices
xTolerance	libs/chemlib/CifData.h	/^    int xTolerance;$/;"	m	class:AngleKeyIndices
xTolerance	libs/chemlib/CifData.h	/^    int xTolerance;$/;"	m	class:BondKeyIndices
xTolerance	libs/chemlib/CifData.h	/^    int xTolerance;$/;"	m	class:PlaneAtomKeyIndices
xTolerance	libs/chemlib/CifData.h	/^    int xTolerance;$/;"	m	class:PlaneKeyIndices
xTolerance	libs/chemlib/CifData.h	/^    int xTolerance;$/;"	m	class:TorsionKeyIndices
xTolerance	libs/chemlib/CifData.h	/^    int xTolerance;$/;"	m	class:TorsionValueKeyIndices
xVolume	libs/chemlib/CifData.h	/^    int xVolume;$/;"	m	class:ChiralKeyIndices
xX	libs/chemlib/CifData.h	/^    int xX;$/;"	m	class:AtomKeyIndices
xY	libs/chemlib/CifData.h	/^    int xY;$/;"	m	class:AtomKeyIndices
xZ	libs/chemlib/CifData.h	/^    int xZ;$/;"	m	class:AtomKeyIndices
x_	libs/chemlib/Monomer.h	/^        float x_;$/;"	m	class:chemlib::Monomer
xdim	libs/jacgrid/plane.h	/^    unsigned int xdim;$/;"	m	class:JACPlane
xdivisions	apps/MIFit/ui/graphlib.h	/^    int xdivisions, ydivisions;$/;"	m	class:GraphWindow
xfitMouseCheckBox	apps/MIFit/ui/ui_GeneralPreferences.h	/^    QCheckBox *xfitMouseCheckBox;$/;"	m	class:Ui_GeneralPreferences
xfitMouseMode	apps/MIFit/ui/Application.h	/^    bool xfitMouseMode;$/;"	m	class:Application
xl_rotate	libs/math/crystmat.cpp	/^void xl_rotate(float x, float y, float z, float *xp, float *yp, float *zp, float mat[4][3])$/;"	f
xlabel	apps/MIFit/ui/graphlib.h	/^    std::string xlabel;$/;"	m	class:GraphWindow
xlabelsize	apps/MIFit/ui/graphlib.h	/^    int xlabelsize;     \/* not currently implemented *\/$/;"	m	class:GraphWindow
xmax	libs/chemlib/Ligand.h	/^        int xmin, ymin, zmin, xmax, ymax, zmax;$/;"	m	class:chemlib::Ligand
xmax	libs/map/fftsub.cpp	/^static int xmin, ymin, zmin, xmax, ymax, zmax;$/;"	v	file:
xmin	libs/chemlib/Ligand.h	/^        int xmin, ymin, zmin, xmax, ymax, zmax;$/;"	m	class:chemlib::Ligand
xmin	libs/map/fftsub.cpp	/^static int xmin, ymin, zmin, xmax, ymax, zmax;$/;"	v	file:
xminor	apps/MIFit/ui/graphlib.h	/^    int xminor, yminor;$/;"	m	class:GraphWindow
xname	libs/cmtz/mtzdata.h	/^		 char xname[65];       \/**< Crystal name *\/$/;"	m	struct:__anon22
xname	libs/umtz/mmtzlib.h	/^    char xname[65];$/;"	m	struct:mmtz_crystal_
xo	apps/MIFit/core/ATOMLABEL.h	/^    int xo;$/;"	m	class:ATOMLABEL
xpnd	libs/map/fftsub.cpp	/^int xpnd(int h1[], int h2[], fcomplex *f1, fcomplex *f2, int n)$/;"	f
xprime	libs/jacgrid/plane.h	/^    float xprime[3];   \/* these form an orthonormal basis vector set *\/$/;"	m	class:JACPlane
xtal	libs/cmtz/mtzdata.h	/^		 MTZXTAL **xtal;       \/**< crystals *\/$/;"	m	struct:__anon25
xtalid	libs/cmtz/mtzdata.h	/^typedef struct { int xtalid;           \/**< Crystal id *\/$/;"	m	struct:__anon22
xtrans	libs/jacgrid/isosurface.cpp	/^static float xtrans, ytrans, ztrans;$/;"	v	file:
xyDisplayRange	apps/MIFit/ui/GLRenderer.h	/^    float xyDisplayRange;$/;"	m	class:GLRenderer
y	apps/MIFit/core/SURFDOT.h	/^    float y;$/;"	m	class:SURFDOT
y	apps/MIFit/ui/graphlib.h	/^    float x, y;$/;"	m	class:GR_POINT
y	libs/chemlib/MIAtom.h	/^        float y() const$/;"	f	class:chemlib::MIAtom
y	libs/chemlib/Monomer.h	/^        float y() const$/;"	f	class:chemlib::Monomer
y	libs/chemlib/SaveAtom.h	/^        float x, y, z;$/;"	m	class:chemlib::SaveAtom
y	libs/map/MAP_POINT.h	/^    float y;$/;"	m	class:MAP_POINT
y	libs/math/APOINT.h	/^    float y;$/;"	m	class:APOINT
y	libs/math/Tuple3.h	/^            Type y;$/;"	m	class:mi::math::Tuple3
y	libs/math/Tuple4.h	/^            Type y;$/;"	m	class:mi::math::Tuple4
y	libs/opengl/Axis.h	/^            mi::math::Vector3<float> y;$/;"	m	class:mi::opengl::Axis
y	libs/opengl/Viewport.h	/^            int y;$/;"	m	class:mi::opengl::Viewport
y1	libs/math/LINE.h	/^    float y1;$/;"	m	class:LINE
y2	libs/math/LINE.h	/^    float y2;$/;"	m	class:LINE
yOffset	apps/MIFit/core/ATOMLABEL.cpp	/^int ATOMLABEL::yOffset() const$/;"	f	class:ATOMLABEL
yOffset	apps/MIFit/core/ATOMLABEL.cpp	/^void ATOMLABEL::yOffset(int offset)$/;"	f	class:ATOMLABEL
yOffset	libs/opengl/Text.cpp	/^    GLint yOffset;$/;"	m	struct:mi::opengl::TextPrivate	file:
y_	libs/chemlib/Monomer.h	/^        float y_;$/;"	m	class:chemlib::Monomer
yadd	apps/MIFit/core/Annotation.h	/^    int sx, sy, sz, sw, sh, yadd;$/;"	m	class:Annotation
ydim	libs/jacgrid/plane.h	/^    unsigned int ydim;$/;"	m	class:JACPlane
ydivisions	apps/MIFit/ui/graphlib.h	/^    int xdivisions, ydivisions;$/;"	m	class:GraphWindow
ylabel	apps/MIFit/ui/graphlib.h	/^    std::string ylabel;$/;"	m	class:GraphWindow
ylabelsize	apps/MIFit/ui/graphlib.h	/^    int ylabelsize;     \/* not currently implemented *\/$/;"	m	class:GraphWindow
ymax	libs/chemlib/Ligand.h	/^        int xmin, ymin, zmin, xmax, ymax, zmax;$/;"	m	class:chemlib::Ligand
ymax	libs/map/fftsub.cpp	/^static int xmin, ymin, zmin, xmax, ymax, zmax;$/;"	v	file:
ymin	libs/chemlib/Ligand.h	/^        int xmin, ymin, zmin, xmax, ymax, zmax;$/;"	m	class:chemlib::Ligand
ymin	libs/map/fftsub.cpp	/^static int xmin, ymin, zmin, xmax, ymax, zmax;$/;"	v	file:
yminor	apps/MIFit/ui/graphlib.h	/^    int xminor, yminor;$/;"	m	class:GraphWindow
yo	apps/MIFit/core/ATOMLABEL.h	/^    int yo;$/;"	m	class:ATOMLABEL
yprime	libs/jacgrid/plane.h	/^    float yprime[3];   \/* oriented along the screen *\/$/;"	m	class:JACPlane
ytrans	libs/jacgrid/isosurface.cpp	/^static float xtrans, ytrans, ztrans;$/;"	v	file:
z	apps/MIFit/core/SURFDOT.h	/^    float z;$/;"	m	class:SURFDOT
z	apps/MIFit/ui/surf.cpp	/^    float z;$/;"	m	struct:sort_element	file:
z	libs/chemlib/MIAtom.h	/^        float z() const$/;"	f	class:chemlib::MIAtom
z	libs/chemlib/SaveAtom.h	/^        float x, y, z;$/;"	m	class:chemlib::SaveAtom
z	libs/map/MAP_POINT.h	/^    float z;$/;"	m	class:MAP_POINT
z	libs/map/fftlib.cpp	/^    doublecomplex z;$/;"	m	union:Multitype	file:
z	libs/math/APOINT.h	/^    float z;$/;"	m	class:APOINT
z	libs/math/Tuple3.h	/^            Type z;$/;"	m	class:mi::math::Tuple3
z	libs/math/Tuple4.h	/^            Type z;$/;"	m	class:mi::math::Tuple4
z	libs/opengl/Axis.h	/^            mi::math::Vector3<float> z;$/;"	m	class:mi::opengl::Axis
z1	libs/math/LINE.h	/^    float z1;$/;"	m	class:LINE
z2	libs/math/LINE.h	/^    float z2;$/;"	m	class:LINE
z_errmsg	libs/opengl/zlib/zutil.cpp	/^const char *z_errmsg[10] =$/;"	v
z_error	libs/opengl/zlib/zutil.cpp	/^void z_error (const char *m)$/;"	f
z_off_t	libs/opengl/zlib/zconf.h	237;"	d
z_off_t	libs/opengl/zlib/zconf.h	245;"	d
z_stream	libs/opengl/zlib/zlib.h	/^} z_stream;$/;"	t	typeref:struct:z_stream_s
z_stream_s	libs/opengl/zlib/zlib.h	/^typedef struct z_stream_s$/;"	s
z_streamp	libs/opengl/zlib/zlib.h	/^typedef z_stream FAR*z_streamp;$/;"	t
z_verbose	libs/opengl/zlib/zutil.cpp	/^int z_verbose = verbose;$/;"	v
zalloc	libs/opengl/zlib/zlib.h	/^    alloc_func zalloc;  \/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s
zangle	apps/MIFit/core/ViewPoint.h	/^    float zangle; \/\/sin of perspective angle;$/;"	m	class:ViewPoint
zcalloc	libs/opengl/zlib/zutil.cpp	/^voidpf zcalloc ($/;"	f
zcalloc	libs/opengl/zlib/zutil.cpp	/^voidpf zcalloc (voidpf opaque, unsigned items, unsigned size)$/;"	f
zcfree	libs/opengl/zlib/zutil.cpp	/^void  zcfree ($/;"	f
zcfree	libs/opengl/zlib/zutil.cpp	/^void  zcfree (voidpf opaque, voidpf ptr)$/;"	f
zeff	libs/map/sfcalc_data.h	/^double *zeff;$/;"	v
zfree	libs/opengl/zlib/zlib.h	/^    free_func zfree;    \/* used to free the internal state *\/$/;"	m	struct:z_stream_s
zmax	libs/chemlib/Ligand.h	/^        int xmin, ymin, zmin, xmax, ymax, zmax;$/;"	m	class:chemlib::Ligand
zmax	libs/map/fftsub.cpp	/^static int xmin, ymin, zmin, xmax, ymax, zmax;$/;"	v	file:
zmemcmp	libs/opengl/zlib/zutil.cpp	/^int zmemcmp($/;"	f
zmemcmp	libs/opengl/zlib/zutil.h	176;"	d
zmemcmp	libs/opengl/zlib/zutil.h	180;"	d
zmemcpy	libs/opengl/zlib/zutil.cpp	/^void zmemcpy(Bytef *dest, const Bytef *source, uInt len)$/;"	f
zmemcpy	libs/opengl/zlib/zutil.h	175;"	d
zmemcpy	libs/opengl/zlib/zutil.h	179;"	d
zmemzero	libs/opengl/zlib/zutil.cpp	/^void zmemzero($/;"	f
zmemzero	libs/opengl/zlib/zutil.h	177;"	d
zmemzero	libs/opengl/zlib/zutil.h	181;"	d
zmin	libs/chemlib/Ligand.h	/^        int xmin, ymin, zmin, xmax, ymax, zmax;$/;"	m	class:chemlib::Ligand
zmin	libs/map/fftsub.cpp	/^static int xmin, ymin, zmin, xmax, ymax, zmax;$/;"	v	file:
zoom	apps/MIFit/core/ViewPoint.cpp	/^void ViewPoint::zoom(float ds)$/;"	f	class:ViewPoint
zoom	libs/opengl/interact/MouseZoomer.cpp	/^void MouseZoomer::zoom(int, int y)$/;"	f	class:mi::opengl::interact::MouseZoomer
zoomCommand	apps/MIFit/ui/DictEditCanvas.h	/^    mi::opengl::interact::FieldOfViewZoomCommand *zoomCommand;$/;"	m	class:DictEditCanvas
zprime	libs/jacgrid/plane.h	/^    float zprime[3];$/;"	m	class:JACPlane
zs	apps/MIFit/core/eigen.cpp	146;"	d	file:
zs	apps/MIFit/core/eigen.cpp	36;"	d	file:
zstrerror	libs/opengl/zlib/zutil.h	155;"	d
zstrerror	libs/opengl/zlib/zutil.h	157;"	d
ztrans	libs/jacgrid/isosurface.cpp	/^static float xtrans, ytrans, ztrans;$/;"	v	file:
~AddResidueDialog	apps/MIFit/ui/AddResidueDialog.cpp	/^AddResidueDialog::~AddResidueDialog()$/;"	f	class:AddResidueDialog
~Annotation	apps/MIFit/core/Annotation.cpp	/^Annotation::~Annotation()$/;"	f	class:Annotation
~Application	apps/MIFit/ui/Application.cpp	/^Application::~Application()$/;"	f	class:Application
~AtomRefiner	libs/conflib/AtomRefiner.cpp	/^AtomRefiner::~AtomRefiner()$/;"	f	class:AtomRefiner
~AtomTyper	libs/chemlib/AtomTyper.h	/^        virtual ~AtomTyper()$/;"	f	class:chemlib::AtomTyper
~AtomsTree	apps/MIFit/ui/ModelsView.cpp	/^AtomsTree::~AtomsTree()$/;"	f	class:AtomsTree
~BatchJob	apps/MIFit/jobs/BatchJob.cpp	/^BatchJob::~BatchJob()$/;"	f	class:BatchJob
~BatchJobManager	apps/MIFit/jobs/BatchJobManager.cpp	/^BatchJobManager::~BatchJobManager()$/;"	f	class:BatchJobManager
~CArchive	apps/MIFit/core/Cfiles.cpp	/^CArchive::~CArchive()$/;"	f	class:CArchive
~CMapHeaderBase	libs/map/CMapHeaderBase.h	/^    virtual ~CMapHeaderBase()$/;"	f	class:CMapHeaderBase
~CMolwViewAnnotationPickingRenderable	apps/MIFit/ui/CMolwViewAnnotationPickingRenderable.cpp	/^CMolwViewAnnotationPickingRenderable::~CMolwViewAnnotationPickingRenderable()$/;"	f	class:CMolwViewAnnotationPickingRenderable
~CMolwViewAtomPickingRenderable	apps/MIFit/ui/CMolwViewAtomPickingRenderable.cpp	/^CMolwViewAtomPickingRenderable::~CMolwViewAtomPickingRenderable()$/;"	f	class:CMolwViewAtomPickingRenderable
~CMolwViewBondPickingRenderable	apps/MIFit/ui/CMolwViewBondPickingRenderable.cpp	/^CMolwViewBondPickingRenderable::~CMolwViewBondPickingRenderable()$/;"	f	class:CMolwViewBondPickingRenderable
~CMolwViewScene	apps/MIFit/ui/CMolwViewScene.cpp	/^CMolwViewScene::~CMolwViewScene()$/;"	f	class:CMolwViewScene
~CMolwViewSlabPickingRenderable	apps/MIFit/ui/CMolwViewSlabPickingRenderable.cpp	/^CMolwViewSlabPickingRenderable::~CMolwViewSlabPickingRenderable()$/;"	f	class:CMolwViewSlabPickingRenderable
~CMolwViewSlabRenderable	apps/MIFit/ui/CMolwViewSlabPickingRenderable.cpp	/^CMolwViewSlabRenderable::~CMolwViewSlabRenderable()$/;"	f	class:CMolwViewSlabRenderable
~ClusterList	apps/MIFit/core/clusterList.cpp	/^ClusterList::~ClusterList()$/;"	f	class:ClusterList
~ConfEnumerator	libs/conflib/ConfIterator.cpp	/^ConfEnumerator::~ConfEnumerator()$/;"	f	class:conflib::ConfEnumerator
~ConfIterator	libs/conflib/ConfIterator.h	/^        virtual ~ConfIterator()$/;"	f	class:conflib::ConfIterator
~ConfSampler	libs/conflib/ConfIterator.cpp	/^ConfSampler::~ConfSampler()$/;"	f	class:conflib::ConfSampler
~ConfSaver	libs/chemlib/ConfSaver.cpp	/^ConfSaver::~ConfSaver()$/;"	f	class:chemlib::ConfSaver
~CustomJobPreferences	apps/MIFit/ui/CustomJobPreferences.cpp	/^CustomJobPreferences::~CustomJobPreferences()$/;"	f	class:CustomJobPreferences
~DictEditAnglePickingRenderable	apps/MIFit/ui/DictEditAnglePickingRenderable.cpp	/^DictEditAnglePickingRenderable::~DictEditAnglePickingRenderable()$/;"	f	class:DictEditAnglePickingRenderable
~DictEditAnnotationPickingRenderable	apps/MIFit/ui/DictEditAnnotationPickingRenderable.cpp	/^DictEditAnnotationPickingRenderable::~DictEditAnnotationPickingRenderable()$/;"	f	class:DictEditAnnotationPickingRenderable
~DictEditAtomPickingRenderable	apps/MIFit/ui/DictEditAtomPickingRenderable.cpp	/^DictEditAtomPickingRenderable::~DictEditAtomPickingRenderable()$/;"	f	class:DictEditAtomPickingRenderable
~DictEditBondPickingRenderable	apps/MIFit/ui/DictEditBondPickingRenderable.cpp	/^DictEditBondPickingRenderable::~DictEditBondPickingRenderable()$/;"	f	class:DictEditBondPickingRenderable
~DictEditCanvas	apps/MIFit/ui/DictEditCanvas.cpp	/^DictEditCanvas::~DictEditCanvas()$/;"	f	class:DictEditCanvas
~DictEditScene	apps/MIFit/ui/DictEditScene.cpp	/^DictEditScene::~DictEditScene()$/;"	f	class:DictEditScene
~DictResidue	libs/chemlib/DictResidue.cpp	/^DictResidue::~DictResidue()$/;"	f	class:DictResidue
~DisplayTree	apps/MIFit/ui/DisplayView.cpp	/^DisplayTree::~DisplayTree()$/;"	f	class:DisplayTree
~DisplayView	apps/MIFit/ui/DisplayView.cpp	/^DisplayView::~DisplayView()$/;"	f	class:DisplayView
~Displaylist	apps/MIFit/ui/Displaylist.cpp	/^Displaylist::~Displaylist()$/;"	f	class:Displaylist
~EMapBase	libs/map/EMapBase.cpp	/^EMapBase::~EMapBase()$/;"	f	class:EMapBase
~FileIo	libs/util/FileIo.cpp	/^FileIo::~FileIo()$/;"	f	class:FileIo
~Frustum	libs/opengl/Frustum.cpp	/^Frustum::~Frustum()$/;"	f	class:mi::opengl::Frustum
~GLFormatDialog	apps/MIFit/ui/GLFormatDialog.cpp	/^GLFormatDialog::~GLFormatDialog()$/;"	f	class:GLFormatDialog
~GLFormatEdit	apps/MIFit/ui/GLFormatEdit.cpp	/^GLFormatEdit::~GLFormatEdit()$/;"	f	class:GLFormatEdit
~GLOverviewCanvas	apps/MIFit/ui/GLOverviewCanvas.cpp	/^GLOverviewCanvas::~GLOverviewCanvas()$/;"	f	class:GLOverviewCanvas
~GLRenderer	apps/MIFit/ui/GLRenderer.cpp	/^GLRenderer::~GLRenderer()$/;"	f	class:GLRenderer
~GeomSaver	libs/chemlib/GeomSaver.cpp	/^GeomSaver::~GeomSaver()$/;"	f	class:chemlib::GeomSaver
~GraphWindow	apps/MIFit/ui/graphlib.h	/^    ~GraphWindow()$/;"	f	class:GraphWindow
~Grid	libs/math/Grid.h	/^        Grid<Type>::~Grid()$/;"	f	class:mi::math::Grid
~Helix	apps/MIFit/core/Helix.cpp	/^Helix::~Helix()$/;"	f	class:Helix
~IndexOutOfBoundsException	libs/math/IndexOutOfBoundsException.cpp	/^IndexOutOfBoundsException::~IndexOutOfBoundsException()$/;"	f	class:mi::math::IndexOutOfBoundsException
~JACAtomsBase	libs/jacgrid/atom.h	/^    virtual ~JACAtomsBase()$/;"	f	class:JACAtomsBase
~JACPlane	libs/jacgrid/plane.cpp	/^JACPlane::~JACPlane()$/;"	f	class:JACPlane
~JobsTree	apps/MIFit/ui/JobsView.cpp	/^JobsTree::~JobsTree()$/;"	f	class:JobsTree
~JobsView	apps/MIFit/ui/JobsView.cpp	/^JobsView::~JobsView()$/;"	f	class:JobsView
~LigDictEntry	libs/ligand/LigDictEntry.cpp	/^LigDictEntry::~LigDictEntry()$/;"	f	class:LigDictEntry
~Ligand	libs/chemlib/Ligand.cpp	/^Ligand::~Ligand()$/;"	f	class:chemlib::Ligand
~MIAtom	libs/chemlib/MIAtom.cpp	/^MIAtom::~MIAtom()$/;"	f	class:chemlib::MIAtom
~MIColorSetter	libs/chemlib/MIMolIOBase.h	/^        virtual ~MIColorSetter()$/;"	f	class:chemlib::MIColorSetter
~MIGLWidget	apps/MIFit/ui/MIGLWidget.cpp	/^MIGLWidget::~MIGLWidget()$/;"	f	class:MIGLWidget
~MIMainWindow	apps/MIFit/ui/MIMainWindow.cpp	/^MIMainWindow::~MIMainWindow()$/;"	f	class:MIMainWindow
~MIMolDictionary	libs/chemlib/MIMolDictionary.cpp	/^MIMolDictionary::~MIMolDictionary()$/;"	f	class:chemlib::MIMolDictionary
~MIMolIOBase	libs/chemlib/MIMolIO.cpp	/^MIMolIOBase::~MIMolIOBase()$/;"	f	class:chemlib::MIMolIOBase
~MIMolOpt	libs/molopt/MIMolOpt.cpp	/^MIMolOpt::~MIMolOpt()$/;"	f	class:MIMolOpt
~MIMolOptCheckPoint	libs/molopt/MIMolOpt.h	/^    virtual ~MIMolOptCheckPoint()$/;"	f	class:MIMolOptCheckPoint
~MIMoleculeBase	libs/chemlib/MIMoleculeBase.cpp	/^MIMoleculeBase::~MIMoleculeBase()$/;"	f	class:chemlib::MIMoleculeBase
~MIQTreeWidget	apps/MIFit/ui/MIQTreeWidget.cpp	/^MIQTreeWidget::~MIQTreeWidget()$/;"	f	class:MIQTreeWidget
~MITorsionWritePrompt	libs/chemlib/mmCIF.h	/^        virtual ~MITorsionWritePrompt()$/;"	f	class:chemlib::MITorsionWritePrompt
~ManageCrystals	apps/MIFit/ui/ManageCrystals.cpp	/^ManageCrystals::~ManageCrystals()$/;"	f	class:ManageCrystals
~MapSettingsBase	libs/map/MapSettingsBase.h	/^    virtual ~MapSettingsBase()$/;"	f	class:MapSettingsBase
~Matrix	libs/chemlib/Matrix.h	/^        ~Matrix()$/;"	f	class:TNT::Matrix
~ModelsTree	apps/MIFit/ui/ModelsView.cpp	/^ModelsTree::~ModelsTree()$/;"	f	class:ModelsTree
~ModelsView	apps/MIFit/ui/ModelsView.cpp	/^ModelsView::~ModelsView()$/;"	f	class:ModelsView
~ModelsViewPanel	apps/MIFit/ui/ModelsView.cpp	/^ModelsViewPanel::~ModelsViewPanel()$/;"	f	class:ModelsViewPanel
~MolPrefsHandler	apps/MIFit/core/Molecule.h	/^    virtual ~MolPrefsHandler()$/;"	f	class:MolPrefsHandler
~Molecule	apps/MIFit/core/Molecule.cpp	/^Molecule::~Molecule()$/;"	f	class:Molecule
~MoleculeXmlHandler	apps/MIFit/ui/MoleculeXmlHandler.cpp	/^MoleculeXmlHandler::~MoleculeXmlHandler()$/;"	f	class:MoleculeXmlHandler
~Monomer	libs/chemlib/Monomer.cpp	/^Monomer::~Monomer()$/;"	f	class:chemlib::Monomer
~MouseArcBall	libs/opengl/interact/MouseArcBall.h	/^                virtual ~MouseArcBall()$/;"	f	class:mi::opengl::interact::MouseArcBall
~MousePicker	libs/opengl/interact/MousePicker.cpp	/^MousePicker::~MousePicker()$/;"	f	class:mi::opengl::interact::MousePicker
~MouseTranslator	libs/opengl/interact/MouseTranslator.cpp	/^MouseTranslator::~MouseTranslator()$/;"	f	class:mi::opengl::interact::MouseTranslator
~OrigRamaData	apps/MIFit/ui/rama.h	/^    virtual ~OrigRamaData()$/;"	f	class:OrigRamaData
~PDB	libs/chemlib/PDB.cpp	/^PDB::~PDB()$/;"	f	class:chemlib::PDB
~PeriodicGrid	libs/math/PeriodicGrid.h	/^        PeriodicGrid<Type>::~PeriodicGrid()$/;"	f	class:mi::math::PeriodicGrid
~PhaseFileLoadDialog	apps/MIFit/ui/PhaseFileLoadDialog.cpp	/^PhaseFileLoadDialog::~PhaseFileLoadDialog()$/;"	f	class:PhaseFileLoadDialog
~ProbeT	libs/jacgrid/surface.cpp	/^ProbeT::~ProbeT()$/;"	f	class:ProbeT
~PropertyCommand	libs/opengl/interact/PropertyCommand.h	/^                virtual ~PropertyCommand()$/;"	f	class:mi::opengl::interact::PropertyCommand
~PushedName	apps/MIFit/ui/GLRenderer.cpp	/^    ~PushedName()$/;"	f	class:PushedName
~PythonEngine	apps/MIFit/python/PythonEngine.cpp	/^PythonEngine::~PythonEngine()$/;"	f	class:PythonEngine
~RamaDataBase	apps/MIFit/ui/rama.h	/^    virtual ~RamaDataBase()$/;"	f	class:RamaDataBase
~RamaPlotMgr	apps/MIFit/ui/RamaPlot.h	/^    virtual ~RamaPlotMgr()$/;"	f	class:RamaPlotMgr
~Random	libs/math/Random.h	/^            virtual ~Random()$/;"	f	class:mi::math::Random
~Reader	libs/chemlib/MIMolInfo.h	/^        virtual ~Reader()$/;"	f	class:chemlib::Reader
~Renderable	libs/opengl/Renderable.h	/^            virtual ~Renderable()$/;"	f	class:mi::opengl::Renderable
~Residue	libs/chemlib/Residue.cpp	/^Residue::~Residue()$/;"	f	class:chemlib::Residue
~ResiduesTree	apps/MIFit/ui/ModelsView.cpp	/^ResiduesTree::~ResiduesTree()$/;"	f	class:ResiduesTree
~RibbonSegment	apps/MIFit/core/RibbonSegment.cpp	/^RibbonSegment::~RibbonSegment()$/;"	f	class:RibbonSegment
~RibbonSpan	apps/MIFit/core/RibbonSpan.cpp	/^RibbonSpan::~RibbonSpan()$/;"	f	class:RibbonSpan
~RichardsonRamaData	apps/MIFit/ui/rama.h	/^    virtual ~RichardsonRamaData()$/;"	f	class:RichardsonRamaData
~SMILES	libs/chemlib/SMILES.cpp	/^SMILES::~SMILES()$/;"	f	class:chemlib::SMILES
~SecondaryStructure	apps/MIFit/core/SecondaryStructure.cpp	/^SecondaryStructure::~SecondaryStructure()$/;"	f	class:SecondaryStructure
~SimpleMouseRotator	libs/opengl/interact/SimpleMouseRotator.cpp	/^SimpleMouseRotator::~SimpleMouseRotator()$/;"	f	class:mi::opengl::interact::SimpleMouseRotator
~SmiRingClosures	libs/chemlib/SmilesReader.cpp	/^SmiRingClosures::~SmiRingClosures()$/;"	f	class:chemlib::SmiRingClosures
~SmilesReader	libs/chemlib/SmilesReader.cpp	/^SmilesReader::~SmilesReader()$/;"	f	class:chemlib::SmilesReader
~Stack	apps/MIFit/core/Stack.cpp	/^Stack::~Stack()$/;"	f	class:Stack
~StereoView	libs/opengl/StereoView.cpp	/^StereoView::~StereoView()$/;"	f	class:mi::opengl::StereoView
~StringIo	libs/util/StringIo.cpp	/^StringIo::~StringIo()$/;"	f	class:StringIo
~Text	libs/opengl/Text.cpp	/^Text::~Text()$/;"	f	class:mi::opengl::Text
~TextPrivate	libs/opengl/Text.cpp	/^TextPrivate::~TextPrivate()$/;"	f	class:mi::opengl::TextPrivate
~TreeData	apps/MIFit/ui/TreeData.h	/^    ~TreeData()$/;"	f	class:TreeData
~VertexSender	libs/jacgrid/jacgrid.h	/^    virtual ~VertexSender()$/;"	f	class:VertexSender
~ViewPointAnimation	apps/MIFit/ui/MIGLWidget.cpp	/^    ViewPointAnimation::~ViewPointAnimation()$/;"	f	class:__anon10::ViewPointAnimation
~ViewSyncedPanel	apps/MIFit/ui/ViewSyncedPanel.cpp	/^ViewSyncedPanel::~ViewSyncedPanel()$/;"	f	class:ViewSyncedPanel
~Viewpoint	libs/opengl/Viewpoint.h	/^            virtual ~Viewpoint()$/;"	f	class:mi::opengl::Viewpoint
~WaitCursor	apps/MIFit/ui/WaitCursor.cpp	/^WaitCursor::~WaitCursor()$/;"	f	class:WaitCursor
~Writer	libs/chemlib/MIMolInfo.h	/^        virtual ~Writer()$/;"	f	class:chemlib::Writer
~XMLArchive	apps/MIFit/core/xmlarchive.cpp	/^XMLArchive::~XMLArchive()$/;"	f	class:XMLArchive
~gridT	libs/jacgrid/grid.cpp	/^gridT::~gridT()$/;"	f	class:gridT
~io	libs/util/io.cpp	/^io::~io()$/;"	f	class:io
~mmCIF	libs/chemlib/mmCIF.cpp	/^mmCIF::~mmCIF()$/;"	f	class:chemlib::mmCIF
~molfile	libs/chemlib/molfile.cpp	/^molfile::~molfile()$/;"	f	class:chemlib::molfile
